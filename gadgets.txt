0x080481b2:	ret
0x0804841e:	retf
0x080481c9:	pop ebx ; ret
0x080483ca:	pop ebp ; ret
0x08048433:	pop esi ; ret
0x08048480:	pop edi ; ret
0x08048762:	and al, 0xc3
0x0804889e:	cld ; ret
0x08048a6f:	test eax, ebx
0x08048c16:	xchg eax, esp ; ret
0x08048c21:	test al, bl
0x080490b9:	mov ebx, eax
0x080492e1:	sbb al, 0xc3
0x0804953c:	sub al, 0xc3
0x0804a7dc:	inc esp ; ret
0x0804b2fa:	add ebx, eax
0x0804b468:	xchg eax, ebp ; ret
0x0804b6ce:	sub ebx, eax
0x0804d064:	cmp ebx, eax
0x0804d814:	sbb bl, al
0x0804e40c:	or al, 0xc3
0x0804f0a2:	jmp 0xffffffc5
0x0804fbb0:	scasd eax, dword ptr es:[edi] ; ret
0x080509b0:	je 0xffffffc5
0x08051827:	jne 0xffffffc5
0x0805288a:	xchg eax, esi ; ret
0x08053554:	add al, 0xc3
0x08053934:	inc ebx
0x08053ce7:	add bl, al
0x0805467c:	add al, bl
0x0805468d:	or bl, al
0x080546ad:	rol bl, 1
0x080547ab:	mov dh, 0xc3
0x08054946:	xor al, 0xc3
0x08056b53:	and ebx, eax
0x080594f1:	dec ebx ; ret
0x08059909:	pop eax ; ret
0x08059a3a:	mov al, 0xc3
0x0805a723:	fadd st(3), st(0)
0x0805c290:	salc ; ret
0x0805cbe7:	inc edx ; ret
0x080616e8:	fadd st(3)
0x08061a07:	cmp bl, al
0x08063983:	dec eax ; ret
0x08063988:	push edx ; ret
0x08063ee2:	xlatb ; ret
0x08066c06:	add eax, ebx
0x08066c3c:	push es ; ret
0x08066c4a:	pop es ; ret
0x08066c82:	or ebx, eax
0x08066ca0:	or al, bl
0x08066cc0:	or eax, ebx
0x08066d24:	push cs ; ret
0x08068bdd:	xor bl, al
0x08068c06:	adc bl, al
0x08068c16:	and bl, al
0x0806c28c:	inc ebp ; ret
0x0806dd61:	lahf ; ret
0x0806eb0a:	pop edx ; ret
0x0806ee38:	aam 0xc3
0x08072e7b:	dec esi ; ret
0x0807465b:	jbe 0xffffffc5
0x08079dd2:	dec ebp ; ret
0x0807a34f:	inc eax ; ret
0x0807a43f:	adc al, 0xc3
0x0807bf56:	push ss ; ret
0x080806b9:	adc eax, ebx
0x08089af5:	pop esp ; ret
0x0808be09:	sub bl, al
0x0808cef1:	sti ; ret
0x0808eccb:	inc edi ; ret
0x08090280:	mov ebx, es
0x08090e19:	ret ; ret
0x08095b15:	xor ebx, eax
0x0809ace2:	jge 0xffffffc5
0x0809bee9:	arpl bx, ax
0x0809bfbb:	jns 0xffffffc5
0x0809cae5:	xchg eax, edx ; ret
0x0809ce1e:	movsd dword ptr es:[edi], dword ptr [esi] ; ret
0x0809ce7e:	lodsd eax, dword ptr [esi] ; ret
0x0809f39c:	popfd ; ret
0x080a272e:	faddp st(3)
0x080a3e03:	ja 0xffffffc5
0x080a6383:	jno 0xffffffc5
0x080ad1ca:	and al, bl
0x080af09c:	xchg eax, edi ; ret
0x080b71f2:	pushfd ; ret
0x080b7201:	sahf ; ret
0x080b7c56:	push eax ; ret
0x080b7cc6:	push esp ; ret
0x080b7ef3:	int3 ; ret
0x080bd3d0:	cmp eax, ebx
0x080bd3d8:	daa ; ret
0x080bd3e4:	js 0xffffffc5
0x080cfc0e:	push ds ; ret
0x080cfdee:	push esi ; ret
0x080d0135:	outsd dx, dword ptr [esi] ; ret
0x080d12c7:	cmp al, bl
0x080d2294:	fcmovb st(0), st(3)
0x080d25e8:	stosd dword ptr es:[edi], eax ; ret
0x080d2c30:	pop ebx
0x080d518c:	popal ; ret
0x080d5881:	inc ecx ; ret
0x080d6751:	inc esi ; ret
0x080d8207:	dec edi ; ret
0x080d84ff:	jle 0xffffffc5
0x080d8584:	cmp al, 0xc3
0x080d8674:	jl 0xffffffc5
0x080d8688:	mov bl, al
0x080d86ac:	mov ah, 0xc3
0x080da661:	lodsb al, byte ptr [esi] ; ret
0x080db14d:	dec edx ; ret
0x080dd8f3:	dec ecx ; ret
0x080de2f9:	pop ecx ; ret
0x080de6f5:	pushal ; ret
0x080e19cd:	push ecx ; ret
0x080e2f0b:	push -0x3d
0x0804841d:	add ebx, ecx
0x08049a35:	mov ebx, ecx
0x08049ac1:	jmp 0xffffffcd
0x0804a2db:	test cl, bl
0x0804b07f:	bswap ebx
0x0804d143:	je 0xffffffcd
0x08050779:	sub ebx, ecx
0x08052ed5:	cmp ebx, ecx
0x08053486:	jbe 0xffffffcd
0x080550de:	xor ebx, ecx
0x080555c2:	and ebx, ecx
0x08055fab:	jne 0xffffffcd
0x080567b4:	xchg ebx, ecx
0x08057d77:	test ecx, ebx
0x08058567:	in eax, -0x35
0x08058bf6:	push esi ; retf
0x08059328:	xchg eax, esp ; retf
0x0805ca37:	inc edx ; retf
0x0805ccda:	xor bl, cl
0x0805d0b1:	outsd dx, dword ptr [esi] ; retf
0x080634e3:	dec eax ; retf
0x080634e8:	push edx ; retf
0x08063f72:	sub bl, cl
0x0806d421:	xor cl, bl
0x0806dd70:	cmp bl, cl
0x08070564:	pop eax ; retf
0x080724dd:	fxch st(0), st(3)
0x0807c946:	cmpsb byte ptr [esi], byte ptr es:[edi] ; retf
0x08080685:	daa ; retf
0x08082419:	inc esp ; retf
0x08086fa7:	mov cs, ebx
0x0808c2a9:	xor ecx, ebx
0x0808ecba:	inc edi ; retf
0x0808fa7a:	add ecx, ebx
0x0808fb64:	pop es ; retf
0x0808fb7c:	mov ah, 0xcb
0x0808fc9e:	adc ecx, ebx
0x08090444:	movsb byte ptr es:[edi], byte ptr [esi] ; retf
0x0809044e:	sbb bl, cl
0x080905aa:	xor al, 0xcb
0x08090d2b:	nop ; retf
0x08090d53:	push eax ; retf
0x08090d6c:	aas ; retf
0x08091c08:	in al, -0x35
0x08091c0d:	out dx, al ; retf
0x0809206e:	cld ; retf
0x08095686:	or ebx, ecx
0x0809bc73:	jns 0xffffffcd
0x0809bc7a:	jge 0xffffffcd
0x080a5b19:	fcmovne st(0), st(3)
0x080a5b41:	mov bl, 0xcb
0x080a945b:	scasd eax, dword ptr es:[edi] ; retf
0x080ac929:	ret ; retf
0x080ada30:	xchg bl, cl
0x080af02c:	js 0xffffffcd
0x080b5b08:	sbb ebx, ecx
0x080ba43b:	ja 0xffffffcd
0x080bc958:	inc ebx ; retf
0x080bc994:	push cs ; retf
0x080bc99c:	jle 0xffffffcd
0x080bca14:	add al, 0xcb
0x080bca58:	das ; retf
0x080bca98:	sub cl, bl
0x080bca9c:	push -0x35
0x080bcaa0:	stosb byte ptr es:[edi], al ; retf
0x080bcaa4:	fcmove st(0), st(3)
0x080bcae0:	movsd dword ptr es:[edi], dword ptr [esi] ; retf
0x080bcae4:	aad 0xcb
0x080bcb18:	and bl, cl
0x080bcb1c:	pushal ; retf
0x080bcb24:	ror bl, 1
0x080bd8f8:	cmp ecx, ebx
0x080bd8fc:	inc ebp ; retf
0x080bd900:	dec edi ; retf
0x080bd904:	pop ecx ; retf
0x080bd908:	arpl bx, cx
0x080bd90c:	insd dword ptr es:[edi], dx ; retf
0x080bd918:	mov ecx, ebx
0x080bd91c:	xchg eax, ebp ; retf
0x080bd920:	lahf ; retf
0x080bd934:	ror ebx, 1
0x080bd940:	out dx, eax ; retf
0x080bd944:	stc ; retf
0x080bd997:	or bl, cl
0x080bfa5c:	dec esp ; retf
0x080c02eb:	add bl, cl
0x080d0426:	dec ebx ; retf
0x080d04dd:	pop ebx ; retf
0x080d070a:	salc ; retf
0x080d0f18:	in eax, dx ; retf
0x080d0faf:	sbb ecx, ebx
0x080d12bc:	sahf ; retf
0x080d1302:	dec ebp ; retf
0x080d1365:	mov dh, 0xcb
0x080d1472:	outsb dx, byte ptr [esi] ; retf
0x080d1db6:	std ; retf
0x080d1e7f:	pop edx ; retf
0x080d1fb0:	leave ; retf
0x080d217f:	mov ebx, cs
0x080d23e8:	adc ebx, ecx
0x080d27ae:	pop ss ; retf
0x080d2f94:	jnp 0xffffffcd
0x080d51fc:	inc eax ; retf
0x080d5228:	mov bl, cl
0x080d5448:	cwde ; retf
0x080d68a4:	add cl, bl
0x080d8c24:	sub al, 0xcb
0x080dca07:	dec ebx
0x080ddb0c:	hlt ; retf
0x080ddb38:	clc ; retf
0x080de5e0:	adc bl, cl
0x080e03c4:	jl 0xffffffcd
0x080e0418:	fmul st(3)
0x0806262d:	syscall
0x0806c775:	int 0x80
0x080481c8:	or byte ptr [ebx - 0x3d], bl
0x080483c9:	pop edi ; pop ebp ; ret
0x08048432:	pop ebx ; pop esi ; ret
0x0804847f:	pop esi ; pop edi ; ret
0x08048761:	sbb al, 0x24 ; ret
0x08048798:	leave ; ret
0x0804889d:	popal ; cld ; ret
0x080488b5:	nop ; leave ; ret
0x08048c15:	sete bl
0x080492c3:	xor eax, eax ; ret
0x080492e0:	les ebx, ptr [ebx + eax*8]
0x0804953b:	les ebp, ptr [ebx + eax*8]
0x08049543:	push ebx ; mov ebx, eax
0x0804a7db:	cmove eax, ebx
0x0804a906:	or al, 0x89 ; ret
0x0804b467:	setne bl
0x0804b5aa:	pop dword ptr [ecx] ; ret
0x0804b6cd:	ret 0xc329
0x0804c6b8:	add byte ptr [ecx], ch ; ret
0x0804c9bd:	or al, 0x83 ; ret
0x0804d168:	xor byte ptr [ecx], bh ; ret
0x0804d7d6:	loopne 0xfffffff5 ; ret
0x0804d813:	inc edx ; sbb bl, al
0x0804d947:	or al, ch ; ret
0x0804de57:	cli ; cmp ebx, eax
0x0804e40b:	les ecx, ptr [ebx + eax*8]
0x0804ef25:	pop esi ; pop ebp ; ret
0x0804efe3:	or bl, dh ; ret
0x0804f06b:	fcomp dword ptr [ebx - 0x3d]
0x0804f0a1:	fucomi st(3) ; ret
0x0804f95c:	inc eax ; mov ebx, eax
0x0804f972:	pop eax ; mov ebx, eax
0x0804f9f5:	push eax ; mov ebx, eax
0x0804fb00:	cdq ; mov ebx, eax
0x0804fb7a:	add al, 0x89 ; ret
0x0804fbaf:	imul eax, ebx
0x0805022d:	lcall ptr [ebx - 0x3d]
0x0805080f:	adc byte ptr [ecx], ch ; ret
0x080509af:	push es ; je 0xffffffc6
0x08050d11:	shr bl, 0xc3
0x08050d79:	push es ; pop ebx ; ret
0x080513b9:	and al, 0x89 ; ret
0x0805166f:	add byte ptr [ecx], bh ; ret
0x08052197:	and byte ptr [ebx - 0x3d], bl
0x080523cb:	sbb byte ptr [ebx - 0x3d], bl
0x08052889:	setbe bl
0x080530d9:	add bl, dh ; ret
0x0805331f:	nop ; ret
0x08053553:	push eax ; add al, 0xc3
0x08053585:	add al, 0x5b ; ret
0x08053a91:	add dword ptr [ecx], edi ; ret
0x08053ce6:	add byte ptr [eax], al ; ret
0x08053e92:	add byte ptr [ebx - 0x3d], bl
0x0805403c:	add dword ptr [ebx - 0x3d], ebx
0x08054555:	add byte ptr [ebp - 0x3d], dh
0x08054673:	hlt ; ret
0x0805467b:	mov dword ptr [edx], eax ; ret
0x0805468c:	inc edx ; or bl, al
0x080546ac:	sub eax, edx ; ret
0x080547aa:	movzx eax, bl
0x08054923:	push cs ; or bl, al
0x08054945:	inc eax ; xor al, 0xc3
0x08054952:	and al, 4 ; ret
0x080549a0:	or byte ptr [ecx], al ; ret
0x08054a3d:	add bl, byte ptr [ebx - 0x3d]
0x08054e8c:	cdq ; pop ebp ; ret
0x0805505f:	inc edx ; or al, 0xc3
0x08055605:	sti ; add ebx, eax
0x0805560c:	or byte ptr [ecx], bh ; ret
0x080556b1:	out dx, eax ; cmp ebx, eax
0x080556bb:	or byte ptr [ecx], ch ; ret
0x0805575a:	or bh, al ; ret
0x08055860:	add dh, dh ; ret
0x080559a1:	push es ; add ebx, eax
0x08055b1e:	lds eax, ptr [ecx] ; ret
0x08055d36:	clc ; mov ebx, eax
0x08055fe9:	xor edi, dword ptr [ecx] ; ret
0x08056041:	add ebp, dword ptr [ecx] ; ret
0x080561a2:	pop es ; sub ebx, eax
0x08056b52:	fsub dword ptr [ecx] ; ret
0x08056d22:	ret 0xc389
0x080570c5:	adc al, 0x89 ; ret
0x08057ca1:	iretd ; mov ebx, eax
0x08058035:	out 0x89, al ; ret
0x08059648:	int1 ; cmp ebx, eax
0x08059b1e:	rcr byte ptr [ebx - 0x3d], 1
0x08059d5a:	add al, 0x83 ; ret
0x0805adfc:	adc al, 0xf6 ; ret
0x0805aec8:	push es ; or bl, al
0x0805b849:	shl byte ptr [ecx], 0xc3
0x0805ba4d:	adc byte ptr [ecx], bh ; ret
0x0805bb7c:	and byte ptr [ecx], bh ; ret
0x0805be28:	pop edi ; pop esi ; ret
0x0805c130:	pop esi ; pop ebx ; ret
0x0805c1ba:	or byte ptr [edi - 0x3d], bl
0x0805c1e5:	cld ; pop edi ; ret
0x0805c28f:	mov esi, edx ; ret
0x0805c2fa:	int 8 ; ret
0x0805c513:	inc eax ; pop edi ; ret
0x0805cbe6:	jg 0x44 ; ret
0x080605a1:	pcmpeqb mm0, mm3
0x08061628:	sub eax, ecx ; ret
0x080616e7:	neg eax ; ret
0x08061a06:	idiv byte ptr [eax] ; ret
0x080630b4:	sub ebx, dword ptr [ebx - 0x3d]
0x08063982:	outsd dx, dword ptr [esi] ; dec eax ; ret
0x08063987:	outsd dx, dword ptr [esi] ; push edx ; ret
0x08063c0a:	inc ebp ; pop ebx ; ret
0x08063c3e:	adc dword ptr [ebx - 0x3d], ebx
0x08063ee1:	pmovmskb eax, mm3
0x08065185:	clc ; pop edi ; ret
0x08065364:	mov eax, edx ; ret
0x080669d6:	add ebx, dword ptr [edi - 0x3d]
0x08066a0a:	pop es ; pop edi ; ret
0x08066a50:	or ebx, dword ptr [edi - 0x3d]
0x08066a8a:	maxps xmm0, xmm3
0x08066a95:	add bl, byte ptr [edi - 0x3d]
0x08066aa8:	add dword ptr [edi - 0x3d], ebx
0x08066adc:	add al, 0x5f ; ret
0x08066b0c:	push es ; pop edi ; ret
0x08066b42:	or dword ptr [edi - 0x3d], ebx
0x08066b60:	or bl, byte ptr [edi - 0x3d]
0x08066b84:	or al, 0x5f ; ret
0x08066bc4:	push cs ; pop edi ; ret
0x08066bd4:	lea eax, dword ptr [edx] ; ret
0x08066be7:	inc edx ; add ebx, eax
0x08066bfd:	inc edx ; add al, bl
0x08066c05:	inc edx ; add eax, ebx
0x08066c1b:	inc edx ; add al, 0xc3
0x08066c3b:	inc edx ; push es ; ret
0x08066c49:	inc edx ; pop es ; ret
0x08066c81:	inc edx ; or ebx, eax
0x08066c9f:	inc edx ; or al, bl
0x08066cbf:	inc edx ; or eax, ebx
0x08066d23:	inc edx ; push cs ; ret
0x080683e0:	add eax, ecx ; ret
0x080685b2:	xor byte ptr [edi - 0x3d], bl
0x08068686:	adc byte ptr [edi - 0x3d], bl
0x08068696:	and byte ptr [edi - 0x3d], bl
0x08068bdc:	add dh, byte ptr [eax] ; ret
0x08068be5:	adc al, dh ; ret
0x08068bf3:	add eax, edx ; ret
0x08068c05:	adc byte ptr [eax], dl ; ret
0x08068c15:	adc byte ptr [eax], ah ; ret
0x0806b15a:	les eax, ptr [ebx + eax*8]
0x0806b498:	fcomp dword ptr [edi - 0x3d]
0x0806c28b:	cmovne eax, ebx
0x0806c9d6:	shr ebx, -0x3d
0x0806d910:	push edi ; sub ebx, eax
0x0806da73:	fdivr dword ptr [ecx] ; ret
0x0806da88:	add dh, bl ; ret
0x0806dd60:	setg bl
0x0806e03e:	in al, -0x7d ; ret
0x0806e8c7:	jle 0xffffff8b ; ret
0x0806eb09:	pop ebx ; pop edx ; ret
0x0806eb12:	push edx ; mov ebx, eax
0x0806eb31:	pop ecx ; pop ebx ; ret
0x0806ed28:	ja 0x3b ; ret
0x0806ed8f:	nop ; cmp ebx, eax
0x0806f0e8:	mov eax, ecx ; ret
0x0806f110:	int 0x80 ; ret
0x08070457:	je 9 ; ret
0x08070495:	sar byte ptr [ecx], cl ; ret
0x0807129a:	div byte ptr [ebp - 0x3d]
0x080713ca:	les eax, ptr [ecx] ; ret
0x080715d7:	cmp al, 0xe8 ; ret
0x080717c6:	cmp al, 1 ; ret
0x0807209e:	inc ebx ; mov ebx, eax
0x0807283b:	and al, 0x83 ; ret
0x08072e77:	sar byte ptr [ecx], 1 ; ret
0x08072e7a:	cmovle eax, ebx
0x08073ca7:	cmp al, 0x89 ; ret
0x08073fac:	add edi, dword ptr [ecx] ; ret
0x0807465a:	jg 0x78 ; ret
0x08074978:	je 0xffffff8b ; ret
0x08075f25:	pop es ; mov ebx, eax
0x080776d6:	jge 0xffffff85 ; ret
0x08078115:	sbb al, 0xf3 ; ret
0x08079333:	push ecx ; mov ebx, eax
0x0807983a:	sub eax, dword ptr [edx] ; ret
0x08079dd1:	cmovge eax, ebx
0x08079fd1:	pop es ; cmp ebx, eax
0x0807a0fb:	ljmp ptr [ecx] ; ret
0x0807a310:	pop es ; pop ebx ; ret
0x0807a317:	add bh, al ; ret
0x0807a34e:	nop ; inc eax ; ret
0x0807a43e:	les edx, ptr [ebx + eax*8]
0x0807a48d:	sbb bl, byte ptr [ebx - 0x3d]
0x0807b81c:	add cl, byte ptr [ecx] ; ret
0x0807be4d:	sbb byte ptr [ecx], al ; ret
0x0807c365:	add byte ptr [ecx], al ; ret
0x0807c3c6:	add dword ptr [ecx], eax ; ret
0x08080777:	salc ; mov ebx, eax
0x0808260f:	nop ; sub ebx, eax
0x0808298c:	add cl, ch ; ret
0x08083246:	shr byte ptr [ecx], 0xc3
0x080838bc:	and cl, ch ; ret
0x080839f1:	sal dh, 0xc3
0x08083fb8:	inc dword ptr [ecx] ; ret
0x08084197:	sub cl, ch ; ret
0x080844c5:	pop ss ; cmp ebx, eax
0x08084949:	add al, 0x39 ; ret
0x080853da:	add byte ptr [eax], 0xc3
0x0808579d:	ror dword ptr [ecx], cl ; ret
0x08087432:	add bl, ch ; ret
0x08088147:	sub ebp, ebx ; ret
0x08089a3a:	push ebx ; ret
0x08089a6c:	retf -0x3c7d
0x0808a6cc:	pop ebx ; add ebx, eax
0x0808a753:	cmp esi, dword ptr [ebp - 0x3d]
0x0808a8b8:	pop ds ; add ebx, eax
0x0808abe9:	loopne 0x2b ; ret
0x0808ac19:	in al, 0x39 ; ret
0x0808b181:	and byte ptr [ecx], ch ; ret
0x0808b295:	dec eax ; and bl, al
0x0808b717:	add al, ch ; ret
0x0808be08:	inc eax ; sub bl, al
0x0808c496:	or byte ptr [eax], cl ; ret
0x0808cc38:	adc al, 0x39 ; ret
0x0808d35a:	hlt ; pop edi ; ret
0x0808d3b2:	int1 ; pop edi ; ret
0x0808d3e2:	cmc ; pop edi ; ret
0x0808d3f2:	neg byte ptr [edi - 0x3d]
0x0808d402:	neg dword ptr [edi - 0x3d]
0x0808d412:	stc ; pop edi ; ret
0x0808d422:	cli ; pop edi ; ret
0x0808d432:	sti ; pop edi ; ret
0x0808d442:	std ; pop edi ; ret
0x0808d462:	lcall ptr [edi - 0x3d]
0x0808d7a4:	bsr eax, ebx
0x0808ddc1:	add byte ptr [edi - 0x3d], bl
0x0808eb5e:	je 0x22 ; ret
0x0808eb78:	rol byte ptr [edx], 0xc3
0x0808eb81:	rol byte ptr [ecx], 0xc3
0x0808eb91:	rol byte ptr [ebx], 0xc3
0x0808ec6b:	aam 0x5b ; ret
0x0808ecca:	cmova eax, ebx
0x0808f2b4:	ret ; add ebx, eax
0x0809134c:	std ; inc ebx
0x080914ea:	mov dh, 0xc0 ; ret
0x080916f9:	adc byte ptr [ecx], ah ; ret
0x080918eb:	xor al, 0x83 ; ret
0x08091de1:	ret 0xc383
0x080928b7:	test byte ptr [ecx], al ; ret
0x08093959:	jbe 0xffffff85 ; ret
0x08093f97:	add bh, byte ptr [eax] ; ret
0x080950d1:	adc al, 0x6b ; ret
0x080957b9:	retf ; add ebx, eax
0x08095b14:	pushfd ; xor ebx, eax
0x0809625e:	adc byte ptr [ebx - 0x3d], ch
0x08096352:	adc byte ptr [ecx], al ; ret
0x08096c57:	adc cl, ch ; ret
0x08096dbc:	lea eax, dword ptr [ebx + eax*8]
0x08098317:	leave ; mov ebx, eax
0x080984a6:	cmp edi, dword ptr [ecx] ; ret
0x0809855f:	adc dh, dh ; ret
0x0809885c:	jmp 0xffffff85 ; ret
0x08098883:	loopne 0x3b ; ret
0x0809889b:	clc ; cmp ebx, eax
0x080988a2:	add esi, esi ; ret
0x080993fa:	xor ch, bl ; ret
0x08099485:	ficomp dword ptr [ebx - 0x3d]
0x080994fc:	pop ebx ; pop edi ; ret
0x080995a8:	lea ebx, dword ptr [ebx + eax*8]
0x080998f1:	ret 0xc35f
0x0809995c:	push es ; cmp ebx, eax
0x08099ff2:	pop edi ; mov ebx, eax
0x0809ac30:	mov byte ptr [ebp - 0x3d], al
0x0809ba4a:	dec esp ; ret
0x0809bb3e:	fcomp dword ptr [ebp - 0x3d]
0x0809bd19:	push ds ; mov ebx, eax
0x0809c16b:	jbe 5 ; ret
0x0809c1af:	nop ; mov ebx, eax
0x0809c521:	inc eax ; add al, 0xc3
0x0809c62e:	sub byte ptr [ebx - 0x3d], bl
0x0809cace:	int1 ; mov ebx, eax
0x0809cae4:	setb bl
0x0809cca7:	rol dword ptr [ecx], -0x3d
0x0809ce1d:	shld ebx, eax, cl
0x0809ce7d:	shrd ebx, eax, cl
0x0809cfa6:	in al, 1 ; ret
0x0809cfb0:	or al, 1 ; ret
0x0809d06e:	fiadd dword ptr [ecx] ; ret
0x0809dac0:	cld ; leave ; ret
0x0809e835:	les ebx, ptr [eax] ; ret
0x0809ecd4:	pop ds ; sub ebx, eax
0x0809ed05:	add al, 0x29 ; ret
0x0809f12d:	shr dword ptr [ecx], cl ; ret
0x0809f211:	sub byte ptr [ecx], 0xc3
0x0809f39b:	setge bl
0x0809f5c5:	retf -0x3c77
0x0809f6d7:	or al, 0x5b ; ret
0x080a0356:	cwde ; mov ebx, eax
0x080a1739:	add al, 1 ; ret
0x080a186a:	inc edi ; mov ebx, eax
0x080a209e:	sar dword ptr [ecx], cl ; ret
0x080a3e02:	retf ; ja 0xffffffc6
0x080a49e1:	xlatb ; mov ebx, eax
0x080a7c8a:	fld dword ptr [ecx] ; ret
0x080a7f90:	add ecx, ebp ; ret
0x080a87ad:	adc al, 0x5b ; ret
0x080a8ed1:	lea ecx, dword ptr [ebp - 0x3d]
0x080aa394:	mov dh, 0x83 ; ret
0x080aa83c:	movsx eax, bl
0x080af09b:	seta bl
0x080af88d:	fmul st(0) ; ret
0x080af8d5:	fmulp st(1) ; ret
0x080b2b87:	fsub st(1), st(0) ; ret
0x080b4efb:	add al, 0x5d ; ret
0x080b55bb:	add al, 0x76 ; ret
0x080b57a2:	sti ; inc ebx
0x080b5f50:	pop es ; or ebx, eax
0x080b6289:	fmul dword ptr [ecx] ; ret
0x080b6588:	add byte ptr [ebx + eax*8], al
0x080b71cb:	stc ; mov ebx, eax
0x080b71f1:	setl bl
0x080b7200:	setle bl
0x080b7b95:	inc eax ; dec eax ; ret
0x080b7c15:	inc eax ; dec esp ; ret
0x080b7c31:	inc edx ; dec esp ; ret
0x080b7c49:	push eax ; dec esp ; ret
0x080b7c55:	inc eax ; push eax ; ret
0x080b7c65:	inc eax ; pop esp ; ret
0x080b7cb5:	inc eax ; pop eax ; ret
0x080b7cc5:	inc eax ; push esp ; ret
0x080b7ef2:	mov esp, ecx ; ret
0x080b81be:	add al, 0x24 ; ret
0x080b81c2:	or al, 0x24 ; ret
0x080b81c6:	xor al, 0x24 ; ret
0x080b81ca:	cmp al, 0x24 ; ret
0x080b81ce:	sub al, 0x24 ; ret
0x080b8457:	or al, 0xe8 ; ret
0x080b88c4:	jo 0xffffff8b ; ret
0x080b902b:	cmp ch, cl ; ret
0x080b9810:	adc al, 0x5f ; ret
0x080bd3a3:	or byte ptr [ebp - 0x3d], al
0x080bd3c3:	or byte ptr [ebx], dl ; ret
0x080bd3cb:	or byte ptr [ecx], cl ; ret
0x080bd3cf:	or byte ptr [ebx], bh ; ret
0x080bd3d3:	or byte ptr [ecx], dh ; ret
0x080bd3d7:	or byte ptr [edi], ah ; ret
0x080bd3df:	or byte ptr [ebp - 0x3d], cl
0x080bd3e3:	or byte ptr [eax - 0x3d], bh
0x080bd41f:	or byte ptr [edx - 0x3d], ah
0x080cb60b:	or al, 0xc ; ret
0x080cba76:	pop es ; or bl, al
0x080ce706:	or al, 8 ; ret
0x080cf941:	rol edx, -0x3d
0x080cfc0d:	sbb bl, byte ptr [esi] ; ret
0x080cfc49:	push es ; cld ; ret
0x080cfded:	jecxz 0x58 ; ret
0x080cffee:	mov ah, 0x13 ; ret
0x080d0490:	mov ah, 0xa5 ; ret
0x080d05d8:	xchg eax, edi ; xchg eax, esp ; ret
0x080d063c:	push edi ; cmp bl, al
0x080d0e85:	jnp 0xffffffbb ; ret
0x080d116a:	xor al, 0xd8 ; ret
0x080d12c6:	mov edi, dword ptr [edx] ; ret
0x080d2293:	out dx, al ; fcmovb st(0), st(3)
0x080d2294:	fcmovb st(0), st(3) ; ret
0x080d2720:	int 0x6b ; ret
0x080d27cc:	xchg dword ptr [esi - 0x3d], esi
0x080d288d:	inc eax ; jno 0xffffffc6
0x080d2cee:	clc ; and al, bl
0x080d2e66:	mov ch, 0xab ; ret
0x080d3016:	pop edx ; and ebx, eax
0x080d4bd8:	xor byte ptr [ebx + eax*8], cl
0x080d5187:	call dword ptr [ebx] ; ret
0x080d518b:	jmp dword ptr [ecx - 0x3d]
0x080d5192:	cld ; inc ebx
0x080d5193:	inc ebx ; ret
0x080d57ed:	add ah, byte ptr [ecx - 0x3d]
0x080d5880:	adc al, 0x41 ; ret
0x080d59cf:	or byte ptr [ecx - 0x3d], al
0x080d5b10:	adc al, 0x43 ; ret
0x080d5b68:	inc edi ; or al, bl
0x080d5c0d:	or al, 0x41 ; ret
0x080d5c3a:	add dword ptr [edx], ecx ; ret
0x080d5c7a:	add ecx, dword ptr [edx] ; ret
0x080d5c88:	insb byte ptr es:[edi], dx ; or al, bl
0x080d5ef2:	add cl, byte ptr [edx] ; ret
0x080d64ec:	pop esp ; or al, bl
0x080d657a:	adc al, 0x45 ; ret
0x080d6750:	adc al, 0x46 ; ret
0x080d6841:	outsb dx, byte ptr [esi] ; or al, bl
0x080d684f:	push ebp ; or al, bl
0x080d68a5:	retf ; or al, bl
0x080d68de:	pop ebp ; or al, bl
0x080d68ea:	insd dword ptr es:[edi], dx ; or al, bl
0x080d68f6:	inc esp ; or al, bl
0x080d6964:	or byte ptr [ebx - 0x3d], al
0x080d69d6:	jne 0xc ; ret
0x080d6a7d:	dec ebx ; or al, bl
0x080d6b6b:	adc al, 0x47 ; ret
0x080d6cf0:	or al, 0x46 ; ret
0x080d6d32:	or byte ptr [esi - 0x3d], al
0x080d6eaf:	dec edx ; or al, bl
0x080d6ebe:	pushal ; or al, bl
0x080d7141:	dec edi ; or al, bl
0x080d719a:	pop edx ; or al, bl
0x080d71a0:	or eax, dword ptr [ecx - 0x3d]
0x080d7241:	adc byte ptr [ecx - 0x3d], al
0x080d760b:	add al, 0x66 ; ret
0x080d784d:	push eax ; or al, bl
0x080d792e:	inc ebx ; or al, bl
0x080d799f:	or eax, dword ptr [edi - 0x3d]
0x080d7a1c:	arpl word ptr [edx], cx ; ret
0x080d7bc1:	push edi ; or al, bl
0x080d7e59:	add ah, byte ptr [esi - 0x3d]
0x080d7fc0:	dec esp ; or al, bl
0x080d8206:	or ecx, dword ptr [edi - 0x3d]
0x080d82fa:	jb 0xc ; ret
0x080d8300:	or eax, dword ptr [esi - 0x3d]
0x080d84f4:	inc eax ; or al, bl
0x080d84fe:	or edi, dword ptr [esi - 0x3d]
0x080d8583:	add byte ptr [ebx + eax*8], bh
0x080d8597:	add byte ptr [eax], bh ; ret
0x080d85ab:	add byte ptr [ebx + eax*8], dh
0x080d85bf:	add byte ptr [eax], dh ; ret
0x080d85d3:	add byte ptr [ebx + eax*8], ch
0x080d85e7:	add byte ptr [eax], ch ; ret
0x080d85fb:	add byte ptr [ebx + eax*8], ah
0x080d860f:	add byte ptr [eax], ah ; ret
0x080d8623:	add byte ptr [ebx + eax*8], bl
0x080d8637:	add byte ptr [eax], bl ; ret
0x080d864b:	add byte ptr [ebx + eax*8], dl
0x080d865f:	add byte ptr [eax - 0x3d], dl
0x080d869c:	or ebx, dword ptr [esi - 0x3d]
0x080d875b:	adc al, 0x48 ; ret
0x080d897a:	push 0xa ; ret
0x080d8aaf:	push ecx ; or al, bl
0x080d8c3e:	or al, 0x43 ; ret
0x080d8d80:	push cs ; add al, 0xc3
0x080d91f6:	adc al, 0x44 ; ret
0x080d9266:	or al, 0x45 ; ret
0x080d92c0:	or byte ptr [eax - 0x3d], cl
0x080d94d7:	add bl, byte ptr [ebp - 0x3d]
0x080d95d1:	mov bh, 0xa ; ret
0x080d95ea:	inc ecx ; or al, bl
0x080d9ed5:	push cs ; or al, 0xc3
0x080dafd0:	jle 0xc ; ret
0x080db0bc:	push cs ; adc bl, al
0x080db0e0:	push cs ; adc al, 0xc3
0x080db14c:	adc al, 0x4a ; ret
0x080db350:	jl 0xc ; ret
0x080db516:	pop ebx ; or al, bl
0x080db8c1:	ja 0xc ; ret
0x080dbb34:	push esi ; or al, bl
0x080dbb42:	or eax, dword ptr [ebx - 0x3d]
0x080dbb71:	jg 0xc ; ret
0x080dbc76:	stc ; inc ebx
0x080dbc9d:	loop 0xc ; ret
0x080dbf18:	add dl, byte ptr [esi - 0x3d]
0x080dbf45:	lahf ; or al, bl
0x080dc30e:	adc byte ptr [esi - 0x3d], al
0x080dc692:	pop es ; or al, bl
0x080dc6a1:	dec byte ptr [edx] ; ret
0x080dd8f2:	or ecx, dword ptr [ecx - 0x3d]
0x080ddda5:	adc byte ptr [ebp - 0x3d], al
0x080de059:	pop ecx ; or al, bl
0x080de10d:	ror byte ptr [edx], 1 ; ret
0x080de21f:	inc ebp ; or al, bl
0x080de252:	jnp 0xc ; ret
0x080de2f8:	or ebx, dword ptr [ecx - 0x3d]
0x080de36a:	dec ebp ; or al, bl
0x080de370:	or edx, dword ptr [edx - 0x3d]
0x080de6e5:	dec eax ; or al, bl
0x080de6f4:	add ah, byte ptr [eax - 0x3d]
0x080de7eb:	add cl, byte ptr [ecx - 0x3d]
0x080de888:	imul ecx, dword ptr [edx], -0x3d
0x080de897:	lodsd eax, dword ptr [esi] ; or al, bl
0x080de929:	in eax, 0xa ; ret
0x080deac1:	or ecx, dword ptr [edx - 0x3d]
0x080deaee:	push es ; or al, bl
0x080deb0c:	inc esi ; or al, bl
0x080deff0:	push edx ; or al, bl
0x080df120:	add al, byte ptr [edi - 0x3d]
0x080df1d3:	mov byte ptr [edx], cl ; ret
0x080df205:	loopne 0xc ; ret
0x080df213:	add al, byte ptr [edx - 0x3d]
0x080df448:	add dl, byte ptr [edx - 0x3d]
0x080df68a:	stosd dword ptr es:[edi], eax ; or al, bl
0x080df921:	add ch, byte ptr [eax - 0x3d]
0x080dfdf0:	dec ecx ; or al, bl
0x080dfebe:	adc byte ptr [ebx - 0x3d], al
0x080e08ec:	jp 0xc ; ret
0x080e0d8d:	add dl, byte ptr [eax - 0x3d]
0x080e0da9:	add ah, byte ptr [ebp - 0x3d]
0x080e15a3:	or eax, dword ptr [edx] ; ret
0x080e19cc:	add dl, byte ptr [ecx - 0x3d]
0x080e19fb:	add byte ptr [eax - 0x3d], al
0x080e1a87:	add ah, cl ; ret
0x080e1b0b:	add al, byte ptr [ecx - 0x3d]
0x080e1bc2:	dec esi ; or al, bl
0x080e1c2d:	add al, 4 ; ret
0x080e1d5d:	out 0xa, al ; ret
0x080e1dcd:	sti ; or al, bl
0x080e28c6:	add al, 0xa ; ret
0x080e2b54:	adc byte ptr [eax - 0x3d], cl
0x080e2d19:	add ch, byte ptr [ebx - 0x3d]
0x080e2f0a:	or ebp, dword ptr [edx - 0x3d]
0x080e31c5:	into ; or al, bl
0x080e33eb:	add al, 0x44 ; ret
0x080e3a2d:	jge 0x4d ; ret
0x080e3a4f:	jae 0xc ; ret
0x080e3bd1:	mov dh, 0xa ; ret
0x080e409e:	or byte ptr [edx], 0xc3
0x080e40c4:	je 0xc ; ret
0x080e426a:	bound ecx, qword ptr [edx] ; ret
0x080e42ad:	js 0xc ; ret
0x080e49cc:	add bl, byte ptr [edx - 0x3d]
0x080e4a2a:	or cl, byte ptr [edx] ; ret
0x080e4c15:	js 3 ; ret
0x080e4c81:	std ; or al, bl
0x080e4ce0:	pop edi ; or al, bl
0x080e50d5:	pop eax ; or al, bl
0x080e69aa:	insb byte ptr es:[edi], dx ; add al, bl
0x080e7255:	push ebx ; or al, bl
0x080e7c68:	or ecx, dword ptr [ebp - 0x3d]
0x080e7cb0:	or edx, dword ptr [eax - 0x3d]
0x0804841c:	fiadd dword ptr [ecx] ; retf
0x08049a34:	or al, 0x89 ; retf
0x08049acc:	add cl, ch ; retf
0x0804b07e:	cld ; bswap ebx
0x0804b477:	add cl, byte ptr [edi] ; retf
0x0804b524:	dec dword ptr [edi] ; retf
0x0804d142:	leave ; je 0xffffffce
0x0804d6d5:	push ebx ; mov ebx, ecx
0x08050778:	add byte ptr [ecx], ch ; retf
0x08051d36:	std ; sub ebx, ecx
0x08051d57:	or byte ptr [ecx], ch ; retf
0x08051d99:	adc byte ptr [ecx], ch ; retf
0x08051dc2:	adc byte ptr [ecx], al ; retf
0x08052ed4:	adc bh, byte ptr [ecx] ; retf
0x080531c2:	push ds ; cmp ebx, ecx
0x080550dd:	add esi, dword ptr [ecx] ; retf
0x0805512c:	sbb byte ptr [ecx], ch ; retf
0x080555c1:	shl dword ptr [ecx], cl ; retf
0x080559d6:	jmp 0xffffff85 ; retf
0x08055faa:	ret ; jne 0xffffffce
0x08056a9e:	ret 0xcb83
0x08057359:	cmp al, 0x89 ; retf
0x0805b012:	dec edi ; mov ebx, ecx
0x0805ca36:	jg 0x44 ; retf
0x0805ccd9:	lea esi, dword ptr [eax] ; retf
0x0805d0b0:	movq mm1, mm3
0x080615c1:	pcmpeqb mm1, mm3
0x08063220:	retf -0x34d7
0x080634e2:	outsd dx, dword ptr [esi] ; dec eax ; retf
0x080634e7:	outsd dx, dword ptr [esi] ; push edx ; retf
0x08063f71:	movaps xmm1, xmm3
0x08066e04:	shr byte ptr [ecx], 0xcb
0x0806b9e2:	add dword ptr [ebp - 0x35], esi
0x0806dd6f:	stc ; cmp bl, cl
0x0806dd7c:	sbb al, 0x83 ; retf
0x0806ed67:	add al, 0x39 ; retf
0x08070353:	sbb byte ptr [ecx], al ; retf
0x08070391:	div byte ptr [ebp - 0x35]
0x08070397:	mov bl, ch ; retf
0x08070a73:	aam 0x89 ; retf
0x08070a8f:	leave ; mov ebx, ecx
0x08070ec1:	or al, 0xc1 ; retf
0x08072a76:	add byte ptr [ecx], al ; retf
0x08074bcf:	pop es ; sub ebx, ecx
0x0807573b:	or cl, ch ; retf
0x08075954:	out dx, al ; cmp ebx, ecx
0x080779e7:	salc ; mov ebx, ecx
0x08078737:	cli ; add ebx, ecx
0x080789c4:	inc dword ptr [ecx] ; retf
0x08078cf0:	shr bl, 1 ; retf
0x0807930f:	fidivr word ptr [ecx] ; retf
0x08079f4f:	add al, ch ; retf
0x0807aa13:	cli ; cmp ebx, ecx
0x0807bb43:	movsx ecx, bl
0x080800f8:	mov ebp, ecx ; retf
0x08081aee:	add dword ptr [ecx], edi ; retf
0x08081b39:	pop es ; mov ebx, ecx
0x08081e75:	mov es, word ptr [ecx] ; retf
0x08082418:	cmove ecx, ebx
0x08083095:	fdivr dword ptr [ecx] ; retf
0x0808355a:	add dword ptr [ecx], ebp ; retf
0x08085ffe:	adc al, 0x39 ; retf
0x0808b5ee:	adc al, 0x29 ; retf
0x0808b835:	and bl, ch ; retf
0x0808ba7c:	add al, 0x29 ; retf
0x0808be42:	or al, cl ; retf
0x0808ecb9:	cmova ecx, ebx
0x0808fa79:	sub byte ptr [ebx], al ; retf
0x08091256:	shr bl, 0xcb
0x0809244f:	add ebp, eax ; retf
0x08093b51:	or byte ptr [ecx], dh ; retf
0x0809576f:	add ch, al ; retf
0x08095b18:	ror dword ptr [ecx], 1 ; retf
0x080983f9:	ret ; sub ebx, ecx
0x080984ea:	loopne 0x77 ; retf
0x08099300:	sar dword ptr [ecx], cl ; retf
0x08099b22:	or al, 0x74 ; retf
0x0809a30f:	or al, ch ; retf
0x0809bc79:	fidivr word ptr [ebp - 0x35]
0x0809d172:	ret 0xcb01
0x0809ef08:	add dword ptr [ecx], eax ; retf
0x0809ef0e:	aas ; mov ebx, ecx
0x0809ef22:	push ebp ; and ebx, ecx
0x0809f13b:	int 0x89 ; retf
0x0809f3a0:	pop ds ; cmp bl, cl
0x080a09a0:	or byte ptr [eax - 0x35], ch
0x080a178a:	sal byte ptr [ebp - 0x35], cl
0x080a2245:	ret ; je 0xffffffce
0x080a3e00:	sti ; cmp bl, cl
0x080a7c7a:	ljmp ptr [ecx] ; retf
0x080a8d7b:	xlatb ; mov ebx, ecx
0x080a945a:	imul ecx, ebx
0x080aa3aa:	or dword ptr [ebp - 0x35], esi
0x080abe45:	jl 0xffffff8b ; retf
0x080af02b:	lea edi, dword ptr [eax - 0x35]
0x080b1b84:	sub cl, ch ; retf
0x080b2551:	push es ; mov ebx, ecx
0x080b2591:	add byte ptr [ecx], cl ; retf
0x080b716e:	push dword ptr [ecx] ; retf
0x080b719b:	dec dword ptr [ecx] ; retf
0x080b71d4:	jmp dword ptr [ecx] ; retf
0x080b815f:	fsubr st(0) ; retf
0x080ba43a:	std ; ja 0xffffffce
0x080ba7b1:	or byte ptr [ecx], al ; retf
0x080bc953:	or byte ptr [ebx], dl ; retf
0x080bc957:	or byte ptr [ebx - 0x35], al
0x080bc95f:	or bl, al ; retf
0x080bc963:	or bl, dh ; retf
0x080bc993:	or byte ptr [esi], cl ; retf
0x080bc997:	or byte ptr [esi], bh ; retf
0x080bc99b:	or byte ptr [esi - 0x35], bh
0x080bc9a3:	or dh, ch ; retf
0x080bc9d3:	or byte ptr [ecx], cl ; retf
0x080bc9d7:	or byte ptr [ecx], bh ; retf
0x080bc9db:	or byte ptr [ecx - 0x35], bh
0x080bca13:	or byte ptr [ebx + ecx*8], al
0x080bca17:	or byte ptr [ebx + ecx*8], dh
0x080bca23:	or ah, ah ; retf
0x080bca57:	or byte ptr [edi], ch ; retf
0x080bca5b:	or byte ptr [edi - 0x35], ch
0x080bca63:	or bh, bl ; retf
0x080bca97:	or byte ptr [edx], ch ; retf
0x080bca9b:	or byte ptr [edx - 0x35], ch
0x080bcaa3:	or dl, bl ; retf
0x080bcadb:	or byte ptr [ebp - 0x35], ah
0x080bcae3:	or ch, dl ; retf
0x080bcb17:	or byte ptr [eax], ah ; retf
0x080bcb1b:	or byte ptr [eax - 0x35], ah
0x080bcb23:	or al, dl ; retf
0x080bd8ef:	or byte ptr [edi], ah ; retf
0x080bd8f7:	or byte ptr [ebx], bh ; retf
0x080bd8fb:	or byte ptr [ebp - 0x35], al
0x080bd8ff:	or byte ptr [edi - 0x35], cl
0x080bd903:	or byte ptr [ecx - 0x35], bl
0x080bd907:	or byte ptr [ebx - 0x35], ah
0x080bd90b:	or byte ptr [ebp - 0x35], ch
0x080bd90f:	or byte ptr [edi - 0x35], dh
0x080bd933:	or cl, dl ; retf
0x080bd937:	or bl, bl ; retf
0x080bd93b:	or ch, ah ; retf
0x080bd93f:	or bh, ch ; retf
0x080bd943:	or cl, bh ; retf
0x080bd996:	push es ; or bl, cl
0x080bda17:	or bh, al ; retf
0x080bfa57:	or byte ptr [esi], ch ; retf
0x080c02ea:	add byte ptr [eax], al ; retf
0x080cba17:	or al, al ; retf
0x080cbfa2:	or byte ptr [eax], cl ; retf
0x080d0425:	stc ; dec ebx ; retf
0x080d046e:	xor byte ptr [ecx], ah ; retf
0x080d04dc:	xchg eax, edx ; pop ebx ; retf
0x080d05c6:	add al, 0x3d ; retf
0x080d0f17:	add ebp, ebp ; retf
0x080d0fae:	dec ecx ; sbb ecx, ebx
0x080d1db5:	sbb edi, ebp ; retf
0x080d1e7e:	jnp 0x5c ; retf
0x080d1ea3:	loop 0xffffffc9 ; retf
0x080d1faf:	pop edx ; leave ; retf
0x080d2024:	sbb ebp, ebx ; retf
0x080d217e:	sbb al, 0x8c ; retf
0x080d23e7:	scasb al, byte ptr es:[edi] ; adc ebx, ecx
0x080d27ad:	rcl byte ptr [edi], cl ; retf
0x080d28bd:	mov cl, 0x3f ; retf
0x080d28d7:	jbe 0xffffffce
0x080d291e:	dec esp ; pop eax ; retf
0x080d2ee5:	jnp 0x3f ; retf
0x080d2f93:	sar byte ptr [ebx - 0x35], 1
0x080d4c17:	or dword ptr [eax], ecx ; retf
0x080d51fb:	inc dword ptr [eax - 0x35]
0x080d8b97:	add byte ptr [eax], cl ; retf
0x080d8c23:	add byte ptr [ebx + ecx*8], ch
0x080d8c5b:	add ah, ah ; retf
0x080da326:	add al, byte ptr [edx] ; retf
0x080dca06:	stc ; dec ebx
0x080dd486:	or eax, dword ptr [ebx] ; retf
0x080ddb0b:	add ah, dh ; retf
0x080ddb37:	add al, bh ; retf
0x080de5cb:	add byte ptr [ebx + ecx*8], al
0x080de5df:	add byte ptr [eax], dl ; retf
0x080de607:	add byte ptr [eax], bl ; retf
0x080de62f:	add byte ptr [eax], ah ; retf
0x080df033:	sub byte ptr [edx], al ; retf
0x080e0417:	add al, bl ; retf
0x080e4cf7:	add byte ptr [eax - 0x35], ch
0x080d2665:	push esp ; syscall
0x0806f10e:	nop ; int 0x80
0x080b69c6:	push es ; int 0x80
0x080d2481:	imul ecx, ebp, -0x80
0x080481c7:	les ecx, ptr [eax] ; pop ebx ; ret
0x080483c8:	pop esi ; pop edi ; pop ebp ; ret
0x08048431:	rcr byte ptr [ebx + 0x5e], 1 ; ret
0x08048473:	retf -0x7c01 ; ret
0x0804847e:	pop ebx ; pop esi ; pop edi ; ret
0x08048760:	mov ebx, dword ptr [esp] ; ret
0x08048797:	adc cl, cl ; ret
0x08048810:	add ecx, ecx ; ret
0x0804889c:	lea esp, dword ptr [ecx - 4] ; ret
0x08048a6d:	add byte ptr [edi], cl ; test eax, ebx
0x080492df:	add esp, 0x1c ; ret
0x08049403:	inc ebp ; mov ebx, eax
0x0804953a:	add esp, 0x2c ; ret
0x08049542:	push esi ; push ebx ; mov ebx, eax
0x0804961e:	dec dword ptr [edx] ; mov ebx, eax
0x08049762:	add al, 0x5b ; pop esi ; ret
0x08049f84:	ret 0x8301 ; ret
0x0804a050:	test eax, eax ; mov ebx, eax
0x0804a221:	add eax, dword ptr [eax] ; mov ebx, eax
0x0804a2bd:	add byte ptr [eax], al ; mov ebx, eax
0x0804a39b:	les edx, ptr [eax] ; mov ebx, eax
0x0804a619:	add al, byte ptr [eax] ; mov ebx, eax
0x0804a7cc:	je 0xffffffec ; mov ebx, eax
0x0804a7da:	add byte ptr [edi], cl ; inc esp ; ret
0x0804a905:	les ecx, ptr [ecx + ecx*4] ; ret
0x0804aae7:	and al, 0xc ; mov ebx, eax
0x0804b2f8:	bswap eax ; add ebx, eax
0x0804b466:	dec dword ptr [edi] ; xchg eax, ebp ; ret
0x0804b5a9:	sbb al, 0x8f ; add ebx, eax
0x0804b6cc:	mov edx, eax ; sub ebx, eax
0x0804c6b7:	add byte ptr [eax], al ; sub ebx, eax
0x0804c9bc:	in al, dx ; or al, 0x83 ; ret
0x0804cce9:	cli ; mov ebx, eax
0x0804ce63:	and al, 0x53 ; mov ebx, eax
0x0804ce86:	sbb byte ptr [ebx - 0xd], bl ; ret
0x0804d062:	add bh, dh ; cmp ebx, eax
0x0804d167:	and al, 0x30 ; cmp ebx, eax
0x0804d7d5:	jne 0xffffffe2 ; ret
0x0804d812:	mov dword ptr [edx + 0x18], eax ; ret
0x0804d946:	push cs ; or al, ch ; ret
0x0804de56:	add edx, edi ; cmp ebx, eax
0x0804dedd:	jne 0x12 ; mov ebx, eax
0x0804e40a:	add esp, 0xc ; ret
0x0804ef24:	pop ebx ; pop esi ; pop ebp ; ret
0x0804efe2:	or ecx, dword ptr [eax] ; ret
0x0804f06a:	mov eax, ebx ; pop ebx ; ret
0x0804f0a0:	xor ebx, ebx ; jmp 0xffffffc7
0x0804f95b:	push eax ; inc eax ; mov ebx, eax
0x0804f971:	dec ebp ; pop eax ; mov ebx, eax
0x0804f9f4:	push ebp ; push eax ; mov ebx, eax
0x0804fa79:	jge 0x22 ; mov ebx, eax
0x0804faff:	adc al, 0x99 ; mov ebx, eax
0x0804fb79:	and al, 4 ; mov ebx, eax
0x0804fbae:	add cl, byte ptr [edi] ; scasd eax, dword ptr es:[edi] ; ret
0x0805017c:	adc al, 0x5b ; pop esi ; ret
0x080501d8:	lcall ptr [ebx + 0x5e] ; ret
0x08050650:	lcall ptr [esi + 0x5f] ; ret
0x080507c1:	sub eax, ebx ; mov ebx, eax
0x0805080e:	les edx, ptr [eax] ; sub ebx, eax
0x080508ec:	in al, dx ; or al, 0x89 ; ret
0x080509ae:	mov dword ptr [esi], eax ; je 0xffffffc7
0x08050d10:	xor eax, eax ; jmp 0xffffffc7
0x08050d78:	ja 8 ; pop ebx ; ret
0x08050e43:	xlatb ; push ebx ; mov ebx, eax
0x080513b8:	cmp al, 0x24 ; mov ebx, eax
0x0805166e:	jbe 2 ; cmp ebx, eax
0x08052196:	ja 0x22 ; pop ebx ; ret
0x080524cb:	add dword ptr [eax], eax ; mov ebx, eax
0x08052548:	rcr byte ptr [esi + 0x5f], 0xc3
0x08052888:	add cl, byte ptr [edi] ; xchg eax, esi ; ret
0x080530d8:	add dword ptr [eax], eax ; ret
0x08053524:	jne 0xfffffff4 ; ret
0x08053552:	mov dword ptr [eax + 4], edx ; ret
0x08053584:	push eax ; add al, 0x5b ; ret
0x08053a90:	rol byte ptr [ecx], 0x39 ; ret
0x08053c10:	add byte ptr [ebx + 0x5e], bl ; ret
0x08053ce5:	add byte ptr [eax], al ; add bl, al
0x08053e91:	add byte ptr [eax], al ; pop ebx ; ret
0x08054030:	add eax, ebx ; pop ebx ; ret
0x08054554:	add byte ptr [eax], al ; jne 0xffffffc7
0x08054672:	jne 0xfffffff6 ; ret
0x0805468b:	sub eax, dword ptr [edx + 8] ; ret
0x080546ab:	or byte ptr [ecx], ch ; rol bl, 1
0x08054700:	rcr byte ptr [ebx + 0x5e], 0xc3
0x080547a9:	dec dword ptr [edi] ; mov dh, 0xc3
0x08054944:	mov eax, dword ptr [eax + 0x34] ; ret
0x08054951:	inc esp ; and al, 4 ; ret
0x0805499f:	push cs ; or byte ptr [ecx], al ; ret
0x08054a3c:	mov dh, 2 ; pop ebx ; ret
0x08054e8b:	pop edi ; cdq ; pop ebp ; ret
0x0805505e:	sub eax, dword ptr [edx + 0xc] ; ret
0x08055604:	sub ebx, edi ; add ebx, eax
0x0805560b:	push cs ; or byte ptr [ecx], bh ; ret
0x080556b0:	pop esi ; out dx, eax ; cmp ebx, eax
0x080556ba:	push cs ; or byte ptr [ecx], ch ; ret
0x08055759:	push cs ; or bh, al ; ret
0x08055871:	and al, 0x5b ; pop esi ; ret
0x080559a0:	or al, 6 ; add ebx, eax
0x08055b05:	inc ebp ; add al, 0x89 ; ret
0x08055b1d:	sub ebp, eax ; add ebx, eax
0x08055d35:	loopne 0xfffffffa ; mov ebx, eax
0x08055d94:	inc eax ; or al, 0x83 ; ret
0x08055dc1:	pop eax ; add al, 0x89 ; ret
0x08055e42:	mov edx, dword ptr [eax] ; mov ebx, eax
0x08055fa7:	add byte ptr [eax], al ; cmp ebx, eax
0x08055fe8:	cmp al, 0x33 ; cmp ebx, eax
0x08056040:	mov eax, dword ptr [ebx] ; sub ebx, eax
0x080561a1:	loopne 9 ; sub ebx, eax
0x08056acc:	adc al, 0x39 ; mov ebx, eax
0x08056b51:	neg eax ; and ebx, eax
0x08056d21:	mov edx, eax ; mov ebx, eax
0x080570c4:	and al, 0x14 ; mov ebx, eax
0x0805726e:	cmp esi, eax ; mov ebx, eax
0x08057455:	inc ebx ; or byte ptr [ecx], bh ; ret
0x08057ca0:	mov edi, ecx ; mov ebx, eax
0x08057eff:	xor eax, eax ; pop ebx ; ret
0x08058034:	jmp 0xffffffe8 ; mov ebx, eax
0x08058bc0:	movsd dword ptr es:[edi], dword ptr [esi] ; push cs ; or bl, al
0x08058c4f:	jg 7 ; or bl, al
0x08058ea4:	mov edx, esi ; mov ebx, eax
0x080594ef:	or al, ch ; dec ebx ; ret
0x08059647:	div ecx ; cmp ebx, eax
0x08059a38:	or al, 0xba ; mov al, 0xc3
0x08059b1d:	mov eax, edx ; pop ebx ; ret
0x08059d59:	in al, dx ; add al, 0x83 ; ret
0x0805ab88:	add edi, eax ; cmp ebx, eax
0x0805aec7:	jns 8 ; or bl, al
0x0805b0c3:	push ss ; push es ; or bl, al
0x0805b0e3:	hlt ; xor eax, eax ; ret
0x0805b0f1:	cmovb eax, ecx ; ret
0x0805b133:	cmp al, 6 ; or bl, al
0x0805b848:	xchg eax, esp ; shl byte ptr [ecx], 0xc3
0x0805ba4c:	and al, 0x10 ; cmp ebx, eax
0x0805bb7b:	and al, 0x20 ; cmp ebx, eax
0x0805bc7b:	jle 8 ; or bl, al
0x0805bc89:	add dword ptr [esi], 8 ; ret
0x0805be27:	inc eax ; pop edi ; pop esi ; ret
0x0805be57:	xor byte ptr [esi], al ; or bl, al
0x0805be80:	fdivr st(7) ; pop ebx ; ret
0x0805c12f:	lcall ptr [esi + 0x5b] ; ret
0x0805c1b9:	and al, 8 ; pop edi ; ret
0x0805c1e4:	or ah, bh ; pop edi ; ret
0x0805c28e:	xchg eax, edi ; mov esi, edx ; ret
0x0805c2d3:	push esp ; push es ; or bl, al
0x0805c2f9:	or al, 0xcd ; or bl, al
0x0805c3a3:	mov cl, 6 ; or bl, al
0x0805c43b:	xchg byte ptr [esi], al ; or bl, al
0x0805c449:	mov al, byte ptr [esi] ; or bl, al
0x0805c512:	add dword ptr [eax + 0x5f], eax ; ret
0x0805cbe5:	movq qword ptr [edx - 0x3d], mm0
0x080605a0:	pcmpeqb xmm0, xmm3
0x08061627:	pop es ; sub eax, ecx ; ret
0x08061697:	push es ; sub eax, ecx ; ret
0x080616e6:	add dh, bh ; fadd st(3)
0x080616e9:	ret ; xor eax, eax ; ret
0x0806187e:	enter 0x5f5e, -0x3d
0x08061a05:	xor esi, esi ; cmp bl, al
0x08062b8b:	pop edi ; pop esi ; pop ebx ; ret
0x080630b3:	jne 0x2d ; pop ebx ; ret
0x08063190:	pop ebx ; xor eax, eax ; ret
0x080631a7:	adc ch, byte ptr [ecx] ; rol bl, 1
0x08063981:	movq mm1, qword ptr [eax - 0x3d]
0x08063986:	movq mm2, qword ptr [edx - 0x3d]
0x08063c09:	jne 0x47 ; pop ebx ; ret
0x08063c3d:	jne 0x13 ; pop ebx ; ret
0x08063ee0:	pmovmskb eax, xmm3
0x08065184:	mov eax, edi ; pop edi ; ret
0x080653a9:	add al, 0x89 ; rol bl, 1
0x0806542d:	pop es ; mov eax, edx ; ret
0x08065491:	push es ; mov eax, edx ; ret
0x080669d5:	inc edx ; add ebx, dword ptr [edi - 0x3d]
0x08066a09:	inc edx ; pop es ; pop edi ; ret
0x08066a4f:	inc edx ; or ebx, dword ptr [edi - 0x3d]
0x08066a89:	inc edx ; maxps xmm0, xmm3
0x08066a94:	lea eax, dword ptr [edx] ; pop edi ; ret
0x08066aa7:	inc edx ; add dword ptr [edi - 0x3d], ebx
0x08066abd:	inc edx ; add bl, byte ptr [edi - 0x3d]
0x08066adb:	inc edx ; add al, 0x5f ; ret
0x08066b0b:	inc edx ; push es ; pop edi ; ret
0x08066b1f:	inc edx ; or byte ptr [edi - 0x3d], bl
0x08066b41:	inc edx ; or dword ptr [edi - 0x3d], ebx
0x08066b5f:	inc edx ; or bl, byte ptr [edi - 0x3d]
0x08066b83:	inc edx ; or al, 0x5f ; ret
0x08066bc3:	inc edx ; push cs ; pop edi ; ret
0x08066be6:	lea eax, dword ptr [edx + 1] ; ret
0x08066bfc:	lea eax, dword ptr [edx + 2] ; ret
0x08066c04:	lea eax, dword ptr [edx + 3] ; ret
0x08066c1a:	lea eax, dword ptr [edx + 4] ; ret
0x08066c2c:	lea eax, dword ptr [edx + 5] ; ret
0x08066c3a:	lea eax, dword ptr [edx + 6] ; ret
0x08066c48:	lea eax, dword ptr [edx + 7] ; ret
0x08066c5e:	lea eax, dword ptr [edx + 8] ; ret
0x08066c80:	lea eax, dword ptr [edx + 9] ; ret
0x08066c9e:	lea eax, dword ptr [edx + 0xa] ; ret
0x08066cbe:	lea eax, dword ptr [edx + 0xb] ; ret
0x08066ce2:	lea eax, dword ptr [edx + 0xc] ; ret
0x08066d02:	lea eax, dword ptr [edx + 0xd] ; ret
0x08066d22:	lea eax, dword ptr [edx + 0xe] ; ret
0x08066d38:	lea eax, dword ptr [edx + 0xf] ; ret
0x08067a9e:	inc edi ; pop es ; pop edi ; ret
0x08067ae4:	inc edi ; add ebx, dword ptr [edi - 0x3d]
0x08067b41:	inc edi ; maxps xmm0, xmm3
0x08067b87:	inc edi ; or ebx, dword ptr [edi - 0x3d]
0x08067c30:	lea eax, dword ptr [edi] ; pop edi ; ret
0x08067c41:	inc edi ; add dword ptr [edi - 0x3d], ebx
0x08067c51:	inc edi ; add bl, byte ptr [edi - 0x3d]
0x08067c71:	inc edi ; add al, 0x5f ; ret
0x08067c91:	inc edi ; push es ; pop edi ; ret
0x08067ca1:	inc edi ; or byte ptr [edi - 0x3d], bl
0x08067cb1:	inc edi ; or dword ptr [edi - 0x3d], ebx
0x08067cc1:	inc edi ; or bl, byte ptr [edi - 0x3d]
0x08067ce1:	inc edi ; or al, 0x5f ; ret
0x08067d01:	inc edi ; push cs ; pop edi ; ret
0x08067d10:	xor eax, eax ; pop edi ; ret
0x08067d76:	add eax, ecx ; pop edi ; ret
0x08067e17:	add eax, edi ; pop edi ; ret
0x080685b1:	pop es ; xor byte ptr [edi - 0x3d], bl
0x08068665:	cmp al, dh ; pop edi ; ret
0x08068685:	cmp byte ptr [eax], dl ; pop edi ; ret
0x08068695:	cmp byte ptr [eax], ah ; pop edi ; ret
0x080686bc:	pop es ; adc byte ptr [edi - 0x3d], bl
0x080686cc:	pop es ; and byte ptr [edi - 0x3d], bl
0x0806893f:	nop ; mov eax, edx ; ret
0x08068a43:	leave ; add eax, ecx ; ret
0x08068bdb:	inc esp ; add dh, byte ptr [eax] ; ret
0x08068be4:	inc esp ; adc al, dh ; ret
0x08068bf2:	rol byte ptr [ecx], 0xd0 ; ret
0x08068c04:	inc esp ; adc byte ptr [eax], dl ; ret
0x08068c14:	inc esp ; adc byte ptr [eax], ah ; ret
0x0806afe6:	and byte ptr [edi], cl ; test eax, ebx
0x0806b159:	add esp, 4 ; ret
0x0806b497:	neg eax ; pop edi ; ret
0x0806bef2:	mov ebp, ebx ; mov ebx, eax
0x0806bf9f:	add dword ptr [edi], ecx ; xchg eax, esp ; ret
0x0806c18f:	nop ; xor eax, eax ; ret
0x0806c9d5:	inc ebx ; shr ebx, -0x3d
0x0806cfc3:	add byte ptr ss:[eax], al ; ret
0x0806d009:	ja 7 ; pop ebx ; ret
0x0806d15b:	xor al, 0 ; add bl, al
0x0806d90f:	cmp al, 0x57 ; sub ebx, eax
0x0806d9cf:	sub al, 0 ; add bl, al
0x0806da23:	fcomp dword ptr [ebx + 0x5e] ; ret
0x0806da72:	neg eax ; cmp ebx, eax
0x0806da87:	je 4 ; ret
0x0806dbbf:	sub al, byte ptr [eax] ; add bl, al
0x0806dc36:	push eax ; add al, 0x89 ; ret
0x0806dd5f:	fisttp dword ptr [edi] ; lahf ; ret
0x0806dd66:	dec dword ptr [edi] ; lahf ; ret
0x0806dfa8:	push ebx ; add al, 0x83 ; ret
0x0806e03d:	inc ebp ; in al, -0x7d ; ret
0x0806e5fb:	les edx, ptr [eax] ; cmp ebx, eax
0x0806e881:	test eax, eax ; jne 0xffffffc7
0x0806e8c6:	je 0x80 ; mov ebx, eax
0x0806e99c:	cmove eax, edx ; ret
0x0806ea6d:	sbb eax, dword ptr [eax] ; add bl, al
0x0806ead2:	setae al ; ret
0x0806eb08:	pop esi ; pop ebx ; pop edx ; ret
0x0806eb11:	push ecx ; push edx ; mov ebx, eax
0x0806eb30:	pop edx ; pop ecx ; pop ebx ; ret
0x0806eb5f:	cmp edx, eax ; mov ebx, eax
0x0806ed27:	je 0x79 ; cmp ebx, eax
0x0806ed8e:	ret ; nop ; cmp ebx, eax
0x0806ee36:	add al, ch ; aam 0xc3
0x0806f10f:	nop ; int 0x80 ; ret
0x0806f92e:	ror byte ptr [edi], 0x44 ; ret
0x08070437:	add byte ptr [esi + 0x5f], bl ; ret
0x0807046e:	add al, byte ptr [eax] ; cmp ebx, eax
0x08070494:	xor edx, edx ; cmp ebx, eax
0x08070533:	loopne 0x60 ; pop edi ; ret
0x08071299:	test esi, esi ; jne 0xffffffc7
0x080713c9:	jne 0xffffffc6 ; add ebx, eax
0x080715d3:	mov byte ptr [ecx], 0x83 ; ret
0x080715d6:	ret ; cmp al, 0xe8 ; ret
0x08071d26:	cmp edx, dword ptr [ebp - 0x18] ; ret
0x08071e5f:	rol dword ptr [ecx], -0x7d ; ret
0x0807209d:	je 0x45 ; mov ebx, eax
0x080728bf:	xor byte ptr [esi + 0x5f], bl ; ret
0x080728de:	cmovs eax, edx ; ret
0x08072afa:	ret 0x3901 ; ret
0x08072e76:	sub eax, edx ; cmp ebx, eax
0x08072e79:	ret ; cmovle eax, ebx
0x08073686:	rol byte ptr [ebx + eax*4], 0xc3
0x08073ca6:	and al, 0x3c ; mov ebx, eax
0x08073fab:	push ecx ; add edi, dword ptr [ecx] ; ret
0x08074659:	clc ; jg 0x79 ; ret
0x08074977:	and al, 0x74 ; mov ebx, eax
0x08074ed6:	inc eax ; adc al, 0x89 ; ret
0x08074fcc:	jne 0xc ; mov ebx, eax
0x0807543c:	sub al, 0xf ; test al, bl
0x08075d73:	mov eax, dword ptr [edx] ; mov ebx, eax
0x08075f24:	loopne 9 ; mov ebx, eax
0x080768ff:	out 2, eax ; mov ebx, eax
0x0807791f:	xor edx, edx ; mov ebx, eax
0x08077ac2:	mov ch, 0xe ; or bl, al
0x08077ebb:	add eax, edx ; mov ebx, eax
0x08078114:	les ebx, ptr [ebx + esi*8] ; ret
0x0807830f:	mov esi, eax ; mov ebx, eax
0x0807894b:	ror byte ptr [edi], 0x85 ; ret
0x08078988:	mov esi, ebx ; mov ebx, eax
0x08078c6d:	int1 ; sete bl
0x08078c75:	fisttp word ptr [edi] ; xchg eax, esp ; ret
0x08078cff:	mov byte ptr [eax], 0 ; ret
0x080792ce:	jbe 2 ; ret
0x080792fc:	je 0x14 ; mov ebx, eax
0x08079332:	salc ; push ecx ; mov ebx, eax
0x0807963b:	sbb byte ptr [ebx + eax*4], ah ; ret
0x080797af:	call dword ptr [ebx - 0x77] ; ret
0x08079839:	add byte ptr [ebx], ch ; add al, bl
0x080799b1:	mov ecx, ebx ; mov ebx, eax
0x08079dcd:	inc edx ; and byte ptr [ecx], bh ; ret
0x08079dd0:	ret ; cmovge eax, ebx
0x08079fd0:	mov eax, dword ptr [edi] ; cmp ebx, eax
0x0807a2d5:	or byte ptr [ebx - 0x39], dl ; ret
0x0807a30f:	je 9 ; pop ebx ; ret
0x0807a331:	mov dword ptr [edx], eax ; pop ebx ; ret
0x0807a34d:	inc esp ; nop ; inc eax ; ret
0x0807a3d0:	mov dword ptr gs:[edx], eax ; ret
0x0807a43d:	add esp, 0x14 ; ret
0x0807a48c:	ja 0x1c ; pop ebx ; ret
0x0807aa53:	and al, 8 ; add ebx, eax
0x0807ac24:	mov edi, ebx ; mov ebx, eax
0x0807b81b:	loopne 4 ; or ebx, eax
0x0807be4c:	dec esi ; sbb byte ptr [ecx], al ; ret
0x0807c006:	call dword ptr [ebx - 0x7d] ; ret
0x0807c364:	add byte ptr [eax], al ; add ebx, eax
0x0807c3c5:	adc al, 1 ; add ebx, eax
0x0807e9c6:	ret 0x850f ; ret
0x080806b7:	sbb al, 0xe8 ; adc eax, ebx
0x08080776:	mov esi, edx ; mov ebx, eax
0x080819c3:	rol byte ptr [ecx], 0x83 ; ret
0x08081b4f:	dec dword ptr [edi] ; inc esp ; ret
0x08081bcf:	sub eax, edx ; mov ebx, eax
0x0808260e:	jge 0xffffff92 ; sub ebx, eax
0x080826dc:	test byte ptr [edi], 0x85 ; ret
0x08082d26:	or byte ptr [edi], cl ; test eax, ebx
0x08082de2:	fstp st(0) ; mov ebx, eax
0x08083245:	add eax, eax ; sub ebx, eax
0x080837d6:	add dword ptr [edi], ecx ; test al, bl
0x08083cff:	dec edx ; add al, 0x83 ; ret
0x08083d6f:	xchg eax, esp ; shr bl, 0xc3
0x080843ed:	rcr byte ptr [esi + 0x5f], 1 ; ret
0x080844c4:	je 0x19 ; cmp ebx, eax
0x08084716:	pop edx ; adc byte ptr [ecx], ch ; ret
0x08084c2d:	or byte ptr [ebx - 0x7d], dl ; ret
0x08085328:	inc dword ptr [ecx] ; cmp ebx, eax
0x080853d9:	mov dh, 0x80 ; add bl, al
0x080854e6:	test byte ptr [edi], 0x9f ; ret
0x08085736:	inc ecx ; add al, 0x89 ; ret
0x0808579c:	mov ebx, edx ; or ebx, eax
0x08085a06:	inc ebp ; adc byte ptr [ecx], bh ; ret
0x08086856:	mov byte ptr [ecx], 0x89 ; ret
0x080868d4:	mov byte ptr [ecx], 0x39 ; ret
0x08086b88:	test edx, edx ; mov ebx, eax
0x08087431:	add byte ptr [eax], al ; jmp 0xffffffc7
0x080876ea:	add dword ptr [edi], ecx ; test eax, ebx
0x080879e7:	mov dh, 0x82 ; add bl, al
0x08088146:	push 0x2b ; jmp 0xffffffc7
0x08089a6b:	dec esi ; retf -0x3c7d
0x08089af3:	and al, 0x85 ; pop esp ; ret
0x08089b82:	ror byte ptr [edi], cl ; test al, bl
0x0808a6cb:	je 0x5d ; add ebx, eax
0x0808a752:	mov dword ptr [ebx], edi ; jne 0xffffffc7
0x0808a8b7:	je 0x21 ; add ebx, eax
0x0808ab51:	pop esi ; or byte ptr [ecx], ch ; ret
0x0808abe8:	inc ebp ; loopne 0x2c ; ret
0x0808ac09:	je 9 ; mov ebx, eax
0x0808ac18:	inc ebp ; in al, 0x39 ; ret
0x0808b180:	inc ecx ; and byte ptr [ecx], ch ; ret
0x0808b226:	and byte ptr [eax - 0x18], dl ; ret
0x0808b294:	mov dword ptr [eax + 0x20], ecx ; ret
0x0808b2c6:	dec eax ; and byte ptr [ebx - 0x3d], bl
0x0808b69a:	clc ; pop edi ; pop ebp ; ret
0x0808bcc0:	add ch, byte ptr [ecx] ; rol bl, 1
0x0808bdd4:	cmove eax, ecx ; ret
0x0808be07:	mov eax, dword ptr [eax + 0x28] ; ret
0x0808c495:	fmul dword ptr [eax] ; or bl, al
0x0808c4c7:	iretd ; or byte ptr [eax], cl ; ret
0x0808c685:	add ebx, dword ptr [esi + 0x5f] ; ret
0x0808cc37:	and al, 0x14 ; cmp ebx, eax
0x0808cd78:	add esi, eax ; cmp ebx, eax
0x0808cdf3:	rcr byte ptr [edi + 0x5d], 1 ; ret
0x0808d156:	jne 0x1a ; mov ebx, eax
0x0808d359:	inc edi ; hlt ; pop edi ; ret
0x0808d383:	inc edi ; clc ; pop edi ; ret
0x0808d3ac:	inc edi ; cld ; pop edi ; ret
0x0808d3b1:	inc edi ; int1 ; pop edi ; ret
0x0808d3c1:	inc edi ; pop edi ; ret
0x0808d3e1:	inc edi ; cmc ; pop edi ; ret
0x0808d3f1:	inc edi ; neg byte ptr [edi - 0x3d]
0x0808d401:	inc edi ; neg dword ptr [edi - 0x3d]
0x0808d411:	inc edi ; stc ; pop edi ; ret
0x0808d421:	inc edi ; cli ; pop edi ; ret
0x0808d431:	inc edi ; sti ; pop edi ; ret
0x0808d441:	inc edi ; std ; pop edi ; ret
0x0808d461:	inc edi ; lcall ptr [edi - 0x3d]
0x0808d7a3:	pop esp ; bsr eax, ebx
0x0808d802:	pop edi ; xor eax, eax ; ret
0x0808daf6:	rol byte ptr [ebx], 0x5f ; ret
0x0808db1c:	rol byte ptr [edi], 0x5f ; ret
0x0808db43:	ror byte ptr [ebx], 0x5f ; ret
0x0808db6c:	ror byte ptr [edi], 0x5f ; ret
0x0808dbd4:	and al, 0xc ; pop edi ; ret
0x0808dc12:	inc eax ; add ebx, dword ptr [edi - 0x3d]
0x0808dc45:	inc eax ; pop es ; pop edi ; ret
0x0808dc7c:	inc eax ; or ebx, dword ptr [edi - 0x3d]
0x0808dca5:	inc eax ; maxps xmm0, xmm3
0x0808dcba:	inc eax ; add dword ptr [edi - 0x3d], ebx
0x0808dcca:	inc eax ; add bl, byte ptr [edi - 0x3d]
0x0808dcda:	inc eax ; add al, 0x5f ; ret
0x0808dcf6:	inc eax ; push es ; pop edi ; ret
0x0808dd06:	inc eax ; or byte ptr [edi - 0x3d], bl
0x0808dd16:	inc eax ; or dword ptr [edi - 0x3d], ebx
0x0808dd26:	inc eax ; or bl, byte ptr [edi - 0x3d]
0x0808dd36:	inc eax ; or al, 0x5f ; ret
0x0808dd56:	inc eax ; push cs ; pop edi ; ret
0x0808ddc0:	add byte ptr [eax], al ; pop edi ; ret
0x0808deb1:	rol byte ptr [ecx], 0x5f ; ret
0x0808deb6:	rol byte ptr [edx], 0x5f ; ret
0x0808dec0:	rol byte ptr [edi + ebx*2], 0xc3
0x0808deca:	rol byte ptr [esi], 0x5f ; ret
0x0808ded4:	ror byte ptr [eax], 0x5f ; ret
0x0808ded9:	ror byte ptr [ecx], 0x5f ; ret
0x0808dede:	ror byte ptr [edx], 0x5f ; ret
0x0808dee8:	ror byte ptr [edi + ebx*2], 0xc3
0x0808def2:	ror byte ptr [esi], 0x5f ; ret
0x0808e08c:	or byte ptr [ebx + 0x5e], bl ; ret
0x0808e6fb:	jne 0xfffffff5 ; ret
0x0808eb5d:	pcmpeqb mm4, qword ptr [eax] ; ret
0x0808eb77:	add eax, 2 ; ret
0x0808eb80:	add eax, 1 ; ret
0x0808eb90:	add eax, 3 ; ret
0x0808ec6a:	jne 0xffffffd6 ; pop ebx ; ret
0x0808ec9e:	push cs ; or byte ptr [ebx - 0x3d], bl
0x0808ecc9:	cmp ecx, dword ptr [edi] ; inc edi ; ret
0x0808ecd8:	pop ebx ; add eax, edx ; ret
0x0808efcf:	xor al, 0x24 ; mov ebx, eax
0x0808f2b1:	sub al, 0xf ; xchg eax, esp ; ret
0x0808f2b3:	xchg eax, esp ; ret ; add ebx, eax
0x0808f5ac:	les ecx, ptr [eax] ; pop edi ; ret
0x0809027e:	add byte ptr [edi], cl ; mov ebx, es
0x080904bc:	add byte ptr [eax], al ; test eax, ebx
0x08090674:	mov byte ptr [ebx + eax*4], 0xc3
0x08090e16:	add dl, byte ptr [eax - 0x18] ; ret
0x08090f16:	mov ecx, edx ; mov ebx, eax
0x0809145f:	int1 ; std ; inc ebx
0x080914e9:	movzx eax, al ; ret
0x080916ce:	mov ecx, dword ptr [edx] ; mov ebx, eax
0x080916f8:	pop edx ; adc byte ptr [ecx], ah ; ret
0x08091701:	or bl, byte ptr [ebx + 0x5e] ; ret
0x0809199d:	cmp cl, byte ptr [edi] ; inc esp ; ret
0x08091b5d:	je 0x23 ; mov ebx, eax
0x08091f28:	loopne 0xfffffff2 ; mov ebx, eax
0x080928b6:	inc ebp ; test byte ptr [ecx], al ; ret
0x08092c43:	add al, 0xc7 ; cmp ebx, eax
0x08093f73:	and al, 0xf ; cmp bl, al
0x08093f96:	mov dh, 2 ; cmp bl, al
0x08094970:	or byte ptr [edi], cl ; test al, bl
0x080957b8:	add ebx, ecx ; add ebx, eax
0x08095b13:	dec ebp ; pushfd ; xor ebx, eax
0x08095b2a:	ret 0x950f ; ret
0x08096221:	add dword ptr [eax], eax ; add bl, al
0x08096351:	les edx, ptr [eax] ; add ebx, eax
0x0809669f:	nop ; push ebx ; mov ebx, eax
0x08096a41:	add edi, dword ptr [esi] ; mov ebx, eax
0x08097278:	add eax, edx ; cmp ebx, eax
0x080973e5:	inc esi ; add al, 0x89 ; ret
0x08097951:	inc edi ; add al, 0x89 ; ret
0x08098316:	xor ecx, ecx ; mov ebx, eax
0x080983e1:	inc esi ; add al, 0x83 ; ret
0x080983f6:	inc esi ; or al, 0x89 ; ret
0x080984a5:	add al, 0x3b ; cmp ebx, eax
0x08098882:	shl eax, cl ; cmp ebx, eax
0x0809889a:	jno 0xfffffffa ; cmp ebx, eax
0x0809916d:	in al, dx ; add al, 0x89 ; ret
0x08099306:	add dword ptr [ebx + 0x5e], ebx ; ret
0x080993f9:	mov esi, dword ptr [edx] ; jmp 0xffffffc7
0x08099484:	jne 0xffffffdc ; pop ebx ; ret
0x08099486:	pop ebx ; ret ; ret
0x080994fb:	adc al, 0x5b ; pop edi ; ret
0x08099504:	rcr byte ptr [ebx + 0x5f], 0xc3
0x080995a7:	or al, 0x8d ; sbb al, 0xc3
0x080998f0:	inc esp ; ret 0xc35f
0x0809995b:	mov eax, dword ptr [esi] ; cmp ebx, eax
0x08099ff1:	pop ecx ; pop edi ; mov ebx, eax
0x0809ba49:	les ecx, ptr [edx + esi*8 - 0x3d]
0x0809bb3d:	neg eax ; pop ebp ; ret
0x0809bd18:	jbe 0x20 ; mov ebx, eax
0x0809bf0f:	sal byte ptr [eax], 0x39 ; ret
0x0809bfb9:	je 0x2f ; jns 0xffffffc7
0x0809c030:	jbe 0x3e ; mov ebx, eax
0x0809c16a:	std ; jbe 6 ; ret
0x0809c520:	mov eax, dword ptr [eax + 4] ; ret
0x0809c62d:	les ebp, ptr [eax] ; pop ebx ; ret
0x0809c753:	and byte ptr [ebx + 0x5e], bl ; ret
0x0809c791:	adc byte ptr [ebx + 0x5e], bl ; ret
0x0809cacd:	div ecx ; mov ebx, eax
0x0809cae3:	clc ; setb bl
0x0809cca6:	sub ecx, eax ; add ebx, eax
0x0809ce1c:	xchg eax, esi ; shld ebx, eax, cl
0x0809ce7c:	xchg eax, esi ; shrd ebx, eax, cl
0x0809cfa5:	inc ebp ; in al, 1 ; ret
0x0809cfaf:	pop ebp ; or al, 1 ; ret
0x0809d06d:	mov edx, ebx ; add ebx, eax
0x0809d1e5:	pop ebp ; pop esi ; pop edi ; ret
0x0809dabf:	pop ebp ; cld ; leave ; ret
0x0809dbbc:	fcomp dword ptr [esi + 0x5f] ; ret
0x0809dd91:	dec dword ptr [edi] ; xchg eax, esp ; ret
0x0809df26:	jne 0xfffffff2 ; sub ebx, eax
0x0809dfb8:	or al, 8 ; mov ebx, eax
0x0809e0c1:	js 7 ; ret
0x0809e3f7:	mov bh, 0xe ; or bl, al
0x0809e834:	add esp, 0x18 ; ret
0x0809e9c8:	sal bh, 0xd8 ; ret
0x0809ed04:	and al, 4 ; sub ebx, eax
0x0809ef27:	jecxz 3 ; add ebx, eax
0x0809efd9:	sti ; add ebp, dword ptr [ecx] ; ret
0x0809f12c:	mov ebx, edx ; sub ebx, eax
0x0809f210:	add al, 0x80 ; sub ebx, eax
0x0809f39a:	fimul dword ptr [edi] ; popfd ; ret
0x0809f5c4:	mov edx, ecx ; mov ebx, eax
0x0809f5fc:	jle 4 ; ret
0x0809f694:	add bl, byte ptr [esi + 0x5f] ; ret
0x0809f6d6:	les ecx, ptr [ebx + ebx*2] ; ret
0x080a0355:	inc ebp ; cwde ; mov ebx, eax
0x080a13d6:	sti ; inc dword ptr [ecx] ; ret
0x080a1738:	je 6 ; add ebx, eax
0x080a1869:	je 0x49 ; mov ebx, eax
0x080a197b:	mov eax, dword ptr [eax] ; add ebx, eax
0x080a209d:	sub ebx, edx ; cmp ebx, eax
0x080a2242:	mov eax, dword ptr [ecx] ; cmp ebx, eax
0x080a272c:	add ch, al ; faddp st(3)
0x080a29ae:	js 0xffffffd2 ; mov ebx, eax
0x080a3508:	dec dword ptr [edi] ; test al, bl
0x080a3e01:	cmp bl, cl ; ja 0xffffffc7
0x080a47a0:	jne 0xa ; mov ebx, eax
0x080a49e0:	mov edi, edx ; mov ebx, eax
0x080a4ad2:	out dx, eax ; add dword ptr [ecx], edi ; ret
0x080a63f2:	add cl, ch ; add bl, al
0x080a7c89:	sub ecx, ebx ; add ebx, eax
0x080a8079:	add edx, eax ; sub ebx, eax
0x080a87ac:	les edx, ptr [ebx + ebx*2] ; ret
0x080a8bad:	add al, 0x42 ; add ebx, eax
0x080a9f16:	leave ; cmove eax, ebx
0x080aa40e:	and al, 0xc ; add ebx, eax
0x080aa6f1:	add dword ptr [eax], esp ; mov ebx, eax
0x080ad1c8:	or al, ch ; and al, bl
0x080ad1e1:	or al, ch ; or ebx, eax
0x080af09a:	cmp byte ptr [edi], cl ; xchg eax, edi ; ret
0x080af88c:	pop ebp ; fmul st(0) ; ret
0x080af8d4:	pop ebp ; fmulp st(1) ; ret
0x080b1103:	ror byte ptr [edi], 0x84 ; ret
0x080b256e:	and byte ptr [esi - 0x7f], 0xc3
0x080b259d:	or al, 0x5b ; pop esi ; ret
0x080b2633:	push edx ; or ecx, dword ptr [eax] ; ret
0x080b2b86:	outsd dx, dword ptr [esi] ; fsub st(1), st(0) ; ret
0x080b4d29:	sub eax, ecx ; pop ebp ; ret
0x080b4f05:	pop ebp ; xor eax, eax ; ret
0x080b51ec:	ret 0x5d5e ; ret
0x080b5582:	rcr byte ptr [edi + 0x5d], 0xc3
0x080b5598:	fcomp dword ptr [edi + 0x5d] ; ret
0x080b55ba:	std ; add al, 0x76 ; ret
0x080b57a1:	scasb al, byte ptr es:[edi] ; sti ; inc ebx
0x080b59ad:	mov ecx, esi ; mov ebx, eax
0x080b5f4f:	rol dword ptr [edi], 9 ; ret
0x080b6288:	neg eax ; or ebx, eax
0x080b6587:	add byte ptr [eax], al ; add al, 0xc3
0x080b6978:	and al, 0x18 ; mov ebx, eax
0x080b71ca:	idiv ecx ; mov ebx, eax
0x080b77ea:	dec esp ; pop esi ; pop edi ; ret
0x080b7879:	adc byte ptr [edi], cl ; xchg eax, esp ; ret
0x080b7b94:	mov eax, dword ptr [eax + 0x48] ; ret
0x080b7c14:	mov eax, dword ptr [eax + 0x4c] ; ret
0x080b7c30:	mov eax, dword ptr [edx + 0x4c] ; ret
0x080b7c48:	mov dword ptr [eax + 0x4c], edx ; ret
0x080b7c54:	mov eax, dword ptr [eax + 0x50] ; ret
0x080b7c64:	mov eax, dword ptr [eax + 0x5c] ; ret
0x080b7cb4:	mov eax, dword ptr [eax + 0x58] ; ret
0x080b7cc4:	mov eax, dword ptr [eax + 0x54] ; ret
0x080b7dad:	je 0x28 ; add bl, al
0x080b7e50:	jge 0xfffffffe ; leave ; ret
0x080b81bd:	mov eax, dword ptr [esp] ; ret
0x080b81c1:	mov ecx, dword ptr [esp] ; ret
0x080b81c5:	mov esi, dword ptr [esp] ; ret
0x080b81c9:	mov edi, dword ptr [esp] ; ret
0x080b81cd:	mov ebp, dword ptr [esp] ; ret
0x080b81fb:	cmova eax, edx ; ret
0x080b88c3:	and al, 0x70 ; mov ebx, eax
0x080b8f16:	and al, 0xf ; test al, bl
0x080b92fb:	mov dh, 0xe8 ; mov ebx, eax
0x080b980f:	inc edx ; adc al, 0x5f ; ret
0x080b98d0:	jne 8 ; ret
0x080ba329:	test ebx, ebx ; jne 0xffffffc7
0x080badce:	sti ; push ebx ; ret
0x080bd3a2:	push es ; or byte ptr [ebp - 0x3d], al
0x080bd3c2:	push es ; or byte ptr [ebx], dl ; ret
0x080bd3ca:	push es ; or byte ptr [ecx], cl ; ret
0x080bd3ce:	push es ; or byte ptr [ebx], bh ; ret
0x080bd3d2:	push es ; or byte ptr [ecx], dh ; ret
0x080bd3d6:	push es ; or byte ptr [edi], ah ; ret
0x080bd3de:	push es ; or byte ptr [ebp - 0x3d], cl
0x080bd3e2:	push es ; or byte ptr [eax - 0x3d], bh
0x080bd41e:	push es ; or byte ptr [edx - 0x3d], ah
0x080bd8c5:	retf 0x806 ; ret
0x080c62a1:	add al, byte ptr [eax] ; add bl, al
0x080c6379:	add eax, dword ptr [eax] ; add bl, al
0x080c6795:	or byte ptr [eax], al ; add bl, al
0x080c68e9:	or dword ptr [eax], eax ; add bl, al
0x080c6ce9:	or al, 0 ; add bl, al
0x080c70e9:	sldt word ptr [eax] ; ret
0x080cb60a:	int3 ; or al, 0xc ; ret
0x080cba75:	out 7, eax ; or bl, al
0x080ce705:	out 0xc, al ; or bl, al
0x080cf940:	rol cl, 0xc2 ; ret
0x080cfc0c:	fstp dword ptr [edx] ; push ds ; ret
0x080cfc48:	xchg eax, ebp ; push es ; cld ; ret
0x080cfdec:	mov ah, bl ; push esi ; ret
0x080cffed:	push ds ; mov ah, 0x13 ; ret
0x080d05d7:	test al, 0x97 ; xchg eax, esp ; ret
0x080d063b:	mov bl, 0x57 ; cmp bl, al
0x080d0e84:	stc ; jnp 0xffffffbc ; ret
0x080d1008:	shl dword ptr [edi - 5], 1 ; ret
0x080d1169:	lds esi, ptr [eax + ebx*8] ; ret
0x080d12c5:	mov ah, 0x8b ; cmp al, bl
0x080d2292:	mov al, 0xee ; fcmovb st(0), st(3)
0x080d2293:	out dx, al ; fcmovb st(0), st(3) ; ret
0x080d25e6:	aad 8 ; stosd dword ptr es:[edi], eax ; ret
0x080d288c:	push edi ; inc eax ; jno 0xffffffc7
0x080d2ced:	idiv al ; and al, bl
0x080d2e65:	cmc ; mov ch, 0xab ; ret
0x080d3015:	fcomp dword ptr [edx + 0x21] ; ret
0x080d4bd7:	or al, 0x30 ; or al, 0xc3
0x080d4bda:	ret ; xor byte ptr [ebx + eax*8], cl
0x080d5186:	cld ; call dword ptr [ebx] ; ret
0x080d518a:	cld ; jmp dword ptr [ecx - 0x3d]
0x080d5192:	cld ; inc ebx ; ret
0x080d587f:	push cs ; adc al, 0x41 ; ret
0x080d59ce:	push cs ; or byte ptr [ecx - 0x3d], al
0x080d5b0f:	push cs ; adc al, 0x43 ; ret
0x080d5b67:	adc byte ptr [edi + 0xa], al ; ret
0x080d5c0c:	push cs ; or al, 0x41 ; ret
0x080d5c39:	inc ebp ; add dword ptr [edx], ecx ; ret
0x080d5c49:	rol byte ptr [ecx], 1 ; or al, bl
0x080d5c79:	dec ecx ; add ecx, dword ptr [edx] ; ret
0x080d5c87:	or ebp, dword ptr [edx + ecx - 0x3d]
0x080d5c97:	ja 3 ; or al, bl
0x080d5e11:	add byte ptr [ecx], al ; or al, bl
0x080d5f00:	add ebp, dword ptr [ecx + 1] ; ret
0x080d64dd:	cmpsb byte ptr [esi], byte ptr es:[edi] ; add dword ptr [edx], ecx ; ret
0x080d64eb:	or ebx, dword ptr [edx + ecx - 0x3d]
0x080d6579:	push cs ; adc al, 0x45 ; ret
0x080d674f:	push cs ; adc al, 0x46 ; ret
0x080d6840:	add ch, byte ptr [esi + 0xa] ; ret
0x080d684e:	or edx, dword ptr [ebp + 0xa] ; ret
0x080d68a4:	add cl, bl ; or al, bl
0x080d68dd:	adc byte ptr [ebp + 0xa], bl ; ret
0x080d68e9:	or ebp, dword ptr [ebp + 0xa] ; ret
0x080d68f5:	or eax, dword ptr [edx + ecx - 0x3d]
0x080d6963:	push cs ; or byte ptr [ebx - 0x3d], al
0x080d69c7:	and byte ptr [esi + 0xa], ch ; ret
0x080d69d5:	or esi, dword ptr [ebp + 0xa] ; ret
0x080d6a6d:	lar ecx, word ptr [edx] ; ret
0x080d6a7c:	add cl, byte ptr [ebx + 0xa] ; ret
0x080d6b6a:	push cs ; adc al, 0x47 ; ret
0x080d6cef:	push cs ; or al, 0x46 ; ret
0x080d6d31:	push cs ; or byte ptr [esi - 0x3d], al
0x080d6eae:	adc byte ptr [edx + 0xa], cl ; ret
0x080d6ebd:	or esp, dword ptr [eax + 0xa] ; ret
0x080d70d5:	outsb dx, byte ptr [esi] ; add dword ptr [edx], ecx ; ret
0x080d7140:	adc byte ptr [edi + 0xa], cl ; ret
0x080d7199:	add bl, byte ptr [edx + 0xa] ; ret
0x080d719f:	inc ebp ; or eax, dword ptr [ecx - 0x3d]
0x080d7240:	push cs ; adc byte ptr [ecx - 0x3d], al
0x080d7295:	add dword ptr ds:[edx], ecx ; ret
0x080d72a3:	or eax, dword ptr [edi + 0xa] ; ret
0x080d72b4:	adc byte ptr [edx + ecx - 0x3d], ch
0x080d7512:	adc byte ptr [esi + 0xa], ah ; ret
0x080d760a:	add dword ptr [esi], -0x3d
0x080d7845:	add ch, byte ptr [eax + 0xa] ; ret
0x080d784c:	or edx, dword ptr [eax + 0xa] ; ret
0x080d7852:	dec eax ; or eax, dword ptr [ecx - 0x3d]
0x080d792d:	adc byte ptr [ebx + 0xa], al ; ret
0x080d7990:	adc byte ptr [ebx + 0xa], cl ; ret
0x080d799e:	inc esp ; or eax, dword ptr [edi - 0x3d]
0x080d7a1b:	adc byte ptr [ebx + 0xa], ah ; ret
0x080d7bc0:	add dl, byte ptr [edi + 0xa] ; ret
0x080d7e58:	add dword ptr [edx], 0x66 ; ret
0x080d7fbf:	add al, 0x4c ; or al, bl
0x080d7fd7:	adc byte ptr [edx + ecx - 0x3d], ah
0x080d8135:	add ah, byte ptr [eax + 0xa] ; ret
0x080d81ff:	add eax, dword ptr [ecx] ; or al, bl
0x080d8205:	inc esp ; or ecx, dword ptr [edi - 0x3d]
0x080d82f9:	add dh, byte ptr [edx + 0xa] ; ret
0x080d82ff:	inc ebp ; or eax, dword ptr [esi - 0x3d]
0x080d84f3:	add al, byte ptr [eax + 0xa] ; ret
0x080d84fd:	inc ebp ; or edi, dword ptr [esi - 0x3d]
0x080d8582:	add byte ptr [eax], al ; cmp al, 0xc3
0x080d8596:	add byte ptr [eax], al ; cmp bl, al
0x080d85aa:	add byte ptr [eax], al ; xor al, 0xc3
0x080d85be:	add byte ptr [eax], al ; xor bl, al
0x080d85d2:	add byte ptr [eax], al ; sub al, 0xc3
0x080d85e6:	add byte ptr [eax], al ; sub bl, al
0x080d85fa:	add byte ptr [eax], al ; and al, 0xc3
0x080d860e:	add byte ptr [eax], al ; and bl, al
0x080d8622:	add byte ptr [eax], al ; sbb al, 0xc3
0x080d8636:	add byte ptr [eax], al ; sbb bl, al
0x080d864a:	add byte ptr [eax], al ; adc al, 0xc3
0x080d865e:	add byte ptr [eax], al ; push eax ; ret
0x080d8672:	add byte ptr [eax], al ; jl 0xffffffc7
0x080d8686:	add byte ptr [eax], al ; mov bl, al
0x080d869b:	inc ecx ; or ebx, dword ptr [esi - 0x3d]
0x080d86aa:	add byte ptr [eax], al ; mov ah, 0xc3
0x080d875a:	push cs ; adc al, 0x48 ; ret
0x080d8979:	add ch, byte ptr [edx + 0xa] ; ret
0x080d8aae:	adc byte ptr [ecx + 0xa], dl ; ret
0x080d8c3d:	push cs ; or al, 0x43 ; ret
0x080d8d7f:	pop esi ; push cs ; add al, 0xc3
0x080d91f5:	push cs ; adc al, 0x44 ; ret
0x080d9234:	push cs ; or byte ptr [ebp - 0x3d], al
0x080d9265:	push cs ; or al, 0x45 ; ret
0x080d92bf:	push cs ; or byte ptr [eax - 0x3d], cl
0x080d94d6:	add eax, dword ptr [edx] ; pop ebp ; ret
0x080d9509:	add al, byte ptr [edx] ; ret
0x080d95e9:	adc byte ptr [ecx + 0xa], al ; ret
0x080d9b07:	add al, 0x6a ; or al, bl
0x080d9b16:	or ecx, dword ptr [edi + 0xa] ; ret
0x080d9ed4:	jae 0x10 ; or al, 0xc3
0x080da126:	pop ebx ; push cs ; add al, 0xc3
0x080da12f:	inc esi ; push cs ; add al, 0xc3
0x080da143:	inc ebx ; push cs ; add al, 0xc3
0x080da183:	inc ecx ; push cs ; add al, 0xc3
0x080da254:	ja 0x10 ; or al, 0xc3
0x080da2ec:	dec edi ; push cs ; add al, 0xc3
0x080da2f7:	movsb byte ptr es:[edi], byte ptr [esi] ; push cs ; add al, 0xc3
0x080da5d5:	dec esi ; push cs ; or bl, al
0x080da65f:	add al, 2 ; lodsb al, byte ptr [esi] ; ret
0x080da686:	dec ecx ; push cs ; add al, 0xc3
0x080da8a7:	add cl, byte ptr [esi] ; add al, 0xc3
0x080da8c5:	popfd ; push cs ; add al, 0xc3
0x080da8ce:	push 0xe ; add al, 0xc3
0x080da8f4:	inc edi ; push cs ; add al, 0xc3
0x080da8fe:	int 0xe ; add al, 0xc3
0x080da908:	mov byte ptr [esi], cl ; add al, 0xc3
0x080da91c:	lodsd eax, dword ptr [esi] ; push cs ; add al, 0xc3
0x080da926:	jge 0x10 ; add al, 0xc3
0x080da930:	jl 0x10 ; add al, 0xc3
0x080da93a:	mov cl, byte ptr [esi] ; add al, 0xc3
0x080da94e:	xchg dword ptr [esi], ecx ; add al, 0xc3
0x080da958:	mov word ptr [esi], cs ; add al, 0xc3
0x080da976:	xchg eax, edi ; push cs ; add al, 0xc3
0x080da980:	pushfd ; push cs ; add al, 0xc3
0x080da98a:	stosb byte ptr es:[edi], al ; push cs ; add al, 0xc3
0x080da99e:	mov ecx, dword ptr [esi] ; add al, 0xc3
0x080da9a7:	jae 0x10 ; add al, 0xc3
0x080dab42:	add dword ptr [esi], ecx ; or bl, al
0x080dafcf:	add al, 0x7e ; or al, bl
0x080db0ca:	push 0xe ; or al, 0xc3
0x080db0df:	stosd dword ptr es:[edi], eax ; push cs ; adc al, 0xc3
0x080db0ec:	inc ecx ; push cs ; or bl, al
0x080db0f6:	pop esi ; push cs ; or bl, al
0x080db14b:	push cs ; adc al, 0x4a ; ret
0x080db515:	add bl, byte ptr [ebx + 0xa] ; ret
0x080db51b:	inc esp ; or eax, dword ptr [ecx - 0x3d]
0x080db55e:	pop eax ; push cs ; add al, 0xc3
0x080db56a:	pop eax ; push cs ; or bl, al
0x080db8d2:	inc edx ; or eax, dword ptr [esi - 0x3d]
0x080dbb33:	adc byte ptr [esi + 0xa], dl ; ret
0x080dbb41:	inc ebx ; or eax, dword ptr [ebx - 0x3d]
0x080dbb70:	add bh, byte ptr [edi + 0xa] ; ret
0x080dbb80:	rol dword ptr [ecx], 1 ; or al, bl
0x080dbc75:	sub ecx, edi ; inc ebx
0x080dbc8d:	and dword ptr [ecx], eax ; or al, bl
0x080dbc9c:	add ah, dl ; or al, bl
0x080dbdf8:	pushal ; push cs ; or al, 0xc3
0x080dbf52:	or ecx, dword ptr [ebx + 0xa] ; ret
0x080dc29a:	inc esi ; or eax, dword ptr [ecx - 0x3d]
0x080dc30d:	push cs ; adc byte ptr [esi - 0x3d], al
0x080dc3d5:	push ebx ; add dword ptr [edx], ecx ; ret
0x080dc6a0:	add bh, dh ; or al, bl
0x080dc910:	add ah, byte ptr [ebp + 0xa] ; ret
0x080dc9ec:	add cl, byte ptr [edx + ecx - 0x3d]
0x080dca1d:	cmp byte ptr [edx], al ; or al, bl
0x080dca66:	or eax, dword ptr [edx] ; pop ebp ; ret
0x080dd8f1:	dec ebx ; or ecx, dword ptr [ecx - 0x3d]
0x080ddda4:	push cs ; adc byte ptr [ebp - 0x3d], al
0x080de02f:	arpl word ptr [esi], cx ; add al, 0xc3
0x080de058:	add bl, byte ptr [ecx + 0xa] ; ret
0x080de066:	or ebp, dword ptr [ecx + 0xa] ; ret
0x080de10c:	add dl, al ; or al, bl
0x080de11b:	add al, byte ptr [ebx + 0xa] ; ret
0x080de21e:	adc byte ptr [ebp + 0xa], al ; ret
0x080de251:	add bh, byte ptr [ebx + 0xa] ; ret
0x080de2f1:	add bh, byte ptr [esi + 0xa] ; ret
0x080de2f7:	inc ecx ; or ebx, dword ptr [ecx - 0x3d]
0x080de369:	add cl, byte ptr [ebp + 0xa] ; ret
0x080de36f:	dec edx ; or edx, dword ptr [edx - 0x3d]
0x080de4b5:	add dword ptr ss:[edx], ecx ; ret
0x080de6e4:	add cl, byte ptr [eax + 0xa] ; ret
0x080de6f3:	or eax, dword ptr [edx] ; pushal ; ret
0x080de7ea:	add eax, dword ptr [edx] ; dec ecx ; ret
0x080de8f9:	pop esi ; pop es ; or al, bl
0x080de928:	add ah, ch ; or al, bl
0x080dea2e:	add cl, byte ptr [edx + 0xa] ; ret
0x080dea5b:	or ebx, dword ptr [ecx + 0xa] ; ret
0x080deab6:	add ebp, dword ptr [esi + 0xa] ; ret
0x080deac0:	inc edi ; or ecx, dword ptr [edx - 0x3d]
0x080deaed:	or dword ptr [esi], eax ; or al, bl
0x080deafd:	lahf ; add dword ptr [edx], ecx ; ret
0x080deb0b:	or eax, dword ptr [esi + 0xa] ; ret
0x080defef:	or edx, dword ptr [edx + 0xa] ; ret
0x080df11f:	add al, 2 ; inc edi ; ret
0x080df204:	add ah, al ; or al, bl
0x080df212:	or eax, dword ptr [edx] ; inc edx ; ret
0x080df271:	bound eax, qword ptr [ecx] ; or al, bl
0x080df27f:	or edx, dword ptr [ecx + 0xa] ; ret
0x080df28e:	add ch, byte ptr [ebp + 0xa] ; ret
0x080df397:	add al, 2 ; dec ecx ; ret
0x080df447:	add al, 2 ; push edx ; ret
0x080df585:	or edi, dword ptr [edi + 0xa] ; ret
0x080df614:	add bh, byte ptr [edx + ecx - 0x3d]
0x080df625:	adc byte ptr [eax + 0xa], ch ; ret
0x080df668:	add dh, byte ptr [edi + 0xa] ; ret
0x080df920:	add dword ptr [edx], 0x68 ; ret
0x080dfd73:	inc ebp ; or ecx, dword ptr [ecx - 0x3d]
0x080dfdef:	add cl, byte ptr [ecx + 0xa] ; ret
0x080dfdfa:	or eax, dword ptr [edx] ; push esi ; ret
0x080dfebd:	push cs ; adc byte ptr [ebx - 0x3d], al
0x080e0465:	jg 0x10 ; or al, 0xc3
0x080e0476:	inc edx ; push cs ; or al, 0xc3
0x080e0490:	push esi ; push cs ; or al, 0xc3
0x080e04a1:	jne 0x10 ; or al, 0xc3
0x080e04b2:	jno 0x10 ; or al, 0xc3
0x080e04d4:	dec ebp ; push cs ; or al, 0xc3
0x080e04e5:	dec edx ; push cs ; or al, 0xc3
0x080e053a:	dec edi ; push cs ; or al, 0xc3
0x080e072b:	test byte ptr [esi], cl ; or al, 0xc3
0x080e0744:	jb 0x10 ; or al, 0xc3
0x080e08eb:	add bh, byte ptr [edx + 0xa] ; ret
0x080e08f6:	or ecx, dword ptr [eax + 0xa] ; ret
0x080e0996:	add eax, dword ptr [edx] ; pop esp ; ret
0x080e0c09:	or eax, dword ptr [ebx + 0xa] ; ret
0x080e0c16:	inc ecx ; or eax, dword ptr [esi - 0x3d]
0x080e0d8c:	add dword ptr [edx], 0x50 ; ret
0x080e0da8:	add dword ptr [edx], 0x65 ; ret
0x080e10cb:	add al, 0x49 ; or al, bl
0x080e1158:	add ch, byte ptr [ecx + 0xa] ; ret
0x080e15a2:	inc esi ; or eax, dword ptr [edx] ; ret
0x080e1640:	adc byte ptr [ebp + 0xa], ch ; ret
0x080e1966:	add ebp, dword ptr [edx + 0xa] ; ret
0x080e1971:	or eax, dword ptr [ecx + 0xa] ; ret
0x080e197b:	dec esi ; or eax, dword ptr [ebx - 0x3d]
0x080e19cb:	add eax, dword ptr [edx] ; push ecx ; ret
0x080e19fa:	add byte ptr [eax], al ; inc eax ; ret
0x080e1a86:	add byte ptr [eax], al ; int3 ; ret
0x080e1b0a:	add eax, dword ptr [edx] ; inc ecx ; ret
0x080e1bc1:	add cl, byte ptr [esi + 0xa] ; ret
0x080e1bd4:	or ecx, dword ptr [ecx + 0xa] ; ret
0x080e1be7:	or esi, dword ptr [edi + 0xa] ; ret
0x080e1c2c:	or al, 4 ; add al, 0xc3
0x080e1d5c:	add ah, dh ; or al, bl
0x080e1d8d:	jecxz 3 ; or al, bl
0x080e1d9c:	add dl, byte ptr [eax + 0xa] ; ret
0x080e1dcc:	add bh, bl ; or al, bl
0x080e2639:	cmp al, 1 ; or al, bl
0x080e2666:	add dword ptr [esi + esi*2], -0x3d
0x080e28c5:	and byte ptr [edx + ecx], al ; ret
0x080e28f5:	das ; add ecx, dword ptr [edx] ; ret
0x080e2905:	loope 4 ; or al, bl
0x080e2ae9:	adc al, 1 ; or al, bl
0x080e2b53:	push cs ; adc byte ptr [eax - 0x3d], cl
0x080e2c47:	add al, byte ptr [esi + 0xa] ; ret
0x080e2d18:	add dword ptr [edx], 0x6b ; ret
0x080e2e5d:	dec edx ; push cs ; add al, 0xc3
0x080e2efb:	add al, 0x68 ; or al, bl
0x080e2f09:	inc ebp ; or ebp, dword ptr [edx - 0x3d]
0x080e31c4:	add cl, dh ; or al, bl
0x080e326d:	or dword ptr [ebx], eax ; or al, bl
0x080e34ad:	or dword ptr [ecx], eax ; or al, bl
0x080e34bd:	sbb eax, dword ptr [edx] ; or al, bl
0x080e3a4e:	add esi, dword ptr [ebx + 0xa] ; ret
0x080e3a58:	dec edx ; or eax, dword ptr [ebx - 0x3d]
0x080e3b52:	inc ecx ; push cs ; or al, 0xc3
0x080e3b60:	inc ebp ; push cs ; or al, 0xc3
0x080e3c19:	push edi ; push cs ; adc bl, al
0x080e4065:	je 0x10 ; adc bl, al
0x080e40b0:	or ecx, dword ptr [edx + 0xa] ; ret
0x080e40c3:	or esi, dword ptr [edx + ecx - 0x3d]
0x080e4269:	and byte ptr [edx + 0xa], ah ; ret
0x080e42ac:	add bh, byte ptr [eax + 0xa] ; ret
0x080e42ba:	or esp, dword ptr [edx + 0xa] ; ret
0x080e4982:	add ebx, dword ptr [ecx + 0xa] ; ret
0x080e498c:	inc edx ; or eax, dword ptr [ecx - 0x3d]
0x080e49cb:	add al, 2 ; pop edx ; ret
0x080e4a29:	pop ss ; or cl, byte ptr [edx] ; ret
0x080e4c14:	add edi, dword ptr [eax + 1] ; ret
0x080e4c51:	fadd qword ptr [ecx] ; or al, bl
0x080e4c80:	add bh, ch ; or al, bl
0x080e4cc1:	aas ; add cl, byte ptr [edx] ; ret
0x080e4cd1:	or byte ptr [ecx], al ; or al, bl
0x080e4cdf:	or ebx, dword ptr [edi + 0xa] ; ret
0x080e4d51:	lea eax, dword ptr [edx] ; or al, bl
0x080e4df9:	pop edx ; push cs ; adc bl, al
0x080e50d4:	adc byte ptr [eax + 0xa], bl ; ret
0x080e69a9:	shr byte ptr [edx + eax - 0x3d], 1
0x080e6d6b:	inc edi ; or eax, dword ptr [ecx - 0x3d]
0x080e7254:	add dl, byte ptr [ebx + 0xa] ; ret
0x080e7262:	inc ebx ; or eax, dword ptr [ecx - 0x3d]
0x080e76d0:	add ah, byte ptr [esi + 0xa] ; ret
0x080e76dd:	inc ecx ; or ecx, dword ptr [ecx - 0x3d]
0x080e7c67:	inc ebx ; or ecx, dword ptr [ebp - 0x3d]
0x080e7caf:	inc ebx ; or edx, dword ptr [eax - 0x3d]
0x080e7d4b:	inc esp ; or edx, dword ptr [eax - 0x3d]
0x0804841b:	sub edx, ebx ; add ebx, ecx
0x08049a33:	inc edx ; or al, 0x89 ; retf
0x0804a2d9:	fisttp dword ptr [edi] ; test cl, bl
0x0804a702:	add byte ptr [eax], al ; mov ebx, ecx
0x0804b07d:	inc edi ; cld ; bswap ebx
0x0804b3d8:	dec dword ptr [edi] ; test cl, bl
0x0804b476:	je 4 ; bswap ebx
0x0804bc0a:	js 0x11 ; test cl, bl
0x0804d141:	test ecx, ecx ; je 0xffffffcf
0x0804d6d4:	push esi ; push ebx ; mov ebx, ecx
0x08050777:	add byte ptr [eax], al ; sub ebx, ecx
0x08051d35:	mov ebp, edi ; sub ebx, ecx
0x08051d56:	pop esi ; or byte ptr [ecx], ch ; retf
0x08051d98:	les edx, ptr [eax] ; sub ebx, ecx
0x08051dc1:	les edx, ptr [eax] ; add ebx, ecx
0x08052794:	bound ecx, qword ptr [edi] ; test cl, bl
0x08052ed3:	mov edx, dword ptr [edx] ; cmp ebx, ecx
0x080531c1:	je 0x20 ; cmp ebx, ecx
0x08053a70:	jae 0x2f ; sub ebx, ecx
0x080550dc:	jmp 5 ; xor ebx, ecx
0x0805512b:	or al, 0x18 ; sub ebx, ecx
0x080555c0:	add ebx, edx ; and ebx, ecx
0x08055fa9:	cmp ebx, eax ; jne 0xffffffcf
0x08057332:	and al, 8 ; mov ebx, ecx
0x08057358:	and al, 0x3c ; mov ebx, ecx
0x08057d75:	ror byte ptr [edi], cl ; test ecx, ebx
0x08058bf4:	add al, ch ; push esi ; retf
0x08059326:	or al, 0xe9 ; xchg eax, esp ; retf
0x0805b011:	jae 0x51 ; mov ebx, ecx
0x0805ca35:	movq qword ptr [edx - 0x35], mm0
0x0805ccd8:	and al, 0x8d ; xor bl, cl
0x0805d0af:	movdqa xmm1, xmm3
0x080615c0:	pcmpeqb xmm1, xmm3
0x080631bf:	add byte ptr [ebx - 0x77], dl ; retf
0x0806321f:	add edx, ecx ; sub ebx, ecx
0x080634e1:	movq mm1, qword ptr [eax - 0x35]
0x080634e6:	movq mm2, qword ptr [edx - 0x35]
0x08063f70:	add dword ptr [edi], ecx ; sub bl, cl
0x08063fa0:	pop ds ; movaps xmm1, xmm3
0x080640b0:	add cl, byte ptr [edi] ; sub bl, cl
0x080640e0:	push ds ; movaps xmm1, xmm3
0x080641f0:	add ecx, dword ptr [edi] ; sub bl, cl
0x08064330:	add al, 0xf ; sub bl, cl
0x08064360:	sbb al, 0xf ; sub bl, cl
0x08064490:	sbb ecx, dword ptr [edi] ; sub bl, cl
0x08064590:	push es ; movaps xmm1, xmm3
0x080645c0:	sbb cl, byte ptr [edi] ; sub bl, cl
0x080646c0:	pop es ; movaps xmm1, xmm3
0x080646f0:	sbb dword ptr [edi], ecx ; sub bl, cl
0x080647f0:	or byte ptr [edi], cl ; sub bl, cl
0x08064820:	sbb byte ptr [edi], cl ; sub bl, cl
0x08064920:	or dword ptr [edi], ecx ; sub bl, cl
0x08064950:	pop ss ; movaps xmm1, xmm3
0x08064a50:	or cl, byte ptr [edi] ; sub bl, cl
0x08064a80:	push ss ; movaps xmm1, xmm3
0x08064b80:	or ecx, dword ptr [edi] ; sub bl, cl
0x08064cb0:	or al, 0xf ; sub bl, cl
0x08064ce0:	adc al, 0xf ; sub bl, cl
0x08064e10:	adc ecx, dword ptr [edi] ; sub bl, cl
0x08064f10:	push cs ; movaps xmm1, xmm3
0x08064f40:	adc cl, byte ptr [edi] ; sub bl, cl
0x08065070:	adc dword ptr [edi], ecx ; sub bl, cl
0x08066e03:	xlatb ; shr byte ptr [ecx], 0xcb
0x08067b1e:	and byte ptr [edi], cl ; test ecx, ebx
0x0806b5ae:	add byte ptr [edi], cl ; test cl, bl
0x0806b988:	loope 0xfffffff2 ; mov ebx, ecx
0x0806b990:	mov ebx, esi ; sub ebx, ecx
0x0806b9e1:	jmp 3 ; jne 0xffffffcf
0x0806d2d7:	add byte ptr [eax], al ; je 0xffffffcf
0x0806d53e:	add byte ptr [esi - 0x18], dl ; retf
0x0806dd6e:	mov ecx, edi ; cmp bl, cl
0x0806ed66:	jp 6 ; cmp ebx, ecx
0x08070352:	mov ebx, dword ptr [eax] ; add ebx, ecx
0x08070390:	test esi, esi ; jne 0xffffffcf
0x08070396:	jne 0xffffff8a ; jmp 0xffffffcf
0x08070549:	or al, ch ; add ebx, ecx
0x08070a72:	inc ebp ; aam 0x89 ; retf
0x08070a8e:	test ecx, ecx ; mov ebx, ecx
0x08070ae1:	add eax, dword ptr [eax] ; mov ebx, ecx
0x08070ec0:	in al, dx ; or al, 0xc1 ; retf
0x08071dc5:	jae 3 ; mov ebx, ecx
0x08072ea9:	mov byte ptr [ecx + edi], 0xcb
0x08072ece:	ret 0x3904 ; retf
0x080739e4:	mov dword ptr [ebx], edx ; mov ebx, ecx
0x08074bce:	loope 9 ; sub ebx, ecx
0x0807573a:	inc eax ; or cl, ch ; retf
0x0807588b:	mov eax, esi ; mov ebx, ecx
0x08075953:	or esi, ebp ; cmp ebx, ecx
0x08076963:	mov dword ptr [ebx], eax ; mov ebx, ecx
0x080779e6:	mov esi, edx ; mov ebx, ecx
0x08078489:	cmp byte ptr [eax + 1], ch ; retf
0x08078a13:	adc al, 0x3d ; add ebx, ecx
0x08078b20:	pushfd ; sbb byte ptr [ecx], al ; retf
0x08078cef:	mov eax, edx ; jmp 0xffffffcf
0x08078d16:	mov esi, eax ; mov ebx, ecx
0x08078d33:	or byte ptr [eax + 1], ch ; retf
0x0807930e:	inc esp ; fidivr word ptr [ecx] ; retf
0x0807998f:	mov eax, ebx ; mov ebx, ecx
0x08079c0f:	sub esi, edx ; mov ebx, ecx
0x0807aa12:	sub edx, edi ; cmp ebx, ecx
0x0807c944:	or al, ch ; cmpsb byte ptr [esi], byte ptr es:[edi] ; retf
0x0807d29c:	add byte ptr [eax], al ; add ebx, ecx
0x0807f7d9:	adc byte ptr [edi], cl ; test cl, bl
0x08081aed:	ret 0x3901 ; retf
0x08081b38:	je 9 ; mov ebx, ecx
0x08081bda:	sub esi, ebx ; mov ebx, ecx
0x08081e74:	add al, 0x8e ; add ebx, ecx
0x08082417:	dec dword ptr [edi] ; inc esp ; retf
0x08083094:	mov eax, ebx ; cmp ebx, ecx
0x080840e2:	aaa ; movsx ecx, bl
0x08085ffd:	dec eax ; adc al, 0x39 ; retf
0x08086564:	test esi, esi ; mov ebx, ecx
0x080867cd:	dec dword ptr [edi] ; test ecx, ebx
0x08086fa5:	or byte ptr [edi], cl ; mov cs, ebx
0x08087dc9:	ret 0x870f ; retf
0x0808b5ed:	pop ebp ; adc al, 0x29 ; retf
0x0808b834:	inc eax ; and bl, ch ; retf
0x0808ba7b:	pop ebp ; add al, 0x29 ; retf
0x0808ecb8:	add byte ptr [edi], cl ; inc edi ; retf
0x0808fa78:	inc ebx ; sub byte ptr [ebx], al ; retf
0x0808fb48:	or byte ptr [eax + 0x30], ch ; retf
0x0808fb62:	or al, 0x68 ; pop es ; retf
0x0808fc9c:	add al, 0x68 ; adc ecx, ebx
0x0808fe8b:	adc ebp, dword ptr [eax - 0x4c] ; retf
0x08090442:	ljmp ptr [eax - 0x5c] ; retf
0x0809044c:	add byte ptr [eax + 0x18], ch ; retf
0x08090451:	or byte ptr [eax + 0x21], ch ; retf
0x08090d29:	les ebp, ptr [eax - 0x70] ; retf
0x08090d42:	ljmp ptr [eax - 0x70] ; retf
0x08090d51:	or byte ptr [eax + 0x50], ch ; retf
0x08090d6a:	or byte ptr [eax + 0x3f], ch ; retf
0x08091255:	xor eax, eax ; jmp 0xffffffcf
0x08091c06:	add byte ptr [eax - 0x1c], ch ; retf
0x08091c0b:	or byte ptr [eax - 0x12], ch ; retf
0x08093b50:	and al, 8 ; xor ebx, ecx
0x08093d70:	mov edi, ebx ; mov ebx, ecx
0x080942e1:	add byte ptr [ecx], al ; jne 0xffffffcf
0x080952d0:	and al, 0x30 ; mov ebx, ecx
0x080957b6:	loope 7 ; add ebx, ecx
0x08095b17:	xor ecx, edx ; or ebx, ecx
0x08097401:	test edi, edi ; je 0xffffffcf
0x080983f8:	mov ebx, eax ; sub ebx, ecx
0x080984e9:	push ebp ; loopne 0x78 ; retf
0x08098766:	add dword ptr [eax + 0x32], ebp ; retf
0x080992ff:	mov ebx, edx ; cmp ebx, ecx
0x080997de:	or byte ptr [eax - 0x18], dl ; retf
0x08099b21:	and al, 0xc ; je 0xffffffcf
0x0809af6b:	or byte ptr [edi], cl ; test ecx, ebx
0x0809bc71:	je 0x3f ; jns 0xffffffcf
0x0809bc78:	cmp esi, ebx ; jge 0xffffffcf
0x0809cc76:	jne 0xffffff8a ; mov ebx, ecx
0x0809d0e9:	add eax, ebx ; mov ebx, ecx
0x0809d171:	mov edx, eax ; add ebx, ecx
0x0809ef07:	retf ; add dword ptr [ecx], eax ; retf
0x0809ef0d:	je 0x41 ; mov ebx, ecx
0x0809ef68:	mov esi, ebx ; mov ebx, ecx
0x0809f13a:	mov ebp, ecx ; mov ebx, ecx
0x0809faf8:	mov al, 0xf ; test cl, bl
0x0809fbdc:	xor edi, edi ; mov ebx, ecx
0x080a0336:	fisttp dword ptr [edi] ; test ecx, ebx
0x080a0c43:	loopne 0xfffffff2 ; mov ebx, ecx
0x080a1118:	pop ebp ; or al, 0x89 ; retf
0x080a1789:	test edx, edx ; jne 0xffffffcf
0x080a2244:	cmp ebx, eax ; je 0xffffffcf
0x080a3dff:	mov ebx, edi ; cmp bl, cl
0x080a5b17:	add cl, ch ; fcmovne st(0), st(3)
0x080a5b3f:	add cl, ch ; mov bl, 0xcb
0x080a6415:	add dword ptr [edi], ecx ; inc esp ; retf
0x080a651b:	cmp al, 0x18 ; mov ebx, ecx
0x080a8bea:	add ch, al ; nop ; retf
0x080a8d7a:	mov edi, edx ; mov ebx, ecx
0x080a8fd3:	not byte ptr [ebx - 0x77] ; retf
0x080a9459:	add byte ptr [edi], cl ; scasd eax, dword ptr es:[edi] ; retf
0x080aa3a9:	stc ; or dword ptr [ebp - 0x35], esi
0x080abbf7:	and al, 0x20 ; mov ebx, ecx
0x080abe44:	and al, 0x7c ; mov ebx, ecx
0x080ac927:	or al, ch ; ret ; retf
0x080ac961:	or al, ch ; mov ebx, ecx
0x080aca6e:	ror byte ptr [edi], 0x84 ; retf
0x080b2550:	mov eax, dword ptr [esi] ; mov ebx, ecx
0x080b2590:	str word ptr [ecx] ; retf
0x080b5b06:	sub eax, esi ; sbb ebx, ecx
0x080b7bd7:	je 0x11 ; mov ebx, ecx
0x080b8902:	xor esi, edi ; xor ebx, ecx
0x080b91ab:	and al, 0xf ; test ecx, ebx
0x080ba439:	cli ; std ; ja 0xffffffcf
0x080ba7b0:	push cs ; or byte ptr [ecx], al ; retf
0x080bd8e2:	push es ; or byte ptr [ecx], cl ; retf
0x080bd8e6:	push es ; or byte ptr [ebx], dl ; retf
0x080bd8ee:	push es ; or byte ptr [edi], ah ; retf
0x080bd8f2:	push es ; or byte ptr [ecx], dh ; retf
0x080bd8f6:	push es ; or byte ptr [ebx], bh ; retf
0x080bd8fa:	push es ; or byte ptr [ebp - 0x35], al
0x080bd8fe:	push es ; or byte ptr [edi - 0x35], cl
0x080bd902:	push es ; or byte ptr [ecx - 0x35], bl
0x080bd906:	push es ; or byte ptr [ebx - 0x35], ah
0x080bd90a:	push es ; or byte ptr [ebp - 0x35], ch
0x080bd90e:	push es ; or byte ptr [edi - 0x35], dh
0x080bd932:	push es ; or cl, dl ; retf
0x080bd936:	push es ; or bl, bl ; retf
0x080bd93a:	push es ; or ch, ah ; retf
0x080bd93e:	push es ; or bh, ch ; retf
0x080bd942:	push es ; or cl, bh ; retf
0x080bd995:	int3 ; push es ; or bl, cl
0x080bda16:	push es ; or bh, al ; retf
0x080bdb65:	int 6 ; or bl, cl
0x080bfa56:	or ecx, dword ptr [eax] ; retf
0x080bfa5a:	or al, 8 ; dec esp ; retf
0x080c02e9:	add byte ptr [eax], al ; add bl, cl
0x080c62a9:	add al, byte ptr [eax] ; add bl, cl
0x080c66c1:	pop es ; add byte ptr [eax], al ; retf
0x080c6a49:	or al, byte ptr [eax] ; add bl, cl
0x080c7249:	adc byte ptr [eax], al ; add bl, cl
0x080cb53e:	or al, 8 ; add ebx, ecx
0x080cba16:	pop es ; or al, al ; retf
0x080cbfa1:	jle 0xa ; or bl, cl
0x080cbfcd:	jp 0xa ; or bl, cl
0x080cc009:	or dword ptr [eax], 8 ; retf
0x080cc0c9:	mov dword ptr [eax], ecx ; or bl, cl
0x080cc0e9:	xchg byte ptr [eax], cl ; or bl, cl
0x080cf948:	enter -0x3537, -0x35
0x080d046d:	push eax ; xor byte ptr [ecx], ah ; retf
0x080d04db:	lodsb al, byte ptr [esi] ; xchg eax, edx ; pop ebx ; retf
0x080d0708:	jo 0x68 ; salc ; retf
0x080d0fad:	ret 0x1b49 ; retf
0x080d1300:	test al, 0xf2 ; dec ebp ; retf
0x080d1db4:	outsb dx, byte ptr [esi] ; sbb edi, ebp ; retf
0x080d1e7d:	js 0x7d ; pop edx ; retf
0x080d1ea2:	lodsb al, byte ptr [esi] ; loop 0xffffffca ; retf
0x080d1fae:	jl 0x5c ; leave ; retf
0x080d2023:	pop esp ; sbb ebp, ebx ; retf
0x080d21ec:	js 0xfffffff4 ; pushal ; retf
0x080d23e6:	dec eax ; scasb al, byte ptr es:[edi] ; adc ebx, ecx
0x080d28d6:	sub dword ptr [esi], 0x76 ; retf
0x080d291d:	in al, 0x4c ; pop eax ; retf
0x080d2ee4:	and byte ptr [ebx + 0x3d], bh ; retf
0x080d2f92:	jnp 0xffffffd2 ; jnp 0xffffffcf
0x080d4c16:	and al, 9 ; or bl, cl
0x080d51fa:	cld ; inc dword ptr [eax - 0x35]
0x080d8b96:	add byte ptr [eax], al ; or bl, cl
0x080d8c22:	add byte ptr [eax], al ; sub al, 0xcb
0x080d8c5a:	add byte ptr [eax], al ; in al, -0x35
0x080da325:	xchg dword ptr [edx], eax ; add cl, bl
0x080dca05:	pop edx ; stc ; dec ebx
0x080dd485:	dec edx ; or eax, dword ptr [ebx] ; retf
0x080ddb0a:	add byte ptr [eax], al ; hlt ; retf
0x080ddb36:	add byte ptr [eax], al ; clc ; retf
0x080de5ca:	add byte ptr [eax], al ; add al, 0xcb
0x080de5de:	add byte ptr [eax], al ; adc bl, cl
0x080de606:	add byte ptr [eax], al ; sbb bl, cl
0x080de62e:	add byte ptr [eax], al ; and bl, cl
0x080dece2:	rol byte ptr [edx], 2 ; retf
0x080df032:	push cs ; sub byte ptr [edx], al ; retf
0x080e03c2:	add byte ptr [eax], al ; jl 0xffffffcf
0x080e0416:	add byte ptr [eax], al ; fmul st(3)
0x080e4d36:	add byte ptr [eax], al ; mov bl, cl
0x080b75d4:	cmp ax, 0x50f
0x080bb82d:	or byte ptr [eax], dh ; syscall
0x080d2663:	daa ; push esp ; syscall
0x0806c771:	add byte ptr [eax], al ; int 0x80
0x0806f10c:	nop ; nop ; int 0x80
0x080b69c4:	js 8 ; int 0x80
0x080b6a90:	js 7 ; int 0x80
0x080b75ce:	cmp ax, 0x80cd
0x080d247f:	aas ; imul ecx, ebp, -0x80
0x080481ae:	add eax, 0xc3810000
0x080481c6:	add esp, 8 ; pop ebx ; ret
0x080483c7:	pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08048430:	mov eax, edx ; pop ebx ; pop esi ; ret
0x0804847d:	rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; ret
0x0804875f:	nop ; mov ebx, dword ptr [esp] ; ret
0x08048796:	les edx, ptr [eax] ; leave ; ret
0x0804880f:	or byte ptr [ecx], al ; leave ; ret
0x0804889b:	pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x080488b3:	les edx, ptr [eax] ; nop ; leave ; ret
0x08048c13:	je 0x6a ; sete bl
0x08048c1e:	sete al ; test al, bl
0x080490b6:	imul eax, edi ; mov ebx, eax
0x08049402:	cmovne esi, ebx ; mov ebx, eax
0x08049489:	cmp eax, 0xff ; mov ebx, eax
0x08049541:	push edi ; push esi ; push ebx ; mov ebx, eax
0x080495f7:	enter 0x5f5e, 0x5d ; ret
0x0804961d:	cmp edi, 0xa ; mov ebx, eax
0x08049761:	les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x0804985b:	cmovb eax, ecx ; mov ebx, eax
0x08049eb4:	mov dword ptr [ebp - 0x44], eax ; mov ebx, eax
0x0804a39a:	add esp, 0x10 ; mov ebx, eax
0x0804a618:	std ; add al, byte ptr [eax] ; mov ebx, eax
0x0804a7cb:	xor byte ptr [edx + ebp*8 - 0x77], 0xc3
0x0804a7d9:	add byte ptr [eax], al ; cmove eax, ebx
0x0804a904:	add esp, 0xc ; mov ebx, eax
0x0804a933:	iretd ; push esi ; push ebx ; mov ebx, eax
0x0804a9d7:	sal byte ptr [ebp + 0x26], 0x83 ; ret
0x0804aae6:	push esp ; and al, 0xc ; mov ebx, eax
0x0804b465:	or bh, bh ; setne bl
0x0804b5a8:	mov ebx, dword ptr [edi + ecx*4] ; add ebx, eax
0x0804c6b6:	jmp 2 ; add byte ptr [ecx], ch ; ret
0x0804c839:	jmp 0xc3290005
0x0804cce8:	cmp dl, 0x2e ; mov ebx, eax
0x0804ce42:	or esi, 2 ; mov ebx, eax
0x0804ce62:	je 0x26 ; push ebx ; mov ebx, eax
0x0804ce85:	les ebx, ptr [eax] ; pop ebx ; ret
0x0804ceb3:	aad 0x56 ; push ebx ; mov ebx, eax
0x0804d061:	inc esp ; add bh, dh ; cmp ebx, eax
0x0804d166:	inc esp ; and al, 0x30 ; cmp ebx, eax
0x0804d7d4:	sal byte ptr [ebp - 0x20], cl ; ret
0x0804d811:	or al, 0x89 ; inc edx ; sbb bl, al
0x0804d945:	mov dl, 0xe ; or al, ch ; ret
0x0804de55:	cld ; add edx, edi ; cmp ebx, eax
0x0804dedc:	div dword ptr [ebp + 0x10] ; mov ebx, eax
0x0804ef23:	rcr byte ptr [ebx + 0x5e], 1 ; pop ebp ; ret
0x0804efe1:	mov ch, 0xb ; or bl, dh ; ret
0x0804f09f:	add byte ptr [ecx], dh ; fucomi st(3) ; ret
0x0804f95a:	call dword ptr [eax + 0x40] ; mov ebx, eax
0x0804f970:	mov ecx, dword ptr [ebp + 0x58] ; mov ebx, eax
0x0804f9f3:	mov edx, dword ptr [ebp + 0x50] ; mov ebx, eax
0x0804fa78:	mov edi, dword ptr [ebp + 0x20] ; mov ebx, eax
0x0804fafe:	and al, 0x14 ; cdq ; mov ebx, eax
0x0804fb78:	push esp ; and al, 4 ; mov ebx, eax
0x0804fbad:	sti ; add cl, byte ptr [edi] ; scasd eax, dword ptr es:[edi] ; ret
0x0805017b:	les edx, ptr [ebx + ebx*2] ; pop esi ; ret
0x08050676:	rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x080507c0:	clc ; sub eax, ebx ; mov ebx, eax
0x0805080d:	add esp, 0x10 ; sub ebx, eax
0x080508eb:	sub esp, 0xc ; mov ebx, eax
0x08050b7d:	mov ecx, dword ptr [ebp + 8] ; mov ebx, eax
0x08050d0f:	add byte ptr [ecx], dh ; shr bl, 0xc3
0x08050d77:	push dword ptr [edi + 6] ; pop ebx ; ret
0x08050e42:	mov edi, edx ; push ebx ; mov ebx, eax
0x08050ea4:	adc byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x080513b7:	and edi, dword ptr [esp] ; mov ebx, eax
0x0805146e:	clc ; pop esi ; pop edi ; pop ebp ; ret
0x0805166d:	lea esi, dword ptr [esi] ; cmp ebx, eax
0x08051edb:	sub eax, ebp ; pop edi ; pop ebp ; ret
0x08052195:	push dword ptr [edi + 0x20] ; pop ebx ; ret
0x08052538:	fcomp dword ptr [ebx + 0x5e] ; pop edi ; ret
0x08052547:	xor eax, eax ; pop esi ; pop edi ; ret
0x0805256a:	call 0xc33a0004
0x08052679:	lcall ptr [ebx + 0x5e] ; pop edi ; ret
0x08052887:	sti ; add cl, byte ptr [edi] ; xchg eax, esi ; ret
0x080530d7:	mov edx, 0xc3f30001
0x0805331d:	jmp dword ptr [esi - 0x70] ; ret
0x08053523:	sal byte ptr [ebp - 0xe], cl ; ret
0x08053551:	or al, 0x89 ; push eax ; add al, 0xc3
0x08053583:	mov dword ptr [eax + 4], edx ; pop ebx ; ret
0x080538bd:	or bl, byte ptr [ebx + 0x5e] ; pop edi ; ret
0x08053907:	add ebx, dword ptr [ebx + 0x5e] ; pop edi ; ret
0x08053a8f:	add eax, 1 ; cmp ebx, eax
0x08053b5d:	add byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x08053bbe:	and al, 0x83 ; les ebp, ptr [ebx + eax*8]
0x08053c0f:	add byte ptr [eax], al ; pop ebx ; pop esi ; ret
0x08053ce4:	add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x08053d80:	add byte ptr [eax], al ; add bl, dh ; ret
0x08053e90:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x08053eae:	add byte ptr [eax], al ; xor eax, eax ; ret
0x0805402f:	or byte ptr [ecx], al ; fcomp dword ptr [ebx - 0x3d]
0x0805403a:	sub eax, 1 ; pop ebx ; ret
0x08054553:	add al, byte ptr [eax] ; add byte ptr [ebp - 0x3d], dh
0x08054671:	sal byte ptr [ebp - 0xc], 0xf3 ; ret
0x08054679:	mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; ret
0x0805468a:	or byte ptr [ebx], ch ; inc edx ; or bl, al
0x080546aa:	inc ecx ; or byte ptr [ecx], ch ; rol bl, 1
0x080546ff:	xor eax, eax ; pop ebx ; pop esi ; ret
0x080547a8:	pop edi ; dec dword ptr [edi] ; mov dh, 0xc3
0x08054943:	add al, 0x8b ; inc eax ; xor al, 0xc3
0x08054950:	mov eax, dword ptr [esp + 4] ; ret
0x0805499e:	mov ah, 0xe ; or byte ptr [ecx], al ; ret
0x080549df:	mov eax, dword ptr [0xc3f30001]
0x08054a3b:	movzx eax, byte ptr [edx] ; pop ebx ; ret
0x08054e8a:	pop esi ; pop edi ; cdq ; pop ebp ; ret
0x0805505d:	or byte ptr [ebx], ch ; inc edx ; or al, 0xc3
0x08055229:	call 0xc35d5f63
0x08055603:	or byte ptr [ecx], ch ; sti ; add ebx, eax
0x0805560a:	movsd dword ptr es:[edi], dword ptr [esi] ; push cs ; or byte ptr [ecx], bh ; ret
0x080556af:	lea ebx, dword ptr [esi - 0x11] ; cmp ebx, eax
0x080556b9:	stosb byte ptr es:[edi], al ; push cs ; or byte ptr [ecx], ch ; ret
0x08055758:	mov ch, 0xe ; or bh, al ; ret
0x0805583f:	nop ; push esi ; push ebx ; mov ebx, eax
0x0805585e:	add byte ptr [eax], al ; add dh, dh ; ret
0x08055870:	les esp, ptr [ebx + ebx*2] ; pop esi ; ret
0x0805599f:	lea ecx, dword ptr [esi + eax] ; add ebx, eax
0x08055b04:	mov eax, dword ptr [ebp + 4] ; mov ebx, eax
0x08055b1c:	add byte ptr [ecx], ch ; lds eax, ptr [ecx] ; ret
0x08055d34:	and eax, 0xfffffff8 ; mov ebx, eax
0x08055dc0:	add dword ptr [eax + 4], ebx ; mov ebx, eax
0x08055e41:	pop esi ; mov edx, dword ptr [eax] ; mov ebx, eax
0x08055ee0:	add al, 0 ; add dh, dh ; ret
0x08055fa6:	add al, 0 ; add byte ptr [ecx], bh ; ret
0x08055fe7:	lea edi, dword ptr [ebx + esi] ; cmp ebx, eax
0x0805603f:	jo 0xffffff8d ; add ebp, dword ptr [ecx] ; ret
0x080561a0:	and eax, 7 ; sub ebx, eax
0x08056986:	pushfd ; add dword ptr [eax], eax ; mov ebx, eax
0x08056acb:	lea edx, dword ptr [ecx + edi] ; mov ebx, eax
0x08056b0d:	sub eax, 1 ; test eax, ebx
0x08056b50:	add esi, edi ; fsub dword ptr [ecx] ; ret
0x080570c3:	inc esp ; and al, 0x14 ; mov ebx, eax
0x08057454:	mov eax, dword ptr [ebx + 8] ; cmp ebx, eax
0x08057514:	mov dword ptr [esi + 0x10], eax ; mov ebx, eax
0x08057c75:	mov esp, 0xc3e8080b
0x08057c9f:	push ebx ; mov edi, ecx ; mov ebx, eax
0x08058033:	add bl, ch ; out 0x89, al ; ret
0x080587e2:	mov ah, 0xe ; or byte ptr [ecx], bh ; ret
0x080588ab:	add al, byte ptr [eax] ; add byte ptr [ecx], bh ; ret
0x08058c4e:	adc byte ptr [edi + 5], bh ; or bl, al
0x08058cc8:	xlatb ; pop ebx ; pop esi ; ret
0x08058d21:	pop ebp ; add dword ptr [eax], eax ; ret
0x080592e0:	sar bh, 0xff ; mov ebx, eax
0x08059979:	or byte ptr [esi + 0x5f], bl ; pop ebp ; ret
0x08059a37:	in al, dx ; or al, 0xba ; mov al, 0xc3
0x0805aca8:	mov eax, dword ptr [edi + 0x30] ; mov ebx, eax
0x0805ae6d:	push ss ; add byte ptr [eax], al ; add bl, al
0x0805ae96:	ret 0xc483 ; sbb al, 0xc3
0x0805aec6:	inc eax ; jns 9 ; or bl, al
0x0805b05d:	pop ebp ; pop ebx ; pop esi ; pop edi ; ret
0x0805b0e2:	jne 0xfffffff6 ; xor eax, eax ; ret
0x0805b132:	cmp byte ptr [esi + eax], 8 ; ret
0x0805b2c6:	sub eax, dword ptr [esp + 4] ; ret
0x0805b847:	sete al ; and ebx, eax
0x0805ba4b:	insb byte ptr es:[edi], dx ; and al, 0x10 ; cmp ebx, eax
0x0805bb7a:	inc esp ; and al, 0x20 ; cmp ebx, eax
0x0805bc7a:	xor byte ptr [esi + 6], bh ; or bl, al
0x0805bc88:	mov al, byte ptr [0xc3080683]
0x0805be26:	add dword ptr [eax + 0x5f], eax ; pop esi ; ret
0x0805be56:	lock xor byte ptr [esi], al ; or bl, al
0x0805be7f:	sbb eax, -1 ; pop ebx ; ret
0x0805be94:	enter -2, -0x7f ; ret
0x0805bf12:	pop esi ; xor eax, eax ; pop ebx ; ret
0x0805c12e:	fdivr st(7) ; pop esi ; pop ebx ; ret
0x0805c184:	sub ah, 5 ; or bl, al
0x0805c1b8:	inc esp ; and al, 8 ; pop edi ; ret
0x0805c1e3:	and al, 8 ; cld ; pop edi ; ret
0x0805c28d:	movsd dword ptr es:[edi], dword ptr [esi] ; xchg eax, edi ; mov esi, edx ; ret
0x0805c2d2:	rcl byte ptr [esi + eax + 8], 1 ; ret
0x0805c36a:	clc ; pop ebx ; pop esi ; pop edi ; ret
0x0805c43a:	lock xchg byte ptr [esi], al ; or bl, al
0x0805c511:	je 3 ; inc eax ; pop edi ; ret
0x0805cbe4:	movdqa xmmword ptr [edx - 0x3d], xmm0
0x0806059f:	add byte ptr [esi + 0xf], ah ; je 0xffffffc8
0x08061626:	inc edx ; pop es ; sub eax, ecx ; ret
0x08061634:	mov dh, 2 ; sub eax, ecx ; ret
0x08061696:	inc edx ; push es ; sub eax, ecx ; ret
0x080616e5:	ja 4 ; neg eax ; ret
0x080616e8:	fadd st(3) ; xor eax, eax ; ret
0x0806187d:	sub eax, ecx ; pop esi ; pop edi ; ret
0x08061a04:	add dword ptr [ecx], esi ; idiv byte ptr [eax] ; ret
0x08062b8a:	rcr byte ptr [edi + 0x5e], 1 ; pop ebx ; ret
0x08062e9c:	add al, byte ptr [eax] ; add byte ptr [ebx - 0x3d], bl
0x08062f59:	add dword ptr [eax], eax ; add byte ptr [ebx - 0x3d], bl
0x080630b2:	add byte ptr [ebp + 0x2b], dh ; pop ebx ; ret
0x080631a6:	mov dh, 0x12 ; sub eax, edx ; ret
0x0806328a:	or dword ptr [eax], eax ; add byte ptr [ebx - 0x3d], bl
0x080633ae:	or byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x080634da:	pop es ; add byte ptr [eax], al ; pop ebx ; ret
0x080635e2:	push es ; add byte ptr [eax], al ; pop ebx ; ret
0x08063680:	add eax, 0xc35b0000
0x08063795:	add al, 0 ; add byte ptr [ebx - 0x3d], bl
0x080638de:	add eax, dword ptr [eax] ; add byte ptr [ebx - 0x3d], bl
0x08063980:	movdqu xmm1, xmmword ptr [eax - 0x3d]
0x08063985:	movdqu xmm2, xmmword ptr [edx - 0x3d]
0x08063c08:	add byte ptr [ebp + 0x45], dh ; pop ebx ; ret
0x08063c3c:	add byte ptr [ebp + 0x11], dh ; pop ebx ; ret
0x08063e1b:	xor ah, byte ptr [esi + 0xf] ; je 0xffffffc8
0x08063edf:	inc eax ; pmovmskb eax, xmm3
0x08065279:	add al, 0x89 ; clc ; pop edi ; ret
0x080652ed:	pop es ; mov eax, edi ; pop edi ; ret
0x08065311:	add eax, 0xc35ff889
0x08065331:	push es ; mov eax, edi ; pop edi ; ret
0x08065362:	mov byte ptr [edx], al ; mov eax, edx ; ret
0x08065374:	mov dword ptr [edx], eax ; mov eax, edx ; ret
0x080653a8:	inc edx ; add al, 0x89 ; rol bl, 1
0x080653d6:	adc eax, dword ptr [edx] ; mov eax, edx ; ret
0x0806542c:	inc edx ; pop es ; mov eax, edx ; ret
0x08065490:	dec edx ; push es ; mov eax, edx ; ret
0x080654b0:	dec edx ; pop es ; mov eax, edx ; ret
0x080654c6:	jg 4 ; mov eax, edx ; ret
0x080669d4:	lea eax, dword ptr [edx + 3] ; pop edi ; ret
0x08066a08:	lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x08066a4e:	lea eax, dword ptr [edx + 0xb] ; pop edi ; ret
0x08066a88:	lea eax, dword ptr [edx + 0xf] ; pop edi ; ret
0x08066aa6:	lea eax, dword ptr [edx + 1] ; pop edi ; ret
0x08066abc:	lea eax, dword ptr [edx + 2] ; pop edi ; ret
0x08066ada:	lea eax, dword ptr [edx + 4] ; pop edi ; ret
0x08066aec:	lea eax, dword ptr [edx + 5] ; pop edi ; ret
0x08066b0a:	lea eax, dword ptr [edx + 6] ; pop edi ; ret
0x08066b1e:	lea eax, dword ptr [edx + 8] ; pop edi ; ret
0x08066b40:	lea eax, dword ptr [edx + 9] ; pop edi ; ret
0x08066b5e:	lea eax, dword ptr [edx + 0xa] ; pop edi ; ret
0x08066b82:	lea eax, dword ptr [edx + 0xc] ; pop edi ; ret
0x08066ba2:	lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x08066bc2:	lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08066bd2:	mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; ret
0x08066c19:	add al, 0x8d ; inc edx ; add al, 0xc3
0x08066c9d:	pop es ; lea eax, dword ptr [edx + 0xa] ; ret
0x08066ce1:	add eax, 0xc30c428d
0x08066d01:	push es ; lea eax, dword ptr [edx + 0xd] ; ret
0x08066d21:	pop es ; lea eax, dword ptr [edx + 0xe] ; ret
0x08066e48:	sbb ah, byte ptr [esi + 0xf] ; je 0xffffffc8
0x08066f0c:	fsub dword ptr [esi + 0xf] ; xlatb ; ret
0x08066f4a:	fisub dword ptr [esi + 0xf] ; je 0xffffffc8
0x080672e0:	inc edx ; push es ; mov eax, edx ; ret
0x08067839:	add al, 0x8d ; inc edx ; pop es ; ret
0x08067a9d:	lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x08067ae3:	lea eax, dword ptr [edi + 3] ; pop edi ; ret
0x08067b40:	lea eax, dword ptr [edi + 0xf] ; pop edi ; ret
0x08067b86:	lea eax, dword ptr [edi + 0xb] ; pop edi ; ret
0x08067c40:	lea eax, dword ptr [edi + 1] ; pop edi ; ret
0x08067c50:	lea eax, dword ptr [edi + 2] ; pop edi ; ret
0x08067c70:	lea eax, dword ptr [edi + 4] ; pop edi ; ret
0x08067c80:	lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x08067c90:	lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x08067ca0:	lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x08067cb0:	lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x08067cc0:	lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x08067ce0:	lea eax, dword ptr [edi + 0xc] ; pop edi ; ret
0x08067cf0:	lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x08067d00:	lea eax, dword ptr [edi + 0xe] ; pop edi ; ret
0x08067d75:	clc ; add eax, ecx ; pop edi ; ret
0x08067e16:	adc byte ptr [ecx], al ; clc ; pop edi ; ret
0x08067f02:	adc byte ptr [esi + 0xf], ah ; xlatb ; ret
0x08068003:	fldenv dword ptr [esi + 0xf] ; xlatb ; ret
0x080683de:	jbe 0x32 ; add eax, ecx ; ret
0x0806859b:	xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x080685b0:	inc esp ; pop es ; xor byte ptr [edi - 0x3d], bl
0x08068655:	pop edx ; xor eax, eax ; pop edi ; ret
0x08068664:	inc esp ; cmp al, dh ; pop edi ; ret
0x08068672:	rol byte ptr [ecx], 0xf8 ; pop edi ; ret
0x08068684:	inc esp ; cmp byte ptr [eax], dl ; pop edi ; ret
0x08068694:	inc esp ; cmp byte ptr [eax], ah ; pop edi ; ret
0x080686a6:	cmp dword ptr [ecx], eax ; clc ; pop edi ; ret
0x080686bb:	inc esp ; pop es ; adc byte ptr [edi - 0x3d], bl
0x080686cb:	inc esp ; pop es ; and byte ptr [edi - 0x3d], bl
0x080686df:	ret ; xor eax, eax ; pop edi ; ret
0x0806893e:	ret ; nop ; mov eax, edx ; ret
0x08068a42:	mov esp, 0xc3c801c9
0x08068a8d:	add eax, edx ; add eax, ecx ; ret
0x08068bda:	lea eax, dword ptr [edx + eax + 0x30] ; ret
0x08068be3:	lea eax, dword ptr [eax + edx - 0x10] ; ret
0x08068bf1:	mov esp, 0xc3d001c0
0x08068c03:	lea eax, dword ptr [eax + edx + 0x10] ; ret
0x08068c13:	lea eax, dword ptr [eax + edx + 0x20] ; ret
0x08068c6f:	loopne 0x5d ; pop esi ; pop edi ; ret
0x0806afe5:	shl dword ptr [eax], 0xf ; test eax, ebx
0x0806b00a:	or al, 8 ; sub eax, ecx ; ret
0x0806b15b:	add al, 0xc3 ; xor eax, eax ; ret
0x0806b496:	add dh, bh ; fcomp dword ptr [edi - 0x3d]
0x0806bdad:	cld ; mov eax, edx ; pop ebx ; ret
0x0806bef1:	mov byte ptr [0xc389dd89], al
0x0806bf9e:	cli ; add dword ptr [edi], ecx ; xchg eax, esp ; ret
0x0806c18e:	ret ; nop ; xor eax, eax ; ret
0x0806c289:	in eax, -0x10 ; cmovne eax, ebx
0x0806c3c2:	je 0xe ; xor eax, eax ; ret
0x0806c489:	or al, 0x83 ; les ebx, ptr [ebx + eax*8]
0x0806c67f:	add byte ptr [esi + 0x53], dl ; mov ebx, eax
0x0806c7ca:	mov ecx, dword ptr [ebp - 0x80] ; mov ebx, eax
0x0806c98a:	add dword ptr [esi + 0x5f], ebx ; pop ebp ; ret
0x0806c9d4:	cmovae eax, ecx ; jmp 0xffffffc8
0x0806cfc2:	jp 0x38 ; add byte ptr [eax], al ; ret
0x0806d008:	push dword ptr [edi + 5] ; pop ebx ; ret
0x0806d07a:	ret 0x35 ; add bl, al
0x0806d15a:	loop 0x36 ; add byte ptr [eax], al ; ret
0x0806d18e:	scasb al, byte ptr es:[edi] ; xor al, 0 ; add bl, al
0x0806d875:	sub eax, 0xc3890000
0x0806d90e:	and al, 0x3c ; push edi ; sub ebx, eax
0x0806d9ce:	outsb dx, byte ptr [esi] ; sub al, 0 ; add bl, al
0x0806da22:	mov eax, ebx ; pop ebx ; pop esi ; ret
0x0806da86:	sal byte ptr [edx + eax - 0xd], 0xc3
0x0806dbbe:	jle 0x2c ; add byte ptr [eax], al ; ret
0x0806dbf0:	dec esp ; sub al, byte ptr [eax] ; add bl, al
0x0806dc20:	sbb al, 0x2a ; add byte ptr [eax], al ; ret
0x0806dc35:	mov edx, dword ptr [eax + 4] ; mov ebx, eax
0x0806dd5e:	test ebx, ebx ; setg bl
0x0806dd65:	test edi, edi ; setg bl
0x0806e5be:	mov eax, esi ; imul eax, ebx
0x0806e5ed:	push es ; add al, byte ptr [eax] ; mov ebx, eax
0x0806e5fa:	add esp, 0x10 ; cmp ebx, eax
0x0806e8c5:	sal byte ptr [esi + edi*2 - 0x77], 0xc3
0x0806ea6c:	rcr byte ptr [ebx], 1 ; add byte ptr [eax], al ; ret
0x0806ea9a:	mov byte ptr [0xc300001b], al
0x0806eb07:	in eax, dx ; pop esi ; pop ebx ; pop edx ; ret
0x0806eb10:	push ebx ; push ecx ; push edx ; mov ebx, eax
0x0806eb2f:	or byte ptr [edx + 0x59], bl ; pop ebx ; ret
0x0806eb5e:	add byte ptr [ecx], bh ; ret 0xc389
0x0806ed26:	sal byte ptr [edi + esi*2 + 0x39], cl ; ret
0x0806ed8d:	pop ebp ; ret ; nop ; cmp ebx, eax
0x0806f09d:	loop 0x68 ; nop ; ret
0x0806f10e:	nop ; nop ; int 0x80 ; ret
0x0806f92d:	test eax, eax ; cmove eax, ebx
0x08070436:	add byte ptr [eax], al ; pop esi ; pop edi ; ret
0x08070455:	test eax, eax ; je 0xb ; ret
0x08070466:	push cs ; add al, byte ptr [eax] ; mov ebx, eax
0x0807046d:	push cs ; add al, byte ptr [eax] ; cmp ebx, eax
0x08070493:	add byte ptr [ecx], dh ; sar byte ptr [ecx], cl ; ret
0x08070532:	shl eax, cl ; pop esi ; pop edi ; ret
0x08070afc:	xlatb ; push esi ; push ebx ; mov ebx, eax
0x08070d81:	aam 0xbc ; push cs ; or bl, al
0x080713c8:	mov esi, dword ptr [ebp - 0x3c] ; add ebx, eax
0x080715d5:	add ebx, 0x3c
0x080717c4:	imul eax, esi, 0x3c ; add ebx, eax
0x0807209c:	sal byte ptr [ebx + eax*2 - 0x77], 0xc3
0x08072839:	sal byte ptr [esp - 0x7d], 0xc3
0x080728be:	inc esi ; xor byte ptr [esi + 0x5f], bl ; ret
0x08072af9:	add edx, 1 ; cmp ebx, eax
0x08072c1f:	push 0xc389fffd
0x08072e78:	cmp ebx, eax ; cmovle eax, ebx
0x08073a22:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3d], dh
0x08073ca5:	inc esp ; and al, 0x3c ; mov ebx, eax
0x08073faa:	mov byte ptr [ecx + 3], dl ; cmp ebx, eax
0x08074658:	cmp eax, 0x7f ; jbe 0xffffffc8
0x08074976:	jl 0x26 ; je 0xffffff8d ; ret
0x08074ed5:	mov eax, dword ptr [eax + 0x14] ; mov ebx, eax
0x08074fcb:	xor byte ptr [ebp + 0xa], 0x89 ; ret
0x0807555f:	xor byte ptr [ebp + 0xb], 0x83 ; ret
0x08075f23:	and eax, 7 ; mov ebx, eax
0x080768fe:	and edi, 2 ; mov ebx, eax
0x080776d4:	add byte ptr [ebp + edi*2 - 0x7d], dh ; ret
0x08077bb4:	pushal ; pop ebx ; pop esi ; pop edi ; ret
0x08077eba:	salc ; add eax, edx ; mov ebx, eax
0x08078453:	or eax, 0xc3831a74
0x0807853f:	cmp esi, dword ptr [esi + ebx - 0x7d] ; ret
0x08078bdb:	scasb al, byte ptr es:[edi] ; push cs ; or byte ptr [ecx], bh ; ret
0x08078c6c:	mov esi, 0xc3940ff1
0x08078c74:	mov edi, ebx ; sete bl
0x08078cfe:	das ; mov byte ptr [eax], 0 ; ret
0x080792fb:	or dh, byte ptr [edx + edx - 0x77] ; ret
0x08079331:	mov esi, edx ; push ecx ; mov ebx, eax
0x0807963a:	dec esp ; sbb byte ptr [ebx + eax*4], ah ; ret
0x08079838:	mov eax, dword ptr [eax] ; sub eax, dword ptr [edx] ; ret
0x08079dcc:	add eax, dword ptr [edx + 0x20] ; cmp ebx, eax
0x08079dcf:	cmp ebx, eax ; cmovge eax, ebx
0x0807a2d4:	push cs ; or byte ptr [ebx - 0x39], dl ; ret
0x0807a30e:	or byte ptr [edi + eax + 0x5b], dh ; ret
0x0807a315:	je 0x28 ; add bh, al ; ret
0x0807a330:	mov dword ptr gs:[edx], eax ; pop ebx ; ret
0x0807a34c:	mov eax, dword ptr [eax + edx*4 + 0x40] ; ret
0x0807a3cf:	add byte ptr [ebp - 0x77], ah ; add al, bl
0x0807a43c:	or al, 0x83 ; les edx, ptr [ebx + eax*8]
0x0807a46f:	test eax, 0xc389080e
0x0807a48b:	push dword ptr [edi + 0x1a] ; pop ebx ; ret
0x0807a49e:	cmove eax, ecx ; mov ebx, eax
0x0807a666:	sbb byte ptr [ebx + 0x5e], 0x5f ; ret
0x0807aa52:	pop esp ; and al, 8 ; add ebx, eax
0x0807ac23:	clc ; mov edi, ebx ; mov ebx, eax
0x0807ac8f:	mov ch, 0xe ; or byte ptr [ecx], bh ; ret
0x0807b7c5:	mov esi, 0xc3390540
0x0807b7cd:	add byte ptr [eax], al ; add byte ptr [ecx], ch ; ret
0x0807b81a:	shl eax, 2 ; or ebx, eax
0x0807b963:	mov eax, esi ; pop ebx ; pop esi ; ret
0x0807bba7:	salc ; mov edi, ecx ; mov ebx, eax
0x0807be4b:	mov ecx, dword ptr [esi + 0x18] ; add ebx, eax
0x0807c363:	adc dword ptr [eax], eax ; add byte ptr [ecx], al ; ret
0x0807c3c4:	inc ebp ; adc al, 1 ; add ebx, eax
0x08080775:	push ebx ; mov esi, edx ; mov ebx, eax
0x080809df:	add eax, ebx ; pop ebx ; pop esi ; ret
0x08081201:	sal byte ptr [ebp - 0x5e], 0x83 ; ret
0x08081ce1:	mov dword ptr [ebp - 0x74], eax ; mov ebx, eax
0x0808260d:	mov dword ptr [ebp - 0x70], edi ; sub ebx, eax
0x0808298a:	add byte ptr [eax], al ; add cl, ch ; ret
0x08082f65:	pop esp ; and al, 0xc ; mov ebx, eax
0x08083244:	xchg eax, edx ; add eax, eax ; sub ebx, eax
0x080839ef:	push dword ptr [ecx] ; sal dh, 0xc3
0x08083d6e:	sete al ; jmp 0xffffffc8
0x080843ec:	mov eax, edx ; pop esi ; pop edi ; ret
0x08084715:	mov ebx, dword ptr [edx + 0x10] ; sub ebx, eax
0x08084947:	sub edx, 4 ; cmp ebx, eax
0x08084b26:	add eax, 0xc3830000
0x08084c2c:	push cs ; or byte ptr [ebx - 0x7d], dl ; ret
0x080854e5:	test esi, esi ; setg bl
0x08085735:	mov eax, dword ptr [ecx + 4] ; mov ebx, eax
0x08085a05:	sub eax, dword ptr [ebp + 0x10] ; cmp ebx, eax
0x08085d15:	sar eax, 2 ; mov ebx, eax
0x08086855:	add esi, 1 ; mov ebx, eax
0x080868d3:	add esi, 1 ; cmp ebx, eax
0x08087430:	add byte ptr [eax], al ; add bl, ch ; ret
0x080876e9:	clc ; add dword ptr [edi], ecx ; test eax, ebx
0x08088145:	push edx ; push 0x2b ; jmp 0xffffffc8
0x08088210:	push eax ; push 0x2b ; jmp 0xffffffc8
0x08089a91:	mov eax, ecx ; pop esi ; pop edi ; ret
0x0808a093:	enter 0x5e5b, 0x5f ; ret
0x0808a6ca:	sal byte ptr [ebx + ebx*2 + 1], 0xc3
0x0808a751:	mov dword ptr gs:[ebx], edi ; jne 0xffffffc8
0x0808a8b6:	sal byte ptr [edi + ebx + 1], 0xc3
0x0808ab50:	mov ebx, dword ptr [esi + 8] ; sub ebx, eax
0x0808abe7:	mov dword ptr [ebp - 0x20], eax ; sub ebx, eax
0x0808ac08:	sal dword ptr [edi + eax - 0x77], -0x3d
0x0808ac17:	sub eax, dword ptr [ebp - 0x1c] ; cmp ebx, eax
0x0808b176:	mov eax, dword ptr [ecx + 0x28] ; mov ebx, eax
0x0808b17f:	mov eax, dword ptr [ecx + 0x20] ; sub ebx, eax
0x0808b2c5:	mov dword ptr [eax + 0x20], ecx ; pop ebx ; ret
0x0808b699:	sub eax, edi ; pop edi ; pop ebp ; ret
0x0808b715:	and byte ptr [eax], al ; add al, ch ; ret
0x0808bcbf:	cli ; add ch, byte ptr [ecx] ; rol bl, 1
0x0808be06:	and al, 0x8b ; inc eax ; sub bl, al
0x0808c2f0:	mov esi, 0xc389fffb
0x0808c494:	adc al, bl ; or byte ptr [eax], cl ; ret
0x0808c684:	inc esi ; add ebx, dword ptr [esi + 0x5f] ; ret
0x0808cc36:	je 0x26 ; adc al, 0x39 ; ret
0x0808cdf2:	add eax, edx ; pop edi ; pop ebp ; ret
0x0808d141:	pop esi ; xor eax, eax ; pop edi ; ret
0x0808d155:	leave ; jne 0x1b ; mov ebx, eax
0x0808d333:	lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x0808d358:	lea eax, dword ptr [edi - 0xc] ; pop edi ; ret
0x0808d382:	lea eax, dword ptr [edi - 8] ; pop edi ; ret
0x0808d3ab:	lea eax, dword ptr [edi - 4] ; pop edi ; ret
0x0808d3b0:	lea eax, dword ptr [edi - 0xf] ; pop edi ; ret
0x0808d3c0:	lea eax, dword ptr [edi - 0xe] ; pop edi ; ret
0x0808d3d0:	lea eax, dword ptr [edi - 0xd] ; pop edi ; ret
0x0808d3e0:	lea eax, dword ptr [edi - 0xb] ; pop edi ; ret
0x0808d3f0:	lea eax, dword ptr [edi - 0xa] ; pop edi ; ret
0x0808d400:	lea eax, dword ptr [edi - 9] ; pop edi ; ret
0x0808d410:	lea eax, dword ptr [edi - 7] ; pop edi ; ret
0x0808d420:	lea eax, dword ptr [edi - 6] ; pop edi ; ret
0x0808d430:	lea eax, dword ptr [edi - 5] ; pop edi ; ret
0x0808d440:	lea eax, dword ptr [edi - 3] ; pop edi ; ret
0x0808d450:	lea eax, dword ptr [edi - 2] ; pop edi ; ret
0x0808d460:	lea eax, dword ptr [edi - 1] ; pop edi ; ret
0x0808d6a3:	fcom qword ptr [esi + 0x53] ; mov ebx, eax
0x0808d7a2:	je 0x5e ; bsr eax, ebx
0x0808d7ab:	sub eax, 0x10 ; pop edi ; ret
0x0808d801:	pop esi ; pop edi ; xor eax, eax ; ret
0x0808daf5:	add eax, 3 ; pop edi ; ret
0x0808db1b:	add eax, 7 ; pop edi ; ret
0x0808db42:	add eax, 0xb ; pop edi ; ret
0x0808db6b:	add eax, 0xf ; pop edi ; ret
0x0808dbd3:	inc esp ; and al, 0xc ; pop edi ; ret
0x0808dc11:	lea eax, dword ptr [eax + 3] ; pop edi ; ret
0x0808dc44:	lea eax, dword ptr [eax + 7] ; pop edi ; ret
0x0808dc7b:	lea eax, dword ptr [eax + 0xb] ; pop edi ; ret
0x0808dca4:	lea eax, dword ptr [eax + 0xf] ; pop edi ; ret
0x0808dcb9:	lea eax, dword ptr [eax + 1] ; pop edi ; ret
0x0808dcc9:	lea eax, dword ptr [eax + 2] ; pop edi ; ret
0x0808dcd9:	lea eax, dword ptr [eax + 4] ; pop edi ; ret
0x0808dce5:	lea eax, dword ptr [eax + 5] ; pop edi ; ret
0x0808dcf5:	lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x0808dd05:	lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x0808dd15:	lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x0808dd25:	lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x0808dd35:	lea eax, dword ptr [eax + 0xc] ; pop edi ; ret
0x0808dd45:	lea eax, dword ptr [eax + 0xd] ; pop edi ; ret
0x0808dd55:	lea eax, dword ptr [eax + 0xe] ; pop edi ; ret
0x0808ddbf:	add byte ptr [eax], al ; add byte ptr [edi - 0x3d], bl
0x0808deb0:	add eax, 1 ; pop edi ; ret
0x0808deb5:	add eax, 2 ; pop edi ; ret
0x0808debf:	add eax, 4 ; pop edi ; ret
0x0808dec4:	add eax, 5 ; pop edi ; ret
0x0808dec9:	add eax, 6 ; pop edi ; ret
0x0808ded3:	add eax, 8 ; pop edi ; ret
0x0808ded8:	add eax, 9 ; pop edi ; ret
0x0808dedd:	add eax, 0xa ; pop edi ; ret
0x0808dee7:	add eax, 0xc ; pop edi ; ret
0x0808deec:	add eax, 0xd ; pop edi ; ret
0x0808def1:	add eax, 0xe ; pop edi ; ret
0x0808df79:	sub eax, ebx ; pop ebx ; pop esi ; ret
0x0808e004:	and dl, ch ; or byte ptr [eax], cl ; ret
0x0808e08b:	dec edx ; or byte ptr [ebx + 0x5e], bl ; ret
0x0808e0a9:	push dword ptr [esp - 9] ; ret
0x0808e102:	xor byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x0808e348:	sub eax, esi ; pop esi ; pop edi ; ret
0x0808e6bf:	ret ; xor eax, eax ; pop ebx ; ret
0x0808e6fa:	sal byte ptr [ebp - 0xd], cl ; ret
0x0808eb5c:	loope 0x11 ; je 0x24 ; ret
0x0808ebb1:	add dword ptr [eax], eax ; add byte ptr [eax], al ; ret
0x0808ebc1:	add al, byte ptr [eax] ; add byte ptr [eax], al ; ret
0x0808ebd1:	add eax, dword ptr [eax] ; add byte ptr [eax], al ; ret
0x0808ebe1:	add al, 0 ; add byte ptr [eax], al ; ret
0x0808ebf1:	add eax, 0xc3000000
0x0808ec01:	push es ; add byte ptr [eax], al ; add bl, al
0x0808ec11:	pop es ; add byte ptr [eax], al ; add bl, al
0x0808ec6f:	nop ; mov eax, ebx ; pop ebx ; ret
0x0808ec9d:	test eax, 0xc35b080e
0x0808ecc8:	clc ; cmp ecx, dword ptr [edi] ; inc edi ; ret
0x0808ecd7:	cmp al, 0x5b ; add eax, edx ; ret
0x0808ed57:	add byte ptr [ecx], dh ; sal dh, 0xc3
0x0808ed88:	add dword ptr [eax], eax ; add byte ptr [ecx], bh ; ret
0x0808ef4f:	imul eax, eax, 0x64 ; cmp ebx, eax
0x0808efce:	mov dword ptr [esp], esi ; mov ebx, eax
0x0808f18a:	add byte ptr [esi + 0x5f], bl ; pop ebp ; ret
0x0808f2b0:	cmp byte ptr [edi + ecx], ch ; xchg eax, esp ; ret
0x0808f2b2:	sete bl ; add ebx, eax
0x0808f5ab:	add esp, 8 ; pop edi ; ret
0x0808f690:	pop es ; pop ebx ; pop esi ; pop edi ; ret
0x0808f8cc:	and al, 0x5b ; pop esi ; pop edi ; ret
0x08090e16:	add dl, byte ptr [eax - 0x18] ; ret ; ret
0x08090e93:	insb byte ptr es:[edi], dx ; push esi ; push ebx ; mov ebx, eax
0x08090ed7:	les esp, ptr [ebx + ebx*2 + 0x5e] ; ret
0x08090f15:	push ebx ; mov ecx, edx ; mov ebx, eax
0x08091430:	or al, 0xf2 ; std ; inc ebx
0x0809145e:	fdivrp st(1) ; std ; inc ebx
0x08091494:	test al, 0xf1 ; std ; inc ebx
0x080914c3:	jns 0xfffffff3 ; std ; inc ebx
0x080914e8:	pop esp ; movzx eax, al ; ret
0x080915ad:	test eax, 0xc339080e
0x080915b8:	pop es ; xor eax, eax ; pop ebx ; ret
0x080916f7:	mov ebx, dword ptr [edx + 0x10] ; and ebx, eax
0x08091700:	add al, 0xa ; pop ebx ; pop esi ; ret
0x080918e9:	sal byte ptr [esp + esi - 0x7d], cl ; ret
0x08091968:	rcr byte ptr [esi + 0x5f], 0x5d ; ret
0x08091b5c:	sal byte ptr [ecx - 0x77], 0xc3
0x08091d11:	cmp eax, 0x33 ; mov ebx, eax
0x08091f27:	and eax, 0xfffffff0 ; mov ebx, eax
0x0809286a:	mov edx, dword ptr [edi + 0x20] ; mov ebx, eax
0x080928b5:	mov eax, dword ptr [ebp - 0x7c] ; add ebx, eax
0x08092c42:	lea eax, dword ptr [edi + eax*8] ; cmp ebx, eax
0x08093f72:	inc esp ; and al, 0xf ; cmp bl, al
0x08093f95:	movzx eax, byte ptr [edx] ; cmp bl, al
0x080950c0:	mov eax, dword ptr [esi + 0x18] ; mov ebx, eax
0x080950cf:	sal byte ptr [esp + edx + 0x6b], 0xc3
0x080957b7:	add eax, 0xc301cb01
0x08095b12:	mov ecx, dword ptr [ebp - 0x64] ; xor ebx, eax
0x08095b29:	or edx, eax ; setne bl
0x08095b55:	inc ebp ; or byte ptr [edi], cl ; test eax, ebx
0x080961f1:	add dword ptr [eax], eax ; add bl, dh ; ret
0x08096220:	mov byte ptr [ecx], al ; add byte ptr [eax], al ; ret
0x080962fd:	lea edx, dword ptr [eax + 1] ; mov ebx, eax
0x08096350:	add esp, 0x10 ; add ebx, eax
0x08096454:	inc esp ; and al, 0xc ; mov ebx, eax
0x0809669e:	nop ; nop ; push ebx ; mov ebx, eax
0x08096a40:	mov byte ptr [ebx], al ; mov ebx, eax
0x08097277:	add eax, 0xc339d001
0x080973e4:	mov eax, dword ptr [esi + 4] ; mov ebx, eax
0x08097950:	mov eax, dword ptr [edi + 4] ; mov ebx, eax
0x08098315:	push ebx ; xor ecx, ecx ; mov ebx, eax
0x080983f5:	lea eax, dword ptr [esi + 0xc] ; mov ebx, eax
0x080984a4:	lea eax, dword ptr [ebx + edi] ; cmp ebx, eax
0x0809885a:	loopne 0x77 ; jmp 0xffffff87 ; ret
0x08098881:	add bl, dl ; loopne 0x3d ; ret
0x08098899:	mov dword ptr [ecx - 8], esi ; cmp ebx, eax
0x0809916c:	sub esp, 4 ; mov ebx, eax
0x08099305:	mov eax, dword ptr [ecx] ; pop ebx ; pop esi ; ret
0x080993f8:	pop es ; mov esi, dword ptr [edx] ; jmp 0xffffffc8
0x08099483:	leave ; jne 0xffffffdd ; pop ebx ; ret
0x08099485:	ficomp dword ptr [ebx - 0x3d] ; ret
0x080994fa:	les edx, ptr [ebx + ebx*2] ; pop edi ; ret
0x08099503:	xor eax, eax ; pop ebx ; pop edi ; ret
0x080995a6:	and al, 0xc ; lea ebx, dword ptr [ebx + eax*8]
0x080998ef:	cmove eax, edx ; pop edi ; ret
0x08099f35:	pop esi ; ret ; xor eax, eax ; ret
0x08099ff0:	lcall ptr [ecx + 0x5f] ; mov ebx, eax
0x0809ac2e:	jne 0xa ; mov byte ptr [ebp - 0x3d], al
0x0809ba48:	add esp, 0x4c ; ret
0x0809bb3c:	pop edi ; neg eax ; pop ebp ; ret
0x0809bd17:	push dword ptr [esi + 0x1e] ; mov ebx, eax
0x0809bee6:	or byte ptr [eax - 0x18], dl ; arpl bx, ax
0x0809bf0e:	add eax, 0x30 ; cmp ebx, eax
0x0809bfb8:	sal byte ptr [ebp + ebp + 0x79], 0xc3
0x0809c02f:	push dword ptr [esi + 0x3c] ; mov ebx, eax
0x0809c169:	cli ; std ; jbe 7 ; ret
0x0809c1ad:	ret ; nop ; mov ebx, eax
0x0809c51f:	nop ; mov eax, dword ptr [eax + 4] ; ret
0x0809c62c:	add esp, 0x28 ; pop ebx ; ret
0x0809c66b:	add al, 0x83 ; les ebp, ptr [ebx + eax*8]
0x0809c695:	or al, 0x83 ; les ebp, ptr [ebx + eax*8]
0x0809c6d2:	add al, 0x83 ; les ebx, ptr [ebx + eax*8]
0x0809c752:	les esp, ptr [eax] ; pop ebx ; pop esi ; ret
0x0809c790:	les edx, ptr [eax] ; pop ebx ; pop esi ; ret
0x0809c9b2:	call 0xc35e5b06
0x0809cacc:	sbb al, 0xf7 ; int1 ; mov ebx, eax
0x0809cae2:	cmp eax, edi ; setb bl
0x0809cca5:	or al, 0x29 ; rol dword ptr [ecx], -0x3d
0x0809ce1b:	add al, 0x96 ; shld ebx, eax, cl
0x0809ce2a:	pop eax ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce32:	pop ds ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce7b:	add al, 0x96 ; shrd ebx, eax, cl
0x0809cfa4:	mov dword ptr [ebp - 0x1c], eax ; add ebx, eax
0x0809cfae:	mov ebx, dword ptr [ebp + 0xc] ; add ebx, eax
0x0809d1e4:	pop ebx ; pop ebp ; pop esi ; pop edi ; ret
0x0809dabe:	mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0809dbbb:	neg eax ; pop esi ; pop edi ; ret
0x0809dd90:	test edi, edi ; sete bl
0x0809df25:	call 0xc329f07a
0x0809e0c0:	sar byte ptr [eax + 5], 0xf3 ; ret
0x0809e3f6:	mov al, 0xb7 ; push cs ; or bl, al
0x0809e627:	add al, 0x5e ; pop edi ; ret
0x0809e6e1:	add al, 0x5b ; pop esi ; pop edi ; ret
0x0809e867:	or al, 0x83 ; les ecx, ptr [ebx + eax*8]
0x0809e9c7:	mov dh, 0xc0 ; neg eax ; ret
0x0809eaba:	add eax, 0xc35f5e5b
0x0809ecd2:	shr eax, 0x1f ; sub ebx, eax
0x0809ed03:	jl 0x26 ; add al, 0x29 ; ret
0x0809ef26:	and ebx, 1 ; add ebx, eax
0x0809efd8:	sar ebx, 3 ; sub ebx, eax
0x0809f12b:	pop ds ; mov ebx, edx ; sub ebx, eax
0x0809f20f:	lea eax, dword ptr [eax + eax*4] ; sub ebx, eax
0x0809f399:	cmp edx, ebx ; setge bl
0x0809f5c3:	push ebx ; mov edx, ecx ; mov ebx, eax
0x0809f5da:	ja 6 ; pop ebx ; pop esi ; ret
0x0809f5fb:	sar byte ptr [esi + 2], 1 ; ret
0x0809f61d:	push 0xc3000000
0x0809f693:	clc ; add bl, byte ptr [esi + 0x5f] ; ret
0x0809f6d5:	add esp, 0xc ; pop ebx ; ret
0x080a0354:	cmp eax, dword ptr [ebp - 0x68] ; mov ebx, eax
0x080a13bf:	add byte ptr [eax], al ; add byte ptr [ecx], al ; ret
0x080a13d5:	sahf ; sti ; inc dword ptr [ecx] ; ret
0x080a1737:	sal byte ptr [esp + eax + 1], 0xc3
0x080a1868:	sal byte ptr [edi + eax*2 - 0x77], 0xc3
0x080a209c:	cmp byte ptr [ecx], ch ; sar dword ptr [ecx], cl ; ret
0x080a2250:	sbb eax, 0xc339018b
0x080a29ad:	lea edi, dword ptr [eax - 0x30] ; mov ebx, eax
0x080a3272:	sbb eax, 0xc3890000
0x080a364e:	pop es ; add byte ptr [eax], al ; mov ebx, eax
0x080a3e00:	sti ; cmp bl, cl ; ja 0xffffffc8
0x080a479f:	mov esi, dword ptr [ebp + 8] ; mov ebx, eax
0x080a4853:	lea eax, dword ptr [edi - 1] ; cmp ebx, eax
0x080a4ad1:	sub edi, 1 ; cmp ebx, eax
0x080a54a2:	mov dword ptr [ebp + 8], ecx ; mov ebx, eax
0x080a5774:	mov esp, 0xc389d989
0x080a66cf:	jmp 0xc38a0004
0x080a7c88:	ljmp ptr [ecx] ; fld dword ptr [ecx] ; ret
0x080a8078:	enter -0x3dff, 0x29 ; ret
0x080a87ab:	add esp, 0x14 ; pop ebx ; ret
0x080a898d:	jne 4 ; xor eax, eax ; ret
0x080a8bac:	add dword ptr [edx + eax*2], 1 ; ret
0x080a9f15:	test cl, cl ; cmove eax, ebx
0x080aa40d:	je 0x26 ; or al, 1 ; ret
0x080aa6f0:	inc edx ; add dword ptr [eax], esp ; mov ebx, eax
0x080aa83a:	and al, 0x10 ; movsx eax, bl
0x080aae93:	loopne 0x60 ; pop edi ; pop ebp ; ret
0x080ac172:	cmp eax, ebp ; setb bl
0x080ac301:	add byte ptr [eax], al ; add byte ptr [ecx], bh ; ret
0x080ad1c7:	or eax, 0xc322e808
0x080ad1e0:	or eax, 0xc309e808
0x080af099:	and al, 0x38 ; seta bl
0x080af88b:	pop edi ; pop ebp ; fmul st(0) ; ret
0x080af8d3:	pop edi ; pop ebp ; fmulp st(1) ; ret
0x080b235d:	add eax, 0xc3839066
0x080b2394:	and byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x080b252e:	and al, 0x83 ; les eax, ptr [ebx + eax*8]
0x080b259c:	les ecx, ptr [ebx + ebx*2] ; pop esi ; ret
0x080b25f9:	and al, 0x83 ; les ebx, ptr [ebx + eax*8]
0x080b2632:	adc byte ptr [edx + 0xb], dl ; or bl, al
0x080b4ef9:	add esp, 4 ; pop ebp ; ret
0x080b4f04:	pop edi ; pop ebp ; xor eax, eax ; ret
0x080b51ce:	pop esi ; pop ebp ; xor eax, eax ; ret
0x080b51eb:	inc esi ; ret 0x5d5e ; ret
0x080b5581:	xor eax, eax ; pop edi ; pop ebp ; ret
0x080b5597:	neg eax ; pop edi ; pop ebp ; ret
0x080b55b9:	cmp ebp, 4 ; jbe 0xffffffc8
0x080b57a0:	pushfd ; scasb al, byte ptr es:[edi] ; sti ; inc ebx
0x080b5f4e:	add ecx, 7 ; or ebx, eax
0x080b6287:	loopne 0xfffffff9 ; fmul dword ptr [ecx] ; ret
0x080b6586:	sbb byte ptr [eax], al ; add byte ptr [ebx + eax*8], al
0x080b6977:	dec esp ; and al, 0x18 ; mov ebx, eax
0x080b7153:	mov eax, esi ; setge bl
0x080b7162:	mov eax, esi ; sete bl
0x080b71c9:	cdq ; idiv ecx ; mov ebx, eax
0x080b71e0:	mov eax, esi ; setne bl
0x080b71ef:	mov eax, esi ; setl bl
0x080b71fe:	mov eax, esi ; setle bl
0x080b720d:	mov eax, esi ; setg bl
0x080b77e9:	push esi ; dec esp ; pop esi ; pop edi ; ret
0x080b7878:	dec edi ; adc byte ptr [edi], cl ; xchg eax, esp ; ret
0x080b7996:	or eax, 0xc381fff9
0x080b7b93:	add al, 0x8b ; inc eax ; dec eax ; ret
0x080b7c13:	add al, 0x8b ; inc eax ; dec esp ; ret
0x080b7c47:	add al, 0x89 ; push eax ; dec esp ; ret
0x080b7c53:	add al, 0x8b ; inc eax ; push eax ; ret
0x080b7c63:	add al, 0x8b ; inc eax ; pop esp ; ret
0x080b7cb3:	add al, 0x8b ; inc eax ; pop eax ; ret
0x080b7cc3:	add al, 0x8b ; inc eax ; push esp ; ret
0x080b7e4f:	mov edi, dword ptr [ebp - 4] ; leave ; ret
0x080b81bc:	ret ; mov eax, dword ptr [esp] ; ret
0x080b81c0:	ret ; mov ecx, dword ptr [esp] ; ret
0x080b81c4:	ret ; mov esi, dword ptr [esp] ; ret
0x080b81c8:	ret ; mov edi, dword ptr [esp] ; ret
0x080b81cc:	ret ; mov ebp, dword ptr [esp] ; ret
0x080b8455:	adc byte ptr [esp + ecx - 0x18], dh ; ret
0x080b88c2:	push esp ; and al, 0x70 ; mov ebx, eax
0x080b92fa:	movzx ebp, al ; mov ebx, eax
0x080b94e5:	sar byte ptr [eax - 0x30], 0x83 ; ret
0x080b95b1:	jl 0x26 ; or al, 0x83 ; ret
0x080b980e:	mov dword ptr [edx + 0x14], eax ; pop edi ; ret
0x080b98ae:	adc al, 0x5b ; pop esi ; pop edi ; ret
0x080b98cf:	leave ; jne 9 ; ret
0x080b9d63:	jmp 0xc381fffd
0x080ba7ed:	rcr byte ptr [ebx + 0x5e], cl ; pop edi ; ret
0x080baaa8:	fistp word ptr [ebx + 0x5e] ; pop edi ; ret
0x080badcd:	cmp eax, 0xc3f3fffb
0x080bc95c:	or ebx, 5 ; or bl, al
0x080bd3a1:	ret 0x806 ; inc ebp ; ret
0x080bd3a5:	ret ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3c1:	ret 0x806 ; adc eax, ebx
0x080bd3c9:	ret 0x806 ; or ebx, eax
0x080bd3cd:	ret ; push es ; or byte ptr [ebx], bh ; ret
0x080bd3d1:	ret ; push es ; or byte ptr [ecx], dh ; ret
0x080bd3d5:	ret ; push es ; or byte ptr [edi], ah ; ret
0x080bd3dd:	ret ; push es ; or byte ptr [ebp - 0x3d], cl
0x080bd3e1:	ret ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3f1:	ret 0x806 ; js 0xffffffc8
0x080bd41d:	ret ; push es ; or byte ptr [edx - 0x3d], ah
0x080bd8c4:	mov ecx, 0xc30806ca
0x080c02c8:	ret 0 ; add bl, al
0x080c62a0:	mov edi, 0xc3000002
0x080c6378:	mov ebp, 0xc3000003
0x080c6794:	mov esi, 0xc3000008
0x080c68e8:	ror byte ptr [ecx], 0 ; add bl, al
0x080c6ce8:	ror byte ptr [eax + eax], 0 ; ret
0x080c70e8:	ror byte ptr [edi], 0 ; add bl, al
0x080cb609:	int3 ; int3 ; or al, 0xc ; ret
0x080cba74:	ja 0xffffffe9 ; pop es ; or bl, al
0x080cbbf4:	adc bh, ah ; pop es ; or bl, al
0x080ce704:	mov ebp, 0xc3080ce6
0x080cf93f:	mov edi, 0xc3c2c1c0
0x080cfc0b:	mov eax, 0xc31e1ad9
0x080cfc47:	out -0x6b, eax ; push es ; cld ; ret
0x080cffec:	inc esp ; push ds ; mov ah, 0x13 ; ret
0x080d05d6:	cld ; test al, 0x97 ; xchg eax, esp ; ret
0x080d063a:	sub al, 0xb3 ; push edi ; cmp bl, al
0x080d0e83:	sar ecx, 1 ; jnp 0xffffffbd ; ret
0x080d1007:	or eax, 0xc3fb67d1
0x080d1168:	je 0xffffffc7 ; xor al, 0xd8 ; ret
0x080d12c4:	mov bh, 0xb4 ; mov edi, dword ptr [edx] ; ret
0x080d2292:	mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x080d25e5:	outsd dx, dword ptr [esi] ; aad 8 ; stosd dword ptr es:[edi], eax ; ret
0x080d271e:	sub edi, esi ; int 0x6b ; ret
0x080d288b:	and eax, 0xc3714057
0x080d2cec:	sub eax, 0xc322f8f6
0x080d2e64:	out -0xb, eax ; mov ch, 0xab ; ret
0x080d3014:	sub al, 0xd8 ; pop edx ; and ebx, eax
0x080d4bd6:	int3 ; or al, 0x30 ; or al, 0xc3
0x080d4bd9:	or al, 0xc3 ; xor byte ptr [ebx + eax*8], cl
0x080d5185:	ret 0xfffc ; adc eax, ebx
0x080d5189:	ret ; cld ; jmp dword ptr [ecx - 0x3d]
0x080d5190:	test eax, esp ; cld ; inc ebx
0x080d587e:	or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d599e:	dec esp ; push cs ; adc al, 0x41 ; ret
0x080d59cd:	pop ebp ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d5b0e:	or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5b66:	push cs ; adc byte ptr [edi + 0xa], al ; ret
0x080d5bc1:	dec ecx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d5c0b:	or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d5c38:	add eax, dword ptr [ebp + 1] ; or al, bl
0x080d5c48:	add edx, eax ; add dword ptr [edx], ecx ; ret
0x080d5c78:	add ecx, dword ptr [ecx + 3] ; or al, bl
0x080d5c86:	inc ecx ; or ebp, dword ptr [edx + ecx - 0x3d]
0x080d5c96:	add esi, dword ptr [edi + 1] ; or al, bl
0x080d5de3:	inc edi ; push cs ; or al, 0x41 ; ret
0x080d5e10:	add eax, dword ptr [eax] ; add dword ptr [edx], ecx ; ret
0x080d5e84:	dec eax ; push cs ; adc al, 0x41 ; ret
0x080d61df:	dec eax ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d64ea:	inc esi ; or ebx, dword ptr [edx + ecx - 0x3d]
0x080d6578:	pop eax ; push cs ; adc al, 0x45 ; ret
0x080d674e:	or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d683f:	add eax, 0xc30a6e02
0x080d684d:	inc esi ; or edx, dword ptr [ebp + 0xa] ; ret
0x080d68a3:	add eax, 0xc30acb02
0x080d68c5:	add byte ptr [eax], al ; add byte ptr [ebx + eax*8], al
0x080d68dc:	adc byte ptr cs:[ebp + 0xa], bl ; ret
0x080d68e8:	dec ecx ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080d68f4:	inc ecx ; or eax, dword ptr [edx + ecx - 0x3d]
0x080d6962:	or cl, byte ptr [esi] ; or byte ptr [ebx - 0x3d], al
0x080d69c6:	and byte ptr cs:[esi + 0xa], ch ; ret
0x080d69d4:	inc edi ; or esi, dword ptr [ebp + 0xa] ; ret
0x080d6a6c:	add ecx, dword ptr [edi] ; add cl, byte ptr [edx] ; ret
0x080d6a7b:	or eax, dword ptr [edx] ; dec ebx ; or al, bl
0x080d6b69:	or cl, byte ptr [esi] ; adc al, 0x47 ; ret
0x080d6b94:	or cl, byte ptr [esi] ; adc al, 0x45 ; ret
0x080d6cee:	or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080d6d30:	or cl, byte ptr [esi] ; or byte ptr [esi - 0x3d], al
0x080d6d39:	push ebx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d6db5:	arpl word ptr [esi], cx ; adc al, 0x43 ; ret
0x080d6ead:	push cs ; adc byte ptr [edx + 0xa], cl ; ret
0x080d6ebc:	inc ebp ; or esp, dword ptr [eax + 0xa] ; ret
0x080d709e:	xchg eax, edi ; push cs ; adc al, 0x41 ; ret
0x080d70d4:	add ebp, dword ptr [esi + 1] ; or al, bl
0x080d713f:	push cs ; adc byte ptr [edi + 0xa], cl ; ret
0x080d7179:	or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7198:	add dword ptr [edx], 0x5a ; or al, bl
0x080d719e:	add al, 0x45 ; or eax, dword ptr [ecx - 0x3d]
0x080d71cd:	pop esi ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7203:	pop edx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d723f:	or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080d7294:	add edi, dword ptr [esi] ; add dword ptr [edx], ecx ; ret
0x080d72a2:	inc esi ; or eax, dword ptr [edi + 0xa] ; ret
0x080d72b3:	adc byte ptr cs:[edx + ecx - 0x3d], ch
0x080d7430:	inc ebx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7511:	push cs ; adc byte ptr [esi + 0xa], ah ; ret
0x080d75e5:	pop ebx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7827:	jo 0x10 ; or byte ptr [ecx - 0x3d], al
0x080d7844:	add dword ptr [edx], 0x68 ; or al, bl
0x080d784b:	inc edi ; or edx, dword ptr [eax + 0xa] ; ret
0x080d7851:	add al, 0x48 ; or eax, dword ptr [ecx - 0x3d]
0x080d78fc:	dec edi ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d792c:	push cs ; adc byte ptr [ebx + 0xa], al ; ret
0x080d798f:	push cs ; adc byte ptr [ebx + 0xa], cl ; ret
0x080d799d:	add al, 0x44 ; or eax, dword ptr [edi - 0x3d]
0x080d7a1a:	push cs ; adc byte ptr [ebx + 0xa], ah ; ret
0x080d7bbf:	add al, 2 ; push edi ; or al, bl
0x080d7c92:	dec ebp ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7fbe:	add dword ptr [esp + ecx*2], 0xa ; ret
0x080d7fd6:	push cs ; adc byte ptr [edx + ecx - 0x3d], ah
0x080d808a:	inc ebx ; push cs ; adc al, 0x43 ; ret
0x080d8134:	adc byte ptr [edx], al ; pushal ; or al, bl
0x080d81b3:	dec ebx ; push cs ; or al, 0x46 ; ret
0x080d81fe:	add eax, dword ptr [ebx] ; add dword ptr [edx], ecx ; ret
0x080d8204:	add al, 0x44 ; or ecx, dword ptr [edi - 0x3d]
0x080d82f8:	add dword ptr [edx], 0x72 ; or al, bl
0x080d82fe:	add al, 0x45 ; or eax, dword ptr [esi - 0x3d]
0x080d84f2:	add eax, dword ptr [edx] ; inc eax ; or al, bl
0x080d84fc:	add al, 0x45 ; or edi, dword ptr [esi - 0x3d]
0x080d8581:	add byte ptr cs:[eax], al ; cmp al, 0xc3
0x080d8595:	add byte ptr cs:[eax], al ; cmp bl, al
0x080d85a9:	add byte ptr cs:[eax], al ; xor al, 0xc3
0x080d85bd:	das ; add byte ptr [eax], al ; xor bl, al
0x080d85d1:	das ; add byte ptr [eax], al ; sub al, 0xc3
0x080d85e5:	das ; add byte ptr [eax], al ; sub bl, al
0x080d85f9:	das ; add byte ptr [eax], al ; and al, 0xc3
0x080d860d:	das ; add byte ptr [eax], al ; and bl, al
0x080d8621:	das ; add byte ptr [eax], al ; sbb al, 0xc3
0x080d8635:	das ; add byte ptr [eax], al ; sbb bl, al
0x080d8649:	das ; add byte ptr [eax], al ; adc al, 0xc3
0x080d865d:	das ; add byte ptr [eax], al ; push eax ; ret
0x080d8671:	das ; add byte ptr [eax], al ; jl 0xffffffc8
0x080d8685:	das ; add byte ptr [eax], al ; mov bl, al
0x080d8694:	add dword ptr [edx], 0x6e ; or al, bl
0x080d869a:	add al, 0x41 ; or ebx, dword ptr [esi - 0x3d]
0x080d86a9:	das ; add byte ptr [eax], al ; mov ah, 0xc3
0x080d8759:	or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080d88aa:	push esi ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d8949:	dec ebx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d8978:	add dword ptr [edx], 0x6a ; or al, bl
0x080d8aad:	push cs ; adc byte ptr [ecx + 0xa], dl ; ret
0x080d8c3c:	or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080d8d7e:	add bl, byte ptr [esi + 0xe] ; add al, 0xc3
0x080d91f4:	insb byte ptr es:[edi], dx ; push cs ; adc al, 0x44 ; ret
0x080d9233:	or cl, byte ptr [esi] ; or byte ptr [ebp - 0x3d], al
0x080d923c:	dec edi ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d9264:	or cl, byte ptr [esi] ; or al, 0x45 ; ret
0x080d92be:	outsd dx, dword ptr [esi] ; push cs ; or byte ptr [eax - 0x3d], cl
0x080d94a0:	inc ebx ; push cs ; or byte ptr [eax - 0x3d], cl
0x080d94d5:	add dword ptr [ebx], 2 ; pop ebp ; ret
0x080d9508:	add dword ptr [edx], 2 ; ret
0x080d95cf:	add al, 2 ; mov bh, 0xa ; ret
0x080d95e8:	push cs ; adc byte ptr [ecx + 0xa], al ; ret
0x080d981b:	or cl, byte ptr [esi] ; adc al, 0x44 ; ret
0x080d9a17:	dec esp ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d9b06:	add dword ptr [edx + ebp*2], 0xa ; ret
0x080d9b15:	dec esp ; or ecx, dword ptr [edi + 0xa] ; ret
0x080d9c58:	push esp ; push cs ; adc al, 0x41 ; ret
0x080d9d60:	dec ebx ; push cs ; adc al, 0x43 ; ret
0x080d9dd7:	jnp 0x10 ; or byte ptr [esi - 0x3d], al
0x080d9ed3:	add dh, byte ptr [ebx + 0xe] ; or al, 0xc3
0x080da125:	add bl, byte ptr [ebx + 0xe] ; add al, 0xc3
0x080da12e:	add al, byte ptr [esi + 0xe] ; add al, 0xc3
0x080da142:	mov byte ptr [ebx + 0xe], 4 ; ret
0x080da182:	mov byte ptr [ecx + 0xe], 4 ; ret
0x080da253:	add dh, byte ptr [edi + 0xe] ; or al, 0xc3
0x080da2eb:	add cl, byte ptr [edi + 0xe] ; add al, 0xc3
0x080da5d4:	add ecx, dword ptr [esi + 0xe] ; or bl, al
0x080da65e:	add dword ptr [edx + eax], -0x54 ; ret
0x080da685:	add cl, byte ptr [ecx + 0xe] ; add al, 0xc3
0x080da8a6:	bound eax, qword ptr [edx] ; push cs ; add al, 0xc3
0x080da8cd:	add ch, byte ptr [edx + 0xe] ; add al, 0xc3
0x080da8f3:	add al, byte ptr [edi + 0xe] ; add al, 0xc3
0x080da8fd:	add cl, ch ; push cs ; add al, 0xc3
0x080da925:	add bh, byte ptr [ebp + 0xe] ; add al, 0xc3
0x080da92f:	add bh, byte ptr [esi + ecx + 4] ; ret
0x080da9a6:	add dh, byte ptr [ebx + 0xe] ; add al, 0xc3
0x080da9af:	add ah, byte ptr [esi + 0xe] ; add al, 0xc3
0x080dab41:	int3 ; add dword ptr [esi], ecx ; or bl, al
0x080dafce:	add dword ptr [esi + edi*2], 0xa ; ret
0x080db0c9:	add ch, byte ptr [edx + 0xe] ; or al, 0xc3
0x080db0eb:	mov byte ptr [ecx + 0xe], 8 ; ret
0x080db0f5:	add bl, byte ptr [esi + 0xe] ; or bl, al
0x080db0fb:	fadd qword ptr [edx] ; push cs ; add al, 0xc3
0x080db14a:	or cl, byte ptr [esi] ; adc al, 0x4a ; ret
0x080db407:	add eax, 0xc30ab702
0x080db514:	add dword ptr [edx], 0x5b ; or al, bl
0x080db51a:	add al, 0x44 ; or eax, dword ptr [ecx - 0x3d]
0x080db55d:	add bl, byte ptr [eax + 0xe] ; add al, 0xc3
0x080db569:	add ebx, dword ptr [eax + 0xe] ; or bl, al
0x080db8d1:	add al, 0x42 ; or eax, dword ptr [esi - 0x3d]
0x080dba14:	dec ebp ; push cs ; or al, 0x41 ; ret
0x080dbb32:	push cs ; adc byte ptr [esi + 0xa], dl ; ret
0x080dbb40:	add al, 0x43 ; or eax, dword ptr [ebx - 0x3d]
0x080dbb6f:	add eax, 0xc30a7f02
0x080dbb7f:	add edx, ecx ; add dword ptr [edx], ecx ; ret
0x080dbc5f:	inc ebx ; push cs ; or al, 0x41 ; ret
0x080dbc74:	insb byte ptr es:[edi], dx ; sub ecx, edi ; inc ebx
0x080dbc8c:	add esp, dword ptr [ecx] ; add dword ptr [edx], ecx ; ret
0x080dbc9b:	or eax, dword ptr [edx] ; loop 0xe ; ret
0x080dbdf7:	add al, 0x60 ; push cs ; or al, 0xc3
0x080dbe7f:	rol dword ptr [ecx + 0xe], 4 ; ret
0x080dbf43:	add eax, 0xc30a9f02
0x080dbf51:	inc ebp ; or ecx, dword ptr [ebx + 0xa] ; ret
0x080dc0b2:	add cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc28b:	add al, 2 ; inc eax ; or al, bl
0x080dc299:	add al, 0x46 ; or eax, dword ptr [ecx - 0x3d]
0x080dc30c:	or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dc3d4:	add edx, dword ptr [ebx + 1] ; or al, bl
0x080dc4ba:	dec eax ; push cs ; adc al, 0x45 ; ret
0x080dc690:	add ebp, dword ptr [ecx + 7] ; or al, bl
0x080dc69f:	or eax, dword ptr [edx] ; dec byte ptr [edx] ; ret
0x080dc839:	push 0xc343140e
0x080dc8dc:	inc ebx ; push cs ; adc al, 0x41 ; ret
0x080dc90f:	add eax, 0xc30a6502
0x080dc958:	inc ebx ; push cs ; or al, 0x46 ; ret
0x080dc9eb:	add eax, 0xc30a4c02
0x080dca1c:	add edi, dword ptr [eax] ; add cl, byte ptr [edx] ; ret
0x080dca65:	dec ebx ; or eax, dword ptr [edx] ; pop ebp ; ret
0x080dd8b1:	pop ebp ; push cs ; adc al, 0x41 ; ret
0x080dd8e3:	add eax, 0xc30abc02
0x080dd8f0:	add al, 0x4b ; or ecx, dword ptr [ecx - 0x3d]
0x080dda55:	pop esp ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080ddb26:	inc edi ; push cs ; or byte ptr [ecx - 0x3d], al
0x080ddda3:	push eax ; push cs ; adc byte ptr [ebp - 0x3d], al
0x080de02e:	or esp, dword ptr [ebx + 0xe] ; add al, 0xc3
0x080de057:	add eax, 0xc30a5902
0x080de065:	inc esi ; or ebp, dword ptr [ecx + 0xa] ; ret
0x080de10b:	add eax, 0xc30ad002
0x080de11a:	or eax, dword ptr [edx] ; inc ebx ; or al, bl
0x080de1ab:	add eax, 0xc30a6802
0x080de21d:	push cs ; adc byte ptr [ebp + 0xa], al ; ret
0x080de250:	add dword ptr [edx], 0x7b ; or al, bl
0x080de2f0:	add dword ptr [edx], 0x7e ; or al, bl
0x080de2f6:	add al, 0x41 ; or ebx, dword ptr [ecx - 0x3d]
0x080de340:	jae 0x10 ; adc al, 0x41 ; ret
0x080de368:	add dword ptr [edx], 0x4d ; or al, bl
0x080de36e:	add al, 0x4a ; or edx, dword ptr [edx - 0x3d]
0x080de3af:	jo 0x10 ; adc byte ptr [ecx - 0x3d], al
0x080de4b4:	add esi, dword ptr [esi] ; add dword ptr [edx], ecx ; ret
0x080de502:	dec edi ; push cs ; or byte ptr [esi - 0x3d], al
0x080de6e3:	add al, 2 ; dec eax ; or al, bl
0x080de6f2:	inc esi ; or eax, dword ptr [edx] ; pushal ; ret
0x080de789:	jno 0x10 ; or al, 0x43 ; ret
0x080de7c4:	jne 0x10 ; or al, 0x43 ; ret
0x080de7e9:	add dword ptr [ebx], 2 ; dec ecx ; ret
0x080de895:	or eax, dword ptr [edx] ; lodsd eax, dword ptr [esi] ; or al, bl
0x080de8f8:	add ebx, dword ptr [esi + 7] ; or al, bl
0x080de927:	add eax, 0xc30ae502
0x080dea2d:	adc byte ptr [edx], al ; dec edx ; or al, bl
0x080dea5a:	inc edx ; or ebx, dword ptr [ecx + 0xa] ; ret
0x080dea8c:	add ebp, dword ptr [ecx + 1] ; or al, bl
0x080deab5:	add dword ptr [ebx], 0x6e ; or al, bl
0x080deabf:	add al, 0x47 ; or ecx, dword ptr [edx - 0x3d]
0x080deaec:	add ecx, dword ptr [ecx] ; push es ; or al, bl
0x080deb0a:	inc esi ; or eax, dword ptr [esi + 0xa] ; ret
0x080def9d:	dec eax ; push cs ; or al, 0x41 ; ret
0x080defee:	dec eax ; or edx, dword ptr [edx + 0xa] ; ret
0x080df04b:	dec ebx ; push cs ; adc al, 0x46 ; ret
0x080df11e:	add dword ptr [edx + eax], 0x47 ; ret
0x080df1d1:	or eax, dword ptr [edx] ; mov byte ptr [edx], cl ; ret
0x080df203:	add eax, 0xc30ae002
0x080df211:	inc edi ; or eax, dword ptr [edx] ; inc edx ; ret
0x080df270:	add esp, dword ptr [edx + 1] ; or al, bl
0x080df27e:	inc edi ; or edx, dword ptr [ecx + 0xa] ; ret
0x080df28d:	or eax, dword ptr [edx] ; insd dword ptr es:[edi], dx ; or al, bl
0x080df351:	dec esi ; push cs ; adc al, 0x46 ; ret
0x080df396:	add dword ptr [edx + eax], 0x49 ; ret
0x080df446:	add dword ptr [edx + eax], 0x52 ; ret
0x080df584:	dec eax ; or edi, dword ptr [edi + 0xa] ; ret
0x080df613:	add eax, 0xc30a7c02
0x080df624:	adc byte ptr cs:[eax + 0xa], ch ; ret
0x080df632:	dec eax ; or eax, dword ptr [esi + 0xa] ; ret
0x080df667:	add eax, 0xc30a7702
0x080df675:	dec ebx ; or edx, dword ptr [eax + 0xa] ; ret
0x080df688:	adc byte ptr [edx], al ; stosd dword ptr es:[edi], eax ; or al, bl
0x080df7b9:	inc ebp ; push cs ; adc al, 0x43 ; ret
0x080dfa33:	pop ecx ; push cs ; or byte ptr [ebx - 0x3d], al
0x080dfa66:	push esp ; push cs ; or al, 0x41 ; ret
0x080dfbb3:	pushal ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfc25:	dec edx ; push cs ; or al, 0x41 ; ret
0x080dfc95:	push eax ; push cs ; or al, 0x41 ; ret
0x080dfd72:	add al, 0x45 ; or ecx, dword ptr [ecx - 0x3d]
0x080dfdee:	add eax, dword ptr [edx] ; dec ecx ; or al, bl
0x080dfdf9:	inc esp ; or eax, dword ptr [edx] ; push esi ; ret
0x080dfebc:	inc edi ; push cs ; adc byte ptr [ebx - 0x3d], al
0x080e03a7:	popal ; push cs ; adc al, 0x43 ; ret
0x080e0433:	or al, 0xc6 ; push cs ; or bl, al
0x080e0464:	add bh, byte ptr [edi + 0xe] ; or al, 0xc3
0x080e0475:	add al, 0x42 ; push cs ; or al, 0xc3
0x080e048f:	add dl, byte ptr [esi + 0xe] ; or al, 0xc3
0x080e04a0:	add al, 0x75 ; push cs ; or al, 0xc3
0x080e04b1:	add al, 0x71 ; push cs ; or al, 0xc3
0x080e04c2:	add al, 0x73 ; push cs ; or al, 0xc3
0x080e04d3:	add al, 0x4d ; push cs ; or al, 0xc3
0x080e04e4:	add al, 0x4a ; push cs ; or al, 0xc3
0x080e0539:	add al, 0x4f ; push cs ; or al, 0xc3
0x080e0743:	add al, 0x72 ; push cs ; or al, 0xc3
0x080e08ea:	add eax, dword ptr [edx] ; jp 0xe ; ret
0x080e08f5:	inc ebx ; or ecx, dword ptr [eax + 0xa] ; ret
0x080e0995:	add dword ptr [ebx], 2 ; pop esp ; ret
0x080e0c01:	add al, byte ptr [edx] ; outsb dx, byte ptr [esi] ; or al, bl
0x080e0c08:	inc ecx ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0c0f:	inc ecx ; or eax, dword ptr [esi + 0xa] ; ret
0x080e0c15:	add al, 0x41 ; or eax, dword ptr [esi - 0x3d]
0x080e0d4d:	add al, byte ptr [edx] ; dec esp ; or al, bl
0x080e0d54:	inc ebx ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0d5b:	inc ebp ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0e2c:	pop eax ; push cs ; or al, 0x41 ; ret
0x080e0f0b:	push ebp ; push cs ; adc al, 0x41 ; ret
0x080e1068:	dec eax ; push cs ; or byte ptr [ebp - 0x3d], al
0x080e10ca:	add dword ptr [ecx + ecx*2], 0xa ; ret
0x080e110d:	adc byte ptr [edx], al ; pop ebx ; or al, bl
0x080e11eb:	or cl, byte ptr [esi] ; adc byte ptr [ebx - 0x3d], al
0x080e152f:	dec ebp ; push cs ; adc al, 0x41 ; ret
0x080e15a1:	add al, 0x46 ; or eax, dword ptr [edx] ; ret
0x080e163f:	push cs ; adc byte ptr [ebp + 0xa], ch ; ret
0x080e16ae:	pop edx ; push cs ; or al, 0x43 ; ret
0x080e16d5:	push eax ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e17ae:	jge 0x10 ; or byte ptr [ecx - 0x3d], al
0x080e1965:	add dword ptr [ebx], 0x6a ; or al, bl
0x080e1970:	dec ebx ; or eax, dword ptr [ecx + 0xa] ; ret
0x080e197a:	add al, 0x4e ; or eax, dword ptr [ebx - 0x3d]
0x080e19ca:	or dword ptr [ebx], eax ; add dl, byte ptr [ecx - 0x3d]
0x080e19d9:	add byte ptr [eax], al ; add byte ptr [eax], ah ; ret
0x080e19f9:	add byte ptr [eax], al ; add byte ptr [eax - 0x3d], al
0x080e1a85:	add byte ptr [eax], al ; add ah, cl ; ret
0x080e1b09:	add dword ptr [ebx], 2 ; inc ecx ; ret
0x080e1bc0:	add eax, 0xc30a4e02
0x080e1bd3:	inc edi ; or ecx, dword ptr [ecx + 0xa] ; ret
0x080e1be6:	inc esp ; or esi, dword ptr [edi + 0xa] ; ret
0x080e1c2b:	push 0xc304040c
0x080e1d4c:	add esi, edi ; add dword ptr [edx], ecx ; ret
0x080e1d5b:	or eax, dword ptr [edx] ; out 0xa, al ; ret
0x080e1d8c:	add esp, ebx ; add dword ptr [edx], ecx ; ret
0x080e1d9b:	or eax, dword ptr [edx] ; push eax ; or al, bl
0x080e1dcb:	add eax, 0xc30afb02
0x080e1e14:	pop ecx ; push cs ; adc al, 0x41 ; ret
0x080e1e8c:	inc edi ; push cs ; adc al, 0x43 ; ret
0x080e2638:	add edi, dword ptr [ecx + eax] ; or al, bl
0x080e279b:	add al, 2 ; ja 0xe ; ret
0x080e28c4:	add esp, dword ptr [eax] ; add al, 0xa ; ret
0x080e28f4:	add ebp, dword ptr [edi] ; add ecx, dword ptr [edx] ; ret
0x080e2904:	add esp, ecx ; add cl, byte ptr [edx] ; ret
0x080e2a79:	push esp ; push cs ; or al, 0x43 ; ret
0x080e2ab2:	push ecx ; push cs ; adc al, 0x41 ; ret
0x080e2ae8:	add edx, dword ptr [ecx + eax] ; or al, bl
0x080e2b52:	or cl, byte ptr [esi] ; adc byte ptr [eax - 0x3d], cl
0x080e2c21:	inc ebx ; push cs ; or al, 0x43 ; ret
0x080e2c46:	add eax, dword ptr [edx] ; inc esi ; or al, bl
0x080e2e5c:	inc eax ; dec edx ; push cs ; add al, 0xc3
0x080e2efa:	add dword ptr [eax + ebp*2], 0xa ; ret
0x080e2f08:	add al, 0x45 ; or ebp, dword ptr [edx - 0x3d]
0x080e3183:	push ebx ; push cs ; or al, 0x41 ; ret
0x080e31c3:	add eax, 0xc30ace02
0x080e326c:	add ecx, dword ptr [ecx] ; add ecx, dword ptr [edx] ; ret
0x080e3313:	add eax, 0xc30a4802
0x080e3479:	inc ebx ; push cs ; adc al, 0x46 ; ret
0x080e34ac:	add ecx, dword ptr [ecx] ; add dword ptr [edx], ecx ; ret
0x080e34bc:	add ebx, dword ptr [ebx] ; add cl, byte ptr [edx] ; ret
0x080e3880:	inc esi ; push cs ; or al, 0x41 ; ret
0x080e39fe:	dec esi ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e3a4d:	add dword ptr [ebx], 0x73 ; or al, bl
0x080e3a57:	add al, 0x4a ; or eax, dword ptr [ebx - 0x3d]
0x080e3b51:	adc byte ptr [ecx + 0xe], al ; or al, 0xc3
0x080e3b5f:	or eax, dword ptr [ebp + 0xe] ; or al, 0xc3
0x080e3bcf:	add eax, 0xc30ab602
0x080e3bde:	or eax, dword ptr [edx] ; outsb dx, byte ptr [esi] ; or al, bl
0x080e3c18:	add al, 0x57 ; push cs ; adc bl, al
0x080e400b:	inc esi ; or edx, dword ptr [edx + 0xa] ; ret
0x080e4064:	add eax, 0xc3100e74
0x080e409c:	add eax, 0xc30a8002
0x080e40af:	dec ecx ; or ecx, dword ptr [edx + 0xa] ; ret
0x080e40c2:	inc esi ; or esi, dword ptr [edx + ecx - 0x3d]
0x080e4143:	push eax ; push cs ; adc al, 0x41 ; ret
0x080e4268:	and byte ptr cs:[edx + 0xa], ah ; ret
0x080e4274:	inc edi ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080e42ab:	and byte ptr [edx], al ; js 0xe ; ret
0x080e42b9:	inc edi ; or esp, dword ptr [edx + 0xa] ; ret
0x080e4854:	push esi ; push cs ; adc al, 0x41 ; ret
0x080e4981:	add dword ptr [ebx], 0x59 ; or al, bl
0x080e498b:	add al, 0x42 ; or eax, dword ptr [ecx - 0x3d]
0x080e49ca:	add dword ptr [edx + eax], 0x5a ; ret
0x080e4a01:	inc esi ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4a28:	add edx, dword ptr [edi] ; or cl, byte ptr [edx] ; ret
0x080e4c13:	add eax, 0xc3017803
0x080e4c50:	add ebx, esp ; add dword ptr [edx], ecx ; ret
0x080e4c7f:	add eax, 0xc30afd02
0x080e4cc0:	add edi, dword ptr [edi] ; add cl, byte ptr [edx] ; ret
0x080e4cd0:	add ecx, dword ptr [eax] ; add dword ptr [edx], ecx ; ret
0x080e4cde:	inc ecx ; or ebx, dword ptr [edi + 0xa] ; ret
0x080e4d8a:	add dword ptr [esi], ecx ; adc al, 0x41 ; ret
0x080e4df8:	add al, 0x5a ; push cs ; adc bl, al
0x080e4e3a:	popal ; push cs ; adc al, 0x41 ; ret
0x080e4f4b:	and byte ptr [edx], al ; inc ebx ; or al, bl
0x080e5015:	push edi ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e5047:	inc ebx ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e50d3:	push cs ; adc byte ptr [eax + 0xa], bl ; ret
0x080e53cf:	inc ebp ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e5435:	inc ebx ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e5770:	push edi ; push cs ; or al, 0x41 ; ret
0x080e69a8:	push cs ; shr byte ptr [edx + eax - 0x3d], 1
0x080e6d58:	add eax, 0xc30a4a02
0x080e6d6a:	add al, 0x47 ; or eax, dword ptr [ecx - 0x3d]
0x080e6fec:	int3 ; push cs ; adc al, 0x43 ; ret
0x080e721f:	in eax, dx ; push cs ; adc al, 0x41 ; ret
0x080e7253:	add al, 2 ; push ebx ; or al, bl
0x080e7261:	add al, 0x43 ; or eax, dword ptr [ecx - 0x3d]
0x080e738f:	inc esi ; push cs ; adc al, 0x43 ; ret
0x080e742e:	jp 0x10 ; or al, 0x41 ; ret
0x080e7474:	dec edx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e75cb:	inc ebp ; or ecx, dword ptr [edi + 0xa] ; ret
0x080e76cf:	add eax, 0xc30a6602
0x080e76dc:	add al, 0x41 ; or ecx, dword ptr [ecx - 0x3d]
0x080e7b21:	pop ebx ; push cs ; adc al, 0x46 ; ret
0x080e7b66:	js 0x10 ; adc al, 0x41 ; ret
0x080e7c66:	add al, 0x43 ; or ecx, dword ptr [ebp - 0x3d]
0x080e7cae:	add al, 0x43 ; or edx, dword ptr [eax - 0x3d]
0x080e7d06:	dec eax ; push cs ; or al, 0x45 ; ret
0x080e7d4a:	add al, 0x44 ; or edx, dword ptr [eax - 0x3d]
0x08049a32:	mov eax, dword ptr [edx + 0xc] ; mov ebx, ecx
0x08049abe:	mov dword ptr [ebp - 0x38], eax ; jmp 0xffffffd0
0x08049aca:	adc byte ptr [eax], al ; add cl, ch ; retf
0x0804b07c:	mov eax, dword ptr [edi - 4] ; bswap ebx
0x0804b475:	add al, 0x74 ; add cl, byte ptr [edi] ; retf
0x0804bc09:	cli ; js 0x12 ; test cl, bl
0x0804d6d3:	xlatb ; push esi ; push ebx ; mov ebx, ecx
0x08050776:	add byte ptr [eax], al ; add byte ptr [ecx], ch ; retf
0x08051d55:	mov ebx, dword ptr [esi + 8] ; sub ebx, ecx
0x08051d97:	add esp, 0x10 ; sub ebx, ecx
0x08051dc0:	add esp, 0x10 ; add ebx, ecx
0x08052793:	cli ; bound ecx, qword ptr [edi] ; test cl, bl
0x080531c0:	leave ; je 0x21 ; cmp ebx, ecx
0x08053a6f:	fnstenv dword ptr [ebx + 0x2d] ; sub ebx, ecx
0x080550db:	shr ebx, 3 ; xor ebx, ecx
0x0805512a:	mov byte ptr [eax + ebx], cl ; sub ebx, ecx
0x080555bf:	fld dword ptr [ecx] ; shl dword ptr [ecx], cl ; retf
0x080559d4:	fild qword ptr [ecx] ; jmp 0xffffff87 ; retf
0x08055fa8:	add byte ptr [ecx], bh ; ret ; jne 0xffffffd0
0x08056a9c:	jmp 3 ; ret 0xcb83
0x08057331:	inc esp ; and al, 8 ; mov ebx, ecx
0x08057357:	pop esp ; and al, 0x3c ; mov ebx, ecx
0x08059325:	les ecx, ptr [ecx + ebp*8] ; xchg eax, esp ; retf
0x0805a15a:	mov dword ptr [ebx + 8], eax ; mov ebx, ecx
0x0805b010:	add al, 0x73 ; dec edi ; mov ebx, ecx
0x0805ca34:	movdqa xmmword ptr [edx - 0x35], xmm0
0x0805d0ae:	and byte ptr [esi + 0xf], ah ; outsd dx, dword ptr [esi] ; retf
0x080615bf:	nop ; pcmpeqb xmm1, xmm3
0x080631be:	add byte ptr [eax], al ; push ebx ; mov ebx, ecx
0x0806321e:	enter -0x35ff, 0x29 ; retf
0x080634e0:	movdqu xmm1, xmmword ptr [eax - 0x35]
0x080634e5:	movdqu xmm2, xmmword ptr [edx - 0x35]
0x08063f6f:	rol dword ptr [ecx], 1 ; movaps xmm1, xmm3
0x08063f9f:	push ecx ; pop ds ; movaps xmm1, xmm3
0x080640af:	rol dword ptr [edx], 1 ; movaps xmm1, xmm3
0x080640df:	push ecx ; push ds ; movaps xmm1, xmm3
0x080641ef:	rol dword ptr [ebx], 1 ; movaps xmm1, xmm3
0x0806432f:	rol dword ptr [edi + ecx], 1 ; sub bl, cl
0x0806435f:	push ecx ; sbb al, 0xf ; sub bl, cl
0x0806448f:	push ecx ; sbb ecx, dword ptr [edi] ; sub bl, cl
0x0806458f:	rol dword ptr [esi], 1 ; movaps xmm1, xmm3
0x080645bf:	push ecx ; sbb cl, byte ptr [edi] ; sub bl, cl
0x080646bf:	rol dword ptr [edi], 1 ; movaps xmm1, xmm3
0x080646ef:	push ecx ; sbb dword ptr [edi], ecx ; sub bl, cl
0x080647ef:	ror dword ptr [eax], 1 ; movaps xmm1, xmm3
0x0806481f:	push ecx ; sbb byte ptr [edi], cl ; sub bl, cl
0x0806491f:	ror dword ptr [ecx], 1 ; movaps xmm1, xmm3
0x0806494f:	push ecx ; pop ss ; movaps xmm1, xmm3
0x08064a4f:	ror dword ptr [edx], 1 ; movaps xmm1, xmm3
0x08064a7f:	push ecx ; push ss ; movaps xmm1, xmm3
0x08064b7f:	ror dword ptr [ebx], 1 ; movaps xmm1, xmm3
0x08064caf:	ror dword ptr [edi + ecx], 1 ; sub bl, cl
0x08064cdf:	push ecx ; adc al, 0xf ; sub bl, cl
0x08064e0f:	push ecx ; adc ecx, dword ptr [edi] ; sub bl, cl
0x08064f0f:	ror dword ptr [esi], 1 ; movaps xmm1, xmm3
0x08064f3f:	push ecx ; adc cl, byte ptr [edi] ; sub bl, cl
0x0806503f:	ror dword ptr [edi], 1 ; movaps xmm1, xmm3
0x0806506f:	push ecx ; adc dword ptr [edi], ecx ; sub bl, cl
0x08066e02:	pmovmskb eax, mm0 ; sub ebx, ecx
0x0806af7f:	fbld dword ptr [esi + 0xf] ; je 0xffffffd0
0x0806b5ad:	stc ; add byte ptr [edi], cl ; test cl, bl
0x0806b987:	and ecx, 0xfffffff0 ; mov ebx, ecx
0x0806b9e0:	sub ebx, 1 ; jne 0xffffffd0
0x0806cbc9:	add byte ptr [eax], al ; add cl, ch ; retf
0x0806cdc9:	adc byte ptr [ebx], al ; add cl, ch ; retf
0x0806dd6d:	jmp 0xffffff8b ; stc ; cmp bl, cl
0x0806ed65:	mov edi, dword ptr [edx + 4] ; cmp ebx, ecx
0x08070351:	into ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x08070384:	wait ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x08070395:	fnsave dword ptr [ebp - 0x78] ; jmp 0xffffffd0
0x080703fc:	sub ecx, 1 ; mov ebx, ecx
0x08070a71:	mov eax, dword ptr [ebp - 0x2c] ; mov ebx, ecx
0x08070ae0:	mov byte ptr [ebx], 0 ; mov ebx, ecx
0x08071dc4:	mov esi, 0xcb890173
0x080724da:	or byte ptr [ebx - 0x18], dl ; fxch st(0), st(3)
0x08072ea8:	add esi, 4 ; cmp ebx, ecx
0x08072ecd:	add edx, 4 ; cmp ebx, ecx
0x080739e3:	pop esp ; mov dword ptr [ebx], edx ; mov ebx, ecx
0x08074bcd:	and ecx, 7 ; sub ebx, ecx
0x08075952:	aas ; or esi, ebp ; cmp ebx, ecx
0x080779e5:	push ebx ; mov esi, edx ; mov ebx, ecx
0x08078b1f:	jl 0xffffff9e ; sbb byte ptr [ecx], al ; retf
0x08078d15:	push ebx ; mov esi, eax ; mov ebx, ecx
0x08078d32:	in al, dx ; or byte ptr [eax + 1], ch ; retf
0x08078d5d:	or bh, al ; add byte ptr [ecx], al ; retf
0x0807930d:	cmove ebx, esi ; cmp ebx, ecx
0x08079c0e:	fsubr dword ptr [ecx] ; salc ; mov ebx, ecx
0x0807aa11:	xor byte ptr [ecx], ch ; cli ; cmp ebx, ecx
0x0807bb41:	je 0x3f ; movsx ecx, bl
0x0807d29b:	add dword ptr [eax], eax ; add byte ptr [ecx], al ; retf
0x0807f7d8:	inc ebp ; adc byte ptr [edi], cl ; test cl, bl
0x080800f6:	and al, 0x75 ; mov ebp, ecx ; retf
0x08081aec:	add edx, 1 ; cmp ebx, ecx
0x08081b37:	test byte ptr [edi + eax - 0x77], dh ; retf
0x08081e73:	lea eax, dword ptr [esi + ecx*4] ; add ebx, ecx
0x08082416:	sbb bh, bh ; cmove ecx, ebx
0x08083093:	ret 0xd889 ; cmp ebx, ecx
0x08083558:	sub ecx, 1 ; sub ebx, ecx
0x080840e1:	mov esi, dword ptr [edi] ; movsx ecx, bl
0x0808411f:	mov edx, dword ptr [eax] ; movsx ecx, bl
0x08085ffc:	mov ecx, dword ptr [eax + 0x14] ; cmp ebx, ecx
0x0808b5ec:	mov ebx, dword ptr [ebp + 0x14] ; sub ebx, ecx
0x0808b833:	mov eax, dword ptr [eax + 0x20] ; jmp 0xffffffd0
0x0808ba7a:	mov ebx, dword ptr [ebp + 4] ; sub ebx, ecx
0x0808be40:	sal byte ptr [edx + ecx - 0x3f], 0xcb
0x0808c589:	inc byte ptr [edi + 0xf] ; test ecx, ebx
0x0808e259:	sal byte ptr [edx + ecx - 0x3f], cl ; retf
0x0808ecb7:	add byte ptr [eax], al ; cmova ecx, ebx
0x0808fb47:	in al, dx ; or byte ptr [eax + 0x30], ch ; retf
0x0808fb61:	in al, dx ; or al, 0x68 ; pop es ; retf
0x08090d41:	sti ; ljmp ptr [eax - 0x70] ; retf
0x08091254:	xor eax, eax ; jmp 0xffffffd0
0x08093b4f:	inc esp ; and al, 8 ; xor ebx, ecx
0x080942e0:	add byte ptr [eax], al ; add dword ptr [ebp - 0x35], esi
0x080952cf:	insb byte ptr es:[edi], dx ; and al, 0x30 ; mov ebx, ecx
0x080957b5:	shl ecx, 5 ; add ebx, ecx
0x08095b16:	ret ; xor ecx, edx ; or ebx, ecx
0x080966ff:	add al, byte ptr [eax] ; add byte ptr [ecx], ch ; retf
0x08096e2e:	mov edx, dword ptr [ebp + 8] ; mov ebx, ecx
0x080983f7:	or al, 0x89 ; ret ; sub ebx, ecx
0x080984e8:	test dword ptr [ebp - 0x20], edx ; jne 0xffffffd0
0x08098d23:	push edi ; push esi ; push ebx ; mov ebx, ecx
0x080997dd:	push cs ; or byte ptr [eax - 0x18], dl ; retf
0x08099b20:	dec esp ; and al, 0xc ; je 0xffffffd0
0x0809a30d:	loope 0xe ; or al, ch ; retf
0x0809bb1c:	and al, 0x89 ; stc ; cmp bl, cl
0x0809bc70:	sal byte ptr [ebp + edi + 0x79], 0xcb
0x0809bc77:	add dword ptr [ecx], edi ; fidivr word ptr [ebp - 0x35]
0x0809cc75:	push dword ptr [ebp - 0x78] ; mov ebx, ecx
0x0809d170:	loopne 0xffffff8b ; ret 0xcb01
0x0809ecdf:	pop esp ; and al, 8 ; mov ebx, ecx
0x0809ef06:	or ebx, 1 ; add ebx, ecx
0x0809ef0c:	fidiv word ptr [edi + edi - 0x77] ; retf
0x0809ef20:	mov ebx, esi ; push ebp ; and ebx, ecx
0x0809f39e:	shr ecx, 0x1f ; cmp bl, cl
0x0809faf7:	inc ebp ; mov al, 0xf ; test cl, bl
0x080a0c42:	and eax, 0xfffffff0 ; mov ebx, ecx
0x080a1117:	mov dword ptr [ebp + 0xc], ebx ; mov ebx, ecx
0x080a2243:	add dword ptr [ecx], edi ; ret ; je 0xffffffd0
0x080a282b:	lea ecx, dword ptr [edi + 2] ; mov ebx, ecx
0x080a6414:	inc dword ptr [ecx] ; cmove ecx, ebx
0x080a651a:	lea edi, dword ptr [eax + ebx] ; mov ebx, ecx
0x080a66c8:	sar bh, 0xff ; mov ebx, ecx
0x080a8d79:	enter -0x2877, -0x77 ; retf
0x080a8fd2:	xor esi, esi ; push ebx ; mov ebx, ecx
0x080a9458:	add byte ptr [eax], al ; imul ecx, ebx
0x080aa3a8:	cmp ecx, 9 ; jne 0xffffffd0
0x080abbf6:	inc esp ; and al, 0x20 ; mov ebx, ecx
0x080abe43:	pop esp ; and al, 0x7c ; mov ebx, ecx
0x080ac926:	or eax, 0xcbc3e808
0x080ac960:	or eax, 0xcb89e808
0x080af029:	add byte ptr [eax], al ; lea edi, dword ptr [eax - 0x35]
0x080b258f:	dec dword ptr [edi] ; add byte ptr [ecx], cl ; retf
0x080b727d:	add byte ptr [eax + 0xf], al ; test cl, bl
0x080b815d:	add al, 0x89 ; fsubr st(0) ; retf
0x080b90ad:	call 0xcbe8e88e
0x080ba438:	cmp edx, 0xfd ; ja 0xffffffd0
0x080ba7af:	scasb al, byte ptr es:[edi] ; push cs ; or byte ptr [ecx], al ; retf
0x080bc951:	retf 0x805 ; adc ecx, ebx
0x080bc991:	retf 0x805 ; push cs ; retf
0x080bc9d1:	retf 0x805 ; or ebx, ecx
0x080bca11:	retf 0x805 ; add al, 0xcb
0x080bca55:	retf 0x805 ; das ; retf
0x080bca95:	retf 0x805 ; sub cl, bl
0x080bcb15:	retf 0x805 ; and bl, cl
0x080bd8e1:	retf 0x806 ; or ebx, ecx
0x080bd8e5:	retf ; push es ; or byte ptr [ebx], dl ; retf
0x080bd8ed:	retf ; push es ; or byte ptr [edi], ah ; retf
0x080bd8f1:	retf ; push es ; or byte ptr [ecx], dh ; retf
0x080bd8f5:	retf ; push es ; or byte ptr [ebx], bh ; retf
0x080bd8f9:	retf ; push es ; or byte ptr [ebp - 0x35], al
0x080bd8fd:	retf ; push es ; or byte ptr [edi - 0x35], cl
0x080bd901:	retf ; push es ; or byte ptr [ecx - 0x35], bl
0x080bd905:	retf ; push es ; or byte ptr [ebx - 0x35], ah
0x080bd909:	retf ; push es ; or byte ptr [ebp - 0x35], ch
0x080bd90d:	retf ; push es ; or byte ptr [edi - 0x35], dh
0x080bd931:	iretd ; push es ; or cl, dl ; retf
0x080bd935:	retf ; push es ; or bl, bl ; retf
0x080bd939:	retf ; push es ; or ch, ah ; retf
0x080bd93d:	retf ; push es ; or bh, ch ; retf
0x080bd941:	retf ; push es ; or cl, bh ; retf
0x080bd994:	ror esp, 6 ; or bl, cl
0x080bda15:	int3 ; push es ; or bh, al ; retf
0x080bdb64:	or ebp, ecx ; push es ; or bl, cl
0x080bf9dd:	add byte ptr [eax], al ; add byte ptr [ecx], al ; retf
0x080bfa55:	fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080bfa59:	retf ; or al, 8 ; dec esp ; retf
0x080c02e8:	retf 0 ; add bl, cl
0x080c609c:	enter 0, 0 ; retf
0x080c66c0:	lds eax, ptr [edi] ; add byte ptr [eax], al ; retf
0x080c6a48:	enter 0xa, 0 ; retf
0x080c6e48:	enter 0xd, 0 ; retf
0x080c7248:	enter 0x10, 0 ; retf
0x080c75c4:	add byte ptr [eax], al ; add byte ptr [eax], al ; retf
0x080cb53d:	or dword ptr [eax + ecx], ecx ; add ebx, ecx
0x080cb541:	retf ; or al, 8 ; add ebx, ecx
0x080cba15:	into ; pop es ; or al, al ; retf
0x080cbfa0:	retf ; jle 0xb ; or bl, cl
0x080cbfcc:	jnp 0x7c ; or byte ptr [eax], cl ; retf
0x080cc0e8:	xchg byte ptr [bx + si], cl ; or bl, cl
0x080cf01d:	mov ah, 0xc ; or byte ptr [ecx], al ; retf
0x080cffc6:	mov ebx, 0xcb64f32d
0x080d046c:	dec ebp ; push eax ; xor byte ptr [ecx], ah ; retf
0x080d04da:	push eax ; lodsb al, byte ptr [esi] ; xchg eax, edx ; pop ebx ; retf
0x080d05c4:	shr al, cl ; add al, 0x3d ; retf
0x080d0707:	xchg eax, edi ; jo 0x69 ; salc ; retf
0x080d0fac:	dec edx ; ret 0x1b49 ; retf
0x080d12ff:	push ecx ; test al, 0xf2 ; dec ebp ; retf
0x080d146f:	test eax, 0xcb6e35ee
0x080d1db3:	inc ecx ; outsb dx, byte ptr [esi] ; sbb edi, ebp ; retf
0x080d1e7c:	out 0x78, al ; jnp 0x5e ; retf
0x080d1ea1:	cld ; lodsb al, byte ptr [esi] ; loop 0xffffffcb ; retf
0x080d1fad:	loope 0x7e ; pop edx ; leave ; retf
0x080d2022:	xor al, 0x5c ; sbb ebp, ebx ; retf
0x080d21eb:	inc edi ; js 0xfffffff5 ; pushal ; retf
0x080d23e5:	and dword ptr [eax - 0x52], ecx ; adc ebx, ecx
0x080d28da:	mov ds, word ptr [edx + edx - 0x71] ; retf
0x080d291c:	mov eax, dword ptr [0xcb584ce4]
0x080d2ee3:	push cs ; and byte ptr [ebx + 0x3d], bh ; retf
0x080d2f91:	je 0x7d ; sar byte ptr [ebx - 0x35], 1
0x080d4c15:	xchg eax, edx ; and al, 9 ; or bl, cl
0x080d521d:	int 0xfc ; inc dword ptr [eax - 0x35]
0x080d5221:	retf ; cld ; inc dword ptr [eax - 0x35]
0x080d8b95:	xor al, 0 ; add byte ptr [eax], cl ; retf
0x080d8c21:	xor eax, 0xcb2c0000
0x080d8c59:	xor eax, 0xcbe40000
0x080dca04:	cmp al, 0x5a ; stc ; dec ebx
0x080dd484:	add al, 0x4a ; or eax, dword ptr [ebx] ; retf
0x080ddb09:	test byte ptr [eax], al ; add ah, dh ; retf
0x080ddb35:	test byte ptr [eax], al ; add al, bh ; retf
0x080de5c9:	pop dword ptr [eax] ; add byte ptr [ebx + ecx*8], al
0x080de5dd:	pop dword ptr [eax] ; add byte ptr [eax], dl ; retf
0x080de605:	pop dword ptr [eax] ; add byte ptr [eax], bl ; retf
0x080de62d:	pop dword ptr [eax] ; add byte ptr [eax], ah ; retf
0x080dece1:	push cs ; rol byte ptr [edx], 2 ; retf
0x080df031:	inc ebx ; push cs ; sub byte ptr [edx], al ; retf
0x080e0355:	lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; sbb bl, cl
0x080e03c1:	lodsd eax, dword ptr [esi] ; add byte ptr [eax], al ; jl 0xffffffd0
0x080e0415:	lodsd eax, dword ptr [esi] ; add byte ptr [eax], al ; fmul st(3)
0x080e4d35:	test byte ptr [eax], 0 ; mov bl, cl
0x080b75d2:	or ah, byte ptr [esi + 0x3d] ; syscall
0x080bb82b:	add eax, 0x50f3008
0x080d2661:	scasd eax, dword ptr es:[edi] ; daa ; push esp ; syscall
0x080b75cc:	add eax, 0x80cd3d66
0x080d247d:	fstp xword ptr [edi] ; imul ecx, ebp, -0x80
0x080481ad:	scasd eax, dword ptr es:[edi] ; add eax, 0xc3810000
0x080483c6:	add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x08048471:	add eax, dword ptr [ebx - 0x3c7c0036]
0x0804847c:	mov eax, edx ; pop ebx ; pop esi ; pop edi ; ret
0x080484cc:	sub al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x08048795:	add esp, 0x10 ; leave ; ret
0x0804880e:	push cs ; or byte ptr [ecx], al ; leave ; ret
0x0804889a:	pop ecx ; pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x080488b2:	add esp, 0x10 ; nop ; leave ; ret
0x08048bb9:	add bl, byte ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x08048c1d:	inc esp ; sete al ; test al, bl
0x08048f7d:	insb byte ptr es:[edi], dx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080490b5:	test dword ptr [edi], 0xc389c7af
0x080492c0:	mov al, byte ptr [0xc031080e] ; ret
0x0804937b:	sbb al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x08049401:	or byte ptr [edi], cl ; inc ebp ; mov ebx, eax
0x08049488:	and byte ptr [ebx - 0x3c760008], al
0x08049538:	add byte ptr [eax], al ; add esp, 0x2c ; ret
0x08049540:	push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08049597:	enter 0x5e5b, 0x5f ; pop ebp ; ret
0x080495f6:	mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x0804961c:	inc dword ptr [ebx - 0x3c76f501]
0x08049760:	add esp, 4 ; pop ebx ; pop esi ; ret
0x0804985a:	sti ; cmovb eax, ecx ; mov ebx, eax
0x08049eb3:	push eax ; mov dword ptr [ebp - 0x44], eax ; mov ebx, eax
0x08049f82:	or byte ptr [ebx - 0x3c7cfe3e], al
0x0804a04e:	les edx, ptr [eax] ; test eax, eax ; mov ebx, eax
0x0804a21f:	sbb eax, 0x89000301 ; ret
0x0804a399:	add byte ptr [ebx - 0x3c76ef3c], al
0x0804a4f0:	fcomp dword ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x0804a53b:	adc byte ptr [ebx - 0x3c7cfe3e], al
0x0804a617:	and eax, 0x890002fd ; ret
0x0804a7d8:	add byte ptr [eax], 0 ; cmove eax, ebx
0x0804a903:	inc dword ptr [ebx - 0x3c76f33c]
0x0804a932:	mov edi, ecx ; push esi ; push ebx ; mov ebx, eax
0x0804aae5:	mov edx, dword ptr [esp + 0xc] ; mov ebx, eax
0x0804aba2:	in eax, 0x57 ; push esi ; push ebx ; mov ebx, eax
0x0804aca4:	hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ad2c:	add byte ptr [ebx - 0x3c760008], al
0x0804b464:	js 0xa ; dec dword ptr [edi] ; xchg eax, ebp ; ret
0x0804b5a7:	dec dword ptr [ebx - 0x3cfe70e4]
0x0804b7e3:	inc dword ptr [ebx - 0x3c7c0037]
0x0804c05e:	adc byte ptr [ecx - 0x3c7af0e9], cl
0x0804c43f:	rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x0804c56e:	rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; pop ebp ; ret
0x0804c6b5:	push edi ; jmp 3 ; add byte ptr [ecx], ch ; ret
0x0804c838:	aam 0xe9 ; add byte ptr [eax], al ; sub ebx, eax
0x0804c898:	je 0xffffffeb ; add byte ptr [eax], al ; sub ebx, eax
0x0804c9ba:	inc dword ptr [ebx - 0x3c7cf314]
0x0804cba2:	cmp byte ptr [ebp - 0x3c7cf7f4], dh
0x0804cbdd:	call 0x5d5f5e60 ; ret
0x0804cc84:	js 3 ; add byte ptr [eax], al ; mov ebx, eax
0x0804ce10:	inc dword ptr [ebx - 0x3c76ef3c]
0x0804ce41:	inc dword ptr [ebx - 0x3c76fd32]
0x0804ce61:	sal byte ptr [esp + 0x53], 0x89 ; ret
0x0804ce84:	add esp, 0x18 ; pop ebx ; ret
0x0804ceb2:	mov ebp, edx ; push esi ; push ebx ; mov ebx, eax
0x0804d060:	lea eax, dword ptr [edx + eax - 2] ; cmp ebx, eax
0x0804d165:	lea eax, dword ptr [esp + 0x30] ; cmp ebx, eax
0x0804d7d3:	test dl, dl ; jne 0xffffffe4 ; ret
0x0804d810:	push 0xc ; mov dword ptr [edx + 0x18], eax ; ret
0x0804d944:	insb byte ptr es:[edi], dx ; mov dl, 0xe ; or al, ch ; ret
0x0804daf1:	add eax, dword ptr [ebx - 0x3c7cfe11]
0x0804dbd1:	cmp al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x0804de54:	push eax ; cld ; add edx, edi ; cmp ebx, eax
0x0804dedb:	add al, 0xf7 ; jne 0x14 ; mov ebx, eax
0x0804e321:	jg 2 ; add byte ptr [eax], al ; mov ebx, eax
0x0804e408:	xor eax, eax ; add esp, 0xc ; ret
0x0804e75a:	lcall ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x0804ec06:	add byte ptr [eax], al ; add esp, 0x1c ; ret
0x0804ef22:	mov eax, edx ; pop ebx ; pop esi ; pop ebp ; ret
0x0804f068:	les ecx, ptr [eax] ; mov eax, ebx ; pop ebx ; ret
0x0804f09e:	add byte ptr es:[ecx], dh ; fucomi st(3) ; ret
0x0804f959:	push ebp ; call dword ptr [eax + 0x40] ; mov ebx, eax
0x0804f96f:	sbb al, 0x8b ; dec ebp ; pop eax ; mov ebx, eax
0x0804f9f2:	dec esp ; mov edx, dword ptr [ebp + 0x50] ; mov ebx, eax
0x0804fa77:	cli ; mov edi, dword ptr [ebp + 0x20] ; mov ebx, eax
0x0804fafd:	jl 0x26 ; adc al, 0x99 ; mov ebx, eax
0x0804fb77:	mov edx, dword ptr [esp + 4] ; mov ebx, eax
0x0804fbac:	sar ebx, 2 ; imul eax, ebx
0x0805017a:	add esp, 0x14 ; pop ebx ; pop esi ; ret
0x08050675:	xor eax, eax ; pop ebx ; pop esi ; pop edi ; ret
0x080507bf:	mov eax, edi ; sub eax, ebx ; mov ebx, eax
0x0805080c:	add byte ptr [ebx - 0x3cd6ef3c], al
0x080508ea:	add byte ptr [ebx - 0x3c76f314], al
0x080509ac:	test eax, eax ; mov dword ptr [esi], eax ; je 0xffffffc9
0x08050cd5:	mov dword ptr [esi], edi ; pop ebx ; pop esi ; pop edi ; ret
0x08050d0e:	add byte ptr [eax], al ; xor eax, eax ; jmp 0xffffffc9
0x08050d4a:	push eax ; add esp, 8 ; pop ebx ; ret
0x08050dc3:	fadd dword ptr [ebx - 0x3ca4f73c]
0x08050e36:	or byte ptr [ebx - 0x3ca4f73c], al
0x08050e41:	push esi ; mov edi, edx ; push ebx ; mov ebx, eax
0x08050ea3:	les edx, ptr [eax] ; pop ebx ; pop esi ; pop edi ; ret
0x0805128c:	clc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805146d:	mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x0805166c:	dec dword ptr [ebp - 0x3cc6ff8a]
0x080517bc:	or eax, dword ptr [ebx - 0x3ca4f73c]
0x08051c63:	add dword ptr [eax], eax ; add esp, 0x1c ; ret
0x08051cfb:	or al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x08051eda:	pop esi ; sub eax, ebp ; pop edi ; pop ebp ; ret
0x08052122:	add byte ptr [ebx - 0x3ca4f73c], al
0x080523c8:	inc dword ptr [ebx - 0x3ca4e73c]
0x0805244c:	mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x080524c9:	jae 0xffffffe3 ; add dword ptr [eax], eax ; mov ebx, eax
0x08052537:	mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x08052546:	pop ebx ; xor eax, eax ; pop esi ; pop edi ; ret
0x080527cb:	test byte ptr [ebx - 0x3c7cf714], al
0x08052886:	cmp bl, 2 ; setbe bl
0x08052a72:	add byte ptr [eax], dl ; add byte ptr [eax], al ; mov ebx, eax
0x08052c67:	mov dh, 0xc0 ; pop ebx ; pop esi ; pop edi ; ret
0x080530e5:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov ebx, eax
0x08053522:	test edx, edx ; jne 0xfffffff6 ; ret
0x08053550:	push eax ; or al, 0x89 ; push eax ; add al, 0xc3
0x08053582:	and al, 0x89 ; push eax ; add al, 0x5b ; ret
0x08053643:	add byte ptr [ebx - 0x3ca4e73c], al
0x0805387f:	add eax, dword ptr [ebx - 0x3ca4f73c]
0x080538bc:	je 0xc ; pop ebx ; pop esi ; pop edi ; ret
0x08053906:	mov dword ptr [ebx], eax ; pop ebx ; pop esi ; pop edi ; ret
0x08053930:	mov eax, 0xffffffff ; ret
0x08053a20:	sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08053a8e:	pop es ; add eax, 1 ; cmp ebx, eax
0x08053b5c:	add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; ret
0x08053bbd:	push edx ; and al, 0x83 ; les ebp, ptr [ebx + eax*8]
0x08053c0e:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; ret
0x08053ce3:	pop esp ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x08053e8f:	add byte ptr [eax], al ; add byte ptr [eax], al ; pop ebx ; ret
0x08053f0b:	or al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x08053f55:	mov edx, 0xffffffff ; ret
0x08053fcc:	out dx, eax ; add esp, 8 ; pop ebx ; ret
0x08053fee:	fild dword ptr [ebx - 0x3ca4f73c]
0x0805402e:	and al, 8 ; add eax, ebx ; pop ebx ; ret
0x08054039:	rol byte ptr [ebx - 0x3ca4fe18], 1
0x08054552:	add byte ptr [edx], al ; add byte ptr [eax], al ; jne 0xffffffc9
0x08054670:	test eax, eax ; jne 0xfffffff8 ; ret
0x08054678:	xor byte ptr [ebx - 0x3cfd76ff], cl
0x08054689:	inc eax ; or byte ptr [ebx], ch ; inc edx ; or bl, al
0x080546a9:	mov eax, dword ptr [ecx + 8] ; sub eax, edx ; ret
0x080546fe:	add al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0xc3
0x080547a7:	mov byte ptr [edi - 1], bl ; movzx eax, bl
0x08054920:	mov eax, dword ptr [0x80ea080] ; ret
0x08054942:	and al, 4 ; mov eax, dword ptr [eax + 0x34] ; ret
0x0805494f:	add byte ptr [ebx - 0x3cfbdbbc], cl
0x080549de:	mov eax, dword ptr cs:[0xc3f30001]
0x08054a09:	or byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x08054a3a:	sbb eax, 0x5b02b60f ; ret
0x08054e89:	pop ebx ; pop esi ; pop edi ; cdq ; pop ebp ; ret
0x08055045:	or byte ptr [ebx - 0x3ca4e73c], al
0x0805505c:	inc edx ; or byte ptr [ebx], ch ; inc edx ; or al, 0xc3
0x0805509f:	retf -0x76ff ; push eax ; add al, 0xc3
0x08055228:	mov eax, ebp ; pop esi ; pop edi ; pop ebp ; ret
0x08055602:	push cs ; or byte ptr [ecx], ch ; sti ; add ebx, eax
0x08055609:	or byte ptr [ebp - 0x3cc6f7f2], ah
0x080556ae:	clc ; lea ebx, dword ptr [esi - 0x11] ; cmp ebx, eax
0x080556b8:	or byte ptr [edx - 0x3cd6f7f2], ch
0x08055757:	adc al, 0xb5 ; push cs ; or bh, al ; ret
0x08055818:	add al, 0x89 ; rcr byte ptr [ebx + 0x5e], 1 ; ret
0x0805583e:	call dword ptr [eax - 0x3c76acaa]
0x0805586f:	add esp, 0x24 ; pop ebx ; pop esi ; ret
0x0805599e:	adc byte ptr [ebp - 0x3cfef9f4], cl
0x08055b03:	or al, 0x8b ; inc ebp ; add al, 0x89 ; ret
0x08055b1b:	inc ebp ; add byte ptr [ecx], ch ; lds eax, ptr [ecx] ; ret
0x08055d33:	or byte ptr [ebx - 0x3c760720], al
0x08055d92:	add al, 0x8b ; inc eax ; or al, 0x83 ; ret
0x08055dbf:	sbb al, 1 ; pop eax ; add al, 0x89 ; ret
0x08055e40:	je 0x60 ; mov edx, dword ptr [eax] ; mov ebx, eax
0x08055fe6:	xor byte ptr [ebp - 0x3cc6ccc4], cl
0x0805603e:	jne 0x72 ; mov eax, dword ptr [ebx] ; sub ebx, eax
0x0805619f:	fadd dword ptr [ebx - 0x3cd6f820]
0x08056274:	pop ds ; and eax, 7 ; sub ebx, eax
0x08056985:	mov bh, 0x9c ; add dword ptr [eax], eax ; mov ebx, eax
0x08056aca:	clc ; lea edx, dword ptr [ecx + edi] ; mov ebx, eax
0x08056b4f:	cmp byte ptr [ebx], al ; neg eax ; and ebx, eax
0x08056d1f:	test eax, eax ; mov edx, eax ; mov ebx, eax
0x080570c2:	and eax, dword ptr [esp + 0x14] ; mov ebx, eax
0x08057453:	xor byte ptr [ebx - 0x3cc6f7bd], cl
0x080574cf:	adc byte ptr [ebx - 0x3cc6f7bd], cl
0x08057c74:	hlt ; mov esp, 0xc3e8080b
0x08057c9e:	push esi ; push ebx ; mov edi, ecx ; mov ebx, eax
0x08057e06:	or byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x08057efd:	les ecx, ptr [eax] ; xor eax, eax ; pop ebx ; ret
0x08058032:	add byte ptr [eax], al ; jmp 0xffffffea ; mov ebx, eax
0x080587e1:	clc ; mov ah, 0xe ; or byte ptr [ecx], bh ; ret
0x080587ed:	bound eax, qword ptr [ecx] ; add byte ptr [eax], al ; mov ebx, eax
0x080587fa:	inc eax ; add al, 0 ; add byte ptr [ecx], bh ; ret
0x08058bbe:	mov eax, 0x80ea520 ; ret
0x08058bfd:	add eax, 0x5b08c483 ; ret
0x08058c4d:	or byte ptr [eax], dl ; jg 9 ; or bl, al
0x08058cc7:	jne 0xffffffd9 ; pop ebx ; pop esi ; ret
0x08058d20:	in al, dx ; pop ebp ; add dword ptr [eax], eax ; ret
0x080592df:	lodsd eax, dword ptr [esi] ; sar bh, 0xff ; mov ebx, eax
0x08059373:	les edx, ptr [eax] ; add esp, 0xc ; ret
0x080594ed:	mov edx, 0x4be8080b ; ret
0x08059645:	mov eax, esi ; div ecx ; cmp ebx, eax
0x08059978:	call 0x5d5f5e0d ; ret
0x08059b1b:	les ecx, ptr [eax] ; mov eax, edx ; pop ebx ; ret
0x08059d57:	inc dword ptr [ebx - 0x3c7cfb14]
0x08059e97:	add byte ptr [ebx - 0x3c7cfb14], al
0x0805a9d0:	pop esp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805aca7:	add byte ptr [ebx - 0x3c76cfb9], cl
0x0805ae01:	push cs ; add esp, 8 ; pop ebx ; ret
0x0805ae4c:	push ss ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x0805ae6c:	mov eax, 0x16 ; ret
0x0805ae95:	inc esp ; ret 0xc483 ; sbb al, 0xc3
0x0805aec5:	add eax, 0x8067940 ; ret
0x0805b05c:	inc eax ; pop ebp ; pop ebx ; pop esi ; pop edi ; ret
0x0805b0c1:	add eax, 0x80616f0 ; ret
0x0805b131:	add eax, 0x8063c80 ; ret
0x0805b1c5:	and al, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0805b2c5:	inc eax ; sub eax, dword ptr [esp + 4] ; ret
0x0805b39d:	adc byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x0805b846:	ret 0x940f ; shl byte ptr [ecx], 0xc3
0x0805ba4a:	add ebp, dword ptr [esp + 0x10] ; cmp ebx, eax
0x0805bb79:	mov eax, dword ptr [esp + 0x20] ; cmp ebx, eax
0x0805bbae:	inc dword ptr [ebx - 0x3cc6fe40]
0x0805bc79:	add eax, 0x8067e30 ; ret
0x0805bc80:	add eax, 0x805bc90 ; ret
0x0805bc87:	add eax, 0x80683a0 ; ret
0x0805be25:	je 3 ; inc eax ; pop edi ; pop esi ; ret
0x0805be55:	add eax, 0x80630f0 ; ret
0x0805be77:	jne 6 ; xor eax, eax ; pop ebx ; ret
0x0805be93:	leave ; enter -2, -0x7f ; ret
0x0805c12d:	sbb eax, -1 ; pop esi ; pop ebx ; ret
0x0805c183:	add eax, 0x805ec80 ; ret
0x0805c1b7:	mov eax, dword ptr [esp + 8] ; pop edi ; ret
0x0805c1e2:	inc esp ; and al, 8 ; cld ; pop edi ; ret
0x0805c215:	add eax, 0x805fd40 ; ret
0x0805c28c:	rep movsd dword ptr es:[edi], dword ptr [esi] ; xchg eax, edi ; mov esi, edx ; ret
0x0805c2d1:	add eax, 0x80654d0 ; ret
0x0805c2f7:	add ecx, dword ptr [ebp - 0x3cf732f4]
0x0805c369:	mov eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x0805c3a1:	add eax, 0x806b180 ; ret
0x0805c400:	salc ; mov eax, dword ptr [esp + 4] ; ret
0x0805c439:	add eax, 0x80686f0 ; ret
0x0805c440:	add eax, 0x805c450 ; ret
0x0805c447:	add eax, 0x8068a10 ; ret
0x0805c510:	add byte ptr [ecx + eax + 0x40], dh ; pop edi ; ret
0x0805c679:	sal dword ptr [ecx + eax + 0x40], 1 ; pop edi ; ret
0x0805c6c4:	cld ; mov eax, dword ptr [esp + 4] ; ret
0x0805c6e7:	dec dword ptr [ebx - 0x3cfbdbbc]
0x0805c708:	dec byte ptr [ebx - 0x3cfbdbbc]
0x0805cae7:	clc ; mov eax, dword ptr [esp + 4] ; ret
0x0805cbe3:	mov bl, 0x66 ; movq qword ptr [edx - 0x3d], mm0
0x0805e935:	or cl, byte ptr [ebx - 0x3cfbdbbc]
0x0805e96f:	add cl, byte ptr [ebx - 0x3cfbdbbc]
0x0805fa9c:	pop edi ; mov eax, dword ptr [esp + 4] ; ret
0x0806059e:	add byte ptr [eax], al ; pcmpeqb xmm0, xmm3
0x08061625:	mov dh, 0x42 ; pop es ; sub eax, ecx ; ret
0x08061633:	movzx eax, byte ptr [edx] ; sub eax, ecx ; ret
0x08061695:	mov dh, 0x42 ; push es ; sub eax, ecx ; ret
0x080616e4:	add byte ptr [edi + 2], dh ; neg eax ; ret
0x080616e7:	neg eax ; ret ; xor eax, eax ; ret
0x0806187c:	push cs ; sub eax, ecx ; pop esi ; pop edi ; ret
0x08061a03:	out dx, eax ; add dword ptr [ecx], esi ; idiv byte ptr [eax] ; ret
0x08061a2c:	sub eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x08062b89:	sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062e9b:	and dword ptr [edx], eax ; add byte ptr [eax], al ; pop ebx ; ret
0x08062f58:	test byte ptr [ecx], al ; add byte ptr [eax], al ; pop ebx ; ret
0x08063013:	leave ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x080630b1:	add byte ptr [eax], al ; jne 0x2f ; pop ebx ; ret
0x0806318e:	add byte ptr [eax], al ; pop ebx ; xor eax, eax ; ret
0x080631a5:	movzx edx, byte ptr [edx] ; sub eax, edx ; ret
0x08063284:	add byte ptr [eax], al ; add byte ptr [edi], cl ; test eax, ebx
0x08063289:	ret ; or dword ptr [eax], eax ; add byte ptr [ebx - 0x3d], bl
0x08063312:	push eax ; or dword ptr [eax], eax ; add byte ptr [ebx - 0x3d], bl
0x080633ad:	mov ch, 8 ; add byte ptr [eax], al ; pop ebx ; ret
0x0806345b:	pop es ; or byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x080634d9:	jae 9 ; add byte ptr [eax], al ; pop ebx ; ret
0x08063556:	or al, 7 ; add byte ptr [eax], al ; pop ebx ; ret
0x080635e1:	add dword ptr [esi], 0xc35b0000
0x0806367f:	jecxz 7 ; add byte ptr [eax], al ; pop ebx ; ret
0x08063707:	inc ebp ; add eax, 0xc35b0000
0x08063794:	into ; add al, 0 ; add byte ptr [ebx - 0x3d], bl
0x0806382f:	xor eax, dword ptr [eax + eax] ; add byte ptr [ebx - 0x3d], bl
0x080638dd:	test dword ptr [ebx], eax ; add byte ptr [eax], al ; pop ebx ; ret
0x08063975:	xlatb ; add al, byte ptr [eax] ; add byte ptr [ebx - 0x3d], bl
0x0806397f:	add bl, dh ; movq mm1, qword ptr [eax - 0x3d]
0x08063984:	ret ; movdqu xmm2, xmmword ptr [edx - 0x3d]
0x08063a12:	push eax ; add al, byte ptr [eax] ; add byte ptr [ebx - 0x3d], bl
0x08063abd:	movsd dword ptr es:[edi], dword ptr [esi] ; add dword ptr [eax], eax ; add byte ptr [ebx - 0x3d], bl
0x08063b7b:	out 0, eax ; add byte ptr [eax], al ; pop ebx ; ret
0x08063c07:	add byte ptr [eax], al ; jne 0x49 ; pop ebx ; ret
0x08063c3b:	add byte ptr [eax], al ; jne 0x15 ; pop ebx ; ret
0x08063e1a:	adc al, 0x32 ; pcmpeqb xmm0, xmm3
0x08063ede:	dec ecx ; inc eax ; pmovmskb eax, xmm3
0x08065182:	mov dword ptr [edx], eax ; mov eax, edi ; pop edi ; ret
0x080651b6:	adc eax, dword ptr [edx] ; mov eax, edi ; pop edi ; ret
0x08065236:	jg 4 ; mov eax, edi ; pop edi ; ret
0x08065242:	mov byte ptr [edx], al ; mov eax, edi ; pop edi ; ret
0x08065278:	inc edx ; add al, 0x89 ; clc ; pop edi ; ret
0x080652ec:	inc edx ; pop es ; mov eax, edi ; pop edi ; ret
0x08065310:	dec edx ; add eax, 0xc35ff889
0x08065330:	dec edx ; push es ; mov eax, edi ; pop edi ; ret
0x08065350:	dec edx ; pop es ; mov eax, edi ; pop edi ; ret
0x08065361:	add dword ptr [eax - 0x3c2f76fe], ecx
0x08065373:	mov word ptr [edx], ax ; mov eax, edx ; ret
0x08065389:	mov byte ptr [edx + 2], al ; mov eax, edx ; ret
0x08065391:	add dword ptr [ecx - 0x3c2f76fe], ecx
0x080653a7:	mov byte ptr [edx + 4], al ; mov eax, edx ; ret
0x080653b9:	mov dword ptr [edx + 4], eax ; mov eax, edx ; ret
0x080653c7:	mov dword ptr [edx + 3], eax ; mov eax, edx ; ret
0x080653d5:	movlps qword ptr [edx], xmm0 ; mov eax, edx ; ret
0x080653eb:	mov byte ptr [edx + 8], al ; mov eax, edx ; ret
0x0806540d:	mov dword ptr [edx + 8], eax ; mov eax, edx ; ret
0x0806542b:	mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x0806546f:	adc ecx, dword ptr [edx + 5] ; mov eax, edx ; ret
0x0806548f:	adc ecx, dword ptr [edx + 6] ; mov eax, edx ; ret
0x080654af:	adc ecx, dword ptr [edx + 7] ; mov eax, edx ; ret
0x080654c5:	movq qword ptr [edx], mm0 ; mov eax, edx ; ret
0x080669d3:	add cl, byte ptr [ebp - 0x3ca0fcbe]
0x08066a07:	add cl, byte ptr [ebp - 0x3ca0f8be]
0x08066a4d:	or byte ptr [ebp - 0x3ca0f4be], cl
0x08066a87:	add cl, byte ptr [ebp - 0x3ca0f0be]
0x08066a92:	mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; pop edi ; ret
0x08066aa5:	add cl, byte ptr [ebp - 0x3ca0febe]
0x08066abb:	add cl, byte ptr [ebp - 0x3ca0fdbe]
0x08066ad9:	add al, 0x8d ; inc edx ; add al, 0x5f ; ret
0x08066b09:	add ecx, dword ptr [ebp - 0x3ca0f9be]
0x08066b1d:	or byte ptr [ebp - 0x3ca0f7be], cl
0x08066b3f:	or byte ptr [ebp - 0x3ca0f6be], cl
0x08066b5d:	pop es ; lea eax, dword ptr [edx + 0xa] ; pop edi ; ret
0x08066b81:	add eax, 0x5f0c428d ; ret
0x08066ba1:	push es ; lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x08066bc1:	pop es ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08066bd1:	add dword ptr [eax - 0x3cfd72fe], ecx
0x08066be4:	mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 1] ; ret
0x08066c02:	mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; ret
0x08066c18:	inc edx ; add al, 0x8d ; inc edx ; add al, 0xc3
0x08066c46:	adc eax, dword ptr [edx] ; lea eax, dword ptr [edx + 7] ; ret
0x08066c9c:	inc edx ; pop es ; lea eax, dword ptr [edx + 0xa] ; ret
0x08066ce0:	dec edx ; add eax, 0xc30c428d
0x08066d00:	dec edx ; push es ; lea eax, dword ptr [edx + 0xd] ; ret
0x08066d20:	dec edx ; pop es ; lea eax, dword ptr [edx + 0xe] ; ret
0x08066d36:	jg 4 ; lea eax, dword ptr [edx + 0xf] ; ret
0x08066e47:	adc al, 0x1a ; pcmpeqb xmm0, xmm3
0x08066f0b:	je 0xffffffda ; pmovmskb eax, xmm3
0x08066f49:	fcmovu st(0), st(2) ; pcmpeqb xmm0, xmm3
0x08067160:	inc edx ; add eax, 0xc35ff889
0x08067180:	inc edx ; push es ; mov eax, edi ; pop edi ; ret
0x080672bf:	adc eax, dword ptr [edx + 5] ; mov eax, edx ; ret
0x080672df:	adc eax, dword ptr [edx + 6] ; mov eax, edx ; ret
0x080672ff:	adc eax, dword ptr [edx + 7] ; mov eax, edx ; ret
0x0806731f:	adc eax, dword ptr [edx + 8] ; mov eax, edx ; ret
0x080675ea:	add al, 0x8d ; inc edx ; pop es ; pop edi ; ret
0x08067640:	or byte ptr [ebp - 0x3ca0f0be], cl
0x08067838:	inc edx ; add al, 0x8d ; inc edx ; pop es ; ret
0x080678d0:	inc edx ; add eax, 0xc30c428d
0x080678f0:	inc edx ; push es ; lea eax, dword ptr [edx + 0xd] ; ret
0x08067910:	inc edx ; pop es ; lea eax, dword ptr [edx + 0xe] ; ret
0x08067a9c:	add byte ptr [ebp - 0x3ca0f8b9], cl
0x08067ae2:	add byte ptr [ebp - 0x3ca0fcb9], cl
0x08067b3f:	add byte ptr [ebp - 0x3ca0f0b9], cl
0x08067b85:	add byte ptr [ebp - 0x3ca0f4b9], cl
0x08067c2e:	add byte ptr [eax], al ; lea eax, dword ptr [edi] ; pop edi ; ret
0x08067c3f:	add byte ptr [ebp - 0x3ca0feb9], cl
0x08067c4f:	add byte ptr [ebp - 0x3ca0fdb9], cl
0x08067c6f:	add byte ptr [ebp - 0x3ca0fbb9], cl
0x08067c7f:	add byte ptr [ebp - 0x3ca0fab9], cl
0x08067c8f:	add byte ptr [ebp - 0x3ca0f9b9], cl
0x08067c9f:	add byte ptr [ebp - 0x3ca0f7b9], cl
0x08067caf:	add byte ptr [ebp - 0x3ca0f6b9], cl
0x08067cbf:	add byte ptr [ebp - 0x3ca0f5b9], cl
0x08067cdf:	add byte ptr [ebp - 0x3ca0f3b9], cl
0x08067cef:	add byte ptr [ebp - 0x3ca0f2b9], cl
0x08067cff:	add byte ptr [ebp - 0x3ca0f1b9], cl
0x08067d0e:	add byte ptr [eax], al ; xor eax, eax ; pop edi ; ret
0x08067d74:	add eax, edi ; add eax, ecx ; pop edi ; ret
0x08067e15:	out dx, eax ; adc byte ptr [ecx], al ; clc ; pop edi ; ret
0x08067f01:	dec ecx ; adc byte ptr [esi + 0xf], ah ; xlatb ; ret
0x08068002:	je 0xffffffdb ; pmovmskb eax, xmm3
0x080682ce:	add byte ptr [eax], al ; mov eax, edi ; pop edi ; ret
0x08068334:	pop ebx ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x08068344:	dec ebx ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x08068354:	cmp ecx, dword ptr [ebp - 0x3ca0f5b9]
0x08068364:	sub ecx, dword ptr [ebp - 0x3ca0f3b9]
0x08068374:	sbb ecx, dword ptr [ebp - 0x3ca0f2b9]
0x08068384:	or ecx, dword ptr [ebp - 0x3ca0f1b9]
0x080683dd:	retf 0x3076 ; add eax, ecx ; ret
0x0806859a:	dec edi ; xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x080685af:	lea eax, dword ptr [edi + eax + 0x30] ; pop edi ; ret
0x08068654:	jne 0x5c ; xor eax, eax ; pop edi ; ret
0x08068663:	lea eax, dword ptr [eax + edi - 0x10] ; pop edi ; ret
0x08068671:	mov esp, 0x5ff801c0 ; ret
0x08068683:	lea eax, dword ptr [eax + edi + 0x10] ; pop edi ; ret
0x08068693:	lea eax, dword ptr [eax + edi + 0x20] ; pop edi ; ret
0x080686a5:	jbe 0x3b ; add eax, edi ; pop edi ; ret
0x080686ba:	lea eax, dword ptr [edi + eax + 0x10] ; pop edi ; ret
0x080686ca:	lea eax, dword ptr [edi + eax + 0x20] ; pop edi ; ret
0x080686de:	pop edi ; ret ; xor eax, eax ; pop edi ; ret
0x080688c3:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 3] ; ret
0x080688e6:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 7] ; ret
0x08068910:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xb] ; ret
0x08068939:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xf] ; ret
0x0806894e:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 1] ; ret
0x0806895e:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 2] ; ret
0x0806896e:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 4] ; ret
0x0806897e:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 5] ; ret
0x0806898e:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 6] ; ret
0x0806899e:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 8] ; ret
0x080689ae:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 9] ; ret
0x080689be:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xa] ; ret
0x080689ce:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xc] ; ret
0x080689de:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xd] ; ret
0x080689ee:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xe] ; ret
0x08068a41:	bsf ecx, ecx ; add eax, ecx ; ret
0x08068a8c:	rol byte ptr [ecx], 0xd0 ; add eax, ecx ; ret
0x08068bc9:	dec edx ; xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x08068bf0:	bsf eax, eax ; add eax, edx ; ret
0x08068c6e:	je 0xffffffe2 ; pop ebx ; pop esi ; pop edi ; ret
0x0806b009:	add ecx, dword ptr [eax + ecx] ; sub eax, ecx ; ret
0x0806b157:	neg eax ; add esp, 4 ; ret
0x0806b15a:	les eax, ptr [ebx + eax*8] ; xor eax, eax ; ret
0x0806b47a:	or byte ptr [ecx], ch ; enter 0x5f5e, -0x3d
0x0806b495:	ja 4 ; neg eax ; pop edi ; ret
0x0806ba71:	mov eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x0806bdac:	or bh, ah ; mov eax, edx ; pop ebx ; ret
0x0806bef0:	cpuid ; mov ebp, ebx ; mov ebx, eax
0x0806bf9d:	cmp edx, 1 ; sete bl
0x0806bfee:	add dword ptr [ebx + 0x5e], ebx ; pop edi ; pop ebp ; ret
0x0806c18d:	pop ebp ; ret ; nop ; xor eax, eax ; ret
0x0806c288:	and ch, 0xf0 ; cmovne eax, ebx
0x0806c439:	adc byte ptr [ebx - 0x3ca4f73c], al
0x0806c473:	xor eax, eax ; add esp, 0x1c ; ret
0x0806c488:	and al, 0xc ; add esp, 0x1c ; ret
0x0806c67e:	add byte ptr [eax], al ; push esi ; push ebx ; mov ebx, eax
0x0806c7c9:	dec dword ptr [ebx - 0x3c767fb3]
0x0806c989:	call 0x5d5f5e06 ; ret
0x0806c99e:	dec esp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806c9d3:	add byte ptr [edi], cl ; inc ebx ; shr ebx, -0x3d
0x0806cfc1:	cmp dword ptr [edx + 0x36], 0 ; add bl, al
0x0806cfe9:	and al, 0x18 ; add esp, 0x2c ; ret
0x0806d079:	add edx, 0x35 ; add byte ptr [eax], al ; ret
0x0806d0e9:	adc dword ptr [edx + 0x35], 0 ; add bl, al
0x0806d11d:	sbb dword ptr [esi], 0x35 ; add byte ptr [eax], al ; ret
0x0806d159:	and edx, 0x34 ; add byte ptr [eax], al ; ret
0x0806d268:	aam 0x33 ; add byte ptr [eax], al ; mov ebx, eax
0x0806d874:	enter 0x2d, 0 ; mov ebx, eax
0x0806d90d:	inc esp ; and al, 0x3c ; push edi ; sub ebx, eax
0x0806d9cd:	sub dword ptr [esi + 0x2c], 0 ; add bl, al
0x0806da21:	add al, 0x89 ; fcomp dword ptr [ebx + 0x5e] ; ret
0x0806da70:	mov eax, esi ; neg eax ; cmp ebx, eax
0x0806da85:	test eax, eax ; je 6 ; ret
0x0806db09:	or ebx, dword ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x0806dbbd:	cmp dword ptr [esi + 0x2a], 0 ; add bl, al
0x0806dbef:	or dword ptr [edx + ebp], 0 ; ret
0x0806dc1f:	sbb dword ptr [edx + ebp], 0 ; add bl, al
0x0806dc34:	push ebx ; mov edx, dword ptr [eax + 4] ; mov ebx, eax
0x0806dd5d:	and byte ptr [ebp - 0x3c60f025], al
0x0806dd64:	fld qword ptr [ebp - 0x3c60f001]
0x0806dfa6:	sbb dword ptr [ebp - 0x3c7cfbad], ecx
0x0806e03b:	add byte ptr [ebx - 0x3c7c1bbb], cl
0x0806e5ec:	mov al, byte ptr [0x89000206] ; ret
0x0806e5f9:	or byte ptr [ebx - 0x3cc6ef3c], al
0x0806e87f:	les edx, ptr [eax] ; test eax, eax ; jne 0xffffffc9
0x0806e8c4:	test eax, eax ; je 0x82 ; mov ebx, eax
0x0806e99a:	test eax, eax ; cmove eax, edx ; ret
0x0806ea6b:	adc eax, 0x1b ; add byte ptr [eax], al ; ret
0x0806ead0:	and al, 4 ; setae al ; ret
0x0806eb06:	jne 0xffffffef ; pop esi ; pop ebx ; pop edx ; ret
0x0806eb0f:	add byte ptr [ebx + 0x51], dl ; push edx ; mov ebx, eax
0x0806eb2e:	push cs ; or byte ptr [edx + 0x59], bl ; pop ebx ; ret
0x0806eb5d:	add byte ptr [eax], al ; cmp edx, eax ; mov ebx, eax
0x0806eb6c:	pop ss ; add esp, 8 ; pop ebx ; ret
0x0806ed25:	test edx, edx ; je 0x7b ; cmp ebx, eax
0x0806ed8c:	pop edi ; pop ebp ; ret ; nop ; cmp ebx, eax
0x0806ee34:	add byte ptr [eax], al ; add al, ch ; aam 0xc3
0x0806f05b:	add eax, 0x89000000 ; ret
0x0806f09c:	jmp 0xffffffe4 ; nop ; ret
0x0806f0e5:	mov dword ptr [ecx + 4], eax ; mov eax, ecx ; ret
0x0806f54c:	add al, byte ptr [eax] ; test eax, eax ; mov ebx, eax
0x0806f92c:	inc dword ptr [ebp - 0x3cbbf040]
0x08070435:	add byte ptr [eax], al ; add byte ptr [esi + 0x5f], bl ; ret
0x08070454:	or byte ptr [ebp - 0x3cf88b40], al
0x08070465:	test dword ptr [esi], 0xc3890002
0x0807046c:	loopne 0x10 ; add al, byte ptr [eax] ; cmp ebx, eax
0x08070492:	add al, byte ptr [eax] ; xor edx, edx ; cmp ebx, eax
0x08070531:	pop ebx ; shl eax, cl ; pop esi ; pop edi ; ret
0x0807086c:	and byte ptr [ecx - 0x3c7c3389], cl
0x08070afb:	mov edi, edx ; push esi ; push ebx ; mov ebx, eax
0x08070d15:	call 0x83c57506 ; ret
0x08070d80:	mov eax, dword ptr [0x80ebcd4] ; ret
0x08070d90:	mov eax, dword ptr [0x80ebcdc] ; ret
0x08071297:	jbe 0x1a ; test esi, esi ; jne 0xffffffc9
0x080713c7:	add byte ptr [ebx - 0x3cfe3b8b], cl
0x080714de:	cmove eax, dword ptr [ebp - 0x48] ; mov ebx, eax
0x080715d1:	fadd dword ptr [ebx - 0x3c7cfe3a]
0x080715d4:	add dword ptr [ebx - 0x3c17c33d], eax
0x080717c3:	pop ss ; imul eax, esi, 0x3c ; add ebx, eax
0x0807190e:	add al, 0x85 ; ror byte ptr [edi], 0x44 ; ret
0x08071d24:	sbb byte ptr [ecx - 0x3c17aac5], cl
0x08071e04:	or byte ptr [ebx - 0x3c7cfe3a], al
0x08071e5d:	add byte ptr [ebx - 0x3c7cfe3f], al
0x0807209b:	test eax, eax ; je 0x47 ; mov ebx, eax
0x080726ac:	sal dword ptr [eax + edx - 0x70], -0x7d ; ret
0x080728bd:	mov dword ptr [esi + 0x30], eax ; pop esi ; pop edi ; ret
0x08072a91:	fild dword ptr [ebx - 0x3c7c011d]
0x08072af8:	pop es ; add edx, 1 ; cmp ebx, eax
0x08072c1e:	into ; push 0xc389fffd
0x08072e74:	sub ebx, esi ; sub eax, edx ; cmp ebx, eax
0x08072e77:	sar byte ptr [ecx], 1 ; ret ; cmovle eax, ebx
0x08072f78:	add dword ptr [ebx - 0x3cc6fe3e], eax
0x08073684:	or eax, dword ptr [ebx - 0x3c7cfb40]
0x08073a21:	push es ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3d], dh
0x08073ca4:	mov dword ptr [esp + 0x3c], eax ; mov ebx, eax
0x08073fa9:	add dword ptr [eax - 0x3cc6fcaf], ecx
0x08074657:	add byte ptr [ebx - 0x3c898008], al
0x08074975:	mov edi, dword ptr [esp + 0x74] ; mov ebx, eax
0x08074ed4:	stc ; mov eax, dword ptr [eax + 0x14] ; mov ebx, eax
0x08074fca:	cli ; xor byte ptr [ebp + 0xa], 0x89 ; ret
0x0807543a:	je 0x26 ; sub al, 0xf ; test al, bl
0x0807581b:	or byte ptr [ebx - 0x3c7cc01e], al
0x08075f22:	sbb al, 0x83 ; loopne 0xb ; mov ebx, eax
0x080768fd:	add byte ptr [ebx - 0x3c76fd19], al
0x080776d3:	add eax, 0x837d7400 ; ret
0x0807791d:	ja 0xa ; xor edx, edx ; mov ebx, eax
0x08077ac0:	mov eax, dword ptr [0x80eb5c0] ; ret
0x08077bb3:	les esp, ptr [eax + 0x5b] ; pop esi ; pop edi ; ret
0x08077c04:	inc dword ptr [ebx - 0x3c760008]
0x08077cdc:	salc ; push ebx ; mov edi, ecx ; mov ebx, eax
0x08077eb9:	mov esi, edx ; add eax, edx ; mov ebx, eax
0x08078112:	inc dword ptr [ebx - 0x3c0ce33c]
0x08078150:	jae 0xc35b08ca
0x0807830d:	test eax, eax ; mov esi, eax ; mov ebx, eax
0x08078452:	sti ; or eax, 0xc3831a74
0x0807856b:	mov eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x080788d5:	mov dword ptr [ecx], 0xc3830000
0x08078949:	adc byte ptr [ebp - 0x3c7af040], al
0x08078986:	add byte ptr [eax], al ; mov esi, ebx ; mov ebx, eax
0x08078bda:	clc ; scasb al, byte ptr es:[edi] ; push cs ; or byte ptr [ecx], bh ; ret
0x08078c6b:	movsx esi, cl ; sete bl
0x08078c73:	cmp cl, byte ptr [ecx - 0x3c6bf021]
0x08078cfd:	add ch, byte ptr [edi] ; mov byte ptr [eax], 0 ; ret
0x080792cc:	add byte ptr [ebp - 0x3c0cff8a], cl
0x080792fa:	mov ecx, dword ptr [edx] ; je 0x16 ; mov ebx, eax
0x08079330:	sbb al, 0x89 ; salc ; push ecx ; mov ebx, eax
0x08079837:	or byte ptr [ebx - 0x3cfdd500], cl
0x08079a3f:	add byte ptr [ebx - 0x3c7cfe3e], al
0x08079dcb:	insb byte ptr es:[edi], dx ; add eax, dword ptr [edx + 0x20] ; cmp ebx, eax
0x08079dce:	and byte ptr [ecx], bh ; ret ; cmovge eax, ebx
0x0807a2d3:	scasb al, byte ptr es:[edi] ; push cs ; or byte ptr [ebx - 0x39], dl ; ret
0x0807a30d:	push cs ; or byte ptr [edi + eax + 0x5b], dh ; ret
0x0807a32f:	jmp dword ptr [ebp - 0x77] ; add bl, byte ptr [ebx - 0x3d]
0x0807a34b:	add byte ptr [ebx - 0x3cbf6fbc], cl
0x0807a367:	add eax, 0 ; ret
0x0807a3ce:	add byte ptr [eax], al ; mov dword ptr gs:[edx], eax ; ret
0x0807a43b:	and al, 0xc ; add esp, 0x14 ; ret
0x0807a665:	in al, dx ; sbb byte ptr [ebx + 0x5e], 0x5f ; ret
0x0807aa51:	mov ebx, dword ptr [esp + 8] ; add ebx, eax
0x0807ac22:	mov eax, edi ; mov edi, ebx ; mov ebx, eax
0x0807ac8e:	and al, 0xb5 ; push cs ; or byte ptr [ecx], bh ; ret
0x0807b0dd:	jmp dword ptr [esi - 0x70] ; xor eax, eax ; ret
0x0807b7a1:	rol byte ptr [ebx - 0x3c7cfe17], cl
0x0807b7c4:	movsx eax, byte ptr [eax + 5] ; cmp ebx, eax
0x0807b7cc:	cli ; add byte ptr [eax], al ; add byte ptr [ecx], ch ; ret
0x0807b819:	add ecx, eax ; loopne 6 ; or ebx, eax
0x0807b962:	adc byte ptr [ecx - 0x3ca1a410], cl
0x0807bba6:	mov esi, edx ; mov edi, ecx ; mov ebx, eax
0x0807bce3:	inc dword ptr [ebx - 0x3cd6ef3c]
0x0807be4a:	add byte ptr [ebx - 0x3cfee7b2], cl
0x0807c362:	sbb byte ptr [ecx], dl ; add byte ptr [eax], al ; add ebx, eax
0x0807c3c3:	add dword ptr [ebp + 0x14], 1 ; add ebx, eax
0x0807c714:	mov eax, 0xe8fffffb ; ret
0x0807e9c4:	adc byte ptr [ecx], bh ; ret 0x850f ; ret
0x080804cf:	mov al, 0 ; add byte ptr [eax], al ; mov ebx, eax
0x0808065f:	fld qword ptr [eax] ; add byte ptr [eax], al ; mov ebx, eax
0x08080774:	push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x080809cc:	jecxz 0xffffff8b ; fcomp dword ptr [ebx + 0x5e] ; ret
0x080809de:	test byte ptr [ecx], 0xd8 ; pop ebx ; pop esi ; ret
0x08080cc8:	push 0x89ffffff ; ret
0x08080dbf:	add byte ptr [ebx - 0x3c7c6fbb], cl
0x08081642:	fisttp qword ptr [ecx - 0x3c7c33ab]
0x08081924:	call 0x89fffd9d ; ret
0x080819c1:	adc byte ptr [ebx - 0x3c7cfe40], al
0x08081bfa:	ror byte ptr [ecx], cl ; add byte ptr [eax], al ; mov ebx, eax
0x08081ce0:	add dword ptr [ecx - 0x3c7673bb], ecx
0x0808260c:	add byte ptr [ecx - 0x3cd66f83], cl
0x080826da:	inc dword ptr [ebp - 0x3c7af00a]
0x08082c78:	rol byte ptr [ebx - 0x3ca4f73c], 1
0x08082d24:	jl 0x26 ; or byte ptr [edi], cl ; test eax, ebx
0x08082de0:	fnstsw ax ; fstp st(0) ; mov ebx, eax
0x08082f64:	mov dword ptr [esp + 0xc], ebx ; mov ebx, eax
0x080831d5:	leave ; add eax, 1 ; cmp ebx, eax
0x08083243:	add al, 0x92 ; add eax, eax ; sub ebx, eax
0x0808371a:	add eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08083cfd:	add byte ptr [ebp - 0x3c7cfbb6], cl
0x08083d6d:	dec dword ptr [edi] ; xchg eax, esp ; shr bl, 0xc3
0x080843eb:	pop ebx ; mov eax, edx ; pop esi ; pop edi ; ret
0x080844c2:	test ebx, ebx ; je 0x1b ; cmp ebx, eax
0x08084521:	adc al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x08084694:	mov eax, edx ; add esp, 0xc ; ret
0x08084714:	or al, 0x8b ; pop edx ; adc byte ptr [ecx], ch ; ret
0x0808477e:	add byte ptr [eax], al ; add byte ptr [eax], al ; sub ebx, eax
0x08084b25:	xlatb ; add eax, 0xc3830000
0x08084c2b:	mov ebp, 0x8353080e ; ret
0x08085333:	or ecx, dword ptr [ebx - 0x3c7ca7b9]
0x080853d7:	dec dword ptr [edi] ; mov dh, 0x80 ; add bl, al
0x080854e4:	add dword ptr [ebp - 0x3c60f00a], eax
0x08085734:	add byte ptr [ebx - 0x3c76fbbf], cl
0x080859f4:	sbb al, 0x83 ; les edx, ptr [eax] ; cmp ebx, eax
0x08085a04:	jg 0x2d ; inc ebp ; adc byte ptr [ecx], bh ; ret
0x08085d14:	enter -0x73f, 2 ; mov ebx, eax
0x08085e6b:	adc byte ptr [ebx - 0x3c760008], al
0x08085f5d:	add byte ptr [ebx - 0x3cc6ef3c], al
0x08085f7d:	shr byte ptr [ebx], 1 ; inc ebp ; adc byte ptr [ecx], bh ; ret
0x08086854:	fld dword ptr [ebx - 0x3c76fe3a]
0x080868d2:	inc dword ptr [ebx - 0x3cc6fe3a]
0x0808742f:	or al, byte ptr [eax] ; add byte ptr [eax], al ; jmp 0xffffffc9
0x08087a9e:	add byte ptr [edi], cl ; mov dh, 0x80 ; add bl, al
0x08088144:	push edx ; push edx ; push 0x2b ; jmp 0xffffffc9
0x0808820f:	push eax ; push eax ; push 0x2b ; jmp 0xffffffc9
0x08089a69:	dec dword ptr [edi] ; dec esi ; retf -0x3c7d
0x08089a90:	pop ebx ; mov eax, ecx ; pop esi ; pop edi ; ret
0x0808a092:	mov eax, ecx ; pop ebx ; pop esi ; pop edi ; ret
0x0808a6c9:	test eax, eax ; je 0x5f ; add ebx, eax
0x0808a750:	shl byte ptr [ebp - 0x77], 0x3b ; jne 0xffffffc9
0x0808a8b5:	test eax, eax ; je 0x23 ; add ebx, eax
0x0808a983:	neg byte ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x0808ab4f:	add al, 0x8b ; pop esi ; or byte ptr [ecx], ch ; ret
0x0808abe6:	or byte ptr [ecx - 0x3cd61fbb], cl
0x0808ac07:	mov ecx, eax ; je 0xb ; mov ebx, eax
0x0808ac16:	jg 0x2d ; inc ebp ; in al, 0x39 ; ret
0x0808b175:	dec dword ptr [ebx - 0x3c76d7bf]
0x0808b17e:	sbb al, 0x8b ; inc ecx ; and byte ptr [ecx], ch ; ret
0x0808b224:	je 0x26 ; and byte ptr [eax - 0x18], dl ; ret
0x0808b2c4:	or byte ptr [ecx - 0x3ca4dfb8], cl
0x0808b304:	cmp al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x0808b698:	pop esi ; sub eax, edi ; pop edi ; pop ebp ; ret
0x0808b73d:	add byte ptr [eax], al ; add esp, 0xc ; ret
0x0808bc1c:	add al, byte ptr [ebx - 0x3ca4fe18]
0x0808bcbe:	sar edx, 2 ; sub eax, edx ; ret
0x0808bd27:	adc byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0xc3
0x0808be05:	inc eax ; and al, 0x8b ; inc eax ; sub bl, al
0x0808c2ef:	in eax, dx ; mov esi, 0xc389fffb
0x0808c493:	add eax, 0x808d810 ; ret
0x0808c4c5:	add eax, 0x808cff0 ; ret
0x0808c683:	lea eax, dword ptr [esi + 3] ; pop esi ; pop edi ; ret
0x0808c945:	xchg dword ptr [eax], eax ; add byte ptr [eax], al ; mov ebx, eax
0x0808cc35:	add esi, dword ptr [esp + 0x14] ; cmp ebx, eax
0x0808cdaa:	jne 0xffffff85 ; rol byte ptr [ecx], 0x39 ; ret
0x0808cdf1:	pop esi ; add eax, edx ; pop edi ; pop ebp ; ret
0x0808ceb9:	adc dword ptr [ebx - 0x3c7cfe3f], eax
0x0808cf9c:	add eax, dword ptr [ebx - 0x3c7cfe3f]
0x0808d140:	pop ebx ; pop esi ; xor eax, eax ; pop edi ; ret
0x0808d154:	test ecx, ecx ; jne 0x1c ; mov ebx, eax
0x0808d332:	add byte ptr [ebp - 0x3ca00fb9], cl
0x0808d357:	add byte ptr [ebp - 0x3ca00bb9], cl
0x0808d381:	add byte ptr [ebp - 0x3ca007b9], cl
0x0808d3aa:	add byte ptr [ebp - 0x3ca003b9], cl
0x0808d3af:	ret ; lea eax, dword ptr [edi - 0xf] ; pop edi ; ret
0x0808d3bf:	add byte ptr [ebp - 0x3ca00db9], cl
0x0808d3cf:	add byte ptr [ebp - 0x3ca00cb9], cl
0x0808d3df:	add byte ptr [ebp - 0x3ca00ab9], cl
0x0808d3ef:	add byte ptr [ebp - 0x3ca009b9], cl
0x0808d3ff:	add byte ptr [ebp - 0x3ca008b9], cl
0x0808d40f:	add byte ptr [ebp - 0x3ca006b9], cl
0x0808d41f:	add byte ptr [ebp - 0x3ca005b9], cl
0x0808d42f:	add byte ptr [ebp - 0x3ca004b9], cl
0x0808d43f:	add byte ptr [ebp - 0x3ca002b9], cl
0x0808d44f:	add byte ptr [ebp - 0x3ca001b9], cl
0x0808d45f:	add byte ptr [ebp - 0x3ca000b9], cl
0x0808d696:	mov ebp, 0x5ff801c0 ; ret
0x0808d6a2:	jne 0xffffffde ; push esi ; push ebx ; mov ebx, eax
0x0808d7aa:	pop esi ; sub eax, 0x10 ; pop edi ; ret
0x0808d7e7:	clc ; sub eax, 0x10 ; pop edi ; ret
0x0808d7ee:	jbe 2 ; xor eax, eax ; pop edi ; ret
0x0808d800:	pop ebx ; pop esi ; pop edi ; xor eax, eax ; ret
0x0808daf4:	add byte ptr [ebx - 0x3ca0fc40], al
0x0808db1a:	add byte ptr [ebx - 0x3ca0f840], al
0x0808db41:	add byte ptr [ebx - 0x3ca0f440], al
0x0808db6a:	add byte ptr [ebx - 0x3ca0f040], al
0x0808dbd2:	mov eax, dword ptr [esp + 0xc] ; pop edi ; ret
0x0808dc10:	add byte ptr [ebp - 0x3ca0fcc0], cl
0x0808dc43:	add byte ptr [ebp - 0x3ca0f8c0], cl
0x0808dc7a:	add byte ptr [ebp - 0x3ca0f4c0], cl
0x0808dca3:	add byte ptr [ebp - 0x3ca0f0c0], cl
0x0808dcb8:	add byte ptr [ebp - 0x3ca0fec0], cl
0x0808dcc8:	add byte ptr [ebp - 0x3ca0fdc0], cl
0x0808dcd8:	add byte ptr [ebp - 0x3ca0fbc0], cl
0x0808dd04:	pop ebx ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x0808dd14:	dec ebx ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x0808dd24:	cmp ecx, dword ptr [ebp - 0x3ca0f5c0]
0x0808dd34:	sub ecx, dword ptr [ebp - 0x3ca0f3c0]
0x0808dd44:	sbb ecx, dword ptr [ebp - 0x3ca0f2c0]
0x0808dd54:	or ecx, dword ptr [ebp - 0x3ca0f1c0]
0x0808ddbe:	add al, 0 ; add byte ptr [eax], al ; pop edi ; ret
0x0808de17:	or byte ptr [eax], al ; add byte ptr [eax], al ; pop edi ; ret
0x0808de67:	or al, 0 ; add byte ptr [eax], al ; pop edi ; ret
0x0808de9b:	adc byte ptr [eax], al ; add byte ptr [eax], al ; pop edi ; ret
0x0808deaf:	nop ; add eax, 1 ; pop edi ; ret
0x0808deb4:	ret ; add eax, 2 ; pop edi ; ret
0x0808deb9:	ret ; add eax, 3 ; pop edi ; ret
0x0808debe:	ret ; add eax, 4 ; pop edi ; ret
0x0808dec3:	ret ; add eax, 5 ; pop edi ; ret
0x0808dec8:	ret ; add eax, 6 ; pop edi ; ret
0x0808decd:	ret ; add eax, 7 ; pop edi ; ret
0x0808ded2:	ret ; add eax, 8 ; pop edi ; ret
0x0808ded7:	ret ; add eax, 9 ; pop edi ; ret
0x0808dedc:	ret ; add eax, 0xa ; pop edi ; ret
0x0808dee1:	ret ; add eax, 0xb ; pop edi ; ret
0x0808dee6:	ret ; add eax, 0xc ; pop edi ; ret
0x0808deeb:	ret ; add eax, 0xd ; pop edi ; ret
0x0808def0:	ret ; add eax, 0xe ; pop edi ; ret
0x0808def5:	ret ; add eax, 0xf ; pop edi ; ret
0x0808e003:	add eax, 0x808ea20 ; ret
0x0808e08a:	mov dword ptr [edx + 8], ecx ; pop ebx ; pop esi ; ret
0x0808e0a8:	sti ; push dword ptr [esp - 9] ; ret
0x0808e101:	les esi, ptr [eax] ; pop ebx ; pop esi ; pop edi ; ret
0x0808e347:	pop ebx ; sub eax, esi ; pop esi ; pop edi ; ret
0x0808e6ba:	jne 0xffffffc6 ; mov eax, edx ; pop ebx ; ret
0x0808e6be:	pop ebx ; ret ; xor eax, eax ; pop ebx ; ret
0x0808e6c5:	add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; ret
0x0808e6cc:	add al, byte ptr [eax] ; add byte ptr [eax], al ; pop ebx ; ret
0x0808e6f9:	test edx, edx ; jne 0xfffffff7 ; ret
0x0808eb5b:	and cl, 0xf ; je 0x25 ; ret
0x0808eb75:	je 0x1b ; add eax, 2 ; ret
0x0808eb8e:	add byte ptr [eax], al ; add eax, 3 ; ret
0x0808ebb0:	mov eax, 1 ; ret
0x0808ebc0:	mov eax, 2 ; ret
0x0808ebd0:	mov eax, 3 ; ret
0x0808ebe0:	mov eax, 4 ; ret
0x0808ebf0:	mov eax, 5 ; ret
0x0808ec00:	mov eax, 6 ; ret
0x0808ec10:	mov eax, 7 ; ret
0x0808ec68:	test ebx, ebx ; jne 0xffffffd8 ; pop ebx ; ret
0x0808ecc7:	cmp eax, 0x3b ; cmova eax, ebx
0x0808ecd6:	sar byte ptr [ebx + ebx*2], cl ; add eax, edx ; ret
0x0808ed87:	nop ; add dword ptr [eax], eax ; add byte ptr [ecx], bh ; ret
0x0808eee8:	sbb byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x0808efcd:	dec dword ptr [ecx - 0x3c76dbcc]
0x0808f189:	add byte ptr [eax], al ; pop esi ; pop edi ; pop ebp ; ret
0x0808f2af:	cmp byte ptr [eax], 0x2c ; sete bl
0x0808f2b1:	sub al, 0xf ; xchg eax, esp ; ret ; add ebx, eax
0x0808f5aa:	inc dword ptr [ebx - 0x3ca0f73c]
0x0808f68f:	jne 9 ; pop ebx ; pop esi ; pop edi ; ret
0x0808f8cb:	inc ebx ; and al, 0x5b ; pop esi ; pop edi ; ret
0x0809027c:	add byte ptr [eax], al ; add byte ptr [edi], cl ; mov ebx, es
0x080904ba:	add dword ptr [eax], eax ; add byte ptr [eax], al ; test eax, ebx
0x08090672:	add dword ptr [ebx - 0x3c7cfb3a], eax
0x08090b26:	add dword ptr [ebx - 0x3c7cf718], eax
0x08090e92:	js 0x6e ; push esi ; push ebx ; mov ebx, eax
0x08090ed6:	add esp, 0x64 ; pop ebx ; pop esi ; ret
0x08090efd:	pop esi ; ret ; nop ; xor eax, eax ; ret
0x08091349:	xor edx, 0xfffffff2 ; std ; inc ebx
0x08091356:	adc eax, 0x80ea9f0 ; ret
0x08091407:	add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0xc3
0x0809142f:	or dword ptr [edx + esi*8], 0xfffffffd ; inc ebx
0x0809145d:	sbb esi, -0xf ; std ; inc ebx
0x080914c2:	cmp dword ptr [ecx - 0xf], -3 ; inc ebx
0x0809157d:	xor al, 0x89 ; fcomp dword ptr [ebx + 0x5e] ; ret
0x080915b7:	ja 9 ; xor eax, eax ; pop ebx ; ret
0x080915f9:	add dword ptr [edx - 0x10], -3 ; inc ebx
0x0809162d:	or dword ptr [esi], 0xfffffff0 ; std ; inc ebx
0x080916cc:	je 0x36 ; mov ecx, dword ptr [edx] ; mov ebx, eax
0x080916f6:	or ecx, dword ptr [ebx - 0x3cdeefa6]
0x080916ff:	add eax, dword ptr [edx + ecx] ; pop ebx ; pop esi ; ret
0x08091904:	adc byte ptr [ebx - 0x3c7cfe12], al
0x08091914:	pop eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091927:	jecxz 0x5d ; pop esi ; pop edi ; pop ebp ; ret
0x08091967:	xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x0809199b:	jle 0 ; cmp cl, byte ptr [edi] ; inc esp ; ret
0x08091b5b:	test eax, eax ; je 0x25 ; mov ebx, eax
0x08091d10:	push es ; cmp eax, 0x33 ; mov ebx, eax
0x08091f26:	loopne 0xffffff85 ; loopne 0xfffffff4 ; mov ebx, eax
0x08092563:	inc dword ptr [ebx - 0x3cc6ef3c]
0x08092869:	xor byte ptr [ebx - 0x3c76dfa9], cl
0x08092c41:	push edx ; lea eax, dword ptr [edi + eax*8] ; cmp ebx, eax
0x08093088:	inc dword ptr [ebp - 0x3c7af040]
0x08093e4c:	and byte ptr [ebp - 0x3c7bf037], al
0x08093f71:	mov dh, 0x44 ; and al, 0xf ; cmp bl, al
0x08093f94:	sbb dword ptr [edi], ecx ; mov dh, 2 ; cmp bl, al
0x080950bf:	add byte ptr [ebx - 0x3c76e7ba], cl
0x080954e5:	or byte ptr [ecx - 0x3c7cf390], cl
0x080957b6:	loope 7 ; add ebx, ecx ; add ebx, eax
0x08095b11:	cwde ; mov ecx, dword ptr [ebp - 0x64] ; xor ebx, eax
0x08095b28:	fisttp dword ptr [ecx] ; ret 0x950f ; ret
0x08095dc3:	or byte ptr [ecx - 0x3c7c53a3], cl
0x0809617d:	dec dword ptr [ebx - 0x3c7c5ba3]
0x080961f0:	mov word ptr [ecx], es ; add byte ptr [eax], al ; ret
0x0809621f:	nop ; mov byte ptr [ecx], al ; add byte ptr [eax], al ; ret
0x0809625b:	rol byte ptr [ebx - 0x3c94ef3c], 1
0x080962fc:	pop ecx ; lea edx, dword ptr [eax + 1] ; mov ebx, eax
0x0809634f:	adc al, 0x83 ; les edx, ptr [eax] ; add ebx, eax
0x08096453:	mov dword ptr [esp + 0xc], eax ; mov ebx, eax
0x0809646f:	add byte ptr [ebx - 0x3c7cf714], al
0x080965ef:	nop ; push edi ; push esi ; push ebx ; mov ebx, eax
0x0809669d:	nop ; nop ; nop ; push ebx ; mov ebx, eax
0x0809679a:	or al, 8 ; mov esi, edx ; mov ebx, eax
0x08096a3f:	jge 0xffffff8a ; add edi, dword ptr [esi] ; mov ebx, eax
0x08096c54:	add byte ptr [ebx - 0x3c16ef3c], al
0x08096db9:	mov eax, dword ptr [eax + 8] ; lea eax, dword ptr [ebx + eax*8]
0x08096dea:	push 0x83000014 ; ret
0x08097276:	loopne 7 ; add eax, edx ; cmp ebx, eax
0x080973e3:	movsb byte ptr es:[edi], byte ptr [esi] ; mov eax, dword ptr [esi + 4] ; mov ebx, eax
0x0809794f:	mov byte ptr [ebx - 0x3c76fbb9], cl
0x08098314:	je 0x55 ; xor ecx, ecx ; mov ebx, eax
0x080983df:	add byte ptr [ebx - 0x3c7cfbba], cl
0x080984a3:	or byte ptr [ebp - 0x3cc6c4fc], cl
0x08098859:	inc ebp ; loopne 0x78 ; jmp 0xffffff88 ; ret
0x08098880:	add byte ptr [eax], al ; shl eax, cl ; cmp ebx, eax
0x08098898:	or byte ptr [ecx - 0x3cc6078f], cl
0x0809889f:	adc eax, 0xf601eb83 ; ret
0x08098c65:	dec edx ; sub esp, 0xc ; mov ebx, eax
0x08098f81:	ja 3 ; add byte ptr [eax], al ; cmp ebx, eax
0x0809901c:	jae 0xc383f0e9
0x0809916b:	inc esp ; sub esp, 4 ; mov ebx, eax
0x08099304:	jecxz 0xffffff8d ; add dword ptr [ebx + 0x5e], ebx ; ret
0x08099381:	mov dword ptr [0x80eba08], eax ; ret
0x080993f7:	je 9 ; mov esi, dword ptr [edx] ; jmp 0xffffffc9
0x08099449:	mov eax, dword ptr [0x80eba08] ; ret
0x08099482:	test ecx, ecx ; jne 0xffffffde ; pop ebx ; ret
0x08099484:	jne 0xffffffdc ; pop ebx ; ret ; ret
0x0809949a:	mov edx, 0x289080e ; ret
0x080994f9:	add esp, 0x14 ; pop ebx ; pop edi ; ret
0x08099502:	adc al, 0x31 ; rcr byte ptr [ebx + 0x5f], 0xc3
0x080995a5:	jl 0x26 ; or al, 0x8d ; sbb al, 0xc3
0x080998ee:	dec dword ptr [edi] ; inc esp ; ret 0xc35f
0x08099959:	mov esi, eax ; mov eax, dword ptr [esi] ; cmp ebx, eax
0x08099f34:	pop ebx ; pop esi ; ret ; xor eax, eax ; ret
0x0809a219:	add byte ptr [ebp - 0x3cbbf040], al
0x0809ac2d:	mov esi, dword ptr [ebp + 8] ; mov byte ptr [ebp - 0x3d], al
0x0809b928:	sbb eax, dword ptr [ebx - 0x3ca4f73c]
0x0809ba47:	sub byte ptr [ebx - 0x3c0db33c], al
0x0809bb3b:	pop esi ; pop edi ; neg eax ; pop ebp ; ret
0x0809bb57:	sub eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x0809bd16:	inc ebx ; push dword ptr [esi + 0x1e] ; mov ebx, eax
0x0809bf0d:	push es ; add eax, 0x30 ; cmp ebx, eax
0x0809bf5b:	sbb eax, 0x89fffffd ; ret
0x0809bfb7:	test eax, eax ; je 0x31 ; jns 0xffffffc9
0x0809c02e:	inc ebx ; push dword ptr [esi + 0x3c] ; mov ebx, eax
0x0809c168:	cmp edx, 0xfd ; jbe 8 ; ret
0x0809c1ac:	pop esi ; ret ; nop ; mov ebx, eax
0x0809c4bd:	je 0xb ; add esp, 0xc ; ret
0x0809c5f8:	add byte ptr [ebx - 0x3c0ce33c], al
0x0809c62b:	or al, 0x83 ; les ebp, ptr [eax] ; pop ebx ; ret
0x0809c66a:	jne 6 ; add esp, 0x2c ; ret
0x0809c694:	and al, 0xc ; add esp, 0x2c ; ret
0x0809c6d1:	inc edx ; add al, 0x83 ; les ebx, ptr [ebx + eax*8]
0x0809c751:	add esp, 0x20 ; pop ebx ; pop esi ; ret
0x0809c78f:	add esp, 0x10 ; pop ebx ; pop esi ; ret
0x0809c85d:	mov eax, edx ; add esp, 0x1c ; ret
0x0809c8a6:	add eax, 0xfffffffc ; ret
0x0809c9b1:	sub eax, 1 ; pop ebx ; pop esi ; ret
0x0809cacb:	and al, 0x1c ; div ecx ; mov ebx, eax
0x0809cae1:	fstp xword ptr [ecx] ; clc ; setb bl
0x0809cca4:	and al, 0xc ; sub ecx, eax ; add ebx, eax
0x0809ce1a:	mov eax, dword ptr [esi + edx*4] ; shld ebx, eax, cl
0x0809ce29:	pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce31:	mov dword ptr [edi], ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce7a:	mov eax, dword ptr [esi + edx*4] ; shrd ebx, eax, cl
0x0809cfa3:	and byte ptr [ecx - 0x3cfe1bbb], cl
0x0809cfad:	aam 0x8b ; pop ebp ; or al, 1 ; ret
0x0809d06b:	mov ebx, dword ptr [ebx] ; mov edx, ebx ; add ebx, eax
0x0809d1e3:	call 0x5f5e5d60 ; ret
0x0809d21c:	adc byte ptr [ecx - 0x3c7c54fc], cl
0x0809d251:	add dword ptr [ecx - 0x3c7cc4fc], ecx
0x0809d535:	xchg byte ptr [ebx - 0x3cc6fe40], al
0x0809d6bc:	add byte ptr [ecx - 0x3c7c54fc], cl
0x0809d6e7:	or al, 0x83 ; mov byte ptr [ecx], 0x83 ; ret
0x0809dabd:	and byte ptr [ebx - 0x3c3603a3], cl
0x0809dad5:	adc byte ptr [ebx - 0x3c3603a3], cl
0x0809dbba:	sal bh, 0xd8 ; pop esi ; pop edi ; ret
0x0809dc82:	pop ss ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809dd8f:	nop ; test edi, edi ; sete bl
0x0809de96:	and al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x0809dee1:	rol byte ptr [ebx - 0x3c7cfb17], cl
0x0809df24:	cmp eax, ebp ; jne 0xfffffff4 ; sub ebx, eax
0x0809e09b:	enter 0, 0 ; pop ebx ; ret
0x0809e0bf:	test eax, eax ; js 9 ; ret
0x0809e382:	or eax, 0x5b08c483 ; ret
0x0809e3ad:	adc al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x0809e3f5:	or byte ptr [eax - 0x3cf7f149], dh
0x0809e626:	les eax, ptr [esi + ebx*2] ; pop edi ; ret
0x0809e6e0:	push ebx ; add al, 0x5b ; pop esi ; pop edi ; ret
0x0809e866:	les ecx, ptr [ebx + eax*4] ; les ecx, ptr [ebx + eax*8]
0x0809e8f4:	add al, byte ptr [ebx - 0x3ca4f73c]
0x0809e9c6:	movzx eax, al ; neg eax ; ret
0x0809ea94:	mov eax, edx ; add esp, 0x2c ; ret
0x0809eab9:	je 7 ; pop ebx ; pop esi ; pop edi ; ret
0x0809ed02:	mov edi, dword ptr [esp + 4] ; sub ebx, eax
0x0809ef25:	push edi ; and ebx, 1 ; add ebx, eax
0x0809efd7:	rol ecx, cl ; sti ; add ebp, dword ptr [ecx] ; ret
0x0809f12a:	lcall ptr [edi] ; mov ebx, edx ; sub ebx, eax
0x0809f20e:	xchg eax, edx ; lea eax, dword ptr [eax + eax*4] ; sub ebx, eax
0x0809f398:	call 0x9d0fda3e ; ret
0x0809f5c2:	salc ; push ebx ; mov edx, ecx ; mov ebx, eax
0x0809f5d9:	push dword ptr [edi + 4] ; pop ebx ; pop esi ; ret
0x0809f5fa:	mov eax, edx ; jle 6 ; ret
0x0809f61c:	mov dword ptr [0x68], eax ; ret
0x0809f692:	sar eax, 2 ; pop esi ; pop edi ; ret
0x0809f6d4:	adc al, 0x83 ; les ecx, ptr [ebx + ebx*2] ; ret
0x080a038b:	add byte ptr [ebx - 0x3cc6fe40], al
0x080a122e:	inc dword ptr [ebx - 0x3cfeef3c]
0x080a13be:	push cs ; add byte ptr [eax], al ; add byte ptr [ecx], al ; ret
0x080a13d4:	cmp byte ptr [esi - 0x3cfe0005], bl
0x080a1736:	test eax, eax ; je 8 ; add ebx, eax
0x080a1867:	test eax, eax ; je 0x4b ; mov ebx, eax
0x080a1979:	add byte ptr [eax], al ; mov eax, dword ptr [eax] ; add ebx, eax
0x080a209b:	and al, 0x38 ; sub ebx, edx ; cmp ebx, eax
0x080a2240:	mov ecx, dword ptr [edx] ; mov eax, dword ptr [ecx] ; cmp ebx, eax
0x080a224f:	jne 0x1f ; mov eax, dword ptr [ecx] ; cmp ebx, eax
0x080a27e1:	or byte ptr [ebx - 0x3c7cef3c], al
0x080a280f:	movzx eax, byte ptr [edi + 1] ; mov ebx, eax
0x080a29ac:	add cl, byte ptr [ebp - 0x3c762f88]
0x080a3271:	rcr dword ptr [0xc3890000], cl
0x080a32b5:	add byte ptr [ebp - 0x3c7cfeb0], cl
0x080a364d:	jecxz 9 ; add byte ptr [eax], al ; mov ebx, eax
0x080a3dff:	mov ebx, edi ; cmp bl, cl ; ja 0xffffffc9
0x080a479e:	loope 0xffffff8d ; jne 0xc ; mov ebx, eax
0x080a4852:	add byte ptr [ebp - 0x3cc600b9], cl
0x080a4ad0:	add dword ptr [ebx - 0x3cc6fe11], eax
0x080a54a1:	dec dword ptr [ecx - 0x3c76f7b3]
0x080a5773:	jne 0xffffffbe ; mov ecx, ebx ; mov ebx, eax
0x080a63f0:	add byte ptr [eax], al ; add cl, ch ; add bl, al
0x080a6585:	inc dword ptr [ebx - 0x3c7cf714]
0x080a66ce:	int1 ; jmp 0xc38a0005
0x080a7092:	bound esi, qword ptr [esi - 0x3c7c0001]
0x080a8077:	sub eax, ecx ; add edx, eax ; sub ebx, eax
0x080a85c3:	cli ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a8656:	or byte ptr [ebx - 0x3ca4d73c], al
0x080a8780:	les ebx, ptr [eax] ; mov eax, ebx ; pop ebx ; ret
0x080a87aa:	adc byte ptr [ebx - 0x3ca4eb3c], al
0x080a881b:	les ebp, ptr [eax] ; mov eax, ebx ; pop ebx ; ret
0x080a898c:	leave ; jne 5 ; xor eax, eax ; ret
0x080a8bab:	add word ptr [edx + eax*2], 1 ; ret
0x080a8cd4:	test al, 0 ; add byte ptr [eax], al ; pop ebx ; ret
0x080a8d30:	mov eax, dword ptr [0x80ebc9c] ; ret
0x080a8d66:	add eax, dword ptr [ebx - 0x3ca4eb3c]
0x080a8ece:	sub esp, 8 ; lea ecx, dword ptr [ebp - 0x3d]
0x080aa391:	add ecx, dword ptr [ebp - 0x3c7c49ec]
0x080aa40c:	mov esi, dword ptr [esp + 0xc] ; add ebx, eax
0x080aa6ef:	inc esp ; inc edx ; add dword ptr [eax], esp ; mov ebx, eax
0x080aa809:	out dx, al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080aabd1:	push esp ; and al, 0x10 ; movsx eax, bl
0x080aae92:	fchs ; pop esi ; pop edi ; pop ebp ; ret
0x080ac300:	add byte ptr [eax], 0 ; add byte ptr [ecx], bh ; ret
0x080ac924:	sbb cl, byte ptr [ebp + 0xd] ; or al, ch ; ret
0x080acb19:	adc byte ptr [ebx - 0x3c16fe1e], al
0x080ad1c6:	dec esp ; or eax, 0xc322e808
0x080ad1df:	dec esp ; or eax, 0xc309e808
0x080ae91f:	inc dword ptr [ebx - 0x3c16ef3c]
0x080af098:	pop esp ; and al, 0x38 ; seta bl
0x080af88a:	pop esi ; pop edi ; pop ebp ; fmul st(0) ; ret
0x080af8d2:	pop esi ; pop edi ; pop ebp ; fmulp st(1) ; ret
0x080b2353:	iretd ; push ebx ; mov esi, edx ; mov ebx, eax
0x080b2393:	les esp, ptr [eax] ; pop ebx ; pop esi ; pop edi ; ret
0x080b252d:	add al, 0x24 ; add esp, 4 ; ret
0x080b256c:	dec dword ptr [edi] ; and byte ptr [esi - 0x7f], 0xc3
0x080b259b:	add esp, 0xc ; pop ebx ; pop esi ; ret
0x080b25f8:	sub al, 0x24 ; add esp, 0x1c ; ret
0x080b2631:	add eax, 0x80b5210 ; ret
0x080b268c:	fistp dword ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x080b2b8e:	jbe 2 ; pcmpeqb xmm0, xmm3
0x080b4d27:	or al, 8 ; sub eax, ecx ; pop ebp ; ret
0x080b4ef8:	fadd dword ptr [ebx - 0x3ca2fb3c]
0x080b4f03:	pop esi ; pop edi ; pop ebp ; xor eax, eax ; ret
0x080b51cd:	adc bl, byte ptr [esi + 0x5d] ; xor eax, eax ; ret
0x080b51ea:	cmovbe eax, edx ; pop esi ; pop ebp ; ret
0x080b5580:	pop esi ; xor eax, eax ; pop edi ; pop ebp ; ret
0x080b5596:	add dh, bh ; fcomp dword ptr [edi + 0x5d] ; ret
0x080b55b8:	dec ecx ; cmp ebp, 4 ; jbe 0xffffffc9
0x080b58c9:	mov eax, esi ; div ecx ; mov ebx, eax
0x080b59ab:	test edx, edx ; mov ecx, esi ; mov ebx, eax
0x080b5cba:	pop eax ; add esp, 8 ; pop ebx ; ret
0x080b5ce2:	pop esp ; add esp, 8 ; pop ebx ; ret
0x080b5cf2:	push esp ; add esp, 8 ; pop ebx ; ret
0x080b5f4d:	loopne 0xffffff85 ; rol dword ptr [edi], 9 ; ret
0x080b6286:	shl eax, cl ; neg eax ; or ebx, eax
0x080b6585:	fcomp dword ptr [eax] ; add byte ptr [eax], al ; add al, 0xc3
0x080b6976:	mov ecx, dword ptr [esp + 0x18] ; mov ebx, eax
0x080b7152:	retf ; mov eax, esi ; setge bl
0x080b7161:	retf ; mov eax, esi ; sete bl
0x080b71c8:	fcomp dword ptr [ecx - 0x3c760609]
0x080b71df:	retf ; mov eax, esi ; setne bl
0x080b71ee:	retf ; mov eax, esi ; setl bl
0x080b71fd:	retf ; mov eax, esi ; setle bl
0x080b720c:	retf ; mov eax, esi ; setg bl
0x080b73a9:	mov bh, 0x83 ; mov byte ptr [ecx], 0x83 ; ret
0x080b77e8:	mov dword ptr [esi + 0x4c], edx ; pop esi ; pop edi ; ret
0x080b7877:	cmp dword ptr [edi + 0x10], ecx ; sete bl
0x080b7b92:	and al, 4 ; mov eax, dword ptr [eax + 0x48] ; ret
0x080b7c12:	and al, 4 ; mov eax, dword ptr [eax + 0x4c] ; ret
0x080b7c2e:	mov dword ptr [ecx], eax ; mov eax, dword ptr [edx + 0x4c] ; ret
0x080b7c46:	and al, 4 ; mov dword ptr [eax + 0x4c], edx ; ret
0x080b7c52:	and al, 4 ; mov eax, dword ptr [eax + 0x50] ; ret
0x080b7c62:	and al, 4 ; mov eax, dword ptr [eax + 0x5c] ; ret
0x080b7c9b:	or al, 0x83 ; les ebx, ptr [eax] ; pop ebx ; ret
0x080b7cb2:	and al, 4 ; mov eax, dword ptr [eax + 0x58] ; ret
0x080b7cc2:	and al, 4 ; mov eax, dword ptr [eax + 0x54] ; ret
0x080b7dab:	ret ; lea esi, dword ptr [esi] ; ret
0x080b7e4e:	clc ; mov edi, dword ptr [ebp - 4] ; leave ; ret
0x080b7eef:	mov ebp, dword ptr [ebp] ; mov esp, ecx ; ret
0x080b81bb:	pop ebp ; ret ; mov eax, dword ptr [esp] ; ret
0x080b81bf:	and al, 0xc3 ; mov ecx, dword ptr [esp] ; ret
0x080b81c3:	and al, 0xc3 ; mov esi, dword ptr [esp] ; ret
0x080b81c7:	and al, 0xc3 ; mov edi, dword ptr [esp] ; ret
0x080b81cb:	and al, 0xc3 ; mov ebp, dword ptr [esp] ; ret
0x080b81f9:	add byte ptr [eax], al ; cmova eax, edx ; ret
0x080b837d:	and al, byte ptr [ebx - 0x3ca4f73c]
0x080b8390:	add al, 0 ; add byte ptr [eax], al ; pop ebx ; ret
0x080b8412:	add al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x080b88c1:	mov edx, dword ptr [esp + 0x70] ; mov ebx, eax
0x080b92f9:	and byte ptr [edi], cl ; mov dh, 0xe8 ; mov ebx, eax
0x080b946e:	mov dword ptr [esp + 0x14], eax ; mov ebx, eax
0x080b980d:	pop esi ; mov dword ptr [edx + 0x14], eax ; pop edi ; ret
0x080b98ad:	inc esi ; adc al, 0x5b ; pop esi ; pop edi ; ret
0x080b98ce:	test ecx, ecx ; jne 0xa ; ret
0x080b9d62:	cli ; jmp 0xc381fffe
0x080b9df5:	jmp 0xfffffffe
0x080ba327:	les edx, ptr [eax] ; test ebx, ebx ; jne 0xffffffc9
0x080ba389:	out 0x83, al ; les ecx, ptr [eax] ; pop ebx ; ret
0x080ba502:	in eax, -0x7d ; les ecx, ptr [eax] ; pop ebx ; ret
0x080ba7ec:	jne 0xffffffd4 ; pop ebx ; pop esi ; pop edi ; ret
0x080baaa7:	jne 0xffffffe1 ; pop ebx ; pop esi ; pop edi ; ret
0x080bac12:	adc al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0xc3
0x080badcc:	inc eax ; cmp eax, 0xc3f3fffb
0x080bc95b:	or byte ptr [ebx - 0x3cf7fa35], al
0x080bd3a0:	cmp dl, al ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3a4:	inc ebp ; ret ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3b0:	add dl, al ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3c0:	add dl, al ; push es ; or byte ptr [ebx], dl ; ret
0x080bd3c8:	add dl, al ; push es ; or byte ptr [ecx], cl ; ret
0x080bd3cc:	or ebx, eax ; push es ; or byte ptr [ebx], bh ; ret
0x080bd3d0:	cmp eax, ebx ; push es ; or byte ptr [ecx], dh ; ret
0x080bd3d4:	xor ebx, eax ; push es ; or byte ptr [edi], ah ; ret
0x080bd3dc:	sbb eax, 0x4d0806c3 ; ret
0x080bd3e0:	dec ebp ; ret ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3e4:	js 0xffffffc5 ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3f0:	add dl, al ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd41c:	sbb eax, 0x620806c3 ; ret
0x080bd8c3:	or byte ptr [ecx - 0x3cf7f936], bh
0x080c02c7:	add dl, al ; add byte ptr [eax], al ; add bl, al
0x080c629f:	add byte ptr [edi - 0x3cfffffe], bh
0x080c6377:	add byte ptr [ebp - 0x3cfffffd], bh
0x080c6793:	add byte ptr [esi - 0x3cfffff8], bh
0x080c68e7:	add al, al ; or dword ptr [eax], eax ; add bl, al
0x080c6ce7:	add al, al ; or al, 0 ; add bl, al
0x080c70e7:	add al, al ; sldt word ptr [eax] ; ret
0x080c7f1b:	add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080cb608:	int3 ; int3 ; int3 ; or al, 0xc ; ret
0x080cba73:	or byte ptr [edi - 0x19], dh ; pop es ; or bl, al
0x080cbbf3:	or byte ptr [eax], dl ; out 7, eax ; or bl, al
0x080ce703:	add byte ptr [ebp - 0x3cf7f31a], bh
0x080cf93e:	mov esi, 0xc2c1c0bf ; ret
0x080cfc0a:	cmp bh, byte ptr [eax - 0x3ce1e527]
0x080cfc46:	cld ; out -0x6b, eax ; push es ; cld ; ret
0x080cfdea:	mov ch, 0x31 ; mov ah, bl ; push esi ; ret
0x080cffeb:	cdq ; inc esp ; push ds ; mov ah, 0x13 ; ret
0x080d05d5:	fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x080d0639:	inc ebp ; sub al, 0xb3 ; push edi ; cmp bl, al
0x080d0e82:	push ds ; sar ecx, 1 ; jnp 0xffffffbe ; ret
0x080d1006:	mov ebp, 0xfb67d10d ; ret
0x080d1167:	fnsave dword ptr [ebp + eax*8 + 0x34] ; fadd st(3)
0x080d12c3:	xor dh, byte ptr [edi - 0x3cc5744c]
0x080d1e0c:	imul esp, dword ptr [edx], 0xc3a0d612
0x080d2291:	div byte ptr [eax - 0x3c3c2512]
0x080d271d:	lahf ; sub edi, esi ; int 0x6b ; ret
0x080d288a:	sbb dword ptr [0xc3714057], esp
0x080d2c2c:	or dword ptr [ecx + ebx*2 - 0x30], esi ; pop ebx
0x080d2ceb:	in eax, dx ; sub eax, 0xc322f8f6
0x080d2e63:	pop edx ; out -0xb, eax ; mov ch, 0xab ; ret
0x080d4bd5:	int3 ; int3 ; or al, 0x30 ; or al, 0xc3
0x080d4bd8:	xor byte ptr [ebx + eax*8], cl ; xor byte ptr [ebx + eax*8], cl
0x080d5184:	xchg eax, ecx ; ret 0xfffc ; adc eax, ebx
0x080d5188:	adc eax, ebx ; cld ; jmp dword ptr [ecx - 0x3d]
0x080d518f:	inc dword ptr [ebp - 0x3c00033c]
0x080d5190:	test eax, esp ; cld ; inc ebx ; ret
0x080d587d:	dec eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d590c:	test eax, 0x41140e0a ; ret
0x080d599d:	xor byte ptr [esi + ecx + 0x14], cl ; inc ecx ; ret
0x080d59cc:	adc byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d5b0d:	dec ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5b24:	push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5b65:	dec ebx ; push cs ; adc byte ptr [edi + 0xa], al ; ret
0x080d5bc0:	adc byte ptr [ecx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d5c0a:	dec ebp ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d5c37:	add eax, 0xa014503 ; ret
0x080d5c47:	or eax, dword ptr [ebx] ; rol byte ptr [ecx], 1 ; or al, bl
0x080d5c77:	add eax, 0xa034903 ; ret
0x080d5c85:	add al, 0x41 ; or ebp, dword ptr [edx + ecx - 0x3d]
0x080d5c95:	or eax, dword ptr [ebx] ; ja 5 ; or al, bl
0x080d5d10:	pop ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d5d27:	inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5de2:	adc byte ptr [edi + 0xe], al ; or al, 0x41 ; ret
0x080d5e0f:	add eax, 0xa010003 ; ret
0x080d5e83:	xor byte ptr [eax + 0xe], cl ; adc al, 0x41 ; ret
0x080d5eef:	add eax, 0xa02bf03 ; ret
0x080d5f49:	xchg eax, esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d60d0:	inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d612b:	dec ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6193:	pushal ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d61de:	and byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d621d:	imul ecx, dword ptr [edx], 0xe ; adc al, 0x41 ; ret
0x080d6233:	push edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d62c8:	inc esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6339:	pop ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d643f:	push eax ; dec eax ; push cs ; adc al, 0x41 ; ret
0x080d64db:	add eax, 0xa01a603 ; ret
0x080d64e9:	add al, 0x46 ; or ebx, dword ptr [edx + ecx - 0x3d]
0x080d6577:	xor byte ptr [eax + 0xe], bl ; adc al, 0x45 ; ret
0x080d6629:	int3 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d671f:	dec edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d674d:	cld ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d67ce:	out 0xa, eax ; push cs ; adc al, 0x41 ; ret
0x080d67e6:	add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080d684c:	add al, 0x46 ; or edx, dword ptr [ebp + 0xa] ; ret
0x080d68c4:	cmc ; add byte ptr [eax], al ; add byte ptr [ebx + eax*8], al
0x080d68db:	push ebx ; adc byte ptr cs:[ebp + 0xa], bl ; ret
0x080d68e7:	add al, 0x49 ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080d68f3:	add al, 0x41 ; or eax, dword ptr [edx + ecx - 0x3d]
0x080d6961:	push edx ; or cl, byte ptr [esi] ; or byte ptr [ebx - 0x3d], al
0x080d696b:	push 0x43080e0a ; ret
0x080d69c5:	xchg eax, edi ; and byte ptr cs:[esi + 0xa], ch ; ret
0x080d69d3:	add al, 0x47 ; or esi, dword ptr [ebp + 0xa] ; ret
0x080d6a16:	imul ecx, dword ptr [edx], 0xc341140e
0x080d6a6b:	add eax, 0xa020f03 ; ret
0x080d6a7a:	inc ebp ; or eax, dword ptr [edx] ; dec ebx ; or al, bl
0x080d6ac6:	push eax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6b0e:	dec ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d6b68:	pop edx ; or cl, byte ptr [esi] ; adc al, 0x47 ; ret
0x080d6b93:	dec ebp ; or cl, byte ptr [esi] ; adc al, 0x45 ; ret
0x080d6cba:	or cl, byte ptr fs:[esi] ; or al, 0x41 ; ret
0x080d6cc8:	inc ebp ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d6cdf:	pop edi ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d6ced:	push esp ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080d6d2f:	dec eax ; or cl, byte ptr [esi] ; or byte ptr [esi - 0x3d], al
0x080d6d38:	or edx, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d6d9f:	mov byte ptr [edx], cl ; push cs ; adc al, 0x41 ; ret
0x080d6db4:	or esp, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d6de6:	arpl word ptr [edx], cx ; push cs ; or al, 0x41 ; ret
0x080d6e04:	dec ebp ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080d6e12:	push ecx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d6eac:	dec eax ; push cs ; adc byte ptr [edx + 0xa], cl ; ret
0x080d6ebb:	add al, 0x45 ; or esp, dword ptr [eax + 0xa] ; ret
0x080d6f44:	inc edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d6ffd:	push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d709d:	add dl, byte ptr [edi - 0x3cbeebf2]
0x080d70d3:	add eax, 0xa016e03 ; ret
0x080d713e:	dec eax ; push cs ; adc byte ptr [edi + 0xa], cl ; ret
0x080d7178:	dec ebp ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7197:	or byte ptr [ebx - 0x3cf5a5fe], al
0x080d719d:	push cs ; add al, 0x45 ; or eax, dword ptr [ecx - 0x3d]
0x080d71cc:	adc byte ptr [esi + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d71f9:	pop esp ; or cl, byte ptr [esi] ; or byte ptr [ebx - 0x3d], al
0x080d7202:	or ebx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d723e:	jno 0xc ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080d7293:	add eax, 0xa013e03 ; ret
0x080d72a1:	add al, 0x46 ; or eax, dword ptr [edi + 0xa] ; ret
0x080d72b2:	pushal ; adc byte ptr cs:[edx + ecx - 0x3d], ch
0x080d732a:	jb 0xc ; push cs ; adc al, 0x43 ; ret
0x080d736f:	pop esp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7426:	dec edx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d742f:	or eax, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d747e:	dec eax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d7510:	dec ebx ; push cs ; adc byte ptr [esi + 0xa], ah ; ret
0x080d7559:	jl 0xc ; push cs ; adc al, 0x41 ; ret
0x080d75e4:	adc byte ptr [ebx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d772d:	inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7774:	push eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d77eb:	push 0x41140e0a ; ret
0x080d781d:	push edx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7826:	or esi, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d7843:	or byte ptr [ebx - 0x3cf597fe], al
0x080d784a:	add al, 0x47 ; or edx, dword ptr [eax + 0xa] ; ret
0x080d7850:	push cs ; add al, 0x48 ; or eax, dword ptr [ecx - 0x3d]
0x080d788f:	push ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d78fb:	and byte ptr [edi + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d792b:	dec eax ; push cs ; adc byte ptr [ebx + 0xa], al ; ret
0x080d798e:	dec eax ; push cs ; adc byte ptr [ebx + 0xa], cl ; ret
0x080d799c:	push cs ; add al, 0x44 ; or eax, dword ptr [edi - 0x3d]
0x080d79c4:	adc byte ptr [esi + ecx + 8], ah ; inc ecx ; ret
0x080d7a19:	jp 0x10 ; adc byte ptr [ebx + 0xa], ah ; ret
0x080d7a7c:	je 0xc ; push cs ; adc al, 0x43 ; ret
0x080d7afc:	std ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b13:	xlatb ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b7c:	push esp ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7bbe:	add dword ptr [edx + eax], 0x57 ; or al, bl
0x080d7c91:	adc byte ptr [ebp + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d7cc5:	jae 0xc ; push cs ; adc al, 0x41 ; ret
0x080d7e08:	inc ebx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080d7e79:	je 0xc ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7eae:	and byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d7eea:	pop eax ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7efe:	or cl, byte ptr [0x4108] ; ret
0x080d7f53:	push ecx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7f81:	outsd dx, dword ptr [esi] ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7f8b:	dec eax ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7fbd:	adc byte ptr [ebx - 0x3cf5b3fc], al
0x080d7fd5:	inc esi ; push cs ; adc byte ptr [edx + ecx - 0x3d], ah
0x080d8089:	or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d80e6:	dec esp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8133:	push cs ; adc byte ptr [edx], al ; pushal ; or al, bl
0x080d81b2:	and byte ptr [ebx + 0xe], cl ; or al, 0x46 ; ret
0x080d81fd:	add al, byte ptr [ebx] ; add eax, dword ptr [ecx] ; or al, bl
0x080d8203:	push cs ; add al, 0x44 ; or ecx, dword ptr [edi - 0x3d]
0x080d824c:	inc ebx ; or cl, byte ptr [esi] ; or byte ptr [ebx - 0x3d], al
0x080d829e:	dec ebx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d82c5:	pop esp ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d82da:	adc byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d82f7:	or byte ptr [ebx - 0x3cf58dfe], al
0x080d82fd:	push cs ; add al, 0x45 ; or eax, dword ptr [esi - 0x3d]
0x080d83be:	jbe 0xc ; push cs ; adc al, 0x41 ; ret
0x080d8476:	imul ecx, dword ptr [edx], 0xe ; or al, 0x41 ; ret
0x080d84f1:	add dword ptr [ebx], 2 ; inc eax ; or al, bl
0x080d84fb:	push cs ; add al, 0x45 ; or edi, dword ptr [esi - 0x3d]
0x080d8580:	les ebp, ptr [esi] ; add byte ptr [eax], al ; cmp al, 0xc3
0x080d8594:	fsubr dword ptr [esi] ; add byte ptr [eax], al ; cmp bl, al
0x080d85a8:	in al, dx ; add byte ptr cs:[eax], al ; xor al, 0xc3
0x080d85bc:	add byte ptr [edi], ch ; add byte ptr [eax], al ; xor bl, al
0x080d85d0:	adc al, 0x2f ; add byte ptr [eax], al ; sub al, 0xc3
0x080d85e4:	sub byte ptr [edi], ch ; add byte ptr [eax], al ; sub bl, al
0x080d85f8:	cmp al, 0x2f ; add byte ptr [eax], al ; and al, 0xc3
0x080d860c:	push eax ; das ; add byte ptr [eax], al ; and bl, al
0x080d8634:	js 0x31 ; add byte ptr [eax], al ; sbb bl, al
0x080d8648:	mov word ptr [edi], gs ; add byte ptr [eax], al ; adc al, 0xc3
0x080d865c:	mov al, byte ptr [0x5000002f] ; ret
0x080d8670:	mov ah, 0x2f ; add byte ptr [eax], al ; jl 0xffffffc9
0x080d8684:	enter 0x2f, 0 ; mov bl, al
0x080d8693:	or byte ptr [ebx - 0x3cf591fe], al
0x080d8699:	push cs ; add al, 0x41 ; or ebx, dword ptr [esi - 0x3d]
0x080d86a8:	in al, dx ; das ; add byte ptr [eax], al ; mov ah, 0xc3
0x080d8717:	dec ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8758:	pop edx ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080d87bb:	inc ebx ; or cl, byte ptr [esi] ; adc al, 0x45 ; ret
0x080d8809:	or cl, byte ptr fs:[esi] ; adc al, 0x43 ; ret
0x080d8835:	jb 0xc ; push cs ; adc al, 0x41 ; ret
0x080d88a9:	adc byte ptr [esi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d88f7:	arpl word ptr [edx], cx ; push cs ; adc al, 0x41 ; ret
0x080d8948:	and byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d8977:	or byte ptr [ebx - 0x3cf595fe], al
0x080d89b0:	add ah, byte ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x080d89ed:	ror byte ptr [edx], 1 ; push cs ; adc al, 0x41 ; ret
0x080d8a03:	inc ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d8aac:	dec eax ; push cs ; adc byte ptr [ecx + 0xa], dl ; ret
0x080d8bb8:	bound ecx, qword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080d8c3b:	les ecx, ptr [edx] ; push cs ; or al, 0x43 ; ret
0x080d8ca4:	inc ebx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d8cff:	je 0xc ; push cs ; adc al, 0x41 ; ret
0x080d8d7d:	inc eax ; add bl, byte ptr [esi + 0xe] ; add al, 0xc3
0x080d8dcd:	retf 0xe0a ; adc al, 0x41 ; ret
0x080d8fae:	add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080d9001:	mov edi, 0x43140e0a ; ret
0x080d90da:	add cl, byte ptr [edx] ; push cs ; adc al, 0x43 ; ret
0x080d9125:	fisttp dword ptr [edx] ; push cs ; adc al, 0x43 ; ret
0x080d91dd:	loope 0xc ; push cs ; adc al, 0x41 ; ret
0x080d91f3:	add ch, byte ptr [esi + ecx + 0x14] ; inc esp ; ret
0x080d9232:	imul ecx, dword ptr [edx], 0xe ; or byte ptr [ebp - 0x3d], al
0x080d923b:	or ecx, dword ptr [edi + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080d9263:	mov word ptr [edx], cs ; push cs ; or al, 0x45 ; ret
0x080d9272:	dec edi ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d9280:	dec edi ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080d92b4:	bound ecx, qword ptr [edx] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d92bd:	or ebp, dword ptr [edi + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d92f1:	mov ecx, dword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080d93af:	jno 0xc ; push cs ; adc al, 0x41 ; ret
0x080d93c5:	or cl, byte ptr [0x4314] ; ret
0x080d9458:	jae 0xc ; push cs ; adc al, 0x45 ; ret
0x080d9496:	imul ecx, dword ptr [edx], 0xe ; or byte ptr [ecx - 0x3d], al
0x080d949f:	or eax, dword ptr [ebx + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d94d4:	or al, 0x83 ; add eax, dword ptr [edx] ; pop ebp ; ret
0x080d9507:	or byte ptr [ebx - 0x3c9bfdfe], al
0x080d9547:	test dword ptr [edx], ecx ; push cs ; or al, 0x41 ; ret
0x080d95a2:	add dword ptr [edx], ecx ; push cs ; or al, 0x41 ; ret
0x080d95ce:	add dword ptr [edx + eax], -0x49 ; or al, bl
0x080d95e7:	dec eax ; push cs ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9605:	inc ebp ; push cs ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9679:	cmpsb byte ptr [esi], byte ptr es:[edi] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d9706:	push ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d9771:	test dword ptr [edx], 0xc341140e
0x080d9804:	jo 0xc ; push cs ; adc al, 0x41 ; ret
0x080d981a:	inc ebx ; or cl, byte ptr [esi] ; adc al, 0x44 ; ret
0x080d986a:	mov ecx, 0x43080e0a ; ret
0x080d989d:	mov esp, 0x41140e0a ; ret
0x080d9a0d:	pop esi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d9a16:	or ecx, dword ptr [esi + ecx + 8] ; inc ecx ; ret
0x080d9a3e:	jo 0xc ; push cs ; or al, 0x41 ; ret
0x080d9a96:	add ecx, dword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080d9aad:	lahf ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d9b05:	adc byte ptr [ebx - 0x3cf595fc], al
0x080d9b14:	add al, 0x4c ; or ecx, dword ptr [edi + 0xa] ; ret
0x080d9b51:	jle 0xc ; push cs ; adc al, 0x41 ; ret
0x080d9bb5:	mov esi, 0x43140e0a ; ret
0x080d9c57:	jo 0x56 ; push cs ; adc al, 0x41 ; ret
0x080d9d5f:	adc cl, byte ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d9dcd:	dec esp ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d9dd6:	or edi, dword ptr [ebx + 0xe] ; or byte ptr [esi - 0x3d], al
0x080d9ed2:	add al, 2 ; jae 0x12 ; or al, 0xc3
0x080d9f61:	mov ebx, 0x41140e0a ; ret
0x080da077:	jbe 0xc ; push cs ; adc al, 0x43 ; ret
0x080da124:	add dword ptr [edx], 0x5b ; push cs ; add al, 0xc3
0x080da12d:	add dword ptr [edx], 0x46 ; push cs ; add al, 0xc3
0x080da141:	or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da181:	or dh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da252:	add al, 2 ; ja 0x12 ; or al, 0xc3
0x080da2ea:	add dword ptr [edx], 0x4f ; push cs ; add al, 0xc3
0x080da2f5:	add al, byte ptr [edx] ; movsb byte ptr es:[edi], byte ptr [esi] ; push cs ; add al, 0xc3
0x080da5d3:	add dword ptr [ebx], 0x4e ; push cs ; or bl, al
0x080da612:	or bh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da65d:	adc byte ptr [ebx - 0x3c53fdfc], al
0x080da684:	add dword ptr [edx], 0x49 ; push cs ; add al, 0xc3
0x080da8a5:	add esp, dword ptr [edx + 2] ; push cs ; add al, 0xc3
0x080da8c3:	add al, byte ptr [edx] ; popfd ; push cs ; add al, 0xc3
0x080da8cc:	add dword ptr [edx], 0x6a ; push cs ; add al, 0xc3
0x080da8e9:	add al, byte ptr [edx] ; push 0xe ; add al, 0xc3
0x080da8f2:	add dword ptr [edx], 0x47 ; push cs ; add al, 0xc3
0x080da8fc:	add al, byte ptr [edx] ; int 0xe ; add al, 0xc3
0x080da906:	add al, byte ptr [edx] ; mov byte ptr [esi], cl ; add al, 0xc3
0x080da91a:	add al, byte ptr [edx] ; lodsd eax, dword ptr [esi] ; push cs ; add al, 0xc3
0x080da924:	add al, byte ptr [edx] ; jge 0x12 ; add al, 0xc3
0x080da92e:	add al, byte ptr [edx] ; jl 0x12 ; add al, 0xc3
0x080da938:	add al, byte ptr [edx] ; mov cl, byte ptr [esi] ; add al, 0xc3
0x080da94c:	add al, byte ptr [edx] ; xchg dword ptr [esi], ecx ; add al, 0xc3
0x080da956:	add al, byte ptr [edx] ; mov word ptr [esi], cs ; add al, 0xc3
0x080da974:	add al, byte ptr [edx] ; xchg eax, edi ; push cs ; add al, 0xc3
0x080da97e:	add al, byte ptr [edx] ; pushfd ; push cs ; add al, 0xc3
0x080da988:	add al, byte ptr [edx] ; stosb byte ptr es:[edi], al ; push cs ; add al, 0xc3
0x080da99c:	add al, byte ptr [edx] ; mov ecx, dword ptr [esi] ; add al, 0xc3
0x080da9a5:	add dword ptr [edx], 0x73 ; push cs ; add al, 0xc3
0x080da9ae:	add dword ptr [edx], 0x66 ; push cs ; add al, 0xc3
0x080dab40:	add ecx, esp ; add dword ptr [esi], ecx ; or bl, al
0x080dafcd:	adc byte ptr [ebx - 0x3cf581fc], al
0x080db0b9:	add eax, 0x100ea002 ; ret
0x080db0c8:	mov byte ptr [edx], 0x6a ; push cs ; or al, 0xc3
0x080db0ea:	or al, 0xc6 ; inc ecx ; push cs ; or bl, al
0x080db0f4:	add eax, dword ptr [edx] ; pop esi ; push cs ; or bl, al
0x080db0fa:	add ebx, esp ; add cl, byte ptr [esi] ; add al, 0xc3
0x080db149:	add dword ptr [edx], ecx ; push cs ; adc al, 0x4a ; ret
0x080db15f:	or cl, byte ptr gs:[esi] ; adc al, 0x41 ; ret
0x080db1e0:	add dl, byte ptr [esi + ecx + 0x14] ; inc ecx ; ret
0x080db1fe:	add eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080db233:	dec ecx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080db28c:	push esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db2a3:	cli ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db2f1:	adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080db37f:	inc ecx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080db3d7:	inc ebx ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080db451:	outsb dx, byte ptr [esi] ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080db492:	or cl, byte ptr [0x4614] ; ret
0x080db4b6:	add cl, byte ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080db513:	or byte ptr [ebx - 0x3cf5a4fe], al
0x080db519:	push cs ; add al, 0x44 ; or eax, dword ptr [ecx - 0x3d]
0x080db55c:	add dword ptr [edx], 0x58 ; push cs ; add al, 0xc3
0x080db568:	add dword ptr [ebx], 0x58 ; push cs ; or bl, al
0x080db5ee:	or ecx, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080db692:	pop esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080db82e:	jge 0xc ; push cs ; or al, 0x43 ; ret
0x080db84e:	inc edi ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080db8d0:	push cs ; add al, 0x42 ; or eax, dword ptr [esi - 0x3d]
0x080db922:	or ecx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080dba13:	and byte ptr [ebp + 0xe], cl ; or al, 0x41 ; ret
0x080dba49:	mov dl, 0xa ; push cs ; adc al, 0x41 ; ret
0x080dbadb:	popal ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dbb31:	inc ebp ; push cs ; adc byte ptr [esi + 0xa], dl ; ret
0x080dbb3f:	push cs ; add al, 0x43 ; or eax, dword ptr [ebx - 0x3d]
0x080dbb7e:	or eax, dword ptr [ebx] ; rol dword ptr [ecx], 1 ; or al, bl
0x080dbc5e:	add al, byte ptr [ebx + 0xe] ; or al, 0x41 ; ret
0x080dbc73:	add byte ptr [ecx + ebp - 7], ch ; inc ebx
0x080dbc8b:	add eax, 0xa012103 ; ret
0x080dbc9a:	inc ebx ; or eax, dword ptr [edx] ; loop 0xf ; ret
0x080dbd92:	push esi ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080dbdf6:	add dword ptr [eax], 0xe ; or al, 0xc3
0x080dbe7e:	or cl, al ; inc ecx ; push cs ; add al, 0xc3
0x080dbe9d:	insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080dbecf:	and byte ptr [esi + 0xe], ah ; adc al, 0x41 ; ret
0x080dbf50:	add al, 0x45 ; or ecx, dword ptr [ebx + 0xa] ; ret
0x080dc0b1:	sbb al, 2 ; push cs ; adc al, 0x41 ; ret
0x080dc28a:	add dword ptr [edx + eax], 0x40 ; or al, bl
0x080dc298:	push cs ; add al, 0x46 ; or eax, dword ptr [ecx - 0x3d]
0x080dc2f9:	bound ecx, qword ptr [edx] ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dc30b:	push eax ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dc3d3:	add eax, 0xa015303 ; ret
0x080dc42d:	xor byte ptr [ebp + 0xe], ah ; adc al, 0x43 ; ret
0x080dc4b9:	xor byte ptr [eax + 0xe], cl ; adc al, 0x45 ; ret
0x080dc5eb:	push ebp ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080dc5f8:	or eax, dword ptr [ebx + 0xe] ; or al, 0x41 ; ret
0x080dc653:	dec esi ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080dc68f:	add eax, 0xa076903 ; ret
0x080dc69e:	inc esi ; or eax, dword ptr [edx] ; dec byte ptr [edx] ; ret
0x080dc6e4:	pop eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc838:	add ch, byte ptr [eax + 0xe] ; adc al, 0x43 ; ret
0x080dc89c:	pop edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc8db:	xor byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dc94a:	push eax ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080dc957:	or eax, dword ptr [ebx + 0xe] ; or al, 0x46 ; ret
0x080dc9b5:	and byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dca1b:	add eax, 0xa023803 ; ret
0x080dca64:	and byte ptr [ebx + 0xb], cl ; add bl, byte ptr [ebp - 0x3d]
0x080dcab1:	jns 0xc ; push cs ; adc al, 0x41 ; ret
0x080dcb02:	inc esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dcb50:	dec edx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dcc89:	jge 0xc ; push cs ; adc al, 0x41 ; ret
0x080dccb0:	lea ecx, dword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080dcd38:	jnp 0xc ; push cs ; adc al, 0x43 ; ret
0x080dce7d:	or byte ptr [edx], 0xe ; adc al, 0x41 ; ret
0x080dd7e4:	push ecx ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080dd849:	cwde ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dd89b:	pop ebp ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080dd8b0:	or ebx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080dd8ef:	add al, 4 ; dec ebx ; or ecx, dword ptr [ecx - 0x3d]
0x080dd9bc:	dec ebp ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dd9f2:	dec esi ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dda43:	inc edi ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080dda54:	or ebx, dword ptr [esi + ecx + 0x10] ; inc ecx ; ret
0x080dda8d:	push esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080ddb25:	adc byte ptr [edi + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080ddb69:	push eax ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080ddbf8:	jg 0xc ; push cs ; adc al, 0x43 ; ret
0x080ddc0e:	pop edx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080ddcf6:	dec edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080ddda2:	and byte ptr [eax + 0xe], dl ; adc byte ptr [ebp - 0x3d], al
0x080dde74:	inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dde8a:	push edx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080de019:	xchg eax, edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de02d:	dec eax ; or esp, dword ptr [ebx + 0xe] ; add al, 0xc3
0x080de064:	add al, 0x46 ; or ebp, dword ptr [ecx + 0xa] ; ret
0x080de119:	inc edx ; or eax, dword ptr [edx] ; inc ebx ; or al, bl
0x080de1ba:	or eax, dword ptr [ebx] ; dec ecx ; add ecx, dword ptr [edx] ; ret
0x080de21c:	push edx ; push cs ; adc byte ptr [ebp + 0xa], al ; ret
0x080de24f:	or byte ptr [ebx - 0x3cf584fe], al
0x080de2ef:	or byte ptr [ebx - 0x3cf581fe], al
0x080de2f5:	push cs ; add al, 0x41 ; or ebx, dword ptr [ecx - 0x3d]
0x080de32a:	fmul qword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080de33f:	or esi, dword ptr [ebx + 0xe] ; adc al, 0x41 ; ret
0x080de367:	or byte ptr [ebx - 0x3cf5b2fe], al
0x080de36d:	push cs ; add al, 0x4a ; or edx, dword ptr [edx - 0x3d]
0x080de39d:	inc ecx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080de3ae:	or esi, dword ptr [eax + 0xe] ; adc byte ptr [ecx - 0x3d], al
0x080de43b:	iretd ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de4b3:	add eax, 0xa013603 ; ret
0x080de4f8:	inc ebx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080de501:	or ecx, dword ptr [edi + 0xe] ; or byte ptr [esi - 0x3d], al
0x080de56d:	or esp, dword ptr [edi + 0xe] ; adc al, 0x46 ; ret
0x080de6e2:	add dword ptr [edx + eax], 0x48 ; or al, bl
0x080de6f1:	add al, 0x46 ; or eax, dword ptr [edx] ; pushal ; ret
0x080de744:	pushal ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080de788:	sbb al, 0x71 ; push cs ; or al, 0x43 ; ret
0x080de7c3:	xor byte ptr [ebp + 0xe], dh ; or al, 0x43 ; ret
0x080de7e8:	or al, 0x83 ; add eax, dword ptr [edx] ; dec ecx ; ret
0x080de894:	dec esp ; or eax, dword ptr [edx] ; lodsd eax, dword ptr [esi] ; or al, bl
0x080de8c7:	add eax, 0xa018203 ; ret
0x080de8f7:	add eax, 0xa075e03 ; ret
0x080dea04:	dec eax ; push cs ; adc byte ptr [esi + 0xa], dl ; ret
0x080dea2c:	push cs ; adc byte ptr [edx], al ; dec edx ; or al, bl
0x080dea4a:	dec ebx ; push cs ; adc byte ptr [ebp + 0xa], al ; ret
0x080dea59:	add al, 0x42 ; or ebx, dword ptr [ecx + 0xa] ; ret
0x080dea8b:	add eax, 0xa016903 ; ret
0x080deab4:	or al, 0x83 ; add ebp, dword ptr [esi + 0xa] ; ret
0x080deabe:	push cs ; add al, 0x47 ; or ecx, dword ptr [edx - 0x3d]
0x080deaeb:	add eax, 0xa060903 ; ret
0x080deafb:	or eax, dword ptr [ebx] ; lahf ; add dword ptr [edx], ecx ; ret
0x080deb09:	add al, 0x46 ; or eax, dword ptr [esi + 0xa] ; ret
0x080deb6e:	js 0xc ; push cs ; or byte ptr [ecx - 0x3d], al
0x080debfd:	push esp ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080decfa:	mov ah, 0xa ; push cs ; adc al, 0x41 ; ret
0x080def9c:	and byte ptr [eax + 0xe], cl ; or al, 0x41 ; ret
0x080defde:	push eax ; push cs ; adc byte ptr [esi + 0xa], ah ; ret
0x080defed:	add al, 0x48 ; or edx, dword ptr [edx + 0xa] ; ret
0x080df035:	retf ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080df04a:	or ecx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080df11d:	adc byte ptr [ebx - 0x3cb8fdfc], al
0x080df158:	outsd dx, dword ptr [esi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080df1d0:	dec ecx ; or eax, dword ptr [edx] ; mov byte ptr [edx], cl ; ret
0x080df210:	add al, 0x47 ; or eax, dword ptr [edx] ; inc edx ; ret
0x080df26f:	add eax, 0xa016203 ; ret
0x080df27d:	add al, 0x47 ; or edx, dword ptr [ecx + 0xa] ; ret
0x080df28c:	inc esp ; or eax, dword ptr [edx] ; insd dword ptr es:[edi], dx ; or al, bl
0x080df350:	add cl, byte ptr [esi + 0xe] ; adc al, 0x46 ; ret
0x080df395:	adc byte ptr [ebx - 0x3cb6fdfc], al
0x080df445:	adc byte ptr [ebx - 0x3cadfdfc], al
0x080df522:	dec eax ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080df534:	jnp 0xc ; push cs ; adc byte ptr [esi - 0x3d], al
0x080df575:	outsd dx, dword ptr [esi] ; adc byte ptr cs:[ebp + 0xa], bl ; ret
0x080df583:	add al, 0x48 ; or edi, dword ptr [edi + 0xa] ; ret
0x080df5ca:	dec eax ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080df623:	push ebp ; adc byte ptr cs:[eax + 0xa], ch ; ret
0x080df631:	add al, 0x48 ; or eax, dword ptr [esi + 0xa] ; ret
0x080df674:	add al, 0x4b ; or edx, dword ptr [eax + 0xa] ; ret
0x080df687:	adc byte ptr cs:[edx], al ; stosd dword ptr es:[edi], eax ; or al, bl
0x080df7b8:	xor byte ptr [ebp + 0xe], al ; adc al, 0x43 ; ret
0x080df828:	pushal ; inc ebp ; push cs ; adc al, 0x43 ; ret
0x080df94b:	dec ecx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080df989:	push eax ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080df9bd:	pop edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080df9fe:	inc edi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080dfa32:	adc byte ptr [ecx + 0xe], bl ; or byte ptr [ebx - 0x3d], al
0x080dfa65:	adc byte ptr [esi + ecx + 0xc], dl ; inc ecx ; ret
0x080dfb7a:	jbe 0xc ; push cs ; or al, 0x41 ; ret
0x080dfbb2:	and byte ptr [eax + 0xe], ah ; or byte ptr [ecx - 0x3d], al
0x080dfbdf:	insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080dfc17:	push eax ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080dfc24:	or ecx, dword ptr [edx + 0xe] ; or al, 0x41 ; ret
0x080dfc4f:	dec esp ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080dfc7e:	jge 0xc ; push cs ; or al, 0x41 ; ret
0x080dfc94:	adc byte ptr [eax + 0xe], dl ; or al, 0x41 ; ret
0x080dfd1d:	dec ebx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080dfd41:	popal ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080dfd71:	push cs ; add al, 0x45 ; or ecx, dword ptr [ecx - 0x3d]
0x080dfda8:	push esp ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080dfded:	add dword ptr [ebx], 2 ; dec ecx ; or al, bl
0x080dfdf8:	add al, 0x44 ; or eax, dword ptr [edx] ; push esi ; ret
0x080dfe98:	pop ecx ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dfeaa:	inc ebx ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dfebb:	or eax, dword ptr [edi + 0xe] ; adc byte ptr [ebx - 0x3d], al
0x080dff10:	push esi ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080e016b:	or cl, byte ptr [0x4114] ; ret
0x080e0337:	out dx, eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0391:	push ecx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e03a6:	or esp, dword ptr [ecx + 0xe] ; adc al, 0x43 ; ret
0x080e03f7:	pop edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e0432:	push cs ; or al, 0xc6 ; push cs ; or bl, al
0x080e0463:	add al, 2 ; jg 0x12 ; or al, 0xc3
0x080e0474:	xchg byte ptr [edx + eax*2], al ; push cs ; or al, 0xc3
0x080e048e:	add al, 2 ; push esi ; push cs ; or al, 0xc3
0x080e04b0:	xchg byte ptr [ecx + esi*2], al ; push cs ; or al, 0xc3
0x080e04c1:	xchg byte ptr [ebx + esi*2], al ; push cs ; or al, 0xc3
0x080e04e3:	xchg byte ptr [edx + ecx*2], al ; push cs ; or al, 0xc3
0x080e0538:	xchg byte ptr [edi + ecx*2], al ; push cs ; or al, 0xc3
0x080e0729:	add al, 2 ; test byte ptr [esi], cl ; or al, 0xc3
0x080e0742:	xchg byte ptr [edx + esi*2], al ; push cs ; or al, 0xc3
0x080e08e9:	add dword ptr [ebx], 2 ; jp 0xf ; ret
0x080e08f4:	add al, 0x43 ; or ecx, dword ptr [eax + 0xa] ; ret
0x080e0994:	or al, 0x83 ; add eax, dword ptr [edx] ; pop esp ; ret
0x080e0a75:	pop eax ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080e0aa9:	imul ecx, dword ptr [edx], 0xc341100e
0x080e0b3e:	insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e0c00:	add dword ptr [edx], 2 ; outsb dx, byte ptr [esi] ; or al, bl
0x080e0c07:	add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0c0e:	add al, 0x41 ; or eax, dword ptr [esi + 0xa] ; ret
0x080e0c14:	push cs ; add al, 0x41 ; or eax, dword ptr [esi - 0x3d]
0x080e0c8b:	mov bl, 0xa ; push cs ; adc al, 0x43 ; ret
0x080e0d4c:	add dword ptr [edx], 2 ; dec esp ; or al, bl
0x080e0d53:	add al, 0x43 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0d5a:	add al, 0x45 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0e2b:	adc byte ptr [eax + 0xe], bl ; or al, 0x41 ; ret
0x080e0e87:	dec edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0ef4:	jle 0xc ; push cs ; adc al, 0x43 ; ret
0x080e0f0a:	add dl, byte ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e1067:	and byte ptr [eax + 0xe], cl ; or byte ptr [ebp - 0x3d], al
0x080e10c9:	adc byte ptr [ebx - 0x3cf5b6fc], al
0x080e110c:	push cs ; adc byte ptr [edx], al ; pop ebx ; or al, bl
0x080e1156:	add dword ptr [edx + eax], 0x69 ; or al, bl
0x080e11c3:	dec edi ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e11ea:	push 0xa ; push cs ; adc byte ptr [ebx - 0x3d], al
0x080e152e:	or ecx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e158e:	pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e15a0:	push cs ; add al, 0x46 ; or eax, dword ptr [edx] ; ret
0x080e163e:	dec eax ; push cs ; adc byte ptr [ebp + 0xa], ch ; ret
0x080e16ad:	or ebx, dword ptr [edx + 0xe] ; or al, 0x43 ; ret
0x080e16d4:	adc byte ptr [eax + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e16fd:	arpl word ptr [edx], cx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e1707:	dec edi ; or cl, byte ptr [esi] ; or byte ptr [ebx - 0x3d], al
0x080e1775:	xchg eax, ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e17ad:	and byte ptr [ebp + 0xe], bh ; or byte ptr [ecx - 0x3d], al
0x080e180a:	or edx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e1964:	or al, 0x83 ; add ebp, dword ptr [edx + 0xa] ; ret
0x080e196f:	add al, 0x4b ; or eax, dword ptr [ecx + 0xa] ; ret
0x080e1979:	push cs ; add al, 0x4e ; or eax, dword ptr [ebx - 0x3d]
0x080e19b8:	sbb al, 0 ; add byte ptr [eax], al ; add bl, al
0x080e19c9:	jb 0xb ; add eax, dword ptr [edx] ; push ecx ; ret
0x080e19d8:	sbb al, 0 ; add byte ptr [eax], al ; and bl, al
0x080e19f8:	cmp byte ptr [eax], al ; add byte ptr [eax], al ; inc eax ; ret
0x080e1a25:	pop ebx ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080e1a34:	and byte ptr [eax], al ; add byte ptr [eax], al ; jl 0xffffffc9
0x080e1a84:	push 0xcc000000 ; ret
0x080e1ac4:	dec esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e1b08:	or al, 0x83 ; add eax, dword ptr [edx] ; inc ecx ; ret
0x080e1bd2:	add al, 0x47 ; or ecx, dword ptr [ecx + 0xa] ; ret
0x080e1be5:	add al, 0x44 ; or esi, dword ptr [edi + 0xa] ; ret
0x080e1c2a:	or ebp, dword ptr [eax + 0xc] ; add al, 4 ; ret
0x080e1d4b:	add eax, 0xa01f703 ; ret
0x080e1d5a:	dec eax ; or eax, dword ptr [edx] ; out 0xa, al ; ret
0x080e1d8b:	add eax, 0xa01e303 ; ret
0x080e1d9a:	inc esi ; or eax, dword ptr [edx] ; push eax ; or al, bl
0x080e1e13:	and byte ptr [ecx + 0xe], bl ; adc al, 0x41 ; ret
0x080e1e8b:	xor byte ptr [edi + 0xe], al ; adc al, 0x43 ; ret
0x080e1f11:	les ecx, ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e20c5:	dec esp ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e20db:	push esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e2564:	push eax ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080e2637:	add eax, 0xa013c03 ; ret
0x080e279a:	add dword ptr [edx + eax], 0x77 ; or al, bl
0x080e27b2:	dec ecx ; push cs ; adc byte ptr [ebx + 0xa], al ; ret
0x080e27e9:	push ebp ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e2861:	inc edi ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080e28c3:	add eax, 0xa042003 ; ret
0x080e28f3:	add eax, 0xa032f03 ; ret
0x080e2903:	or eax, dword ptr [ebx] ; loope 6 ; or al, bl
0x080e2a6b:	imul ecx, dword ptr [edx], 0xe ; or al, 0x43 ; ret
0x080e2a78:	or edx, dword ptr [esi + ecx + 0xc] ; inc ebx ; ret
0x080e2ab1:	inc eax ; push ecx ; push cs ; adc al, 0x41 ; ret
0x080e2ae7:	add eax, 0xa011403 ; ret
0x080e2b3f:	inc ebp ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e2b51:	inc ebx ; or cl, byte ptr [esi] ; adc byte ptr [eax - 0x3d], cl
0x080e2c13:	inc edi ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080e2c20:	or eax, dword ptr [ebx + 0xe] ; or al, 0x43 ; ret
0x080e2c45:	add dword ptr [ebx], 2 ; inc esi ; or al, bl
0x080e2ce0:	outsb dx, byte ptr [esi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e2d5c:	inc edx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080e2d6a:	inc ebx ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080e2e5b:	push cs ; inc eax ; dec edx ; push cs ; add al, 0xc3
0x080e2ef9:	adc byte ptr [ebx - 0x3cf597fc], al
0x080e2f07:	push cs ; add al, 0x45 ; or ebp, dword ptr [edx - 0x3d]
0x080e2fc9:	or cl, byte ptr fs:[esi] ; adc byte ptr [ebx - 0x3d], al
0x080e2fdb:	inc esi ; or cl, byte ptr [esi] ; adc byte ptr [eax - 0x3d], cl
0x080e300d:	dec ebx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e3052:	inc ebp ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e3182:	add dl, byte ptr [ebx + 0xe] ; or al, 0x41 ; ret
0x080e326b:	add eax, 0xa030903 ; ret
0x080e32c3:	jb 0xc ; push cs ; adc al, 0x46 ; ret
0x080e3352:	dec edi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e3421:	scasd eax, dword ptr es:[edi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3437:	push 0xa ; push cs ; adc al, 0x41 ; ret
0x080e344d:	inc ebx ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e3478:	or eax, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e34ab:	add eax, 0xa010903 ; ret
0x080e34bb:	or eax, dword ptr [ebx] ; sbb eax, dword ptr [edx] ; or al, bl
0x080e3799:	xor byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e387f:	sub al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e38bb:	sbb al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e39e5:	push esp ; or cl, byte ptr [esi] ; or byte ptr [ebx - 0x3d], al
0x080e39fd:	adc byte ptr [esi + 0xe], cl ; or byte ptr [ebx - 0x3d], al
0x080e3a4c:	or al, 0x83 ; add esi, dword ptr [ebx + 0xa] ; ret
0x080e3a56:	push cs ; add al, 0x4a ; or eax, dword ptr [ebx - 0x3d]
0x080e3ac2:	dec ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3b50:	push cs ; adc byte ptr [ecx + 0xe], al ; or al, 0xc3
0x080e3b5e:	inc ecx ; or eax, dword ptr [ebp + 0xe] ; or al, 0xc3
0x080e3bdd:	inc esi ; or eax, dword ptr [edx] ; outsb dx, byte ptr [esi] ; or al, bl
0x080e3c17:	test dword ptr [edi + edx*2], eax ; push cs ; adc bl, al
0x080e4002:	add dword ptr [ebx], 0x7b ; or al, ch ; ret
0x080e400a:	add al, 0x46 ; or edx, dword ptr [edx + 0xa] ; ret
0x080e40ae:	add al, 0x49 ; or ecx, dword ptr [edx + 0xa] ; ret
0x080e40c1:	add al, 0x46 ; or esi, dword ptr [edx + ecx - 0x3d]
0x080e4117:	pop edi ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e4142:	or edx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080e4225:	add dword ptr [ebx + 0xe], ecx ; or byte ptr [ecx - 0x3d], al
0x080e4267:	push eax ; and byte ptr cs:[edx + 0xa], ah ; ret
0x080e4273:	add al, 0x47 ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080e42aa:	and byte ptr cs:[edx], al ; js 0xf ; ret
0x080e42b8:	add al, 0x47 ; or esp, dword ptr [edx + 0xa] ; ret
0x080e4369:	dec esi ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e45a7:	inc esi ; or cl, byte ptr [esi] ; or byte ptr [ebx - 0x3d], al
0x080e45b1:	inc esi ; or cl, byte ptr [esi] ; or byte ptr [esi - 0x3d], al
0x080e46a4:	dec eax ; push cs ; adc byte ptr [ebp + 0xa], al ; ret
0x080e4718:	push esp ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080e475e:	add cl, byte ptr [edx] ; push cs ; adc al, 0x46 ; ret
0x080e4853:	or edx, dword ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x080e48f4:	inc esi ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080e4980:	or al, 0x83 ; add ebx, dword ptr [ecx + 0xa] ; ret
0x080e498a:	push cs ; add al, 0x42 ; or eax, dword ptr [ecx - 0x3d]
0x080e49c9:	adc byte ptr [ebx - 0x3ca5fdfc], al
0x080e4a00:	adc al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4a27:	add eax, 0xa0a1703 ; ret
0x080e4a79:	jne 0xc ; push cs ; adc al, 0x41 ; ret
0x080e4c4f:	add eax, 0xa01dc03 ; ret
0x080e4cbf:	add eax, 0xa023f03 ; ret
0x080e4ccf:	or eax, dword ptr [ebx] ; or byte ptr [ecx], al ; or al, bl
0x080e4cdd:	add al, 0x41 ; or ebx, dword ptr [edi + 0xa] ; ret
0x080e4d4f:	add eax, 0xa028d03 ; ret
0x080e4df7:	test dword ptr [edx + ebx*2], eax ; push cs ; adc bl, al
0x080e4e39:	and byte ptr [ecx + 0xe], ah ; adc al, 0x41 ; ret
0x080e4e77:	add eax, 0xa02b803 ; ret
0x080e4eee:	or cl, byte ptr fs:[esi] ; adc al, 0x41 ; ret
0x080e4f4a:	and byte ptr cs:[edx], al ; inc ebx ; or al, bl
0x080e5014:	adc byte ptr [edi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e5046:	and byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e506e:	sbb al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e50a2:	xor byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e50d2:	dec eax ; push cs ; adc byte ptr [eax + 0xa], bl ; ret
0x080e5299:	popal ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e52af:	imul ecx, dword ptr [edx], 0xc343140e
0x080e5353:	inc esi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e53ce:	sbb al, 0x45 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e5434:	sub byte ptr [ebx + 0xe], al ; adc byte ptr [ecx - 0x3d], al
0x080e554e:	push ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e5602:	add dword ptr [edx], ecx ; push cs ; adc al, 0x46 ; ret
0x080e5746:	or cl, byte ptr [0x410c] ; ret
0x080e576f:	or edx, dword ptr [edi + 0xe] ; or al, 0x41 ; ret
0x080e585d:	jmp 0x43140e0f ; ret
0x080e659a:	inc ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e668e:	ja 0xc ; push cs ; adc al, 0x43 ; ret
0x080e671f:	add al, 0xa ; push cs ; adc al, 0x41 ; ret
0x080e69a7:	dec eax ; push cs ; shr byte ptr [edx + eax - 0x3d], 1
0x080e6bfb:	jns 0xc ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e6c4c:	js 0xc ; push cs ; adc al, 0x41 ; ret
0x080e6cfa:	add dl, byte ptr [edi + 0xe] ; or al, 0x41 ; ret
0x080e6d69:	push cs ; add al, 0x47 ; or eax, dword ptr [ecx - 0x3d]
0x080e6f55:	ja 0xc ; push cs ; adc al, 0x41 ; ret
0x080e6feb:	add cl, ah ; push cs ; adc al, 0x43 ; ret
0x080e7019:	pop edi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e702d:	push esi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e7036:	or eax, dword ptr [esi + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e710b:	outsd dx, dword ptr [esi] ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e7156:	cdq ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e721e:	add ch, ch ; push cs ; adc al, 0x41 ; ret
0x080e7252:	add dword ptr [edx + eax], 0x53 ; or al, bl
0x080e7260:	push cs ; add al, 0x43 ; or eax, dword ptr [ecx - 0x3d]
0x080e72ba:	inc eax ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e72d0:	inc esi ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e7379:	dec esi ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e738e:	or eax, dword ptr [esi + 0xe] ; adc al, 0x43 ; ret
0x080e742d:	adc byte ptr [edx + 0xe], bh ; or al, 0x41 ; ret
0x080e746a:	inc edx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e7473:	or ecx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e755e:	mov bh, 0xa ; push cs ; adc al, 0x43 ; ret
0x080e75ca:	add al, 0x45 ; or ecx, dword ptr [edi + 0xa] ; ret
0x080e75d8:	add al, byte ptr [edx - 0x3c39383b]
0x080e7645:	add dl, byte ptr [esi - 0x3c39383b]
0x080e76db:	add al, 4 ; inc ecx ; or ecx, dword ptr [ecx - 0x3d]
0x080e782d:	bound ecx, qword ptr [edx] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7837:	inc edi ; or cl, byte ptr [esi] ; or byte ptr [esi - 0x3d], al
0x080e7841:	dec ebx ; or cl, byte ptr [esi] ; or byte ptr [esi - 0x3d], al
0x080e784a:	or eax, dword ptr [ebx + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080e786d:	push edi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e7877:	push edi ; or cl, byte ptr [esi] ; or byte ptr [ebx - 0x3d], al
0x080e793e:	xor byte ptr [edi + 0xe], ah ; adc byte ptr [ecx - 0x3d], al
0x080e7979:	pop eax ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e7995:	dec edx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e79e0:	jl 0xc ; push cs ; adc al, 0x43 ; ret
0x080e7ac3:	inc eax ; push cs ; adc al, 0x41 ; ret
0x080e7b20:	or ebx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e7b65:	inc eax ; js 0x11 ; adc al, 0x41 ; ret
0x080e7c57:	pop edi ; push cs ; adc byte ptr [ecx + 0xa], al ; ret
0x080e7c65:	push cs ; add al, 0x43 ; or ecx, dword ptr [ebp - 0x3d]
0x080e7cad:	push cs ; add al, 0x43 ; or edx, dword ptr [eax - 0x3d]
0x080e7d05:	and byte ptr [eax + 0xe], cl ; or al, 0x45 ; ret
0x080e7d49:	push cs ; add al, 0x44 ; or edx, dword ptr [eax - 0x3d]
0x080e7def:	inc edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e7e05:	pop ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e7fc2:	dec edx ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x08048419:	mov edx, esi ; sub edx, ebx ; add ebx, ecx
0x08049a31:	enter 0x428b, 0xc ; mov ebx, ecx
0x08049abd:	add dword ptr [ecx - 0x341437bb], ecx
0x0804a2d7:	sbb eax, dword ptr [ebp - 0x347bf025]
0x0804a700:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov ebx, ecx
0x0804b07b:	pop ds ; mov eax, dword ptr [edi - 4] ; bswap ebx
0x0804b474:	pop eax ; add al, 0x74 ; add cl, byte ptr [edi] ; retf
0x0804d13f:	or ecx, dword ptr [eax] ; test ecx, ecx ; je 0xffffffd1
0x0804d6d2:	mov edi, edx ; push esi ; push ebx ; mov ebx, ecx
0x08050775:	lahf ; add byte ptr [eax], al ; add byte ptr [ecx], ch ; retf
0x0805081f:	add byte ptr [eax], al ; add byte ptr [eax], al ; sub ebx, ecx
0x08051d54:	add al, 0x8b ; pop esi ; or byte ptr [ecx], ch ; retf
0x08051d96:	or byte ptr [ebx - 0x34d6ef3c], al
0x08051dbf:	lds eax, ptr [ebx - 0x34feef3c]
0x080531bf:	test ecx, ecx ; je 0x22 ; cmp ebx, ecx
0x08053a6e:	cmp ecx, ebx ; jae 0x31 ; sub ebx, ecx
0x080550cc:	inc dword ptr [eax] ; add byte ptr [eax], al ; mov ebx, ecx
0x080550da:	cld ; shr ebx, 3 ; xor ebx, ecx
0x08055129:	iretd ; mov byte ptr [eax + ebx], cl ; sub ebx, ecx
0x080555be:	neg ecx ; add ebx, edx ; and ebx, ecx
0x08055fa7:	add byte ptr [eax], al ; cmp ebx, eax ; jne 0xffffffd1
0x080567b0:	dec dword ptr [ecx - 0x3478f03d]
0x08056ba8:	fiadd dword ptr [ebx - 0x347cef15]
0x08057330:	mov dword ptr [esp + 8], eax ; mov ebx, ecx
0x08057356:	mov dword ptr [esp + 0x3c], ebx ; mov ebx, ecx
0x0805af91:	int 0 ; add byte ptr [eax], al ; mov ebx, ecx
0x0805afd6:	mov byte ptr [eax], al ; add byte ptr [eax], al ; mov ebx, ecx
0x0805b00f:	inc eax ; add al, 0x73 ; dec edi ; mov ebx, ecx
0x0805ca33:	mov ebx, 0x427f0f66 ; retf
0x0805ccd6:	enter 0x24ff, -0x73 ; xor bl, cl
0x0805d0ad:	cmp byte ptr [eax], ah ; movdqa xmm1, xmm3
0x080615be:	nop ; nop ; pcmpeqb xmm1, xmm3
0x080631bd:	add byte ptr [eax], al ; add byte ptr [ebx - 0x77], dl ; retf
0x0806321d:	add eax, ecx ; add edx, ecx ; sub ebx, ecx
0x080634df:	nop ; movdqu xmm1, xmmword ptr [eax - 0x35]
0x080634e4:	retf ; movdqu xmm2, xmmword ptr [edx - 0x35]
0x08063f6e:	psrlw mm0, qword ptr [ecx] ; movaps xmm1, xmm3
0x08063f9e:	sub byte ptr [ecx + 0x1f], dl ; movaps xmm1, xmm3
0x080640ae:	psrlw mm0, qword ptr [edx] ; movaps xmm1, xmm3
0x080640de:	sub byte ptr [ecx + 0x1e], dl ; movaps xmm1, xmm3
0x080641ee:	psrlw mm0, qword ptr [ebx] ; movaps xmm1, xmm3
0x0806421e:	sub byte ptr [ecx + 0x1d], dl ; movaps xmm1, xmm3
0x0806432e:	psrlw mm0, qword ptr [edi + ecx] ; sub bl, cl
0x0806435e:	sub byte ptr [ecx + 0x1c], dl ; movaps xmm1, xmm3
0x0806448e:	sub byte ptr [ecx + 0x1b], dl ; movaps xmm1, xmm3
0x0806458e:	psrlw mm0, qword ptr [esi] ; movaps xmm1, xmm3
0x080645be:	sub byte ptr [ecx + 0x1a], dl ; movaps xmm1, xmm3
0x080646be:	psrlw mm0, qword ptr [edi] ; movaps xmm1, xmm3
0x080646ee:	sub byte ptr [ecx + 0x19], dl ; movaps xmm1, xmm3
0x080647ee:	psrlw mm1, qword ptr [eax] ; movaps xmm1, xmm3
0x0806481e:	sub byte ptr [ecx + 0x18], dl ; movaps xmm1, xmm3
0x0806491e:	psrlw mm1, qword ptr [ecx] ; movaps xmm1, xmm3
0x0806494e:	sub byte ptr [ecx + 0x17], dl ; movaps xmm1, xmm3
0x08064a4e:	psrlw mm1, qword ptr [edx] ; movaps xmm1, xmm3
0x08064a7e:	sub byte ptr [ecx + 0x16], dl ; movaps xmm1, xmm3
0x08064b7e:	psrlw mm1, qword ptr [ebx] ; movaps xmm1, xmm3
0x08064bae:	sub byte ptr [ecx + 0x15], dl ; movaps xmm1, xmm3
0x08064cae:	psrlw mm1, qword ptr [edi + ecx] ; sub bl, cl
0x08064cde:	sub byte ptr [ecx + 0x14], dl ; movaps xmm1, xmm3
0x08064e0e:	sub byte ptr [ecx + 0x13], dl ; movaps xmm1, xmm3
0x08064f0e:	psrlw mm1, qword ptr [esi] ; movaps xmm1, xmm3
0x08064f3e:	sub byte ptr [ecx + 0x12], dl ; movaps xmm1, xmm3
0x0806503e:	psrlw mm1, qword ptr [edi] ; movaps xmm1, xmm3
0x0806506e:	sub byte ptr [ecx + 0x11], dl ; movaps xmm1, xmm3
0x08066e01:	pmovmskb eax, xmm0 ; sub ebx, ecx
0x0806af7e:	jmp 0xffffffe1 ; pcmpeqb xmm1, xmm3
0x0806b75c:	test eax, 0x830f080e ; retf
0x0806b986:	adc byte ptr [ebx - 0x34760f1f], al
0x0806b98e:	add eax, ebx ; mov ebx, esi ; sub ebx, ecx
0x0806b9df:	inc eax ; sub ebx, 1 ; jne 0xffffffd1
0x0806c264:	lea esi, dword ptr [esi] ; mov ebx, ecx
0x0806cdc8:	imul edx, dword ptr [eax], 0xcbe90003
0x0806d2d5:	aam 0 ; add byte ptr [eax], al ; je 0xffffffd1
0x0806d53c:	add byte ptr [eax], al ; add byte ptr [esi - 0x18], dl ; retf
0x0806dd6c:	mov ebx, ebp ; mov ecx, edi ; cmp bl, cl
0x0806eae4:	add al, byte ptr [eax] ; add byte ptr [eax], al ; mov ebx, ecx
0x0806ed64:	sbb ecx, dword ptr [ebx - 0x34c6fb86]
0x08070350:	je 0xffffffd0 ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x08070383:	jmp 0xffffff9d ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x0807038e:	jb 0xa ; test esi, esi ; jne 0xffffffd1
0x08070394:	cmp ebp, ebx ; jne 0xffffff8c ; jmp 0xffffffd1
0x080703fb:	adc byte ptr [ebx - 0x3476fe17], al
0x08070547:	jecxz 0xd ; or al, ch ; add ebx, ecx
0x0807094f:	lea eax, dword ptr [ecx] ; add byte ptr [eax], al ; mov ebx, ecx
0x08070a70:	dec dword ptr [ebx - 0x34762bbb]
0x08070adf:	inc esi ; add eax, dword ptr [eax] ; mov ebx, ecx
0x08071dc3:	movsx esi, byte ptr [ebx + 1] ; mov ebx, ecx
0x08072a73:	lea edx, dword ptr [ebp + ecx] ; add ebx, ecx
0x08072ea7:	add al, 0x83 ; mov byte ptr [ecx + edi], 0xcb
0x08072ecc:	add dword ptr [ebx - 0x34c6fb3e], eax
0x080739e2:	and al, 0x5c ; mov dword ptr [ebx], edx ; mov ebx, ecx
0x08074bcc:	clc ; and ecx, 7 ; sub ebx, ecx
0x08075738:	sbb al, 0x8b ; inc eax ; or cl, ch ; retf
0x08075951:	in eax, 0x3f ; or esi, ebp ; cmp ebx, ecx
0x08075c2e:	add byte ptr [eax], al ; mov dword ptr [ebx], edx ; mov ebx, ecx
0x08076961:	mov bh, 0xc0 ; mov dword ptr [ebx], eax ; mov ebx, ecx
0x080779e4:	push esi ; push ebx ; mov esi, edx ; mov ebx, ecx
0x08078487:	or byte ptr [ebx - 0x34fe97c8], cl
0x08078d14:	push esi ; push ebx ; mov esi, eax ; mov ebx, ecx
0x08078d5c:	inc ebp ; or bh, al ; add byte ptr [ecx], al ; retf
0x0807930c:	ror byte ptr [edi], 0x44 ; fidivr word ptr [ecx] ; retf
0x0807998d:	add byte ptr [eax], al ; mov eax, ebx ; mov ebx, ecx
0x08079c0d:	mov eax, ebx ; sub esi, edx ; mov ebx, ecx
0x08079f4c:	add dword ptr [ecx + 0x6a], edx ; add al, ch ; retf
0x0807aa10:	or al, 0x30 ; sub edx, edi ; cmp ebx, ecx
0x0807c942:	mov eax, 0xa6e8080c ; retf
0x0807d29a:	loopne 3 ; add byte ptr [eax], al ; add ebx, ecx
0x0807dbc2:	mov eax, 0x1fffff8 ; retf
0x080812d2:	mov edx, 0xe9fffffc ; retf
0x08081aeb:	sbb byte ptr [ebx - 0x34c6fe3e], al
0x08081b36:	pop ebp ; test byte ptr [edi + eax - 0x77], dh ; retf
0x08081bd8:	add byte ptr [eax], al ; sub esi, ebx ; mov ebx, ecx
0x08081e72:	add al, 0x8d ; add al, 0x8e ; add ebx, ecx
0x08082415:	pop esp ; sbb bh, bh ; cmove ecx, ebx
0x08083092:	mov edx, eax ; mov eax, ebx ; cmp ebx, ecx
0x08083557:	add byte ptr [ebx - 0x34d6fe17], al
0x080840e0:	mov esi, dword ptr gs:[edi] ; movsx ecx, bl
0x0808411e:	mov edx, dword ptr gs:[eax] ; movsx ecx, bl
0x08085ffb:	adc byte ptr [ebx - 0x34c6ebb8], cl
0x08086562:	sub ecx, eax ; test esi, esi ; mov ebx, ecx
0x08086fa3:	mov esi, 0x8e0f080c ; retf
0x08087dc7:	enter -0x3dc7, 0xf ; xchg ebx, ecx
0x0808b5eb:	adc byte ptr [ebx - 0x34d6eba3], cl
0x0808b832:	pop eax ; mov eax, dword ptr [eax + 0x20] ; jmp 0xffffffd1
0x0808ba79:	add byte ptr [ebx - 0x34d6fba3], cl
0x0808ecb6:	add byte ptr [eax], al ; add byte ptr [edi], cl ; inc edi ; retf
0x0808fa76:	add bh, al ; inc ebx ; sub byte ptr [ebx], al ; retf
0x0808fc9a:	add al, 0x6a ; add al, 0x68 ; adc ecx, ebx
0x0808fe89:	add al, 0x6a ; adc ebp, dword ptr [eax - 0x4c] ; retf
0x0809044a:	add dword ptr [eax], eax ; add byte ptr [eax + 0x18], ch ; retf
0x08090d31:	add eax, dword ptr [eax] ; add byte ptr [eax + 0x18], ch ; retf
0x08090d40:	xchg ebx, edi ; ljmp ptr [eax - 0x70] ; retf
0x08090d63:	add al, byte ptr [eax] ; add byte ptr [eax + 0x18], ch ; retf
0x08091253:	mov edx, esi ; xor eax, eax ; jmp 0xffffffd1
0x08091c04:	add dword ptr [eax], eax ; add byte ptr [eax - 0x1c], ch ; retf
0x08091dcb:	mov dword ptr [eax], 0xcb890000
0x08093278:	add eax, 0xe4680000 ; retf
0x080935e3:	add eax, dword ptr [eax] ; add byte ptr [eax - 0x1c], ch ; retf
0x08093d6e:	and al, 0x18 ; mov edi, ebx ; mov ebx, ecx
0x0809423b:	add al, byte ptr [eax] ; add byte ptr [eax - 0x1c], ch ; retf
0x080942df:	add dword ptr [eax], eax ; add byte ptr [ecx], al ; jne 0xffffffd1
0x080949d2:	or byte ptr [eax], al ; add byte ptr [eax - 0x1c], ch ; retf
0x080952ce:	mov dword ptr [esp + 0x30], ebp ; mov ebx, ecx
0x08095682:	call 0x9bad006 ; retf
0x080957b4:	add ecx, eax ; loope 9 ; add ebx, ecx
0x08095b15:	xor ebx, eax ; xor ecx, edx ; or ebx, ecx
0x080966fe:	sub al, 2 ; add byte ptr [eax], al ; sub ebx, ecx
0x0809673f:	or byte ptr [edx - 0x3476f7f2], ch
0x08096e2d:	cmp cl, byte ptr [ebx - 0x3476f7ab]
0x080973ff:	add byte ptr [eax], al ; test edi, edi ; je 0xffffffd1
0x080983f6:	inc esi ; or al, 0x89 ; ret ; sub ebx, ecx
0x080984e7:	loop 0xffffff87 ; push ebp ; loopne 0x7a ; retf
0x08098764:	or al, 0x6a ; add dword ptr [eax + 0x32], ebp ; retf
0x08098d22:	in eax, 0x57 ; push esi ; push ebx ; mov ebx, ecx
0x080992fd:	jb 0x13 ; mov ebx, edx ; cmp ebx, ecx
0x080997dc:	mov edx, 0xe850080e ; retf
0x08099b1f:	mov ecx, dword ptr [esp + 0xc] ; je 0xffffffd1
0x0809a30c:	call 0xe8080ce6 ; retf
0x0809af69:	add byte ptr [eax], al ; or byte ptr [edi], cl ; test ecx, ebx
0x0809bb1b:	jbe 0x26 ; mov ecx, edi ; cmp bl, cl
0x0809bc6f:	test eax, eax ; je 0x41 ; jns 0xffffffd1
0x0809bc76:	pop edi ; add dword ptr [ecx], edi ; fidivr word ptr [ebp - 0x35]
0x0809cc74:	clc ; push dword ptr [ebp - 0x78] ; mov ebx, ecx
0x0809d16f:	dec ebp ; loopne 0xffffff8c ; ret 0xcb01
0x0809ecde:	mov dword ptr [esp + 8], ebx ; mov ebx, ecx
0x0809ef05:	pop ds ; or ebx, 1 ; add ebx, ecx
0x0809ef0b:	cmp esi, ebx ; je 0x43 ; mov ebx, ecx
0x0809ef1f:	fmul dword ptr [ecx - 0x34deaa0d]
0x0809ef66:	jmp 0xffffff8b ; mov esi, ebx ; mov ebx, ecx
0x0809f138:	sub ecx, edx ; mov ebp, ecx ; mov ebx, ecx
0x0809f39d:	ret ; shr ecx, 0x1f ; cmp bl, cl
0x0809fbda:	add byte ptr [eax], al ; xor edi, edi ; mov ebx, ecx
0x080a0334:	add byte ptr [ebp - 0x347af025], al
0x080a1116:	and al, 0x89 ; pop ebp ; or al, 0x89 ; retf
0x080a2104:	fdiv qword ptr [edi - 0x3476f7f2]
0x080a2242:	mov eax, dword ptr [ecx] ; cmp ebx, eax ; je 0xffffffd1
0x080a282a:	add cl, byte ptr [ebp - 0x3476fdb1]
0x080a3dfd:	jp 0 ; mov ebx, edi ; cmp bl, cl
0x080a5b15:	add byte ptr [eax], al ; add cl, ch ; fcmovne st(0), st(3)
0x080a5b3d:	add byte ptr [eax], al ; add cl, ch ; mov bl, 0xcb
0x080a6413:	cmp edi, 1 ; cmove ecx, ebx
0x080a6519:	pop es ; lea edi, dword ptr [eax + ebx] ; mov ebx, ecx
0x080a66c7:	sub eax, 0x89ffffc0 ; retf
0x080a790d:	jne 0xa ; mov esi, ebx ; mov ebx, ecx
0x080a7c77:	enter -5, -1 ; sub ebx, ecx
0x080a7dab:	mov al, byte ptr [0x89fffffa] ; retf
0x080a8d78:	mov eax, ecx ; mov edi, edx ; mov ebx, ecx
0x080a8fd1:	push esi ; xor esi, esi ; push ebx ; mov ebx, ecx
0x080a9457:	add dword ptr [eax], eax ; add byte ptr [edi], cl ; scasd eax, dword ptr es:[edi] ; retf
0x080aa3a7:	add byte ptr [ebx - 0x348af607], al
0x080abbf5:	mov eax, dword ptr [esp + 0x20] ; mov ebx, ecx
0x080abe42:	mov dword ptr [esp + 0x7c], ebx ; mov ebx, ecx
0x080ac925:	dec ebp ; or eax, 0xcbc3e808
0x080ac95f:	dec ebp ; or eax, 0xcb89e808
0x080b254e:	and al, 0x18 ; mov eax, dword ptr [esi] ; mov ebx, ecx
0x080b5b04:	and al, 8 ; sub eax, esi ; sbb ebx, ecx
0x080b718f:	mov ebp, 0x1fffff9 ; retf
0x080b7bd5:	add al, 0x82 ; je 0x13 ; mov ebx, ecx
0x080b815c:	dec ebp ; add al, 0x89 ; fsubr st(0) ; retf
0x080b8900:	add byte ptr [eax], al ; xor esi, edi ; xor ebx, ecx
0x080b8ff2:	mov edi, eax ; push esi ; push ebx ; mov ebx, ecx
0x080ba437:	inc dword ptr [ebx - 0x34880206]
0x080ba7ae:	mov al, byte ptr [0x1080eae] ; retf
0x080ba9af:	clc ; scasb al, byte ptr es:[edi] ; push cs ; or byte ptr [ecx], al ; retf
0x080bc95c:	or ebx, 5 ; or bl, al ; retf
0x080bc9a0:	mov esi, 0xee0805cb ; retf
0x080bc9e0:	mov ecx, 0xe90805cb ; retf
0x080bca94:	cli ; retf 0x805 ; sub cl, bl
0x080bcad8:	and eax, 0x650805cb ; retf
0x080bcb20:	mov al, byte ptr [0xd00805cb] ; retf
0x080bd8e0:	dec edx ; push es ; or byte ptr [ecx], cl ; retf
0x080bd8e4:	or ebx, ecx ; push es ; or byte ptr [ebx], dl ; retf
0x080bd8ec:	sbb eax, 0x270806cb ; retf
0x080bd8f0:	daa ; retf ; push es ; or byte ptr [ecx], dh ; retf
0x080bd8f4:	xor ebx, ecx ; push es ; or byte ptr [ebx], bh ; retf
0x080bd8f8:	cmp ecx, ebx ; push es ; or byte ptr [ebp - 0x35], al
0x080bd8fc:	inc ebp ; retf ; push es ; or byte ptr [edi - 0x35], cl
0x080bd900:	dec edi ; retf ; push es ; or byte ptr [ecx - 0x35], bl
0x080bd904:	pop ecx ; retf ; push es ; or byte ptr [ebx - 0x35], ah
0x080bd908:	arpl bx, cx ; push es ; or byte ptr [ebp - 0x35], ch
0x080bd90c:	insd dword ptr es:[edi], dx ; retf ; push es ; or byte ptr [edi - 0x35], dh
0x080bd914:	or ebx, 0xcb8b0806
0x080bd924:	test eax, 0xb30806cb ; retf
0x080bd930:	jno 0xffffffd1 ; push es ; or cl, dl ; retf
0x080bd934:	ror ebx, 1 ; push es ; or bl, bl ; retf
0x080bd938:	fcmovne st(0), st(3) ; push es ; or ch, ah ; retf
0x080bd93c:	in eax, -0x35 ; push es ; or bh, ch ; retf
0x080bd940:	out dx, eax ; retf ; push es ; or cl, bh ; retf
0x080bd993:	or cl, al ; int3 ; push es ; or bl, cl
0x080bdb63:	or byte ptr [ecx], cl ; int 6 ; or bl, cl
0x080bf9dc:	add byte ptr [eax], al ; add byte ptr [eax], al ; add ebx, ecx
0x080bfa54:	aaa ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080c02e7:	add dl, cl ; add byte ptr [eax], al ; add bl, cl
0x080c609b:	add al, cl ; add byte ptr [eax], al ; add bl, cl
0x080c62a7:	add bh, al ; add al, byte ptr [eax] ; add bl, cl
0x080c66bf:	add ch, al ; pop es ; add byte ptr [eax], al ; retf
0x080c6a47:	add al, cl ; or al, byte ptr [eax] ; add bl, cl
0x080c7247:	add al, cl ; adc byte ptr [eax], al ; add bl, cl
0x080c75c3:	add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080cb53c:	ror byte ptr [ecx], 0xc ; or byte ptr [ecx], al ; retf
0x080cb540:	add ebx, ecx ; or al, 8 ; add ebx, ecx
0x080cbf9f:	add bl, cl ; jle 0xc ; or bl, cl
0x080cbfa3:	or bl, cl ; jle 0xc ; or bl, cl
0x080cbfcb:	or byte ptr [ebx + 0x7a], bh ; or byte ptr [eax], cl ; retf
0x080cc007:	or byte ptr [edx], bl ; or dword ptr [eax], 8 ; retf
0x080cc0c7:	or byte ptr [eax], dh ; mov dword ptr [eax], ecx ; or bl, cl
0x080cc0e7:	or byte ptr [edi - 0x7a], ah ; or byte ptr [eax], cl ; retf
0x080cf01c:	in al, -0x4c ; or al, 8 ; add ebx, ecx
0x080cf05c:	and eax, 0x1000066 ; retf
0x080cffc5:	mov bx, 0xf32d ; retf
0x080d002a:	sub eax, 0xea4ca798 ; retf
0x080d0422:	add byte ptr [edi - 0x34b4067e], al
0x080d04d9:	mov ecx, 0x5b92ac50 ; retf
0x080d05c3:	cld ; shr al, cl ; add al, 0x3d ; retf
0x080d0706:	lodsb al, byte ptr [esi] ; xchg eax, edi ; jo 0x6a ; salc ; retf
0x080d0fab:	xor dword ptr [edx - 0x3e], ecx ; dec ecx ; sbb ecx, ebx
0x080d12fe:	out dx, eax ; push ecx ; test al, 0xf2 ; dec ebp ; retf
0x080d1db2:	mov ch, 0x41 ; outsb dx, byte ptr [esi] ; sbb edi, ebp ; retf
0x080d1e7b:	out dx, al ; out 0x78, al ; jnp 0x5f ; retf
0x080d1ea0:	ret 0xacfc ; loop 0xffffffcc ; retf
0x080d1fac:	mov byte ptr [0xc95a7ce1], al ; retf
0x080d2021:	jle 0x36 ; pop esp ; sbb ebp, ebx ; retf
0x080d21ea:	insb byte ptr es:[edi], dx ; inc edi ; js 0xfffffff6 ; pushal ; retf
0x080d23e4:	ja 0x23 ; dec eax ; scasb al, byte ptr es:[edi] ; adc ebx, ecx
0x080d27aa:	bound ecx, qword ptr [di + 0x17d2] ; retf
0x080d28ba:	mov al, byte ptr [0x3fb1da5a] ; retf
0x080d28d4:	fsub qword ptr [ebx] ; sub dword ptr [esi], 0x76 ; retf
0x080d28d9:	retf ; mov ds, word ptr [edx + edx - 0x71] ; retf
0x080d291b:	nop ; mov eax, dword ptr [0xcb584ce4]
0x080d2ee2:	cmp cl, byte ptr [esi] ; and byte ptr [ebx + 0x3d], bh ; retf
0x080d2f90:	pop ebx ; je 0x7e ; sar byte ptr [ebx - 0x35], 1
0x080d4c14:	dec ecx ; xchg eax, edx ; and al, 9 ; or bl, cl
0x080d521c:	inc eax ; int 0xfc ; inc dword ptr [eax - 0x35]
0x080d5220:	inc eax ; retf ; cld ; inc dword ptr [eax - 0x35]
0x080d8b94:	fdiv dword ptr [eax + eax] ; add byte ptr [eax], cl ; retf
0x080d8c58:	pushfd ; xor eax, 0xcbe40000
0x080dca03:	add byte ptr [edx + ebx*2], bh ; stc ; dec ebx
0x080dd483:	push cs ; add al, 0x4a ; or eax, dword ptr [ebx] ; retf
0x080ddb08:	dec esp ; test byte ptr [eax], al ; add ah, dh ; retf
0x080ddb34:	js 0xffffff86 ; add byte ptr [eax], al ; clc ; retf
0x080de5c8:	or al, 0x8f ; add byte ptr [eax], al ; add al, 0xcb
0x080de5dc:	and byte ptr [edi - 0x34f00000], cl
0x080de604:	dec eax ; pop dword ptr [eax] ; add byte ptr [eax], bl ; retf
0x080de62c:	jo 0xffffff91 ; add byte ptr [eax], al ; and bl, cl
0x080dece0:	dec edi ; push cs ; rol byte ptr [edx], 2 ; retf
0x080df030:	add eax, 0x2280e43 ; retf
0x080e0354:	cwde ; lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; sbb bl, cl
0x080e03c0:	add al, 0xad ; add byte ptr [eax], al ; jl 0xffffffd1
0x080e0414:	pop eax ; lodsd eax, dword ptr [esi] ; add byte ptr [eax], al ; fmul st(3)
0x080e4d34:	js 0xfffffff8 ; add byte ptr [eax], al ; mov bl, cl
0x080b75d0:	je 0xc ; cmp ax, 0x50f
0x080bb829:	sub al, 5 ; or byte ptr [eax], dh ; syscall
0x080d265f:	repne scasd eax, dword ptr es:[edi] ; daa ; push esp ; syscall
0x0806c76d:	add dword ptr [eax], eax ; add byte ptr [eax], al ; int 0x80
0x0806f108:	nop ; nop ; nop ; int 0x80
0x0807a4b6:	ja 2 ; add byte ptr [eax], al ; int 0x80
0x080b69c0:	cmp word ptr [eax + 6], 0x80cd
0x080b6a8c:	cmp word ptr [eax + 5], 0x80cd
0x080b75ca:	inc eax ; add eax, 0x80cd3d66
0x080d247b:	inc edi ; fstp xword ptr [edi] ; imul ecx, ebp, -0x80
0x080483c5:	add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804842e:	jmp 0xffffffc9 ; mov eax, edx ; pop ebx ; pop esi ; ret
0x0804847b:	sbb byte ptr [ecx + 0x5f5e5bd0], cl ; ret
0x080484cb:	les ebp, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0804875d:	nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x08048794:	rol byte ptr [ebx - 0xc36ef3c], 1 ; ret
0x080487ce:	rol byte ptr [ebx - 0xc36ef3c], cl ; ret
0x0804880d:	scasd eax, dword ptr es:[edi] ; push cs ; or byte ptr [ecx], al ; leave ; ret
0x08048899:	add al, 0x59 ; pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x080488b1:	add byte ptr [ebx - 0x366fef3c], al ; ret
0x08048bb8:	mov dword ptr [edx], eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08048c1c:	dec ebp ; inc esp ; sete al ; test al, bl
0x08048f7c:	les ebp, ptr [ebx + ebx*2 + 0x5e] ; pop edi ; pop ebp ; ret
0x080490b4:	div edi ; imul eax, edi ; mov ebx, eax
0x0804937a:	les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08049400:	or al, 8 ; cmovne esi, ebx ; mov ebx, eax
0x08049487:	les esp, ptr [eax] ; cmp eax, 0xff ; mov ebx, eax
0x0804953f:	nop ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08049596:	mov eax, ecx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080495f5:	pop ebx ; mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x0804975f:	add al, 0x83 ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x08049859:	cmp ebx, edi ; cmovb eax, ecx ; mov ebx, eax
0x08049ca3:	test byte ptr [eax - 0x7d000000], bl ; ret
0x0804a04d:	add esp, 0x10 ; test eax, eax ; mov ebx, eax
0x0804a21e:	call 0x30122 ; mov ebx, eax
0x0804a2ba:	test byte ptr [ebx - 0x76fffffd], bl ; ret
0x0804a398:	add al, byte ptr [eax] ; add esp, 0x10 ; mov ebx, eax
0x0804a4ef:	mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804a616:	call 0x2fd2a ; mov ebx, eax
0x0804a7c9:	add byte ptr [eax - 0x76158b80], 0xc3
0x0804a7d7:	add byte ptr [eax + 0x440f0000], 0xc3
0x0804a931:	push edi ; mov edi, ecx ; push esi ; push ebx ; mov ebx, eax
0x0804a9d5:	or byte ptr [ebp - 0x7cd98a40], al ; ret
0x0804aae4:	xor byte ptr [ebx - 0x76f3dbac], cl ; ret
0x0804aba1:	mov ebp, esp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x0804ac2b:	cmp eax, 0xfffff000 ; mov ebx, eax
0x0804ad2b:	add al, byte ptr [eax] ; cmp eax, 0xff ; mov ebx, eax
0x0804b463:	cmp dword ptr [eax + 8], -1 ; setne bl
0x0804b69f:	call 0x2101 ; mov ebx, eax
0x0804b6c9:	lea eax, dword ptr [edx + 1] ; mov edx, eax ; sub ebx, eax
0x0804bcc8:	sbb eax, 0xf58fa80 ; test eax, ebx
0x0804be87:	inc dword ptr [eax - 0x7bf09b06] ; ret
0x0804bff6:	ret 0xffff ; add esp, 0x1c ; ret
0x0804c43e:	xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804c56d:	mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804c6b4:	call 0xeb5c ; sub ebx, eax
0x0804c7a7:	call 0xea69 ; sub ebx, eax
0x0804c837:	call 0xe9d9 ; sub ebx, eax
0x0804c897:	call 0xe979 ; sub ebx, eax
0x0804cbdc:	mov eax, ebp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804cc83:	test byte ptr [eax + 1], bh ; add byte ptr [eax], al ; mov ebx, eax
0x0804cce6:	jne 0xfffffff2 ; cmp dl, 0x2e ; mov ebx, eax
0x0804ce60:	test eax, eax ; je 0x28 ; push ebx ; mov ebx, eax
0x0804ce83:	add byte ptr [ebx - 0xca4e73c], al ; ret
0x0804ceb1:	push edi ; mov ebp, edx ; push esi ; push ebx ; mov ebx, eax
0x0804d05f:	cld ; lea eax, dword ptr [edx + eax - 2] ; cmp ebx, eax
0x0804d164:	add byte ptr [ebp + 0x39302444], cl ; ret
0x0804d17f:	mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804d7d2:	adc dword ptr [edx + edx*8 - 0x3c0c1f8b], eax
0x0804d80f:	mov dword ptr [edx + 0xc], ebp ; mov dword ptr [edx + 0x18], eax ; ret
0x0804dbd0:	les edi, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0804de53:	mov dword ptr [eax - 4], edx ; add edx, edi ; cmp ebx, eax
0x0804deda:	in al, dx ; add al, 0xf7 ; jne 0x15 ; mov ebx, eax
0x0804e320:	test byte ptr [edi], bh ; add byte ptr [eax], al ; mov ebx, eax
0x0804ef21:	clc ; mov eax, edx ; pop ebx ; pop esi ; pop ebp ; ret
0x0804efdf:	add byte ptr [eax - 0xcf7f44b], al ; ret
0x0804f067:	add esp, 8 ; mov eax, ebx ; pop ebx ; ret
0x0804f09d:	je 0x28 ; add byte ptr [ecx], dh ; fucomi st(3) ; ret
0x0804f958:	or byte ptr [ebp - 1], dl ; push eax ; inc eax ; mov ebx, eax
0x0804f96e:	jne 0x1e ; mov ecx, dword ptr [ebp + 0x58] ; mov ebx, eax
0x0804f9f1:	inc ebp ; dec esp ; mov edx, dword ptr [ebp + 0x50] ; mov ebx, eax
0x0804fa76:	mov edx, edi ; mov edi, dword ptr [ebp + 0x20] ; mov ebx, eax
0x0804fafc:	mov edi, dword ptr [esp + 0x14] ; cdq ; mov ebx, eax
0x0804fb76:	push eax ; mov edx, dword ptr [esp + 4] ; mov ebx, eax
0x0804fbab:	add al, 0xc1 ; sti ; add cl, byte ptr [edi] ; scasd eax, dword ptr es:[edi] ; ret
0x0804fd7b:	les ebx, ptr [eax + eax - 0x3c770000]
0x0804ff03:	add byte ptr [ebp - 1], dl ; push eax ; inc eax ; mov ebx, eax
0x08050179:	inc dword ptr [ebx + 0x5e5b14c4] ; ret
0x08050181:	add byte ptr [ebx + 0x5e5b14c4], al ; ret
0x080501b9:	add al, byte ptr [ebx + 0x5e5b14c4] ; ret
0x08050229:	mov eax, 0xffffffff ; pop ebx ; ret
0x080503e4:	inc dword ptr [ebx + 0x5e5b04c4] ; ret
0x080504bd:	adc al, 0x83 ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x08050674:	push dword ptr [ecx] ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x080507be:	adc byte ptr [ecx - 0x7627d608], cl ; ret
0x0805080b:	add eax, dword ptr [eax] ; add esp, 0x10 ; sub ebx, eax
0x080508e9:	add byte ptr [eax], al ; sub esp, 0xc ; mov ebx, eax
0x080509ab:	adc byte ptr [ebp + 0x740689c0], al ; ret
0x08050b7b:	je 0xfffffff5 ; mov ecx, dword ptr [ebp + 8] ; mov ebx, eax
0x08050cd4:	fmul dword ptr [ecx + 0x5f5e5b3e] ; ret
0x08050d0d:	add byte ptr [eax], al ; add byte ptr [ecx], dh ; shr bl, 0xc3
0x08050d49:	push ebx ; push eax ; add esp, 8 ; pop ebx ; ret
0x08050dc2:	mov eax, ebx ; add esp, 8 ; pop ebx ; ret
0x08050e35:	or ecx, dword ptr [eax] ; add esp, 8 ; pop ebx ; ret
0x08050e40:	push edi ; push esi ; mov edi, edx ; push ebx ; mov ebx, eax
0x08050ea2:	add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0805128b:	mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080513b5:	mov edi, eax ; and edi, dword ptr [esp] ; mov ebx, eax
0x08051530:	pop ebx ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x080517bb:	ja 0xd ; add esp, 8 ; pop ebx ; ret
0x08051a4b:	or byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x08051a7f:	add byte ptr [ebp + 0x57], dl ; push esi ; push ebx ; mov ebx, eax
0x08051cfa:	les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08051ed9:	pop ebx ; pop esi ; sub eax, ebp ; pop edi ; pop ebp ; ret
0x08052121:	mov dh, 0 ; add esp, 8 ; pop ebx ; ret
0x0805244b:	adc byte ptr [ecx + 0x5f5e5bf0], cl ; ret
0x08052476:	add dword ptr [eax], eax ; add esp, 0x10 ; mov ebx, eax
0x080524c8:	call 0x1e178 ; mov ebx, eax
0x08052545:	out dx, al ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; ret
0x08052568:	call 0xffffe8d8 ; cmp ebx, eax
0x08052575:	neg eax ; add esp, 8 ; pop ebx ; ret
0x08052885:	sti ; cmp bl, 2 ; setbe bl
0x08052b33:	jmp 0xfffffc1f ; mov ebx, eax
0x08052c66:	movzx eax, al ; pop ebx ; pop esi ; pop edi ; ret
0x08052e36:	xor eax, eax ; add esp, 8 ; pop ebx ; ret
0x080530d5:	call 0x1ba3b ; ret
0x080530e4:	mov esi, 0 ; mov ebx, eax
0x08053521:	rol dword ptr [ebp - 0xc0d8a2e], -0x3d
0x0805354f:	mov dword ptr [eax + 0xc], edx ; mov dword ptr [eax + 4], edx ; ret
0x08053581:	dec eax ; and al, 0x89 ; push eax ; add al, 0x5b ; ret
0x0805387e:	mov dword ptr [ebx], eax ; add esp, 8 ; pop ebx ; ret
0x080538bb:	leave ; je 0xd ; pop ebx ; pop esi ; pop edi ; ret
0x08053905:	and byte ptr [ecx + 0x5f5e5b03], cl ; ret
0x08053a1f:	pop ebx ; sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08053a8d:	adc al, 7 ; add eax, 1 ; cmp ebx, eax
0x08053b5b:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x08053bbc:	call dword ptr [edx + 0x24] ; add esp, 0x2c ; ret
0x08053c0d:	add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; pop esi ; ret
0x08053ce2:	inc eax ; pop esp ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x08053d7e:	or byte ptr [eax], al ; add byte ptr [eax], al ; add bl, dh ; ret
0x08053e8e:	pop esp ; add byte ptr [eax], al ; add byte ptr [eax], al ; pop ebx ; ret
0x08053eac:	add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; ret
0x08053f0a:	jne 0xe ; add esp, 8 ; pop ebx ; ret
0x08053f98:	out dx, eax ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08053fcb:	and ebp, edi ; add esp, 8 ; pop ebx ; ret
0x08053fed:	jne 0xffffffdd ; add esp, 8 ; pop ebx ; ret
0x0805402d:	inc esp ; and al, 8 ; add eax, ebx ; pop ebx ; ret
0x08054038:	sub eax, edx ; sub eax, 1 ; pop ebx ; ret
0x08054551:	cli ; add byte ptr [edx], al ; add byte ptr [eax], al ; jne 0xffffffca
0x0805461c:	xor byte ptr [ebx + 0x5e5b04c4], al ; ret
0x0805466f:	add al, byte ptr [ebp - 0xc0b8a40] ; ret
0x08054677:	push eax ; xor byte ptr [ebx - 0x3cfd76ff], cl
0x08054688:	mov eax, dword ptr [eax + 8] ; sub eax, dword ptr [edx + 8] ; ret
0x080546a8:	or al, 0x8b ; inc ecx ; or byte ptr [ecx], ch ; rol bl, 1
0x080546b2:	or byte ptr [ebx - 0x2fd6f7bf], cl ; ret
0x080546b8:	ret ; mov eax, 0xffffffff ; ret
0x080546fd:	push eax ; add al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0xc3
0x08054773:	mov dh, 0 ; add byte ptr [eax], al ; add bl, dh ; ret
0x080547a6:	add al, 0x88 ; pop edi ; dec dword ptr [edi] ; mov dh, 0xc3
0x080548cf:	add byte ptr [eax - 1], bh ; ret
0x0805490b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x0805491f:	add byte ptr [ecx + 0x80ea080], ah ; ret
0x08054941:	inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x34] ; ret
0x0805494e:	add byte ptr [eax], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805499c:	add eax, 0x80eb4c0 ; add ebx, eax
0x080549dd:	call 0x1a133 ; ret
0x08054a08:	push cs ; or byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x08054a39:	jae 0x1f ; movzx eax, byte ptr [edx] ; pop ebx ; ret
0x08054e88:	or al, 0x5b ; pop esi ; pop edi ; cdq ; pop ebp ; ret
0x08054f2f:	nop ; mov eax, 0xffffffff ; ret
0x08055044:	or ecx, dword ptr [eax] ; add esp, 0x18 ; pop ebx ; ret
0x0805505b:	inc ebx ; inc edx ; or byte ptr [ebx], ch ; inc edx ; or al, 0xc3
0x0805509e:	or edx, 1 ; mov dword ptr [eax + 4], edx ; ret
0x0805513d:	add al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x08055227:	pop ebx ; mov eax, ebp ; pop esi ; pop edi ; pop ebp ; ret
0x08055474:	or al, 0x89 ; fcomp dword ptr [ebx + 0x5e] ; pop edi ; ret
0x08055601:	movsd dword ptr es:[edi], dword ptr [esi] ; push cs ; or byte ptr [ecx], ch ; sti ; add ebx, eax
0x08055608:	mov eax, dword ptr [0x80ea508] ; cmp ebx, eax
0x080556ad:	out 0xf8, al ; lea ebx, dword ptr [esi - 0x11] ; cmp ebx, eax
0x080556b7:	cmp eax, 0x80eaa08 ; sub ebx, eax
0x08055817:	les eax, ptr [ecx + ecx*4] ; rcr byte ptr [ebx + 0x5e], 1 ; ret
0x0805586e:	add byte ptr [ebx + 0x5e5b24c4], al ; ret
0x080558d6:	and byte ptr [ebx + 0x5e5b24c4], al ; ret
0x0805599d:	add eax, 0x60c8d10 ; add ebx, eax
0x08055b02:	and al, 0xc ; mov eax, dword ptr [ebp + 4] ; mov ebx, eax
0x08055b1a:	mov eax, dword ptr [ebp] ; sub ebp, eax ; add ebx, eax
0x08055d32:	and al, 8 ; and eax, 0xfffffff8 ; mov ebx, eax
0x08055d91:	push eax ; add al, 0x8b ; inc eax ; or al, 0x83 ; ret
0x08055dbe:	push 0x458011c ; mov ebx, eax
0x08055e79:	adc byte ptr [ebx + 0x5e5b04c4], al ; ret
0x08055fa4:	test al, bh ; add al, 0 ; add byte ptr [ecx], bh ; ret
0x08055fe5:	inc ebp ; xor byte ptr [ebp - 0x3cc6ccc4], cl
0x0805603d:	add dword ptr [ebp + 0x70], esi ; mov eax, dword ptr [ebx] ; sub ebx, eax
0x0805619e:	add eax, ebx ; and eax, 7 ; sub ebx, eax
0x08056273:	add al, 0x1f ; and eax, 7 ; sub ebx, eax
0x08056984:	call 0x19cbc ; mov ebx, eax
0x08056ac9:	sub eax, edi ; lea edx, dword ptr [ecx + edi] ; mov ebx, eax
0x08056b0b:	and al, 4 ; sub eax, 1 ; test eax, ebx
0x08056b4e:	pop esp ; cmp byte ptr [ebx], al ; neg eax ; and ebx, eax
0x08056d1e:	fadd dword ptr [ebp - 0x763d7640] ; ret
0x080570c1:	or al, 0x23 ; inc esp ; and al, 0x14 ; mov ebx, eax
0x08057452:	test dword ptr [eax], esi ; mov eax, dword ptr [ebx + 8] ; cmp ebx, eax
0x080574ce:	and al, 0x10 ; mov eax, dword ptr [ebx + 8] ; cmp ebx, eax
0x080578b8:	adc eax, 0x80eb51c ; mov ebx, eax
0x08057c45:	jmp 0xfffffca0 ; cmp ebx, eax
0x08057c9d:	or edx, dword ptr [esi + 0x53] ; mov edi, ecx ; mov ebx, eax
0x08057e05:	inc ebx ; or byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x08057e18:	or al, 0 ; add byte ptr [eax], al ; xor eax, eax ; ret
0x08057efc:	add esp, 8 ; xor eax, eax ; pop ebx ; ret
0x0805801d:	les eax, ptr [ecx + esi] ; rcr byte ptr [ebx + 0x5e], 0xc3
0x08058031:	add byte ptr [eax], al ; add bl, ch ; out 0x89, al ; ret
0x080580b3:	add dword ptr [eax], eax ; add esp, 8 ; pop ebx ; ret
0x080587e0:	mov eax, dword ptr [0x80eb4f8] ; cmp ebx, eax
0x080587ec:	test byte ptr [edx + 1], ah ; add byte ptr [eax], al ; mov ebx, eax
0x080587f9:	wait ; inc eax ; add al, 0 ; add byte ptr [ecx], bh ; ret
0x080588a9:	test dword ptr [edx + 0x39000002], eax ; ret
0x08058bbd:	add byte ptr [eax + 0x80ea520], bh ; ret
0x08058bfc:	je 7 ; add esp, 8 ; pop ebx ; ret
0x08058c4c:	push cs ; or byte ptr [eax], dl ; jg 0xa ; or bl, al
0x08058cc6:	or byte ptr [ebp - 0x29], dh ; pop ebx ; pop esi ; ret
0x08058d1f:	call 0x15df1 ; ret
0x08058e66:	rol byte ptr [ebx + 0x5e5b04c4], 1 ; ret
0x080591b0:	add byte ptr [ecx + 0x5f5e5bd0], cl ; ret
0x080592de:	call 0xffffc0b2 ; mov ebx, eax
0x08059372:	add esp, 0x10 ; add esp, 0xc ; ret
0x080594ec:	fdivr qword ptr [edx + 0x4be8080b] ; ret
0x08059644:	ror byte ptr [ecx + 0x39f1f7f0], cl ; ret
0x0805967f:	sar bh, 0xff ; test eax, eax ; mov ebx, eax
0x08059977:	sub eax, 8 ; pop esi ; pop edi ; pop ebp ; ret
0x08059a35:	add eax, dword ptr [ebx - 0x4f45f314] ; ret
0x08059b1a:	add esp, 8 ; mov eax, edx ; pop ebx ; ret
0x0805a52b:	add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x0805a9cf:	les ebx, ptr [ebx + ebx*2 + 0x5e] ; pop edi ; pop ebp ; ret
0x0805ab85:	mov edx, dword ptr [edx + 8] ; add edi, eax ; cmp ebx, eax
0x0805aca6:	add byte ptr [eax], al ; mov eax, dword ptr [edi + 0x30] ; mov ebx, eax
0x0805adf8:	or byte ptr [ebx - 0x9ebdba4], cl ; ret
0x0805ae00:	je 0x10 ; add esp, 8 ; pop ebx ; ret
0x0805ae4b:	mov eax, 0x16 ; pop ebx ; ret
0x0805ae6b:	or al, 0xb8 ; push ss ; add byte ptr [eax], al ; add bl, al
0x0805ae94:	cmove eax, edx ; add esp, 0x1c ; ret
0x0805aec4:	lea eax, dword ptr [0x8067940] ; ret
0x0805b05b:	add dword ptr [eax + 0x5d], eax ; pop ebx ; pop esi ; pop edi ; ret
0x0805b0c0:	lea eax, dword ptr [0x80616f0] ; ret
0x0805b0e0:	test al, al ; jne 0xfffffff8 ; xor eax, eax ; ret
0x0805b130:	lea eax, dword ptr [0x8063c80] ; ret
0x0805b1c4:	inc esp ; and al, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0805b2c4:	add dword ptr [eax + 0x2b], eax ; inc esp ; and al, 4 ; ret
0x0805b39c:	les edx, ptr [eax] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805b845:	cmp dl, al ; sete al ; and ebx, eax
0x0805ba49:	or byte ptr [ebx], al ; insb byte ptr es:[edi], dx ; and al, 0x10 ; cmp ebx, eax
0x0805bb78:	adc al, 0x8b ; inc esp ; and al, 0x20 ; cmp ebx, eax
0x0805bc78:	lea eax, dword ptr [0x8067e30] ; ret
0x0805bc7f:	lea eax, dword ptr [0x805bc90] ; ret
0x0805bc86:	lea eax, dword ptr [0x80683a0] ; ret
0x0805be24:	add byte ptr [ecx + eax + 0x40], dh ; pop edi ; pop esi ; ret
0x0805be54:	lea eax, dword ptr [0x80630f0] ; ret
0x0805be76:	or dh, byte ptr [ebp + 4] ; xor eax, eax ; pop ebx ; ret
0x0805be7d:	sbb eax, eax ; sbb eax, -1 ; pop ebx ; ret
0x0805bf10:	add byte ptr [eax], al ; pop esi ; xor eax, eax ; pop ebx ; ret
0x0805c12c:	rol byte ptr [ebx + 0x5b5effd8], 0xc3
0x0805c182:	lea eax, dword ptr [0x805ec80] ; ret
0x0805c1b6:	salc ; mov eax, dword ptr [esp + 8] ; pop edi ; ret
0x0805c1e1:	mov eax, dword ptr [esp + 8] ; cld ; pop edi ; ret
0x0805c214:	lea eax, dword ptr [0x805fd40] ; ret
0x0805c25c:	stosb byte ptr es:[edi], al ; mov eax, dword ptr [esp + 8] ; pop edi ; ret
0x0805c28b:	movsd dword ptr es:[edi], dword ptr [esi] ; rep movsd dword ptr es:[edi], dword ptr [esi] ; xchg eax, edi ; mov esi, edx ; ret
0x0805c2d0:	lea eax, dword ptr [0x80654d0] ; ret
0x0805c368:	daa ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x0805c3a0:	lea eax, dword ptr [0x806b180] ; ret
0x0805c3ff:	mov esi, edx ; mov eax, dword ptr [esp + 4] ; ret
0x0805c438:	lea eax, dword ptr [0x80686f0] ; ret
0x0805c43f:	lea eax, dword ptr [0x805c450] ; ret
0x0805c446:	lea eax, dword ptr [0x8068a10] ; ret
0x0805c50f:	inc dword ptr [eax] ; je 5 ; inc eax ; pop edi ; ret
0x0805c678:	cmp cl, dl ; je 5 ; inc eax ; pop edi ; ret
0x0805c6c3:	inc edx ; cld ; mov eax, dword ptr [esp + 4] ; ret
0x0805c6e6:	inc edx ; dec dword ptr [ebx - 0x3cfbdbbc]
0x0805c707:	inc edx ; dec byte ptr [ebx - 0x3cfbdbbc]
0x0805cae6:	inc edx ; clc ; mov eax, dword ptr [esp + 4] ; ret
0x0805cbe2:	inc edx ; mov bl, 0x66 ; movq qword ptr [edx - 0x3d], mm0
0x0805e2c6:	dec edx ; cld ; mov eax, dword ptr [esp + 4] ; ret
0x0805e36d:	dec edx ; dec dword ptr [ebx - 0x3cfbdbbc]
0x0805e3fe:	dec edx ; dec byte ptr [ebx - 0x3cfbdbbc]
0x0805e934:	mov dword ptr [edx], ecx ; mov eax, dword ptr [esp + 4] ; ret
0x0805e96e:	salc ; add cl, byte ptr [ebx - 0x3cfbdbbc]
0x0805e9bb:	mov byte ptr [edx], cl ; mov eax, dword ptr [esp + 4] ; ret
0x0805eae3:	mov byte ptr [edx], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805fa9b:	pop esi ; pop edi ; mov eax, dword ptr [esp + 4] ; ret
0x0805ff0f:	pop es ; pop edi ; mov eax, dword ptr [esp + 4] ; ret
0x0806059d:	add byte ptr [eax], al ; add byte ptr [esi + 0xf], ah ; je 0xffffffca
0x08061624:	movzx eax, byte ptr [edx + 7] ; sub eax, ecx ; ret
0x08061632:	or byte ptr [edi], cl ; mov dh, 2 ; sub eax, ecx ; ret
0x08061644:	movzx eax, byte ptr [edx + 1] ; sub eax, ecx ; ret
0x08061654:	movzx eax, byte ptr [edx + 2] ; sub eax, ecx ; ret
0x08061664:	movzx eax, byte ptr [edx + 3] ; sub eax, ecx ; ret
0x08061674:	movzx eax, byte ptr [edx + 4] ; sub eax, ecx ; ret
0x08061684:	movzx eax, byte ptr [edx + 5] ; sub eax, ecx ; ret
0x08061694:	movzx eax, byte ptr [edx + 6] ; sub eax, ecx ; ret
0x080616e3:	add byte ptr [eax], al ; ja 6 ; neg eax ; ret
0x080616e6:	add dh, bh ; fadd st(3) ; xor eax, eax ; ret
0x0806187b:	or al, 0xe ; sub eax, ecx ; pop esi ; pop edi ; ret
0x08061a02:	sub edi, 1 ; xor esi, esi ; cmp bl, al
0x08061a2b:	sti ; sub eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x08062b88:	imul dword ptr [ecx] ; rcr byte ptr [edi + 0x5e], 1 ; pop ebx ; ret
0x08062ba7:	int1 ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bd7:	hlt ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062be7:	cmc ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bf7:	imul byte ptr [ecx] ; rcr byte ptr [edi + 0x5e], 1 ; pop ebx ; ret
0x08062e9a:	test dword ptr [ecx], esp ; add al, byte ptr [eax] ; add byte ptr [ebx - 0x3d], bl
0x08062f57:	test dword ptr [ecx + eax - 0x3ca50000], eax
0x08063012:	test ecx, ecx ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x080630b0:	add byte ptr [eax], al ; add byte ptr [ebp + 0x2b], dh ; pop ebx ; ret
0x080631a4:	add byte ptr [edi], cl ; mov dh, 0x12 ; sub eax, edx ; ret
0x08063288:	test eax, ebx ; or dword ptr [eax], eax ; add byte ptr [ebx - 0x3d], bl
0x08063311:	test dword ptr [eax + 9], edx ; add byte ptr [eax], al ; pop ebx ; ret
0x080633ac:	test dword ptr [ebp + 0x5b000008], esi ; ret
0x0806345a:	test dword ptr [edi], eax ; or byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x080634d8:	test dword ptr [ebx + 7], esi ; add byte ptr [eax], al ; pop ebx ; ret
0x08063555:	test dword ptr [edi + eax], ecx ; add byte ptr [eax], al ; pop ebx ; ret
0x080635e0:	test dword ptr [ecx + 0x5b000006], eax ; ret
0x0806367e:	test esp, ebx ; add eax, 0xc35b0000
0x08063706:	test dword ptr [ebp + 5], eax ; add byte ptr [eax], al ; pop ebx ; ret
0x08063793:	test ecx, esi ; add al, 0 ; add byte ptr [ebx - 0x3d], bl
0x0806382e:	test dword ptr [ebx], esi ; add al, 0 ; add byte ptr [ebx - 0x3d], bl
0x080638dc:	test dword ptr [ebp + 0x5b000003], eax ; ret
0x08063974:	test edx, edi ; add al, byte ptr [eax] ; add byte ptr [ebx - 0x3d], bl
0x08063983:	dec eax ; ret ; movdqu xmm2, xmmword ptr [edx - 0x3d]
0x08063a11:	test dword ptr [eax + 2], edx ; add byte ptr [eax], al ; pop ebx ; ret
0x08063abc:	test dword ptr [ebp + 0x5b000001], esp ; ret
0x08063b7a:	test esp, edi ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x08063c06:	add byte ptr [eax], al ; add byte ptr [ebp + 0x45], dh ; pop ebx ; ret
0x08063c3a:	add byte ptr [eax], al ; add byte ptr [ebp + 0x11], dh ; pop ebx ; ret
0x08063e19:	sub dword ptr [edx + esi], edx ; pcmpeqb xmm0, xmm3
0x08063edd:	lea ecx, dword ptr [ecx + 0x40] ; pmovmskb eax, xmm3
0x08065181:	add dword ptr [ecx + 0x5ff88902], ecx ; ret
0x080651b5:	movlps qword ptr [edx], xmm0 ; mov eax, edi ; pop edi ; ret
0x080651fb:	mov dword ptr [edx + 8], eax ; mov eax, edi ; pop edi ; ret
0x08065235:	movq qword ptr [edx], mm0 ; mov eax, edi ; pop edi ; ret
0x08065241:	add dword ptr [eax + 0x5ff88902], ecx ; ret
0x08065253:	mov word ptr [edx], ax ; mov eax, edi ; pop edi ; ret
0x08065269:	mov byte ptr [edx + 2], al ; mov eax, edi ; pop edi ; ret
0x08065277:	mov byte ptr [edx + 4], al ; mov eax, edi ; pop edi ; ret
0x08065289:	mov dword ptr [edx + 4], eax ; mov eax, edi ; pop edi ; ret
0x08065297:	mov dword ptr [edx + 3], eax ; mov eax, edi ; pop edi ; ret
0x080652ab:	mov byte ptr [edx + 8], al ; mov eax, edi ; pop edi ; ret
0x080652eb:	mov dword ptr [edx + 7], eax ; mov eax, edi ; pop edi ; ret
0x0806530f:	adc ecx, dword ptr [edx + 5] ; mov eax, edi ; pop edi ; ret
0x0806532f:	adc ecx, dword ptr [edx + 6] ; mov eax, edi ; pop edi ; ret
0x0806534f:	adc ecx, dword ptr [edx + 7] ; mov eax, edi ; pop edi ; ret
0x08065360:	mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; mov eax, edx ; ret
0x08065388:	add cl, byte ptr [eax - 0x2f76fdbe] ; ret
0x08065390:	mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edx ; ret
0x080653a6:	add al, 0x88 ; inc edx ; add al, 0x89 ; rol bl, 1
0x080653b8:	mov word ptr [edx + 4], ax ; mov eax, edx ; ret
0x080653c6:	add ecx, dword ptr [ecx - 0x2f76fcbe] ; ret
0x080653d4:	movlpd qword ptr [edx], xmm0 ; mov eax, edx ; ret
0x080653ea:	add cl, byte ptr [eax - 0x2f76f7be] ; ret
0x0806540c:	mov word ptr [edx + 8], ax ; mov eax, edx ; ret
0x0806542a:	add cl, byte ptr [ecx - 0x2f76f8be] ; ret
0x0806544a:	add cl, byte ptr [ecx - 0x2f76f7be] ; ret
0x0806546e:	movlps qword ptr [edx + 5], xmm1 ; mov eax, edx ; ret
0x0806548e:	movlps qword ptr [edx + 6], xmm1 ; mov eax, edx ; ret
0x080654ae:	movlps qword ptr [edx + 7], xmm1 ; mov eax, edx ; ret
0x080654c4:	movdqu xmmword ptr [edx], xmm0 ; mov eax, edx ; ret
0x080669d2:	mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; pop edi ; ret
0x08066a06:	adc eax, dword ptr [edx] ; lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x08066a4c:	inc edx ; or byte ptr [ebp - 0x3ca0f4be], cl
0x08066a86:	jg 4 ; lea eax, dword ptr [edx + 0xf] ; pop edi ; ret
0x08066a91:	add dword ptr [eax + 0x5f028d02], ecx ; ret
0x08066aa4:	mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 1] ; pop edi ; ret
0x08066aba:	inc edx ; add cl, byte ptr [ebp - 0x3ca0fdbe]
0x08066ad8:	inc edx ; add al, 0x8d ; inc edx ; add al, 0x5f ; ret
0x08066b08:	inc edx ; add ecx, dword ptr [ebp - 0x3ca0f9be]
0x08066b1c:	inc edx ; or byte ptr [ebp - 0x3ca0f7be], cl
0x08066b3e:	inc edx ; or byte ptr [ebp - 0x3ca0f6be], cl
0x08066b5c:	inc edx ; pop es ; lea eax, dword ptr [edx + 0xa] ; pop edi ; ret
0x08066b80:	dec edx ; add eax, 0x5f0c428d ; ret
0x08066ba0:	dec edx ; push es ; lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x08066bc0:	dec edx ; pop es ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08066bd0:	mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; ret
0x08066be3:	mov word ptr [edx], ax ; lea eax, dword ptr [edx + 1] ; ret
0x08066bf9:	mov byte ptr [edx + 2], al ; lea eax, dword ptr [edx + 2] ; ret
0x08066c01:	add dword ptr [ecx + 0x3428d02], ecx ; ret
0x08066c17:	mov byte ptr [edx + 4], al ; lea eax, dword ptr [edx + 4] ; ret
0x08066c29:	mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 5] ; ret
0x08066c37:	mov dword ptr [edx + 3], eax ; lea eax, dword ptr [edx + 6] ; ret
0x08066c45:	movlps qword ptr [edx], xmm0 ; lea eax, dword ptr [edx + 7] ; ret
0x08066c5b:	mov byte ptr [edx + 8], al ; lea eax, dword ptr [edx + 8] ; ret
0x08066c7d:	mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 9] ; ret
0x08066c9b:	mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; ret
0x08066cbb:	mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 0xb] ; ret
0x08066cdf:	adc ecx, dword ptr [edx + 5] ; lea eax, dword ptr [edx + 0xc] ; ret
0x08066cff:	adc ecx, dword ptr [edx + 6] ; lea eax, dword ptr [edx + 0xd] ; ret
0x08066d1f:	adc ecx, dword ptr [edx + 7] ; lea eax, dword ptr [edx + 0xe] ; ret
0x08066d35:	movq qword ptr [edx], mm0 ; lea eax, dword ptr [edx + 0xf] ; ret
0x08066e46:	jg 0x16 ; sbb ah, byte ptr [esi + 0xf] ; je 0xffffffca
0x08066f0a:	pcmpeqb mm3, mm0 ; pmovmskb eax, xmm3
0x08066f48:	pminub mm3, mm2 ; pcmpeqb xmm0, xmm3
0x0806704e:	adc eax, dword ptr [edx + 8] ; mov eax, edi ; pop edi ; ret
0x0806715f:	adc eax, dword ptr [edx + 5] ; mov eax, edi ; pop edi ; ret
0x0806717f:	adc eax, dword ptr [edx + 6] ; mov eax, edi ; pop edi ; ret
0x0806719f:	adc eax, dword ptr [edx + 7] ; mov eax, edi ; pop edi ; ret
0x08067226:	add al, 0x89 ; inc edx ; add al, 0x89 ; rol bl, 1
0x0806723c:	or byte ptr [eax - 0x2f76f7be], cl ; ret
0x0806727c:	pop es ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x0806729c:	or byte ptr [ecx - 0x2f76f7be], cl ; ret
0x080672be:	movlps qword ptr [edx + 5], xmm0 ; mov eax, edx ; ret
0x080672de:	movlps qword ptr [edx + 6], xmm0 ; mov eax, edx ; ret
0x080672fe:	movlps qword ptr [edx + 7], xmm0 ; mov eax, edx ; ret
0x0806731e:	movlps qword ptr [edx + 8], xmm0 ; mov eax, edx ; ret
0x080675e9:	inc edx ; add al, 0x8d ; inc edx ; pop es ; pop edi ; ret
0x0806763f:	inc edx ; or byte ptr [ebp - 0x3ca0f0be], cl
0x08067770:	inc edx ; add eax, 0x5f0c428d ; ret
0x08067790:	inc edx ; push es ; lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x080677b0:	inc edx ; pop es ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08067837:	mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 7] ; ret
0x080678cf:	adc eax, dword ptr [edx + 5] ; lea eax, dword ptr [edx + 0xc] ; ret
0x080678ef:	adc eax, dword ptr [edx + 6] ; lea eax, dword ptr [edx + 0xd] ; ret
0x0806790f:	adc eax, dword ptr [edx + 7] ; lea eax, dword ptr [edx + 0xe] ; ret
0x0806792f:	adc eax, dword ptr [edx + 8] ; lea eax, dword ptr [edx + 0xf] ; ret
0x08067a9b:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x08067ae1:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 3] ; pop edi ; ret
0x08067b3e:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xf] ; pop edi ; ret
0x08067b84:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xb] ; pop edi ; ret
0x08067c3e:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 1] ; pop edi ; ret
0x08067c4e:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 2] ; pop edi ; ret
0x08067c6e:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 4] ; pop edi ; ret
0x08067c7e:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x08067c8e:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x08067c9e:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x08067cae:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x08067cbe:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x08067cde:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xc] ; pop edi ; ret
0x08067cee:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x08067cfe:	add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xe] ; pop edi ; ret
0x08067d73:	add byte ptr [ecx], al ; clc ; add eax, ecx ; pop edi ; ret
0x08067e14:	sub edi, 0x10 ; add eax, edi ; pop edi ; ret
0x08067f00:	lea ecx, dword ptr [ecx + 0x10] ; pmovmskb eax, xmm3
0x08068001:	pcmpeqb mm3, mm1 ; pmovmskb eax, xmm3
0x08068313:	jb 0x7d ; lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x08068323:	jb 0x6d ; lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x08068333:	jb 0x5d ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x08068343:	jb 0x4d ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x08068353:	jb 0x3d ; lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x08068363:	jb 0x2d ; lea eax, dword ptr [edi + 0xc] ; pop edi ; ret
0x08068373:	jb 0x1d ; lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x08068383:	jb 0xd ; lea eax, dword ptr [edi + 0xe] ; pop edi ; ret
0x080683dc:	sub edx, ecx ; jbe 0x34 ; add eax, ecx ; ret
0x08068599:	je 0x51 ; xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x080685ae:	ror byte ptr [ebp + 0x5f300744], 0xc3
0x08068662:	ror byte ptr [ebp + 0x5ff03844], 0xc3
0x08068670:	bsf eax, eax ; add eax, edi ; pop edi ; ret
0x08068682:	ror byte ptr [ebp + 0x5f103844], 0xc3
0x08068692:	ror byte ptr [ebp + 0x5f203844], 0xc3
0x080686a4:	ret 0x3976 ; add eax, edi ; pop edi ; ret
0x080686b9:	lea eax, dword ptr es:[edi + eax + 0x10] ; pop edi ; ret
0x080686c9:	push ss ; lea eax, dword ptr [edi + eax + 0x20] ; pop edi ; ret
0x080686d9:	push es ; lea eax, dword ptr [edi + eax + 0x30] ; pop edi ; ret
0x080686dd:	xor byte ptr [edi - 0x3d], bl ; xor eax, eax ; pop edi ; ret
0x08068bc8:	je 0x4c ; xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x08068bd8:	mov esp, 0x2448dc0 ; xor bl, al
0x08068bef:	add byte ptr [edi], cl ; mov esp, 0xc3d001c0
0x08068c01:	mov esp, 0x10448dc0 ; adc bl, al
0x08068c11:	mov esp, 0x10448dc0 ; and bl, al
0x08068c6d:	mov bl, 0x74 ; loopne 0x5f ; pop esi ; pop edi ; ret
0x08068c77:	add byte ptr [ebx + 0x31], bl ; rcr byte ptr [esi + 0x5f], 0xc3
0x080691cb:	dec byte ptr [ebp - 0x7af00d87] ; ret
0x0806a0cb:	dec byte ptr [ebp - 0x7af00687] ; ret
0x0806afe3:	add dh, dh ; shl dword ptr [eax], 0xf ; test eax, ebx
0x0806b159:	add esp, 4 ; ret ; xor eax, eax ; ret
0x0806b479:	or al, 8 ; sub eax, ecx ; pop esi ; pop edi ; ret
0x0806b47d:	pop esi ; pop edi ; ret ; xor eax, eax ; pop edi ; ret
0x0806b494:	add byte ptr [edi + 2], dh ; neg eax ; pop edi ; ret
0x0806ba70:	add byte ptr [ecx + 0x5b5e5fd0], cl ; ret
0x0806bdab:	pop esp ; or bh, ah ; mov eax, edx ; pop ebx ; ret
0x0806beef:	add byte ptr [edi], cl ; mov byte ptr [0xc389dd89], al
0x0806bf9c:	or al, 0x83 ; cli ; add dword ptr [edi], ecx ; xchg eax, esp ; ret
0x0806bfed:	inc ebx ; add dword ptr [ebx + 0x5e], ebx ; pop edi ; pop ebp ; ret
0x0806c18c:	pop edi ; pop ebp ; ret ; nop ; xor eax, eax ; ret
0x0806c201:	rol byte ptr [ebx + 0x5e5b04c4], 0xc3
0x0806c287:	add byte ptr [eax + 0x450ff0e5], al ; ret
0x0806c438:	les edx, ptr [eax] ; add esp, 8 ; pop ebx ; ret
0x0806c487:	inc esp ; and al, 0xc ; add esp, 0x1c ; ret
0x0806c48f:	nop ; xor eax, eax ; add esp, 0x1c ; ret
0x0806c67d:	add byte ptr [eax], al ; add byte ptr [esi + 0x53], dl ; mov ebx, eax
0x0806c6c4:	add dword ptr [ebx + 0x5e5b04c4], eax ; ret
0x0806c730:	pop ds ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806c988:	sub eax, 1 ; pop esi ; pop edi ; pop ebp ; ret
0x0806c99d:	les ecx, ptr [ebx + ebx*2 + 0x5e] ; pop edi ; pop ebp ; ret
0x0806c9d2:	or byte ptr [eax], al ; cmovae eax, ecx ; jmp 0xffffffca
0x0806c9e6:	add eax, dword ptr [eax] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806cf9b:	add byte ptr [eax], al ; cmp eax, 0xff ; mov ebx, eax
0x0806cfc0:	jae 0x3680 ; ret
0x0806cfe8:	inc esp ; and al, 0x18 ; add esp, 0x2c ; ret
0x0806d078:	jae 0x35c8 ; ret
0x0806d0ac:	jae 0x3594 ; ret
0x0806d0e8:	jae 0x3558 ; ret
0x0806d11c:	jae 0x3524 ; ret
0x0806d158:	jae 0x34e8 ; ret
0x0806d18c:	jae 0x34b4 ; ret
0x0806d1c0:	ja 0x10 ; add esp, 8 ; pop ebx ; ret
0x0806d1d3:	add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x0806d20c:	push ebx ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x0806d267:	call 0x33d9 ; mov ebx, eax
0x0806d873:	call 0x2dcd ; mov ebx, eax
0x0806d90c:	mov eax, dword ptr [esp + 0x3c] ; push edi ; sub ebx, eax
0x0806d9cc:	jae 0x2c74 ; ret
0x0806da20:	les eax, ptr [ecx + ecx*4] ; fcomp dword ptr [ebx + 0x5e] ; ret
0x0806da6f:	add byte ptr [ecx + 0x39d8f7f0], cl ; ret
0x0806da84:	or byte ptr [ebp - 0xcfd8b40], al ; ret
0x0806db08:	ja 0xd ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806dbbc:	jae 0x2a84 ; ret
0x0806dbee:	jae 0x2a52 ; ret
0x0806dc1e:	jae 0x2a22 ; ret
0x0806dc33:	salc ; push ebx ; mov edx, dword ptr [eax + 4] ; mov ebx, eax
0x0806dd5c:	and al, 0x20 ; test ebx, ebx ; setg bl
0x0806dd63:	mov ebp, ebx ; test edi, edi ; setg bl
0x0806dda7:	les ecx, ptr [eax] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806dfb7:	loopne 0x5d ; xor eax, eax ; pop esi ; pop edi ; ret
0x0806dfbf:	nop ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0806e0ce:	add byte ptr es:[ebx - 0x3c7c1bbb], cl
0x0806e3e3:	add byte ptr es:[eax], al ; add byte ptr [eax], al ; ret
0x0806e5bc:	ja 0xfffffff4 ; mov eax, esi ; imul eax, ebx
0x0806e5eb:	call 0x206a5 ; mov ebx, eax
0x0806e5f8:	push cs ; or byte ptr [ebx - 0x3cc6ef3c], al
0x0806e87e:	add esp, 0x10 ; test eax, eax ; jne 0xffffffca
0x0806e8c3:	adc byte ptr [ebp - 0x76818b40], al ; ret
0x0806e999:	add byte ptr [ebp - 0x3dbbf040], al ; ret
0x0806e9d3:	or byte ptr [ebx + 0x5e5b04c4], al ; ret
0x0806ea6a:	jae 0x1bd6 ; ret
0x0806ea98:	jae 0x1ba8 ; ret
0x0806eacf:	push esp ; and al, 4 ; setae al ; ret
0x0806eb05:	sal byte ptr [ebp - 0x13], 0x5e ; pop ebx ; pop edx ; ret
0x0806eb0e:	add byte ptr es:[ebx + 0x51], dl ; push edx ; mov ebx, eax
0x0806eb2d:	test eax, 0x595a080e ; pop ebx ; ret
0x0806eb5c:	add byte ptr [eax], al ; add byte ptr [ecx], bh ; ret 0xc389
0x0806eb6b:	je 0x19 ; add esp, 8 ; pop ebx ; ret
0x0806ed24:	cld ; test edx, edx ; je 0x7c ; cmp ebx, eax
0x0806ed8b:	pop esi ; pop edi ; pop ebp ; ret ; nop ; cmp ebx, eax
0x0806ee33:	push es ; add byte ptr [eax], al ; add al, ch ; aam 0xc3
0x0806f05a:	mov ecx, 5 ; mov ebx, eax
0x0806f09b:	adc bl, ch ; loop 0x6a ; nop ; ret
0x0806f0e4:	or byte ptr [ecx - 0x3776fbbf], cl ; ret
0x0806f10c:	nop ; nop ; nop ; int 0x80 ; ret
0x0806f54b:	insd dword ptr es:[edi], dx ; add al, byte ptr [eax] ; test eax, eax ; mov ebx, eax
0x0806f92b:	std ; inc dword ptr [ebp - 0x3cbbf040]
0x0806feb0:	jmp 0xfffff7ca ; mov ebx, eax
0x08070434:	add dword ptr [eax], eax ; add byte ptr [eax], al ; pop esi ; pop edi ; ret
0x08070453:	push cs ; or byte ptr [ebp - 0x3cf88b40], al
0x08070464:	call 0x20efc ; mov ebx, eax
0x0807046b:	call 0x20ee5 ; cmp ebx, eax
0x0807047d:	push cs ; or byte ptr [ebx - 0x3ca4f73c], al
0x08070488:	call 0x20ef8 ; mov ebx, eax
0x08070491:	push cs ; add al, byte ptr [eax] ; xor edx, edx ; cmp ebx, eax
0x08070515:	add dword ptr [eax], eax ; add byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x08070530:	add ebx, dword ptr [ebx - 0x2d] ; loopne 0x63 ; pop edi ; ret
0x0807064a:	add bh, byte ptr [eax - 1] ; ret
0x08070afa:	push edi ; mov edi, edx ; push esi ; push ebx ; mov ebx, eax
0x08070d14:	inc ebx ; call 0x83c57507 ; ret
0x08070d77:	add byte ptr [ebx + 0x5e5b04c4], al ; ret
0x08070d7f:	nop ; mov eax, dword ptr [0x80ebcd4] ; ret
0x08070d8f:	add byte ptr [ecx + 0x80ebcdc], ah ; ret
0x08071296:	mov esi, dword ptr [esi + 0x18] ; test esi, esi ; jne 0xffffffca
0x080713c6:	add byte ptr [eax], al ; mov esi, dword ptr [ebp - 0x3c] ; add ebx, eax
0x080715d3:	mov byte ptr [ecx], 0x83 ; ret ; cmp al, 0xe8 ; ret
0x080717c2:	jbe 0x19 ; imul eax, esi, 0x3c ; add ebx, eax
0x0807190d:	inc eax ; add al, 0x85 ; ror byte ptr [edi], 0x44 ; ret
0x08071d23:	inc edi ; sbb byte ptr [ecx - 0x3c17aac5], cl
0x08071dd3:	add byte ptr [ebp - 0x7cffd98c], cl ; ret
0x0807209a:	adc byte ptr [ebp - 0x76bc8b40], al ; ret
0x08072837:	adc byte ptr [ebp - 0x7cdb8b40], al ; ret
0x080728bc:	pop ebx ; mov dword ptr [esi + 0x30], eax ; pop esi ; pop edi ; ret
0x08072af7:	mov eax, dword ptr [edi] ; add edx, 1 ; cmp ebx, eax
0x08072c1d:	call 0xfffd68d3 ; mov ebx, eax
0x08072e73:	insb byte ptr es:[edi], dx ; sub ebx, esi ; sub eax, edx ; cmp ebx, eax
0x08072e76:	sub eax, edx ; cmp ebx, eax ; cmovle eax, ebx
0x08072f77:	mov eax, dword ptr [ecx] ; add edx, 1 ; cmp ebx, eax
0x08073090:	call 0xfffd6460 ; mov ebx, eax
0x08073a20:	add al, 6 ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3d], dh
0x08073ca3:	sbb al, 0x89 ; inc esp ; and al, 0x3c ; mov ebx, eax
0x08073fa8:	rol dword ptr [ecx], -0x78 ; push ecx ; add edi, dword ptr [ecx] ; ret
0x08074656:	inc ebp ; add byte ptr [ebx - 0x3c898008], al
0x08074974:	cmp byte ptr [ebx - 0x768bdb84], cl ; ret
0x08074ed3:	mov ecx, edi ; mov eax, dword ptr [eax + 0x14] ; mov ebx, eax
0x08074fc9:	cmp dl, 0x80 ; jne 0xf ; mov ebx, eax
0x0807503d:	test byte ptr [esi - 0x7cfffffd], bl ; ret
0x08075d70:	mov edx, dword ptr [ebp + 0x14] ; mov eax, dword ptr [edx] ; mov ebx, eax
0x08075f21:	and al, 0x1c ; and eax, 7 ; mov ebx, eax
0x080768fc:	add byte ptr [eax], al ; and edi, 2 ; mov ebx, eax
0x080776d2:	dec esp ; add eax, 0x837d7400 ; ret
0x08077abf:	add byte ptr [ecx + 0x80eb5c0], ah ; ret
0x08077bb2:	add esp, 0x60 ; pop ebx ; pop esi ; pop edi ; ret
0x08077cdb:	mov esi, edx ; push ebx ; mov edi, ecx ; mov ebx, eax
0x08077eb8:	add byte ptr [ecx - 0x762ffe2a], cl ; ret
0x0807814f:	je 0x11 ; add esp, 8 ; pop ebx ; ret
0x0807830c:	adc byte ptr [ebp - 0x76397640], al ; ret
0x0807856a:	pop ebx ; mov eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08078a23:	fild word ptr [ebx - 0x17aff314] ; ret
0x08078bd9:	mov eax, dword ptr [0x80eaef8] ; cmp ebx, eax
0x08078c6a:	pop edi ; movsx esi, cl ; sete bl
0x08078c72:	stc ; cmp cl, byte ptr [ecx - 0x3c6bf021]
0x08078cfc:	mov byte ptr [edx], 0x2f ; mov byte ptr [eax], 0 ; ret
0x080792cb:	add byte ptr [eax], al ; lea esi, dword ptr [esi] ; ret
0x080792f9:	and byte ptr [ebx - 0x76ed8bf6], cl ; ret
0x0807932f:	rcr dword ptr [ecx + ecx*4], -0x2a ; push ecx ; mov ebx, eax
0x080795c0:	call 0xffff7080 ; mov ebx, eax
0x08079638:	or byte ptr [ebp - 0x7cdbe7b4], cl ; ret
0x08079720:	call 0xffff6f20 ; mov ebx, eax
0x080797e4:	std ; inc dword ptr [ebx - 0x3ca4e73c]
0x08079836:	and al, 8 ; mov eax, dword ptr [eax] ; sub eax, dword ptr [edx] ; ret
0x08079bac:	adc dword ptr [edi - 0x7cfffffe], -0x3d
0x08079dca:	and al, 0x6c ; add eax, dword ptr [edx + 0x20] ; cmp ebx, eax
0x08079dcd:	inc edx ; and byte ptr [ecx], bh ; ret ; cmovge eax, ebx
0x0807a30c:	scasb al, byte ptr es:[edi] ; push cs ; or byte ptr [edi + eax + 0x5b], dh ; ret
0x0807a34a:	mov eax, dword ptr [eax] ; mov eax, dword ptr [eax + edx*4 + 0x40] ; ret
0x0807a366:	add eax, dword ptr [0] ; ret
0x0807a3cd:	add al, byte ptr [eax] ; add byte ptr [ebp - 0x77], ah ; add al, bl
0x0807a43a:	push esp ; and al, 0xc ; add esp, 0x14 ; ret
0x0807a46d:	adc eax, 0x80ea9f0 ; mov ebx, eax
0x0807a664:	sub esp, -0x80 ; pop ebx ; pop esi ; pop edi ; ret
0x0807aa50:	add byte ptr [ebx + 0x108245c], cl ; ret
0x0807ac21:	dec dword ptr [ecx - 0x76207608] ; ret
0x0807ac8d:	mov eax, dword ptr [0x80eb524] ; cmp ebx, eax
0x0807b0dc:	std ; jmp dword ptr [esi - 0x70] ; xor eax, eax ; ret
0x0807b67c:	jmp 0xffffff8b ; fcomp dword ptr [ebx + 0x5e] ; pop edi ; ret
0x0807b6e4:	jecxz 0xffffff8b ; fcomp dword ptr [ebx + 0x5e] ; pop edi ; ret
0x0807b7c3:	add al, 0xf ; mov esi, 0xc3390540
0x0807b818:	loopne 3 ; shl eax, 2 ; or ebx, eax
0x0807b961:	les edx, ptr [eax] ; mov eax, esi ; pop ebx ; pop esi ; ret
0x0807bba5:	push ebx ; mov esi, edx ; mov edi, ecx ; mov ebx, eax
0x0807bce2:	std ; inc dword ptr [ebx - 0x3cd6ef3c]
0x0807be49:	add byte ptr [eax], al ; mov ecx, dword ptr [esi + 0x18] ; add ebx, eax
0x0807c361:	xchg dword ptr [eax], ebx ; adc dword ptr [eax], eax ; add byte ptr [ecx], al ; ret
0x0807c3c2:	add byte ptr [ebx + 0x1011445], al ; ret
0x0807d815:	lea ebp, dword ptr [ebx + edi*8 - 0x3c7c0001]
0x0808069e:	xchg eax, ecx ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x0808070c:	add byte ptr [ecx + 0x5f5e5bf0], cl ; ret
0x08080738:	add ecx, dword ptr [ecx + 0x5f5e5bf0] ; ret
0x08080755:	dec dword ptr [ecx + 0x5f5e5bf0] ; ret
0x08080773:	push edi ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x080809cb:	ja 0xffffffe5 ; mov eax, ebx ; pop ebx ; pop esi ; ret
0x080809dd:	div esi ; add eax, ebx ; pop ebx ; pop esi ; ret
0x08080dbe:	add byte ptr es:[ebx - 0x3c7c6fbb], cl
0x08081923:	call 0xfffd98ed ; mov ebx, eax
0x08081cdf:	call 0x8c458906 ; mov ebx, eax
0x0808260b:	add byte ptr [eax], al ; mov dword ptr [ebp - 0x70], edi ; sub ebx, eax
0x08082988:	mov word ptr [eax], es ; add byte ptr [eax], al ; add cl, ch ; ret
0x08082c77:	mov eax, edx ; add esp, 8 ; pop ebx ; ret
0x08082f63:	or byte ptr [ecx - 0x76f3dba4], cl ; ret
0x080831d4:	xor ecx, ecx ; add eax, 1 ; cmp ebx, eax
0x08083242:	lea eax, dword ptr [edx + edx*4] ; add eax, eax ; sub ebx, eax
0x08083719:	pop ebx ; add eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08083961:	test dword ptr [esi + esi*8 - 0x3c7c0001], eax
0x08083d39:	test dword ptr [edx + esi*8 - 0x3c7c0001], ebp
0x08083d6c:	clc ; dec dword ptr [edi] ; xchg eax, esp ; shr bl, 0xc3
0x08084193:	and byte ptr [ecx - 0x16d7dbbc], cl ; ret
0x080843ea:	lcall ptr [ebx - 0x77] ; rcr byte ptr [esi + 0x5f], 1 ; ret
0x080844c1:	sbb dword ptr [ebp + 0x391774db], eax ; ret
0x08084520:	les edx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08084693:	dec dword ptr [ecx + 0xcc483d0] ; ret
0x08084713:	inc edx ; or al, 0x8b ; pop edx ; adc byte ptr [ecx], ch ; ret
0x0808477d:	test dword ptr [eax], eax ; add byte ptr [eax], al ; add byte ptr [ecx], ch ; ret
0x0808497d:	call 0x4ea8309 ; cmp ebx, eax
0x08084b24:	test dl, bh ; add eax, 0xc3830000
0x08084c2a:	xchg eax, esp ; mov ebp, 0x8353080e ; ret
0x080854e3:	out dx, al ; add dword ptr [ebp - 0x3c60f00a], eax
0x08085733:	add byte ptr [eax], al ; mov eax, dword ptr [ecx + 4] ; mov ebx, eax
0x080859f3:	push eax ; sbb al, 0x83 ; les edx, ptr [eax] ; cmp ebx, eax
0x08085c63:	test dword ptr [eax - 0x76000005], ecx ; ret
0x08085d13:	mov eax, ecx ; sar eax, 2 ; mov ebx, eax
0x08085dff:	cld ; inc dword ptr [ebx - 0x3c76ef3c]
0x08085e6a:	les edx, ptr [eax] ; cmp eax, 0xff ; mov ebx, eax
0x08085f5c:	add byte ptr [eax], al ; add esp, 0x10 ; cmp ebx, eax
0x08085f7c:	mov eax, edx ; sub eax, dword ptr [ebp + 0x10] ; cmp ebx, eax
0x080860aa:	add byte ptr [eax], al ; add esp, 0x10 ; mov ebx, eax
0x08086853:	mov ecx, ebx ; add esi, 1 ; mov ebx, eax
0x080868e1:	test dword ptr [ebx + edi*8 - 0x3c7c0001], esp
0x0808721a:	std ; inc dword ptr [ebx - 0x3c76ef3c]
0x0808742e:	dec dword ptr [edx] ; add byte ptr [eax], al ; add bl, ch ; ret
0x080876e7:	adc byte ptr [ebx - 0x7af0fe08], al ; ret
0x08088143:	add byte ptr [edx + 0x52], dl ; push 0x2b ; jmp 0xffffffca
0x0808820e:	add byte ptr [eax + 0x50], dl ; push 0x2b ; jmp 0xffffffca
0x08089863:	iretd ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08089a36:	call 0xfffe50da ; ret
0x08089a8f:	fstp qword ptr [ebx - 0x77] ; enter 0x5f5e, -0x3d
0x0808a091:	sbb byte ptr [ecx + 0x5f5e5bc8], cl ; ret
0x0808a6c8:	adc byte ptr [ebp + 0x15b74c0], al ; ret
0x0808a74f:	test eax, eax ; mov dword ptr gs:[ebx], edi ; jne 0xffffffca
0x0808a8b4:	adc byte ptr [ebp + 0x11f74c0], al ; ret
0x0808a982:	div esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808ab4e:	inc esi ; add al, 0x8b ; pop esi ; or byte ptr [ecx], ch ; ret
0x0808abe5:	pop esi ; or byte ptr [ecx - 0x3cd61fbb], cl
0x0808ac06:	ror byte ptr [ecx - 0x76f88b3f], 0xc3
0x0808b17d:	and al, 0x1c ; mov eax, dword ptr [ecx + 0x20] ; sub ebx, eax
0x0808b291:	mov dword ptr [eax + 8], edx ; mov dword ptr [eax + 0x20], ecx ; ret
0x0808b2c3:	pop eax ; or byte ptr [ecx - 0x3ca4dfb8], cl
0x0808b303:	inc ebx ; cmp al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x0808b697:	pop ebx ; pop esi ; sub eax, edi ; pop edi ; pop ebp ; ret
0x0808b946:	add al, byte ptr [ebx + 0x5e5b04c4] ; ret
0x0808bc1b:	clc ; add al, byte ptr [ebx - 0x3ca4fe18]
0x0808bcbd:	or cl, al ; cli ; add ch, byte ptr [ecx] ; rol bl, 1
0x0808bd26:	mov dword ptr [eax], edx ; xor eax, eax ; pop ebx ; pop esi ; ret
0x0808bdd1:	cmp ecx, dword ptr [edx + 0x28] ; cmove eax, ecx ; ret
0x0808be04:	mov eax, dword ptr [eax + 0x24] ; mov eax, dword ptr [eax + 0x28] ; ret
0x0808bebe:	adc byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x0808c2ee:	call 0xfffbbef2 ; mov ebx, eax
0x0808c492:	lea eax, dword ptr [0x808d810] ; ret
0x0808c4c4:	lea eax, dword ptr [0x808cff0] ; ret
0x0808c682:	add ecx, dword ptr [ebp + 0x5f5e0346] ; ret
0x0808c944:	test dword ptr [edi - 0x77000000], eax ; ret
0x0808cc34:	ret 0x7403 ; and al, 0x14 ; cmp ebx, eax
0x0808cd75:	add eax, 1 ; add esi, eax ; cmp ebx, eax
0x0808cda9:	jne 0x77 ; add eax, 1 ; cmp ebx, eax
0x0808cdf0:	pop ebx ; pop esi ; add eax, edx ; pop edi ; pop ebp ; ret
0x0808d055:	add al, 0 ; add byte ptr [esi + 0x53], dl ; mov ebx, eax
0x0808d0b5:	add eax, dword ptr [eax] ; add byte ptr [esi + 0x53], dl ; mov ebx, eax
0x0808d13f:	nop ; pop ebx ; pop esi ; xor eax, eax ; pop edi ; ret
0x0808d153:	retf -0x367b ; jne 0x1d ; mov ebx, eax
0x0808d331:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x0808d356:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xc] ; pop edi ; ret
0x0808d380:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 8] ; pop edi ; ret
0x0808d3a9:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 4] ; pop edi ; ret
0x0808d3ae:	pop edi ; ret ; lea eax, dword ptr [edi - 0xf] ; pop edi ; ret
0x0808d3be:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xe] ; pop edi ; ret
0x0808d3ce:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xd] ; pop edi ; ret
0x0808d3de:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xb] ; pop edi ; ret
0x0808d3ee:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xa] ; pop edi ; ret
0x0808d3fe:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 9] ; pop edi ; ret
0x0808d40e:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 7] ; pop edi ; ret
0x0808d41e:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 6] ; pop edi ; ret
0x0808d42e:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 5] ; pop edi ; ret
0x0808d43e:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 3] ; pop edi ; ret
0x0808d44e:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 2] ; pop edi ; ret
0x0808d45e:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 1] ; pop edi ; ret
0x0808d695:	bsr eax, eax ; add eax, edi ; pop edi ; ret
0x0808d6a1:	sal byte ptr [ebp - 0x24], cl ; push esi ; push ebx ; mov ebx, eax
0x0808d7a0:	test ebx, ebx ; je 0x60 ; bsr eax, ebx
0x0808d7a9:	pop ebx ; pop esi ; sub eax, 0x10 ; pop edi ; ret
0x0808d7e6:	add eax, edi ; sub eax, 0x10 ; pop edi ; ret
0x0808d7ff:	add byte ptr [ebx + 0x5e], bl ; pop edi ; xor eax, eax ; ret
0x0808daf3:	add byte ptr [eax], al ; add eax, 3 ; pop edi ; ret
0x0808db19:	add byte ptr [eax], al ; add eax, 7 ; pop edi ; ret
0x0808db40:	add byte ptr [eax], al ; add eax, 0xb ; pop edi ; ret
0x0808db69:	add byte ptr [eax], al ; add eax, 0xf ; pop edi ; ret
0x0808dbd1:	push cs ; mov eax, dword ptr [esp + 0xc] ; pop edi ; ret
0x0808dc0f:	add byte ptr [eax], al ; lea eax, dword ptr [eax + 3] ; pop edi ; ret
0x0808dc42:	add byte ptr [eax], al ; lea eax, dword ptr [eax + 7] ; pop edi ; ret
0x0808dc79:	add byte ptr [eax], al ; lea eax, dword ptr [eax + 0xb] ; pop edi ; ret
0x0808dca2:	add byte ptr [eax], al ; lea eax, dword ptr [eax + 0xf] ; pop edi ; ret
0x0808dcb7:	add byte ptr [eax], al ; lea eax, dword ptr [eax + 1] ; pop edi ; ret
0x0808dcc7:	add byte ptr [eax], al ; lea eax, dword ptr [eax + 2] ; pop edi ; ret
0x0808dcd7:	add byte ptr [eax], al ; lea eax, dword ptr [eax + 4] ; pop edi ; ret
0x0808dce3:	jb 0x7d ; lea eax, dword ptr [eax + 5] ; pop edi ; ret
0x0808dcf3:	jb 0x6d ; lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x0808dd03:	jb 0x5d ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x0808dd13:	jb 0x4d ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x0808dd23:	jb 0x3d ; lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x0808dd33:	jb 0x2d ; lea eax, dword ptr [eax + 0xc] ; pop edi ; ret
0x0808dd43:	jb 0x1d ; lea eax, dword ptr [eax + 0xd] ; pop edi ; ret
0x0808dd53:	jb 0xd ; lea eax, dword ptr [eax + 0xe] ; pop edi ; ret
0x0808dd5f:	add byte ptr [ebx + 0x5f0c2444], cl ; ret
0x0808ddbd:	mov eax, 4 ; pop edi ; ret
0x0808de16:	mov eax, 8 ; pop edi ; ret
0x0808de66:	mov eax, 0xc ; pop edi ; ret
0x0808de9a:	mov eax, 0x10 ; pop edi ; ret
0x0808deae:	nop ; nop ; add eax, 1 ; pop edi ; ret
0x0808deb3:	pop edi ; ret ; add eax, 2 ; pop edi ; ret
0x0808deb8:	pop edi ; ret ; add eax, 3 ; pop edi ; ret
0x0808debd:	pop edi ; ret ; add eax, 4 ; pop edi ; ret
0x0808dec2:	pop edi ; ret ; add eax, 5 ; pop edi ; ret
0x0808dec7:	pop edi ; ret ; add eax, 6 ; pop edi ; ret
0x0808decc:	pop edi ; ret ; add eax, 7 ; pop edi ; ret
0x0808ded1:	pop edi ; ret ; add eax, 8 ; pop edi ; ret
0x0808ded6:	pop edi ; ret ; add eax, 9 ; pop edi ; ret
0x0808dedb:	pop edi ; ret ; add eax, 0xa ; pop edi ; ret
0x0808dee0:	pop edi ; ret ; add eax, 0xb ; pop edi ; ret
0x0808dee5:	pop edi ; ret ; add eax, 0xc ; pop edi ; ret
0x0808deea:	pop edi ; ret ; add eax, 0xd ; pop edi ; ret
0x0808deef:	pop edi ; ret ; add eax, 0xe ; pop edi ; ret
0x0808def4:	pop edi ; ret ; add eax, 0xf ; pop edi ; ret
0x0808e002:	lea eax, dword ptr [0x808ea20] ; ret
0x0808e089:	add ecx, dword ptr [ecx + 0x5e5b084a] ; ret
0x0808e100:	add esp, 0x30 ; pop ebx ; pop esi ; pop edi ; ret
0x0808e346:	inc eax ; pop ebx ; sub eax, esi ; pop esi ; pop edi ; ret
0x0808e6b9:	sal byte ptr [ebp - 0x3c], 0x89 ; rcr byte ptr [ebx - 0x3d], 1
0x0808e6bd:	rcr byte ptr [ebx - 0x3d], 1 ; xor eax, eax ; pop ebx ; ret
0x0808e6c4:	mov eax, 1 ; pop ebx ; ret
0x0808e6cb:	mov eax, 2 ; pop ebx ; ret
0x0808e6f8:	add al, 0x85 ; sal byte ptr [ebp - 0xd], cl ; ret
0x0808eb5a:	rol dword ptr [eax + 0x20740fe1], 1 ; ret
0x0808eb74:	pcmpeqb mm3, qword ptr [ecx] ; add eax, 2 ; ret
0x0808ebaf:	add byte ptr [eax + 1], bh ; ret
0x0808ebbf:	add byte ptr [eax + 2], bh ; ret
0x0808ebcf:	add byte ptr [eax + 3], bh ; ret
0x0808ebdf:	add byte ptr [eax + 4], bh ; ret
0x0808ebef:	add byte ptr [eax + 5], bh ; ret
0x0808ebff:	add byte ptr [eax + 6], bh ; ret
0x0808ec0f:	add byte ptr [eax + 7], bh ; ret
0x0808ec67:	add eax, dword ptr [ebp + 0x5bd475db] ; ret
0x0808ec6d:	ret ; nop ; mov eax, ebx ; pop ebx ; ret
0x0808ec9b:	adc eax, 0x80ea9f0 ; pop ebx ; ret
0x0808ecc6:	add byte ptr [ebx + 0x470f3bf8], al ; ret
0x0808ecd5:	imul edx, edx, 0x3c ; pop ebx ; add eax, edx ; ret
0x0808ed55:	add dword ptr [eax], eax ; add byte ptr [ecx], dh ; sal dh, 0xc3
0x0808ed86:	ret 0x190 ; add byte ptr [eax], al ; cmp ebx, eax
0x0808eee7:	les ebx, ptr [eax] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808ef4d:	sub eax, esi ; imul eax, eax, 0x64 ; cmp ebx, eax
0x0808efcc:	cld ; dec dword ptr [ecx - 0x3c76dbcc]
0x0808f01b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; mov ebx, eax
0x0808f188:	add byte ptr [eax], al ; add byte ptr [esi + 0x5f], bl ; pop ebp ; ret
0x0808f2ae:	add byte ptr [eax - 0x6bf0d3c8], al ; ret
0x0808f2b0:	cmp byte ptr [edi + ecx], ch ; xchg eax, esp ; ret ; add ebx, eax
0x0808f68e:	sal byte ptr [ebp + 7], 0x5b ; pop esi ; pop edi ; ret
0x0808f853:	mov ebp, 0xc483080e ; or al, 0xc3
0x0808f8ca:	mov dword ptr [ebx + 0x24], eax ; pop ebx ; pop esi ; pop edi ; ret
0x0809027b:	nop ; add byte ptr [eax], al ; add byte ptr [edi], cl ; mov ebx, es
0x080904b9:	mov ebx, 1 ; test eax, ebx
0x08090671:	ret 0x8301 ; mov byte ptr [ebx + eax*4], 0xc3
0x08090e91:	sar byte ptr [eax + 0x6c], 0x56 ; push ebx ; mov ebx, eax
0x08090ed5:	or al, 0x83 ; les esp, ptr [ebx + ebx*2 + 0x5e] ; ret
0x08090ef8:	les esp, ptr [ecx + esi - 0x40] ; pop ebx ; pop esi ; ret
0x08090efc:	pop ebx ; pop esi ; ret ; nop ; xor eax, eax ; ret
0x08090f13:	je 0x2d ; push ebx ; mov ecx, edx ; mov ebx, eax
0x08090f48:	add al, byte ptr [eax] ; add byte ptr [eax], al ; xor eax, eax ; ret
0x08090fda:	ja 0xe ; add esp, 8 ; pop ebx ; ret
0x08091348:	jae 0xfffdf2f8 ; ret
0x08091355:	call dword ptr [0x80ea9f0] ; ret
0x08091406:	add byte ptr es:[ecx], dh ; rcr byte ptr [ebx + 0x5e], 0xc3
0x0809142e:	jae 0xfffdf212 ; ret
0x0809145c:	jae 0xfffdf1e4 ; ret
0x08091492:	jae 0xfffdf1ae ; ret
0x080914c1:	jae 0xfffdf17f ; ret
0x080914e6:	add esp, 0x5c ; movzx eax, al ; ret
0x0809157c:	les esi, ptr [ecx + ecx*4] ; fcomp dword ptr [ebx + 0x5e] ; ret
0x08091588:	call 0xfffdf0b8 ; mov ebx, eax
0x080915ab:	adc eax, 0x80ea9f0 ; cmp ebx, eax
0x080915b6:	or byte ptr [edi + 7], dh ; xor eax, eax ; pop ebx ; ret
0x080915f8:	jae 0xfffdf048 ; ret
0x0809162c:	jae 0xfffdf014 ; ret
0x080916f5:	je 0xd ; mov ebx, dword ptr [edx + 0x10] ; and ebx, eax
0x080916fe:	lcall -0x3ca2:0x5b0a0403
0x08091736:	test byte ptr [ebp + 1], ah ; add byte ptr [eax], al ; mov ebx, eax
0x080918e7:	add byte ptr [edx + edx*8 - 0x3c7ccb8c], al
0x08091913:	jne 0x5a ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091926:	je 0xffffffe5 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091966:	pop ebx ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x0809199a:	cmp byte ptr [esi - 2], 0x3a ; cmove eax, ebx
0x08091a7d:	test byte ptr [esi - 0x7d000000], ch ; ret
0x08091b5a:	add al, 0x85 ; sal byte ptr [ecx - 0x77], 0xc3
0x08091d0f:	add eax, dword ptr [esi] ; cmp eax, 0x33 ; mov ebx, eax
0x08091f25:	jne 0xffffffe2 ; and eax, 0xfffffff0 ; mov ebx, eax
0x0809225b:	test dword ptr [edx - 0x7d000000], ebp ; ret
0x08092562:	cld ; inc dword ptr [ebx - 0x3cc6ef3c]
0x0809280f:	add byte ptr [ebx - 0x7af0fe08], al ; ret
0x08092868:	inc eax ; xor byte ptr [ebx - 0x3c76dfa9], cl
0x08092c40:	add al, 0x52 ; lea eax, dword ptr [edi + eax*8] ; cmp ebx, eax
0x08092d05:	std ; inc dword ptr [ebx - 0x3cc6ef3c]
0x08092d14:	xchg byte ptr [eax + 1], bl ; add byte ptr [eax], al ; mov ebx, eax
0x08093087:	sti ; inc dword ptr [ebp - 0x3c7af040]
0x0809364f:	add byte ptr [esi + 0x53], dl ; mov esi, edx ; mov ebx, eax
0x08093955:	add dword ptr [ecx + ecx*8 - 0x3c7c898c], eax
0x08093f70:	movzx eax, byte ptr [esp + 0xf] ; cmp bl, al
0x08093f93:	mov dh, 0x19 ; movzx eax, byte ptr [edx] ; cmp bl, al
0x080950be:	add byte ptr es:[ebx - 0x3c76e7ba], cl
0x080950cd:	add byte ptr [ebp + 0x6b1474c0], al ; ret
0x080957b5:	shl ecx, 5 ; add ebx, ecx ; add ebx, eax
0x08095b10:	pop ebp ; cwde ; mov ecx, dword ptr [ebp - 0x64] ; xor ebx, eax
0x08095b27:	xor ebx, ebx ; or edx, eax ; setne bl
0x08095b53:	dec dword ptr [ebx - 0x7af0f7bb] ; ret
0x080961ef:	nop ; mov word ptr [ecx], es ; add byte ptr [eax], al ; ret
0x0809621e:	mov dword ptr [eax + 0x188], edx ; ret
0x080962fb:	pop edx ; pop ecx ; lea edx, dword ptr [eax + 1] ; mov ebx, eax
0x0809634e:	and al, 0x14 ; add esp, 0x10 ; add ebx, eax
0x08096452:	add dword ptr [ecx - 0x76f3dbbc], ecx ; ret
0x08096666:	add al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x0809669c:	nop ; nop ; nop ; nop ; push ebx ; mov ebx, eax
0x080966b6:	jne 7 ; add esp, 8 ; pop ebx ; ret
0x0809671a:	sti ; inc dword ptr [ebx - 0x3ca4e73c]
0x0809676b:	push es ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08096799:	fisttp qword ptr [eax + ecx] ; mov esi, edx ; mov ebx, eax
0x08096a3e:	mov edi, dword ptr [ebp - 0x78] ; add edi, dword ptr [esi] ; mov ebx, eax
0x08096db8:	dec dword ptr [ebx + 0x48d0840] ; ret
0x08097275:	shl eax, 5 ; add eax, edx ; cmp ebx, eax
0x080973e2:	inc ebp ; movsb byte ptr es:[edi], byte ptr [esi] ; mov eax, dword ptr [esi + 4] ; mov ebx, eax
0x0809794e:	inc ebp ; mov byte ptr [ebx - 0x3c76fbb9], cl
0x08098313:	je 0x56 ; xor ecx, ecx ; mov ebx, eax
0x080983f3:	add esi, eax ; lea eax, dword ptr [esi + 0xc] ; mov ebx, eax
0x080984a2:	push cs ; or byte ptr [ebp - 0x3cc6c4fc], cl
0x0809887f:	add byte ptr [eax], al ; add bl, dl ; loopne 0x3f ; ret
0x08098897:	ror dword ptr [eax], -0x77 ; jno 0xfffffffd ; cmp ebx, eax
0x08098c64:	jne 0x4c ; sub esp, 0xc ; mov ebx, eax
0x08098f80:	test byte ptr [edi + 1], dh ; add byte ptr [eax], al ; cmp ebx, eax
0x08099103:	jmp 0xfffffe8e ; sub ebx, eax
0x0809916a:	js 0x46 ; sub esp, 4 ; mov ebx, eax
0x08099303:	jne 0xffffffe5 ; mov eax, dword ptr [ecx] ; pop ebx ; pop esi ; ret
0x08099380:	add dword ptr [ebx + 0x80eba08], esp ; ret
0x080993f6:	sal byte ptr [edi + eax - 0x75], cl ; xor ch, bl ; ret
0x08099448:	push es ; mov eax, dword ptr [0x80eba08] ; ret
0x08099481:	add al, 0x85 ; leave ; jne 0xffffffdf ; pop ebx ; ret
0x08099483:	leave ; jne 0xffffffdd ; pop ebx ; ret ; ret
0x080994f8:	pop ss ; add esp, 0x14 ; pop ebx ; pop edi ; ret
0x08099501:	les edx, ptr [ecx + esi] ; rcr byte ptr [ebx + 0x5f], 0xc3
0x080995a4:	mov edi, dword ptr [esp + 0xc] ; lea ebx, dword ptr [ebx + eax*8]
0x080996e9:	or byte ptr [ebx - 0x7bf00790], cl ; ret
0x080998ed:	clc ; dec dword ptr [edi] ; inc esp ; ret 0xc35f
0x08099920:	rcr dword ptr [ebx + 0x31], -0x40 ; pop esi ; pop edi ; ret
0x0809994b:	add byte ptr es:[eax], al ; add byte ptr [eax], al ; sub ebx, eax
0x08099958:	daa ; mov esi, eax ; mov eax, dword ptr [esi] ; cmp ebx, eax
0x08099ae5:	add byte ptr [ecx + 0x5f5e5bd8], cl ; ret
0x08099afa:	dec dword ptr [ecx + 0x5f5e5bd8] ; ret
0x08099b3e:	adc byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x08099c4f:	xor eax, 0x80e9fec ; mov ebx, eax
0x08099f30:	fadd dword ptr [ebx + 0x5e5b04c4] ; ret
0x08099f33:	add al, 0x5b ; pop esi ; ret ; xor eax, eax ; ret
0x0809a218:	mov eax, dword ptr [eax] ; test eax, eax ; cmove eax, ebx
0x0809a81e:	adc edx, dword ptr [eax - 0x7cfe397d] ; ret
0x0809ab72:	add dword ptr [ebx + 0x748b01ea], eax ; ret
0x0809ac2c:	or al, 0x8b ; jne 0xc ; mov byte ptr [ebp - 0x3d], al
0x0809b927:	je 0x1d ; add esp, 8 ; pop ebx ; ret
0x0809ba46:	and al, 0x28 ; add esp, 0x4c ; ret
0x0809bb3a:	pop ebx ; pop esi ; pop edi ; neg eax ; pop ebp ; ret
0x0809bb56:	pop ebx ; sub eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x0809bd15:	lea eax, dword ptr [ebx - 1] ; jbe 0x23 ; mov ebx, eax
0x0809bee4:	out 0xc, al ; or byte ptr [eax - 0x18], dl ; arpl bx, ax
0x0809bf0c:	adc al, 6 ; add eax, 0x30 ; cmp ebx, eax
0x0809bf5a:	mov byte ptr [0x89fffffd], bl ; ret
0x0809bfb6:	inc dword ptr [ebp + 0x792d74c0] ; ret
0x0809c02d:	lea eax, dword ptr [ebx - 1] ; jbe 0x41 ; mov ebx, eax
0x0809c08b:	adc ecx, dword ptr [ebp - 0x7cffd98c] ; ret
0x0809c167:	inc dword ptr [ebx + 0x376fdfa] ; ret
0x0809c1ab:	pop ebx ; pop esi ; ret ; nop ; mov ebx, eax
0x0809c204:	push ebx ; mov edx, dword ptr [esp + 0xc] ; mov ebx, eax
0x0809c4bc:	ret 0x974 ; add esp, 0xc ; ret
0x0809c51d:	nop ; nop ; mov eax, dword ptr [eax + 4] ; ret
0x0809c534:	sub eax, dword ptr [0] ; ret
0x0809c5cd:	pop edx ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x0809c62a:	inc ebx ; or al, 0x83 ; les ebp, ptr [eax] ; pop ebx ; ret
0x0809c669:	sal byte ptr [ebp + 4], cl ; add esp, 0x2c ; ret
0x0809c693:	inc esp ; and al, 0xc ; add esp, 0x2c ; ret
0x0809c6d0:	add eax, dword ptr [edx + 4] ; add esp, 0x1c ; ret
0x0809c750:	or byte ptr [ebx + 0x5e5b20c4], al ; ret
0x0809c78e:	or byte ptr [ebx + 0x5e5b10c4], al ; ret
0x0809c85c:	adc byte ptr [ecx + 0x1cc483d0], cl ; ret
0x0809c8a5:	add byte ptr [0xfffffffc], al ; ret
0x0809c9b0:	add al, byte ptr [ebx + 0x5e5b01e8] ; ret
0x0809c9be:	add byte ptr [eax], al ; xor eax, eax ; pop ebx ; pop esi ; ret
0x0809caca:	inc esp ; and al, 0x1c ; div ecx ; mov ebx, eax
0x0809cae0:	xor ebx, ebx ; cmp eax, edi ; setb bl
0x0809cca3:	inc esp ; and al, 0xc ; sub ecx, eax ; add ebx, eax
0x0809ce19:	dec edx ; mov eax, dword ptr [esi + edx*4] ; shld ebx, eax, cl
0x0809ce28:	mov dword ptr [edi], eax ; pop eax ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce30:	jecxz 0xffffff8b ; pop ds ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce79:	inc edx ; mov eax, dword ptr [esi + edx*4] ; shrd ebx, eax, cl
0x0809ce90:	jmp 0xffffff8b ; pop ds ; pop ebx ; pop esi ; pop edi ; ret
0x0809cfa2:	les esp, ptr [eax] ; mov dword ptr [ebp - 0x1c], eax ; add ebx, eax
0x0809cfac:	pop ebp ; aam 0x8b ; pop ebp ; or al, 1 ; ret
0x0809d1e2:	mov eax, ebp ; pop ebx ; pop ebp ; pop esi ; pop edi ; ret
0x0809d534:	adc al, 0x86 ; add eax, 1 ; cmp ebx, eax
0x0809d884:	sub al, 0x82 ; add eax, 1 ; cmp ebx, eax
0x0809d954:	or al, 0x86 ; add eax, 1 ; cmp ebx, eax
0x0809dabc:	les esp, ptr [eax] ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0809dad4:	les edx, ptr [eax] ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0809dbb9:	sbb eax, eax ; neg eax ; pop esi ; pop edi ; ret
0x0809dc81:	mov dword ptr [edi], edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809dd95:	test edx, edx ; sete al ; test al, bl
0x0809de95:	les esp, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0809df23:	add byte ptr [ecx], bh ; call 0xc329f07c
0x0809dfb5:	test dword ptr [eax - 0x4a], esp ; or al, 8 ; mov ebx, eax
0x0809e0be:	cmp byte ptr [ebp - 0xcfa8740], al ; ret
0x0809e381:	jne 0xf ; add esp, 8 ; pop ebx ; ret
0x0809e39f:	sti ; inc dword ptr [ebx - 0x3cc6ef3c]
0x0809e3ac:	and al, 0x14 ; add esp, 8 ; pop ebx ; ret
0x0809e3f4:	push cs ; or byte ptr [eax - 0x3cf7f149], dh
0x0809e625:	add esp, 4 ; pop esi ; pop edi ; ret
0x0809e6df:	mov dword ptr [ebx + 4], edx ; pop ebx ; pop esi ; pop edi ; ret
0x0809e865:	add esp, 0xc ; add esp, 0xc ; ret
0x0809e8d3:	mov dword ptr [eax], edx ; add esp, 8 ; pop ebx ; ret
0x0809e8f3:	mov dword ptr [edx], eax ; add esp, 8 ; pop ebx ; ret
0x0809e9c5:	sbb al, 0xf ; mov dh, 0xc0 ; neg eax ; ret
0x0809ea93:	adc byte ptr [ecx + 0x2cc483d0], cl ; ret
0x0809eab8:	sal byte ptr [ebp + eax + 0x5b], 0x5e ; pop edi ; ret
0x0809ecd0:	sub eax, edx ; shr eax, 0x1f ; sub ebx, eax
0x0809ed01:	clc ; mov edi, dword ptr [esp + 4] ; sub ebx, eax
0x0809ef24:	retf ; push edi ; and ebx, 1 ; add ebx, eax
0x0809efd6:	mov ebx, edx ; sar ebx, 3 ; sub ebx, eax
0x0809efe7:	mov esi, edi ; shr eax, 0x1f ; sub ebx, eax
0x0809f129:	sar edi, 0x1f ; mov ebx, edx ; sub ebx, eax
0x0809f20d:	add al, 0x92 ; lea eax, dword ptr [eax + eax*4] ; sub ebx, eax
0x0809f397:	sub eax, ebp ; cmp edx, ebx ; setge bl
0x0809f5c1:	mov esi, edx ; push ebx ; mov edx, ecx ; mov ebx, eax
0x0809f5f9:	add byte ptr [ecx - 0xcfd8130], cl ; ret
0x0809f61b:	mov dword ptr gs:[0x68], eax ; ret
0x0809f691:	pop ebx ; sar eax, 2 ; pop esi ; pop edi ; ret
0x0809f6d3:	inc ebx ; adc al, 0x83 ; les ecx, ptr [ebx + ebx*2] ; ret
0x0809fb12:	mov eax, 0x160 ; mov ebx, eax
0x0809fd45:	mov ebp, 0 ; mov ebx, eax
0x080a038a:	add byte ptr [eax], al ; add eax, 1 ; cmp ebx, eax
0x080a122d:	sti ; inc dword ptr [ebx - 0x3cfeef3c]
0x080a13bd:	mov eax, 0xe ; add ebx, eax
0x080a13d3:	call 0xfffb9e3d ; add ebx, eax
0x080a1735:	or al, 0x85 ; sal byte ptr [esp + eax + 1], 0xc3
0x080a1866:	or al, 0x85 ; sal byte ptr [edi + eax*2 - 0x77], 0xc3
0x080a209a:	je 0x26 ; cmp byte ptr [ecx], ch ; sar dword ptr [ecx], cl ; ret
0x080a2223:	and byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x080a224e:	sal byte ptr [ebp + 0x1d], 0x8b ; add dword ptr [ecx], edi ; ret
0x080a2355:	inc ecx ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x080a27e0:	sahf ; or byte ptr [ebx - 0x3c7cef3c], al
0x080a29ab:	mov dh, 2 ; lea edi, dword ptr [eax - 0x30] ; mov ebx, eax
0x080a3270:	test edx, ebx ; sbb eax, 0xc3890000
0x080a364c:	test esp, ebx ; pop es ; add byte ptr [eax], al ; mov ebx, eax
0x080a3c67:	mov ebp, 0xfffffa8c ; mov ebx, eax
0x080a3dfe:	dec byte ptr [ecx + 0x77cb38fb] ; ret
0x080a479d:	jne 0xffffffe3 ; mov esi, dword ptr [ebp + 8] ; mov ebx, eax
0x080a4851:	add byte ptr [eax], al ; lea eax, dword ptr [edi - 1] ; cmp ebx, eax
0x080a4969:	test dword ptr [ebx + eax - 0x3c7d0000], esi
0x080a4acf:	inc dword ptr [ecx] ; sub edi, 1 ; cmp ebx, eax
0x080a5743:	test dword ptr [edx - 0x7cfffff1], ecx ; ret
0x080a5772:	push dword ptr [ebp - 0x44] ; mov ecx, ebx ; mov ebx, eax
0x080a636f:	add byte ptr [ebp - 0x7f7af040], al ; ret
0x080a66cd:	jmp 0xffffe9f6 ; mov ebx, eax
0x080a7174:	test dword ptr [edx + edi*8 - 0x3cfe0001], esp
0x080a7b39:	test dword ptr [eax + 0x1fffffa], ebx ; ret
0x080a8076:	sti ; sub eax, ecx ; add edx, eax ; sub ebx, eax
0x080a85c2:	mov edx, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a8655:	inc ebx ; or byte ptr [ebx - 0x3ca4d73c], al
0x080a86f8:	or al, 0xf ; mov dh, 0xc0 ; neg eax ; ret
0x080a8716:	inc ebx ; or al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x080a877f:	add esp, 0x18 ; mov eax, ebx ; pop ebx ; ret
0x080a87a9:	inc ebx ; adc byte ptr [ebx - 0x3ca4eb3c], al
0x080a881a:	add esp, 0x28 ; mov eax, ebx ; pop ebx ; ret
0x080a898b:	or cl, cl ; jne 6 ; xor eax, eax ; ret
0x080a8baa:	or byte ptr [esi - 0x7d], ah ; add al, 0x42 ; add ebx, eax
0x080a8cd3:	les ebp, ptr [eax + 0x5b000000] ; ret
0x080a8d2f:	nop ; mov eax, dword ptr [0x80ebc9c] ; ret
0x080a8d65:	mov dword ptr [ebx], eax ; add esp, 0x14 ; pop ebx ; ret
0x080a8ecd:	rol byte ptr [ebx + 0x4d8d08ec], 1 ; ret
0x080a8f6b:	inc dword ptr [ebx + 0x7d8010c4] ; ret
0x080a90fd:	push es ; add byte ptr [eax], al ; add esp, 0x2c ; ret
0x080a9e99:	pushal ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x080a9ee8:	aaa ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080a9efb:	rol dword ptr [ebx + 0x5e5b04c4], -0x3d
0x080a9f13:	or eax, edx ; test cl, cl ; cmove eax, ebx
0x080a9f19:	ret ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080aa40b:	in al, dx ; mov esi, dword ptr [esp + 0xc] ; add ebx, eax
0x080aa6ee:	test byte ptr [edx + eax*2 + 1], 0x20 ; mov ebx, eax
0x080aa808:	fldz ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080aa838:	mov edi, dword ptr [esp + 0x10] ; movsx eax, bl
0x080aabd0:	mov edx, dword ptr [esp + 0x10] ; movsx eax, bl
0x080aae91:	pop ebx ; fchs ; pop esi ; pop edi ; pop ebp ; ret
0x080ab138:	rol dword ptr [eax], 1 ; add eax, 1 ; cmp ebx, eax
0x080abe52:	add byte ptr [ecx - 0x7c01760d], cl ; ret
0x080ac170:	xor ebx, ebx ; cmp eax, ebp ; setb bl
0x080ac2ff:	and al, 0x80 ; add byte ptr [eax], al ; add byte ptr [ecx], bh ; ret
0x080af097:	cmp dword ptr [esp + 0x38], ebx ; seta bl
0x080af889:	pop ebx ; pop esi ; pop edi ; pop ebp ; fmul st(0) ; ret
0x080af8d1:	pop ebx ; pop esi ; pop edi ; pop ebp ; fmulp st(1) ; ret
0x080b2352:	mov edi, ecx ; push ebx ; mov esi, edx ; mov ebx, eax
0x080b235b:	and bl, ch ; add eax, 0xc3839066
0x080b2392:	add esp, 0x20 ; pop ebx ; pop esi ; pop edi ; ret
0x080b252c:	fld dword ptr [esp] ; add esp, 4 ; ret
0x080b259a:	and al, 0x83 ; les ecx, ptr [ebx + ebx*2] ; pop esi ; ret
0x080b25f7:	fld xword ptr [esp] ; add esp, 0x1c ; ret
0x080b2630:	lea eax, dword ptr [0x80b5210] ; ret
0x080b268b:	je 0xffffffdd ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b2b83:	adc byte ptr [esi + 0xf], ah ; outsd dx, dword ptr [esi] ; fsub st(1), st(0) ; ret
0x080b3edb:	dec byte ptr [ebp - 0x7af00587] ; ret
0x080b4d26:	add ecx, dword ptr [eax + ecx] ; sub eax, ecx ; pop ebp ; ret
0x080b4ef7:	neg eax ; add esp, 4 ; pop ebp ; ret
0x080b4f02:	add al, 0x5e ; pop edi ; pop ebp ; xor eax, eax ; ret
0x080b51cc:	jne 0x14 ; pop esi ; pop ebp ; xor eax, eax ; ret
0x080b51e9:	dec dword ptr [edi] ; inc esi ; ret 0x5d5e ; ret
0x080b556e:	or byte ptr [ecx], ch ; enter 0x5f5e, 0x5d ; ret
0x080b557f:	add byte ptr [esi + 0x31], bl ; rcr byte ptr [edi + 0x5d], 0xc3
0x080b5595:	ja 4 ; neg eax ; pop edi ; pop ebp ; ret
0x080b55b7:	jne 0x4b ; cmp ebp, 4 ; jbe 0xffffffca
0x080b579e:	jae 0xfffbaea2 ; ret
0x080b58c8:	ror byte ptr [ecx - 0x760e0810], cl ; ret
0x080b59aa:	add byte ptr [ebp - 0x760e762e], al ; ret
0x080b5cb9:	inc edx ; pop eax ; add esp, 8 ; pop ebx ; ret
0x080b5ce1:	inc edx ; pop esp ; add esp, 8 ; pop ebx ; ret
0x080b5cf1:	inc edx ; push esp ; add esp, 8 ; pop ebx ; ret
0x080b5f4c:	shl eax, cl ; add ecx, 7 ; or ebx, eax
0x080b6285:	add bl, dl ; loopne 0xfffffffb ; fmul dword ptr [ecx] ; ret
0x080b6584:	sbb al, 0x18 ; add byte ptr [eax], al ; add al, 0xc3
0x080b6975:	dec dword ptr [ebx - 0x76e7dbb4] ; ret
0x080b7151:	cmp ebx, ecx ; mov eax, esi ; setge bl
0x080b7160:	cmp ebx, ecx ; mov eax, esi ; sete bl
0x080b71c7:	mov eax, ebx ; cdq ; idiv ecx ; mov ebx, eax
0x080b71de:	cmp ebx, ecx ; mov eax, esi ; setne bl
0x080b71ed:	cmp ebx, ecx ; mov eax, esi ; setl bl
0x080b71fc:	cmp ebx, ecx ; mov eax, esi ; setle bl
0x080b720b:	cmp ebx, ecx ; mov eax, esi ; setg bl
0x080b77e7:	pop ebx ; mov dword ptr [esi + 0x4c], edx ; pop esi ; pop edi ; ret
0x080b77f4:	add byte ptr [eax], al ; add byte ptr [eax], al ; pop esi ; pop edi ; ret
0x080b7876:	sar dword ptr [ecx], 1 ; dec edi ; adc byte ptr [edi], cl ; xchg eax, esp ; ret
0x080b79a1:	sub al, 0x89 ; pop esp ; and al, 0xc ; mov ebx, eax
0x080b7b91:	inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x48] ; ret
0x080b7bec:	mov dword ptr [eax], ecx ; add esp, 8 ; pop ebx ; ret
0x080b7bfd:	sbb al, 0x82 ; add esp, 8 ; pop ebx ; ret
0x080b7c11:	inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x4c] ; ret
0x080b7c2d:	pop ds ; mov dword ptr [ecx], eax ; mov eax, dword ptr [edx + 0x4c] ; ret
0x080b7c45:	inc esp ; and al, 4 ; mov dword ptr [eax + 0x4c], edx ; ret
0x080b7c51:	inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x50] ; ret
0x080b7c61:	inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x5c] ; ret
0x080b7c9a:	and al, 0xc ; add esp, 0x18 ; pop ebx ; ret
0x080b7cb1:	inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x58] ; ret
0x080b7cc1:	inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x54] ; ret
0x080b7daa:	pop ebp ; ret ; lea esi, dword ptr [esi] ; ret
0x080b7e4d:	jne 0xfffffffa ; mov edi, dword ptr [ebp - 4] ; leave ; ret
0x080b7eee:	cld ; mov ebp, dword ptr [ebp] ; mov esp, ecx ; ret
0x080b81ba:	pop edi ; pop ebp ; ret ; mov eax, dword ptr [esp] ; ret
0x080b81be:	add al, 0x24 ; ret ; mov ecx, dword ptr [esp] ; ret
0x080b81c2:	or al, 0x24 ; ret ; mov esi, dword ptr [esp] ; ret
0x080b81c6:	xor al, 0x24 ; ret ; mov edi, dword ptr [esp] ; ret
0x080b81ca:	cmp al, 0x24 ; ret ; mov ebp, dword ptr [esp] ; ret
0x080b837c:	jne 0x24 ; add esp, 8 ; pop ebx ; ret
0x080b838f:	mov eax, 4 ; pop ebx ; ret
0x080b83e1:	inc edx ; or byte ptr [ebx - 0x3ca4f73c], al
0x080b8411:	inc edx ; add al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x080b88c0:	pop esp ; mov edx, dword ptr [esp + 0x70] ; mov ebx, eax
0x080b8f13:	add byte ptr [ecx - 0x7bf0dbfc], cl ; ret
0x080b92f8:	and al, 0x20 ; movzx ebp, al ; mov ebx, eax
0x080b946d:	or byte ptr [ecx - 0x76ebdbbc], cl ; ret
0x080b94e3:	adc byte ptr [ebp - 0x7c2f8740], al ; ret
0x080b9510:	fisttp word ptr [ecx - 0x76f3dba4] ; ret
0x080b980c:	pop ebx ; pop esi ; mov dword ptr [edx + 0x14], eax ; pop edi ; ret
0x080b98ac:	mov dword ptr [esi + 0x14], eax ; pop ebx ; pop esi ; pop edi ; ret
0x080b98cd:	or byte ptr [ebp - 0xcf98a37], al ; ret
0x080ba326:	add esp, 0x10 ; test ebx, ebx ; jne 0xffffffca
0x080ba388:	jne 0xffffffe8 ; add esp, 8 ; pop ebx ; ret
0x080ba3d1:	salc ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080ba501:	jne 0xffffffe7 ; add esp, 8 ; pop ebx ; ret
0x080ba61a:	jecxz 0xffffff85 ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x080ba6a7:	stc ; inc dword ptr [ebx - 0x3c0ce33c]
0x080ba7eb:	div byte ptr [ebp - 0x2e] ; pop ebx ; pop esi ; pop edi ; ret
0x080baaa6:	div byte ptr [ebp - 0x21] ; pop ebx ; pop esi ; pop edi ; ret
0x080bac11:	les edx, ptr [ecx + esi] ; rcr byte ptr [ebx + 0x5e], 0xc3
0x080badcb:	call 0xfffb3d45 ; ret
0x080badfd:	add al, byte ptr [eax] ; add esp, 8 ; pop ebx ; ret
0x080bc95a:	add eax, 0x5cb8308 ; or bl, al
0x080bd39f:	or byte ptr [eax], bh ; ret 0x806 ; inc ebp ; ret
0x080bd3a3:	or byte ptr [ebp - 0x3d], al ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3af:	or byte ptr [eax], al ; ret 0x806 ; inc ebp ; ret
0x080bd3bf:	or byte ptr [eax], al ; ret 0x806 ; adc eax, ebx
0x080bd3c7:	or byte ptr [eax], al ; ret 0x806 ; or ebx, eax
0x080bd3cb:	or byte ptr [ecx], cl ; ret ; push es ; or byte ptr [ebx], bh ; ret
0x080bd3cf:	or byte ptr [ebx], bh ; ret ; push es ; or byte ptr [ecx], dh ; ret
0x080bd3d3:	or byte ptr [ecx], dh ; ret ; push es ; or byte ptr [edi], ah ; ret
0x080bd3db:	or byte ptr [0x4d0806c3], bl ; ret
0x080bd3df:	or byte ptr [ebp - 0x3d], cl ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3e3:	or byte ptr [eax - 0x3d], bh ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3ef:	or byte ptr [eax], al ; ret 0x806 ; js 0xffffffca
0x080bd41b:	or byte ptr [0x620806c3], bl ; ret
0x080bd8c2:	push es ; or byte ptr [ecx - 0x3cf7f936], bh
0x080c02c6:	add byte ptr [eax], al ; ret 0 ; add bl, al
0x080c629e:	add byte ptr [eax], al ; mov edi, 0xc3000002
0x080c6376:	add byte ptr [eax], al ; mov ebp, 0xc3000003
0x080c6792:	add byte ptr [eax], al ; mov esi, 0xc3000008
0x080c68e6:	add byte ptr [eax], al ; ror byte ptr [ecx], 0 ; add bl, al
0x080c6ce6:	add byte ptr [eax], al ; ror byte ptr [eax + eax], 0 ; ret
0x080c70e6:	add byte ptr [eax], al ; ror byte ptr [edi], 0 ; add bl, al
0x080c7f1a:	add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x080c8f12:	add dword ptr [eax], eax ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x080cb607:	or eax, 0xccccccc ; or al, 0xc3
0x080cba72:	pop es ; or byte ptr [edi - 0x19], dh ; pop es ; or bl, al
0x080cbbf2:	pop es ; or byte ptr [eax], dl ; out 7, eax ; or bl, al
0x080ce702:	add byte ptr [eax], al ; mov ebp, 0xc3080ce6
0x080cfc09:	mov bh, byte ptr [edx] ; mov eax, 0xc31e1ad9
0x080cfc45:	jno 0xfffffffe ; out -0x6b, eax ; push es ; cld ; ret
0x080cffea:	push edx ; cdq ; inc esp ; push ds ; mov ah, 0x13 ; ret
0x080d05d4:	loopne 0xffffffda ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x080d0638:	or al, 0x45 ; sub al, 0xb3 ; push edi ; cmp bl, al
0x080d0e81:	nop ; push ds ; sar ecx, 1 ; jnp 0xffffffbf ; ret
0x080d1005:	jno 0xffffffbf ; or eax, 0xc3fb67d1
0x080d1166:	int 0xdd ; je 0xffffffc9 ; xor al, 0xd8 ; ret
0x080d12c2:	inc esi ; xor dh, byte ptr [edi - 0x3cc5744c]
0x080d228f:	or eax, 0xeeb0f650 ; fcmovb st(0), st(3)
0x080d2290:	push eax ; div byte ptr [eax - 0x3c3c2512]
0x080d25e3:	jl 0xffffff8a ; outsd dx, dword ptr [esi] ; aad 8 ; stosd dword ptr es:[edi], eax ; ret
0x080d271c:	mov dl, 0x9f ; sub edi, esi ; int 0x6b ; ret
0x080d2889:	bound ebx, qword ptr [ecx] ; and eax, 0xc3714057
0x080d2cea:	mov dl, 0xed ; sub eax, 0xc322f8f6
0x080d2e62:	ficomp word ptr [edx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x080d4bd4:	int3 ; int3 ; int3 ; or al, 0x30 ; or al, 0xc3
0x080d4bd7:	or al, 0x30 ; or al, 0xc3 ; xor byte ptr [ebx + eax*8], cl
0x080d5183:	call dword ptr [ecx + 0x13fffcc2] ; ret
0x080d5187:	call dword ptr [ebx] ; ret ; cld ; jmp dword ptr [ecx - 0x3d]
0x080d518e:	cld ; inc dword ptr [ebp - 0x3c00033c]
0x080d518f:	inc dword ptr [ebp - 0x3c00033c] ; ret
0x080d587c:	add dword ptr [eax + 0xa], ecx ; push cs ; adc al, 0x41 ; ret
0x080d590b:	add ch, byte ptr [ecx + 0x41140e0a] ; ret
0x080d599c:	push cs ; xor byte ptr [esi + ecx + 0x14], cl ; inc ecx ; ret
0x080d59cb:	push cs ; adc byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d5b0c:	add cl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d5b23:	add dl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d5b64:	and byte ptr [ebx + 0xe], cl ; adc byte ptr [edi + 0xa], al ; ret
0x080d5bbf:	push cs ; adc byte ptr [ecx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d5c09:	adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080d5c36:	add dword ptr [0xa014503], -0x3d
0x080d5c46:	inc edi ; or eax, dword ptr [ebx] ; rol byte ptr [ecx], 1 ; or al, bl
0x080d5c76:	add dword ptr [0xa034903], -0x3d
0x080d5c84:	add al, 4 ; inc ecx ; or ebp, dword ptr [edx + ecx - 0x3d]
0x080d5c94:	dec ebx ; or eax, dword ptr [ebx] ; ja 6 ; or al, bl
0x080d5d0f:	push eax ; pop ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d5d26:	add al, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d5de1:	push cs ; adc byte ptr [edi + 0xe], al ; or al, 0x41 ; ret
0x080d5e0e:	add dword ptr [0xa010003], -0x3d
0x080d5e82:	push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x41 ; ret
0x080d5eee:	add dword ptr [0xa02bf03], -0x3d
0x080d5f48:	add dl, byte ptr [esi + 0x43140e0a] ; ret
0x080d6046:	xor byte ptr [ebx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080d60cf:	xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d612a:	add cl, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d6192:	add ah, byte ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d61dd:	push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d621c:	xor byte ptr [ebx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d6232:	or edx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d62c7:	or al, byte ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d6338:	xor byte ptr [ecx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080d643e:	push cs ; push eax ; dec eax ; push cs ; adc al, 0x41 ; ret
0x080d64da:	add dword ptr [0xa01a603], -0x3d
0x080d64e8:	add al, 4 ; inc esi ; or ebx, dword ptr [edx + ecx - 0x3d]
0x080d6576:	push cs ; xor byte ptr [eax + 0xe], bl ; adc al, 0x45 ; ret
0x080d6628:	add cl, ah ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d671e:	add cl, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d674c:	add bh, ah ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d67cd:	add ah, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d67e5:	cdq ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080d683d:	add al, 0x83 ; add eax, 0xc30a6e02
0x080d684b:	add al, 4 ; inc esi ; or edx, dword ptr [ebp + 0xa] ; ret
0x080d68a1:	add al, 0x83 ; add eax, 0xc30acb02
0x080d68c3:	push ebp ; add byte ptr [eax], al ; add byte ptr [ebx + eax*8], al
0x080d68da:	add dl, byte ptr [ebx + 0x2e] ; adc byte ptr [ebp + 0xa], bl ; ret
0x080d68e6:	add al, 4 ; dec ecx ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080d68f2:	add al, 4 ; inc ecx ; or eax, dword ptr [edx + ecx - 0x3d]
0x080d6960:	adc byte ptr [edx + 0xa], dl ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d696a:	or ebp, dword ptr [eax + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d69c4:	add dl, byte ptr [edi + 0xa6e202e] ; ret
0x080d69d2:	add al, 4 ; inc edi ; or esi, dword ptr [ebp + 0xa] ; ret
0x080d6a15:	xor byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d6a6a:	add dword ptr [0xa020f03], -0x3d
0x080d6a79:	add al, 0x45 ; or eax, dword ptr [edx] ; dec ebx ; or al, bl
0x080d6ac5:	add dword ptr [eax + 0xa], edx ; push cs ; adc al, 0x43 ; ret
0x080d6b0d:	add cl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d6b67:	add bl, byte ptr [edx + 0xa] ; push cs ; adc al, 0x47 ; ret
0x080d6b92:	add dword ptr [ebp + 0xa], ecx ; push cs ; adc al, 0x45 ; ret
0x080d6cb9:	and byte ptr [edx + ecx + 0xe], ah ; or al, 0x41 ; ret
0x080d6cc7:	or eax, dword ptr [ebp + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d6cde:	and byte ptr [edi + 0xa], bl ; push cs ; or al, 0x41 ; ret
0x080d6cec:	or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x46 ; ret
0x080d6d2e:	adc byte ptr [eax + 0xa], cl ; push cs ; or byte ptr [esi - 0x3d], al
0x080d6d37:	inc ecx ; or edx, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d6d9e:	add cl, byte ptr [eax + 0x41140e0a] ; ret
0x080d6db3:	inc ebx ; or esp, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d6de5:	adc byte ptr [ebx + 0xa], ah ; push cs ; or al, 0x41 ; ret
0x080d6e03:	adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x46 ; ret
0x080d6e11:	or edx, dword ptr [ecx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d6eab:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edx + 0xa], cl ; ret
0x080d6eba:	push cs ; add al, 0x45 ; or esp, dword ptr [eax + 0xa] ; ret
0x080d6f43:	xor byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d6ffc:	add dword ptr [edx + 0xa], edx ; push cs ; adc al, 0x41 ; ret
0x080d709c:	or al, byte ptr [edx] ; xchg eax, edi ; push cs ; adc al, 0x41 ; ret
0x080d70d2:	add dword ptr [0xa016e03], -0x3d
0x080d713d:	xor byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; ret
0x080d7177:	adc byte ptr [ebp + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7196:	push cs ; or byte ptr [ebx - 0x3cf5a5fe], al
0x080d719c:	ret ; push cs ; add al, 0x45 ; or eax, dword ptr [ecx - 0x3d]
0x080d71cb:	push cs ; adc byte ptr [esi + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d71f8:	adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ebx - 0x3d], al
0x080d7201:	inc ecx ; or ebx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d723d:	and byte ptr [ecx + 0xa], dh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080d7292:	add dword ptr [0xa013e03], -0x3d
0x080d72a0:	add al, 4 ; inc esi ; or eax, dword ptr [edi + 0xa] ; ret
0x080d72b1:	or esp, dword ptr [eax + 0x2e] ; adc byte ptr [edx + ecx - 0x3d], ch
0x080d7329:	add dword ptr [edx + 0xa], esi ; push cs ; adc al, 0x43 ; ret
0x080d736e:	add bl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080d7399:	add dword ptr [ebp + 0xa], ecx ; push cs ; adc al, 0x43 ; ret
0x080d7425:	adc byte ptr [edx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d742e:	inc edi ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d747d:	add cl, byte ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d750f:	and byte ptr [ebx + 0xe], cl ; adc byte ptr [esi + 0xa], ah ; ret
0x080d7558:	add dword ptr [edx + ecx + 0xe], edi ; adc al, 0x41 ; ret
0x080d75e3:	push cs ; adc byte ptr [ebx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d766f:	and byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d76b0:	add al, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d772c:	add al, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d7773:	xor byte ptr [eax + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d77ea:	or ebp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d781c:	adc byte ptr [edx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7825:	dec ecx ; or esi, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d7842:	push cs ; or byte ptr [ebx - 0x3cf597fe], al
0x080d7849:	push cs ; add al, 0x47 ; or edx, dword ptr [eax + 0xa] ; ret
0x080d784f:	ret ; push cs ; add al, 0x48 ; or eax, dword ptr [ecx - 0x3d]
0x080d788e:	and byte ptr [ecx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d78fa:	push cs ; and byte ptr [edi + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d792a:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; ret
0x080d798d:	xor byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], cl ; ret
0x080d79c3:	push cs ; adc byte ptr [esi + ecx + 8], ah ; inc ecx ; ret
0x080d7a18:	and byte ptr [edx + 0xe], bh ; adc byte ptr [ebx + 0xa], ah ; ret
0x080d7a7b:	push eax ; je 0xd ; push cs ; adc al, 0x43 ; ret
0x080d7a9a:	push eax ; dec eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7afb:	add bh, ch ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b12:	add dl, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b7b:	adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d7bbd:	adc byte ptr [ebx + 0xa570204], al ; ret
0x080d7c47:	adc byte ptr [esi + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7c90:	push cs ; adc byte ptr [ebp + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d7cc4:	add dh, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d7d9c:	xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d7e07:	and byte ptr [ebx + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080d7e78:	adc byte ptr [edx + ecx + 0xe], dh ; or byte ptr [ecx - 0x3d], al
0x080d7ead:	push cs ; and byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d7ee9:	add bl, byte ptr [eax + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7ef3:	or ecx, dword ptr [eax + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080d7efd:	or esp, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f52:	adc byte ptr [ecx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f80:	adc byte ptr [edi + 0xa], ch ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f8a:	or ecx, dword ptr [eax + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7fbc:	push cs ; adc byte ptr [ebx - 0x3cf5b3fc], al
0x080d7fd4:	and byte ptr [esi + 0xe], al ; adc byte ptr [edx + ecx - 0x3d], ah
0x080d8073:	and byte ptr [edi + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080d8088:	dec ebx ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d80e5:	and byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080d8132:	inc esi ; push cs ; adc byte ptr [edx], al ; pushal ; or al, bl
0x080d819b:	and byte ptr [esi + 0xa], ah ; push cs ; or al, 0x46 ; ret
0x080d81b1:	push cs ; and byte ptr [ebx + 0xe], cl ; or al, 0x46 ; ret
0x080d81fc:	add dword ptr [edx], 3 ; add eax, dword ptr [ecx] ; or al, bl
0x080d8202:	ret ; push cs ; add al, 0x44 ; or ecx, dword ptr [edi - 0x3d]
0x080d8241:	adc byte ptr [eax + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d824b:	or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d829d:	adc byte ptr [ebx + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080d82c4:	adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d82d9:	push cs ; adc byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d82f6:	push cs ; or byte ptr [ebx - 0x3cf58dfe], al
0x080d82fc:	ret ; push cs ; add al, 0x45 ; or eax, dword ptr [esi - 0x3d]
0x080d8358:	inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d83bd:	add dh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8475:	adc byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080d84f0:	or al, 0x83 ; add eax, dword ptr [edx] ; inc eax ; or al, bl
0x080d857f:	add ah, al ; add byte ptr cs:[eax], al ; cmp al, 0xc3
0x080d8593:	add al, bl ; add byte ptr cs:[eax], al ; cmp bl, al
0x080d85a7:	add ah, ch ; add byte ptr cs:[eax], al ; xor al, 0xc3
0x080d85bb:	add byte ptr [eax], al ; das ; add byte ptr [eax], al ; xor bl, al
0x080d85cf:	add byte ptr [edi + ebp], dl ; add byte ptr [eax], al ; sub al, 0xc3
0x080d85e3:	add byte ptr [eax], ch ; das ; add byte ptr [eax], al ; sub bl, al
0x080d85f7:	add byte ptr [edi + ebp], bh ; add byte ptr [eax], al ; and al, 0xc3
0x080d860b:	add byte ptr [eax + 0x2f], dl ; add byte ptr [eax], al ; and bl, al
0x080d861f:	add byte ptr [edi + ebp], ah ; add byte ptr [ebx + eax*8], bl
0x080d8633:	add byte ptr [eax + 0x2f], bh ; add byte ptr [eax], al ; sbb bl, al
0x080d8647:	add byte ptr [edi + ebp - 0x3cec0000], cl
0x080d865b:	add byte ptr [eax + 0x5000002f], ah ; ret
0x080d866f:	add byte ptr [edi + ebp - 0x3c840000], dh
0x080d8683:	add al, cl ; das ; add byte ptr [eax], al ; mov bl, al
0x080d8692:	push cs ; or byte ptr [ebx - 0x3cf591fe], al
0x080d8698:	ret ; push cs ; add al, 0x41 ; or ebx, dword ptr [esi - 0x3d]
0x080d86a7:	add ah, ch ; das ; add byte ptr [eax], al ; mov ah, 0xc3
0x080d8716:	add cl, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8757:	inc eax ; pop edx ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080d87a4:	inc eax ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d87ba:	or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x45 ; ret
0x080d8808:	add ah, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080d881e:	or edx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8834:	or esi, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d884b:	add ch, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d88a8:	push cs ; adc byte ptr [esi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d88f6:	and byte ptr [ebx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080d8947:	push cs ; and byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d8976:	push cs ; or byte ptr [ebx - 0x3cf595fe], al
0x080d89af:	sbb byte ptr [edx], al ; push cs ; adc al, 0x41 ; ret
0x080d89ec:	add dl, al ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8a02:	or eax, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d8aab:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], dl ; ret
0x080d8bb7:	xor byte ptr [edx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080d8c3a:	add al, ah ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080d8c71:	xor byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080d8ca3:	xor byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8cfe:	and byte ptr [edx + ecx + 0xe], dh ; adc al, 0x41 ; ret
0x080d8d14:	or edx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d8d55:	test byte ptr [ecx], al ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8d7c:	push cs ; inc eax ; add bl, byte ptr [esi + 0xe] ; add al, 0xc3
0x080d8dcc:	add cl, dl ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8de2:	or ebp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8e25:	adc byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8e85:	push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8ec4:	push eax ; dec edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8fad:	add dword ptr ds:[edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080d9000:	add bh, byte ptr [edi + 0x43140e0a] ; ret
0x080d90d9:	mov byte ptr [0x140e0a02], al ; inc ebx ; ret
0x080d910d:	mov bh, 1 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d9124:	add bl, bl ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d91dc:	add ah, cl ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d91f2:	or eax, dword ptr [edx] ; insb byte ptr es:[edi], dx ; push cs ; adc al, 0x44 ; ret
0x080d9231:	add ch, byte ptr [ebx + 0xa] ; push cs ; or byte ptr [ebp - 0x3d], al
0x080d923a:	dec esp ; or ecx, dword ptr [edi + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080d9262:	add cl, byte ptr [edx + ecx - 0x3cbaf3f2]
0x080d9271:	add cl, byte ptr [edi + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d927f:	or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x43 ; ret
0x080d92a9:	add dh, byte ptr [edx + ecx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d92b3:	or esp, dword ptr [edx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d92bc:	dec ebx ; or ebp, dword ptr [edi + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d92f0:	add cl, byte ptr [ebx + 0x41140e0a] ; ret
0x080d9308:	cmp byte ptr [ecx], al ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d93ae:	inc eax ; jno 0xd ; push cs ; adc al, 0x41 ; ret
0x080d93c4:	or esp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d9441:	add byte ptr [ecx], 0xa ; push cs ; adc al, 0x43 ; ret
0x080d9457:	or esi, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x45 ; ret
0x080d9495:	adc byte ptr [ebx + 0xa], ch ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d949e:	inc ecx ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d94d3:	push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; pop ebp ; ret
0x080d9506:	push cs ; or byte ptr [ebx - 0x3c9bfdfe], al
0x080d9546:	add al, byte ptr [ebp + 0x410c0e0a] ; ret
0x080d95a1:	lahf ; add dword ptr [edx], ecx ; push cs ; or al, 0x41 ; ret
0x080d95cd:	adc byte ptr [ebx + 0xab70204], al ; ret
0x080d95e6:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9604:	and byte ptr [ebp + 0xe], al ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9678:	add ah, byte ptr [esi + 0x43140e0a] ; ret
0x080d96a9:	xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080d9705:	xor byte ptr [ebx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d9770:	add dh, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d97a3:	and byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d9803:	xor byte ptr [eax + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080d9819:	or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x44 ; ret
0x080d982f:	or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d9869:	add bh, byte ptr [ecx + 0x43080e0a] ; ret
0x080d989c:	add bh, byte ptr [edx + ecx - 0x3cbeebf2]
0x080d9a0c:	adc byte ptr [esi + 0xa], bl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d9a15:	dec ebp ; or ecx, dword ptr [esi + ecx + 8] ; inc ecx ; ret
0x080d9a3d:	adc byte ptr [eax + 0xa], dh ; push cs ; or al, 0x41 ; ret
0x080d9a95:	mov word ptr [ebx], es ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d9aac:	add bl, byte ptr [edi + 0x46140e0a] ; ret
0x080d9b04:	push cs ; adc byte ptr [ebx - 0x3cf595fc], al
0x080d9b13:	push cs ; add al, 0x4c ; or ecx, dword ptr [edi + 0xa] ; ret
0x080d9b50:	add bh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d9bb4:	add bh, byte ptr [esi + 0x43140e0a] ; ret
0x080d9c56:	push cs ; jo 0x57 ; push cs ; adc al, 0x41 ; ret
0x080d9d5e:	mov al, 0x12 ; dec ebx ; push cs ; adc al, 0x43 ; ret
0x080d9dcc:	adc byte ptr [edx + ecx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d9dd5:	dec edx ; or edi, dword ptr [ebx + 0xe] ; or byte ptr [esi - 0x3d], al
0x080d9e53:	adc eax, dword ptr [eax*8 - 0x3cfaecbf]
0x080d9ed1:	add dword ptr [edx + eax], 0x73 ; push cs ; or al, 0xc3
0x080d9f60:	add bh, byte ptr [ebx + 0x41140e0a] ; ret
0x080d9fcc:	in eax, dx ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080d9ff8:	add dl, byte ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080da04f:	jo 0x45 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080da076:	add dh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080da123:	or byte ptr [ebx + 0x40e5b02], al ; ret
0x080da12c:	or byte ptr [ebx + 0x40e4602], al ; ret
0x080da140:	push cs ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da180:	push cs ; or dh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da251:	add dword ptr [edx + eax], 0x77 ; push cs ; or al, 0xc3
0x080da2e9:	or byte ptr [ebx + 0x40e4f02], al ; ret
0x080da2f4:	add dword ptr [edx], 2 ; movsb byte ptr es:[edi], byte ptr [esi] ; push cs ; add al, 0xc3
0x080da5d2:	or al, 0x83 ; add ecx, dword ptr [esi + 0xe] ; or bl, al
0x080da611:	push cs ; or bh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da65c:	push cs ; adc byte ptr [ebx - 0x3c53fdfc], al
0x080da683:	or byte ptr [ebx + 0x40e4902], al ; ret
0x080da8a4:	add al, byte ptr [ebx] ; bound eax, qword ptr [edx] ; push cs ; add al, 0xc3
0x080da8c2:	add dword ptr [edx], 2 ; popfd ; push cs ; add al, 0xc3
0x080da8cb:	or byte ptr [ebx + 0x40e6a02], al ; ret
0x080da8e8:	add dword ptr [edx], 2 ; push 0xe ; add al, 0xc3
0x080da8f1:	or byte ptr [ebx + 0x40e4702], al ; ret
0x080da8fb:	add dword ptr [edx], 2 ; int 0xe ; add al, 0xc3
0x080da905:	add dword ptr [edx], 2 ; mov byte ptr [esi], cl ; add al, 0xc3
0x080da919:	add dword ptr [edx], 2 ; lodsd eax, dword ptr [esi] ; push cs ; add al, 0xc3
0x080da923:	add dword ptr [edx], 2 ; jge 0x13 ; add al, 0xc3
0x080da92d:	add dword ptr [edx], 2 ; jl 0x13 ; add al, 0xc3
0x080da937:	add dword ptr [edx], 2 ; mov cl, byte ptr [esi] ; add al, 0xc3
0x080da94b:	add dword ptr [edx], 2 ; xchg dword ptr [esi], ecx ; add al, 0xc3
0x080da955:	add dword ptr [edx], 2 ; mov word ptr [esi], cs ; add al, 0xc3
0x080da973:	add dword ptr [edx], 2 ; xchg eax, edi ; push cs ; add al, 0xc3
0x080da97d:	add dword ptr [edx], 2 ; pushfd ; push cs ; add al, 0xc3
0x080da987:	add dword ptr [edx], 2 ; stosb byte ptr es:[edi], al ; push cs ; add al, 0xc3
0x080da99b:	add dword ptr [edx], 2 ; mov ecx, dword ptr [esi] ; add al, 0xc3
0x080da9a4:	or byte ptr [ebx + 0x40e7302], al ; ret
0x080da9ad:	or byte ptr [ebx + 0x40e6602], al ; ret
0x080dab3f:	add eax, dword ptr [ebx] ; int3 ; add dword ptr [esi], ecx ; or bl, al
0x080dafcc:	push cs ; adc byte ptr [ebx - 0x3cf581fc], al
0x080db0b8:	add dword ptr [0x100ea002], -0x3d
0x080db0c7:	adc dh, al ; add ch, byte ptr [edx + 0xe] ; or al, 0xc3
0x080db0dc:	add dword ptr [esi], 2 ; stosd dword ptr es:[edi], eax ; push cs ; adc al, 0xc3
0x080db0e9:	push cs ; or al, 0xc6 ; inc ecx ; push cs ; or bl, al
0x080db0f3:	add dword ptr [ebx], 2 ; pop esi ; push cs ; or bl, al
0x080db0f9:	ret ; add ebx, esp ; add cl, byte ptr [esi] ; add al, 0xc3
0x080db148:	add dword ptr cs:[edx], ecx ; push cs ; adc al, 0x4a ; ret
0x080db15e:	or esp, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080db1df:	inc eax ; add dl, byte ptr [esi + ecx + 0x14] ; inc ecx ; ret
0x080db1fd:	xchg dword ptr [ebx], eax ; inc ebx ; push cs ; adc al, 0x43 ; ret
0x080db232:	add cl, byte ptr [ecx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080db28b:	inc eax ; push esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db2a2:	add bh, dl ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db2f0:	push cs ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080db37e:	add al, byte ptr [ecx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080db3c8:	adc byte ptr [ecx + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080db3d6:	or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x46 ; ret
0x080db405:	add al, 0x83 ; add eax, 0xc30ab702
0x080db450:	add ch, byte ptr [esi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080db46f:	pushal ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db491:	pushal ; or cl, byte ptr [0x4614] ; ret
0x080db4b5:	mov esp, 0x140e0a02 ; inc ecx ; ret
0x080db512:	push cs ; or byte ptr [ebx - 0x3cf5a4fe], al
0x080db518:	ret ; push cs ; add al, 0x44 ; or eax, dword ptr [ecx - 0x3d]
0x080db55b:	or byte ptr [ebx + 0x40e5802], al ; ret
0x080db567:	or al, 0x83 ; add ebx, dword ptr [eax + 0xe] ; or bl, al
0x080db5ed:	dec edx ; or ecx, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080db615:	and byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080db66f:	add al, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080db691:	add dword ptr [edx + ecx + 0xe], ebx ; adc al, 0x43 ; ret
0x080db82d:	adc byte ptr [ebp + 0xa], bh ; push cs ; or al, 0x43 ; ret
0x080db84d:	adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x43 ; ret
0x080db8cf:	lds ecx, ptr [esi] ; add al, 0x42 ; or eax, dword ptr [esi - 0x3d]
0x080db90c:	add dl, byte ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080db921:	inc ebx ; or ecx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080dba12:	push cs ; and byte ptr [ebp + 0xe], cl ; or al, 0x41 ; ret
0x080dba48:	add dh, byte ptr [edx + 0x41140e0a] ; ret
0x080dbada:	xor byte ptr [ecx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080dbb30:	and byte ptr [ebp + 0xe], al ; adc byte ptr [esi + 0xa], dl ; ret
0x080dbb6d:	add al, 0x83 ; add eax, 0xc30a7f02
0x080dbb7d:	inc edx ; or eax, dword ptr [ebx] ; rol dword ptr [ecx], 1 ; or al, bl
0x080dbbeb:	xor byte ptr [eax + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080dbc5d:	adc byte ptr [edx], al ; inc ebx ; push cs ; or al, 0x41 ; ret
0x080dbc72:	add byte ptr [eax], al ; insb byte ptr es:[edi], dx ; sub ecx, edi ; inc ebx
0x080dbc8a:	add dword ptr [0xa012103], -0x3d
0x080dbc99:	add al, 0x43 ; or eax, dword ptr [edx] ; loop 0x10 ; ret
0x080dbd91:	adc byte ptr [esi + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dbdf5:	adc byte ptr [ebx + 0xc0e6004], al ; ret
0x080dbe7d:	push cs ; or cl, al ; inc ecx ; push cs ; add al, 0xc3
0x080dbe9c:	adc byte ptr [edx + ecx + 0xe], ch ; or byte ptr [ecx - 0x3d], al
0x080dbece:	push cs ; and byte ptr [esi + 0xe], ah ; adc al, 0x41 ; ret
0x080dbf41:	add al, 0x83 ; add eax, 0xc30a9f02
0x080dbf4f:	add al, 4 ; inc ebp ; or ecx, dword ptr [ebx + 0xa] ; ret
0x080dbfee:	add dword ptr [eax + 0xa], ebp ; push cs ; adc al, 0x41 ; ret
0x080dc0b0:	add ebx, dword ptr [edx + eax] ; push cs ; adc al, 0x41 ; ret
0x080dc15a:	add cl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080dc19d:	add ch, byte ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dc253:	push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dc289:	adc byte ptr [ebx + 0xa400204], al ; ret
0x080dc2f8:	add ah, byte ptr [edx + 0xa] ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dc30a:	or edx, dword ptr [eax + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dc3d2:	add dword ptr [0xa015303], -0x3d
0x080dc42c:	push cs ; xor byte ptr [ebp + 0xe], ah ; adc al, 0x43 ; ret
0x080dc4b8:	push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x45 ; ret
0x080dc53d:	and byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080dc5ea:	adc byte ptr [ebp + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dc5f7:	dec eax ; or eax, dword ptr [ebx + 0xe] ; or al, 0x41 ; ret
0x080dc652:	adc byte ptr [esi + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080dc68e:	add dword ptr [0xa076903], -0x3d
0x080dc69d:	add al, 0x46 ; or eax, dword ptr [edx] ; dec byte ptr [edx] ; ret
0x080dc6e3:	xor byte ptr [eax + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080dc781:	inc eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc7f7:	inc eax ; push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc837:	and byte ptr [edx], al ; push 0xc343140e
0x080dc89b:	xor byte ptr [edx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080dc8da:	push cs ; xor byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dc90d:	add al, 0x83 ; add eax, 0xc30a6502
0x080dc949:	adc byte ptr [eax + 0xa], dl ; push cs ; or al, 0x43 ; ret
0x080dc956:	inc edi ; or eax, dword ptr [ebx + 0xe] ; or al, 0x46 ; ret
0x080dc9b4:	push cs ; and byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dc9e9:	add al, 0x83 ; add eax, 0xc30a4c02
0x080dca1a:	add dword ptr [0xa023803], -0x3d
0x080dca63:	push cs ; and byte ptr [ebx + 0xb], cl ; add bl, byte ptr [ebp - 0x3d]
0x080dcab0:	add bh, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dcac8:	lahf ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080dcb01:	add al, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080dcb4f:	or ecx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dcc88:	add bh, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dccaf:	add cl, byte ptr [ebp + 0x41140e0a] ; ret
0x080dcd37:	add bh, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dce7c:	add al, byte ptr [eax + 0x41140e0a] ; ret
0x080dceb4:	push eax ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dd434:	add bh, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080dd7cd:	xchg eax, edx ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080dd7e3:	or edx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080dd848:	add bl, byte ptr [eax + 0x41140e0a] ; ret
0x080dd89a:	inc eax ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080dd8af:	inc esp ; or ebx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080dd8e1:	add al, 0x83 ; add eax, 0xc30abc02
0x080dd8ee:	or al, 4 ; add al, 0x4b ; or ecx, dword ptr [ecx - 0x3d]
0x080dd9bb:	jo 0x4f ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dd9f1:	jo 0x50 ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dda42:	and byte ptr [edi + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dda53:	inc edi ; or ebx, dword ptr [esi + ecx + 0x10] ; inc ecx ; ret
0x080dda8c:	add dl, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080ddb24:	push cs ; adc byte ptr [edi + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080ddb68:	adc byte ptr [eax + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080ddbf7:	xor byte ptr [edi + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080ddc0d:	or ebx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080ddc50:	xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x45 ; ret
0x080ddcf5:	xor byte ptr [edi + 0xa], cl ; push cs ; adc al, 0x43 ; ret
0x080ddd2c:	xor byte ptr [ebx + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080ddda1:	push cs ; and byte ptr [eax + 0xe], dl ; adc byte ptr [ebp - 0x3d], al
0x080dde73:	add dword ptr [esi + 0xa], eax ; push cs ; adc al, 0x41 ; ret
0x080dde89:	or edx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080de018:	add dl, byte ptr [edx + 0x41140e0a] ; ret
0x080de02c:	add al, 0x48 ; or esp, dword ptr [ebx + 0xe] ; add al, 0xc3
0x080de055:	add al, 0x83 ; add eax, 0xc30a5902
0x080de063:	add al, 4 ; inc esi ; or ebp, dword ptr [ecx + 0xa] ; ret
0x080de0be:	add ah, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080de109:	add al, 0x83 ; add eax, 0xc30ad002
0x080de118:	add al, 0x42 ; or eax, dword ptr [edx] ; inc ebx ; or al, bl
0x080de1a9:	add al, 0x83 ; add eax, 0xc30a6802
0x080de1b9:	dec ecx ; or eax, dword ptr [ebx] ; dec ecx ; add ecx, dword ptr [edx] ; ret
0x080de21b:	and byte ptr [edx + 0xe], dl ; adc byte ptr [ebp + 0xa], al ; ret
0x080de24e:	push cs ; or byte ptr [ebx - 0x3cf584fe], al
0x080de2ee:	push cs ; or byte ptr [ebx - 0x3cf581fe], al
0x080de2f4:	ret ; push cs ; add al, 0x41 ; or ebx, dword ptr [ecx - 0x3d]
0x080de329:	add bl, ah ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de33e:	inc esp ; or esi, dword ptr [ebx + 0xe] ; adc al, 0x41 ; ret
0x080de366:	push cs ; or byte ptr [ebx - 0x3cf5b2fe], al
0x080de36c:	ret ; push cs ; add al, 0x4a ; or edx, dword ptr [edx - 0x3d]
0x080de39c:	add al, byte ptr [ecx + 0xa] ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080de3ad:	inc esi ; or esi, dword ptr [eax + 0xe] ; adc byte ptr [ecx - 0x3d], al
0x080de43a:	add cl, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de4b2:	add dword ptr [0xa013603], -0x3d
0x080de4f7:	adc byte ptr [ebx + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080de500:	inc esi ; or ecx, dword ptr [edi + 0xe] ; or byte ptr [esi - 0x3d], al
0x080de557:	and byte ptr [esi + 0xa], dh ; push cs ; adc al, 0x43 ; ret
0x080de56c:	inc ebp ; or esp, dword ptr [edi + 0xe] ; adc al, 0x46 ; ret
0x080de6e1:	adc byte ptr [ebx + 0xa480204], al ; ret
0x080de6f0:	push cs ; add al, 0x46 ; or eax, dword ptr [edx] ; pushal ; ret
0x080de72d:	dec esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080de743:	or esp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080de787:	push cs ; sbb al, 0x71 ; push cs ; or al, 0x43 ; ret
0x080de7c2:	push cs ; xor byte ptr [ebp + 0xe], dh ; or al, 0x43 ; ret
0x080de7e7:	push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; dec ecx ; ret
0x080de84f:	and byte ptr [edx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080de893:	add al, 0x4c ; or eax, dword ptr [edx] ; lodsd eax, dword ptr [esi] ; or al, bl
0x080de8c6:	add dword ptr [0xa018203], -0x3d
0x080de8f6:	add dword ptr [0xa075e03], -0x3d
0x080de925:	add al, 0x83 ; add eax, 0xc30ae502
0x080de9be:	inc ecx ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dea03:	and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xa], dl ; ret
0x080dea2b:	dec esi ; push cs ; adc byte ptr [edx], al ; dec edx ; or al, bl
0x080dea49:	and byte ptr [ebx + 0xe], cl ; adc byte ptr [ebp + 0xa], al ; ret
0x080dea58:	push cs ; add al, 0x42 ; or ebx, dword ptr [ecx + 0xa] ; ret
0x080dea8a:	add dword ptr [0xa016903], -0x3d
0x080deab3:	push cs ; or al, 0x83 ; add ebp, dword ptr [esi + 0xa] ; ret
0x080deaea:	add dword ptr [0xa060903], -0x3d
0x080deafa:	dec eax ; or eax, dword ptr [ebx] ; lahf ; add dword ptr [edx], ecx ; ret
0x080deb08:	add al, 4 ; inc esi ; or eax, dword ptr [esi + 0xa] ; ret
0x080deb6d:	add bh, byte ptr [eax + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080debfc:	add dl, byte ptr [edx + ecx + 0xe] ; adc al, 0x46 ; ret
0x080decf9:	add dh, byte ptr [edx + ecx - 0x3cbeebf2]
0x080def9b:	push cs ; and byte ptr [eax + 0xe], cl ; or al, 0x41 ; ret
0x080defdd:	and byte ptr [eax + 0xe], dl ; adc byte ptr [esi + 0xa], ah ; ret
0x080defec:	push cs ; add al, 0x48 ; or edx, dword ptr [edx + 0xa] ; ret
0x080df034:	add cl, bl ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080df049:	inc ecx ; or ecx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080df11c:	push cs ; adc byte ptr [ebx - 0x3cb8fdfc], al
0x080df157:	and byte ptr [edi + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080df16d:	or ecx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080df1cf:	add al, 0x49 ; or eax, dword ptr [edx] ; mov byte ptr [edx], cl ; ret
0x080df201:	add al, 0x83 ; add eax, 0xc30ae002
0x080df20f:	add al, 4 ; inc edi ; or eax, dword ptr [edx] ; inc edx ; ret
0x080df26e:	add dword ptr [0xa016203], -0x3d
0x080df27c:	add al, 4 ; inc edi ; or edx, dword ptr [ecx + 0xa] ; ret
0x080df28b:	add al, 0x44 ; or eax, dword ptr [edx] ; insd dword ptr es:[edi], dx ; or al, bl
0x080df339:	add al, byte ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080df34f:	or eax, dword ptr [edx] ; dec esi ; push cs ; adc al, 0x46 ; ret
0x080df394:	push cs ; adc byte ptr [ebx - 0x3cb6fdfc], al
0x080df40e:	and byte ptr [eax + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080df444:	push cs ; adc byte ptr [ebx - 0x3cadfdfc], al
0x080df49d:	and byte ptr [eax + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080df521:	jo 0x4a ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080df533:	or edi, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080df574:	add ch, byte ptr [edi + 0x2e] ; adc byte ptr [ebp + 0xa], bl ; ret
0x080df582:	add al, 4 ; dec eax ; or edi, dword ptr [edi + 0xa] ; ret
0x080df5c9:	adc byte ptr [eax + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080df611:	add al, 0x83 ; add eax, 0xc30a7c02
0x080df622:	or edx, dword ptr [ebp + 0x2e] ; adc byte ptr [eax + 0xa], ch ; ret
0x080df630:	add al, 4 ; dec eax ; or eax, dword ptr [esi + 0xa] ; ret
0x080df665:	add al, 0x83 ; add eax, 0xc30a7702
0x080df673:	add al, 4 ; dec ebx ; or edx, dword ptr [eax + 0xa] ; ret
0x080df686:	mov eax, 0xab02102e ; or al, bl
0x080df6e7:	xor byte ptr [esi + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080df70c:	xor byte ptr [ecx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080df793:	xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x43 ; ret
0x080df7b7:	push cs ; xor byte ptr [ebp + 0xe], al ; adc al, 0x43 ; ret
0x080df803:	pushal ; dec edx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080df827:	push cs ; pushal ; inc ebp ; push cs ; adc al, 0x43 ; ret
0x080df94a:	or ecx, dword ptr [ecx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080df988:	add dl, byte ptr [eax + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080df9bc:	xor byte ptr [edi + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080df9fd:	adc byte ptr [edi + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfa31:	push cs ; adc byte ptr [ecx + 0xe], bl ; or byte ptr [ebx - 0x3d], al
0x080dfa64:	push cs ; adc byte ptr [esi + ecx + 0xc], dl ; inc ecx ; ret
0x080dfab8:	xor byte ptr [edx + ecx + 0xe], bl ; adc al, 0x41 ; ret
0x080dfacd:	inc ebx ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080dfb79:	adc byte ptr [esi + 0xa], dh ; push cs ; or al, 0x41 ; ret
0x080dfbb1:	push cs ; and byte ptr [eax + 0xe], ah ; or byte ptr [ecx - 0x3d], al
0x080dfbde:	add ch, byte ptr [edx + ecx + 0xe] ; or al, 0x46 ; ret
0x080dfc16:	adc byte ptr [eax + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dfc23:	dec ebx ; or ecx, dword ptr [edx + 0xe] ; or al, 0x41 ; ret
0x080dfc4e:	add cl, byte ptr [edx + ecx + 0xe] ; or al, 0x46 ; ret
0x080dfc7d:	adc byte ptr [ebp + 0xa], bh ; push cs ; or al, 0x41 ; ret
0x080dfc93:	push cs ; adc byte ptr [eax + 0xe], dl ; or al, 0x41 ; ret
0x080dfcd1:	xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080dfd1c:	adc byte ptr [ebx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfd40:	adc byte ptr [ecx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfd70:	ret ; push cs ; add al, 0x45 ; or ecx, dword ptr [ecx - 0x3d]
0x080dfda7:	or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x41 ; ret
0x080dfdec:	or al, 0x83 ; add eax, dword ptr [edx] ; dec ecx ; or al, bl
0x080dfdf7:	push cs ; add al, 0x44 ; or eax, dword ptr [edx] ; push esi ; ret
0x080dfe97:	and byte ptr [ecx + 0xa], bl ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dfea9:	or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dfeba:	inc ebp ; or eax, dword ptr [edi + 0xe] ; adc byte ptr [ebx - 0x3d], al
0x080dff0f:	and byte ptr [esi + 0xa], dl ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e0011:	das ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080e012a:	inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e016a:	inc eax ; or cl, byte ptr [0x4114] ; ret
0x080e028b:	push esi ; add cl, byte ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e02a1:	or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e0300:	add al, byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0336:	add ch, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0390:	and byte ptr [ecx + 0xa], dl ; push cs ; adc al, 0x43 ; ret
0x080e03a5:	inc ebp ; or esp, dword ptr [ecx + 0xe] ; adc al, 0x43 ; ret
0x080e03f6:	add bl, byte ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e0431:	inc esp ; push cs ; or al, 0xc6 ; push cs ; or bl, al
0x080e0442:	dec ecx ; push cs ; or al, 0xc6 ; push cs ; or bl, al
0x080e0462:	add dword ptr [edx + eax], 0x7f ; push cs ; or al, 0xc3
0x080e0473:	adc byte ptr [esi + 0xc0e4204], al ; ret
0x080e048d:	xchg byte ptr [edx + eax], al ; push esi ; push cs ; or al, 0xc3
0x080e049e:	adc byte ptr [esi + 0xc0e7504], al ; ret
0x080e04af:	adc byte ptr [esi + 0xc0e7104], al ; ret
0x080e04c0:	adc byte ptr [esi + 0xc0e7304], al ; ret
0x080e04d1:	adc byte ptr [esi + 0xc0e4d04], al ; ret
0x080e04e2:	adc byte ptr [esi + 0xc0e4a04], al ; ret
0x080e0537:	adc byte ptr [esi + 0xc0e4f04], al ; ret
0x080e06e5:	inc edi ; push cs ; or al, 0xc6 ; push cs ; or bl, al
0x080e06ff:	dec ebp ; push cs ; or al, 0xc6 ; push cs ; or bl, al
0x080e0728:	add dword ptr [edx + eax], -0x7c ; push cs ; or al, 0xc3
0x080e0741:	adc byte ptr [esi + 0xc0e7204], al ; ret
0x080e08e8:	or al, 0x83 ; add eax, dword ptr [edx] ; jp 0x10 ; ret
0x080e08f3:	push cs ; add al, 0x43 ; or ecx, dword ptr [eax + 0xa] ; ret
0x080e0993:	push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; pop esp ; ret
0x080e09d8:	inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e0a74:	or ebx, dword ptr [eax + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e0aa8:	push eax ; imul ecx, dword ptr [edx], 0xc341100e
0x080e0b3d:	add ch, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080e0b53:	or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e0bff:	or byte ptr [ebx + 0xa6e0202], al ; ret
0x080e0c06:	push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0c0d:	push cs ; add al, 0x41 ; or eax, dword ptr [esi + 0xa] ; ret
0x080e0c13:	ret ; push cs ; add al, 0x41 ; or eax, dword ptr [esi - 0x3d]
0x080e0c8a:	add dh, byte ptr [ebx + 0x43140e0a] ; ret
0x080e0d4b:	or byte ptr [ebx + 0xa4c0202], al ; ret
0x080e0d52:	push cs ; add al, 0x43 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0d59:	push cs ; add al, 0x45 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0dd9:	inc byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0def:	or ebx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e0e2a:	push cs ; adc byte ptr [eax + 0xe], bl ; or al, 0x41 ; ret
0x080e0e86:	xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e0eb4:	xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080e0ef3:	and byte ptr [esi + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080e0f09:	or eax, dword ptr [edx] ; push ebp ; push cs ; adc al, 0x41 ; ret
0x080e0f96:	xor byte ptr [edx + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080e0ffd:	add bl, byte ptr [edx + 0x41140e0a] ; ret
0x080e1066:	push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ebp - 0x3d], al
0x080e10c8:	push cs ; adc byte ptr [ebx - 0x3cf5b6fc], al
0x080e110b:	dec eax ; push cs ; adc byte ptr [edx], al ; pop ebx ; or al, bl
0x080e1155:	adc byte ptr [ebx + 0xa690204], al ; ret
0x080e11c2:	and byte ptr [edi + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e11e9:	and byte ptr [edx + 0xa], ch ; push cs ; adc byte ptr [ebx - 0x3d], al
0x080e1518:	add word ptr [edx], cx ; push cs ; adc al, 0x41 ; ret
0x080e152d:	inc ecx ; or ecx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e158d:	add bl, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e159f:	lds ecx, ptr [esi] ; add al, 0x46 ; or eax, dword ptr [edx] ; ret
0x080e163d:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], ch ; ret
0x080e169f:	jo 0x45 ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080e16ac:	inc ebp ; or ebx, dword ptr [edx + 0xe] ; or al, 0x43 ; ret
0x080e16d3:	push cs ; adc byte ptr [eax + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e16fc:	adc byte ptr [ebx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e1706:	or ecx, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e173f:	or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e1774:	add dl, byte ptr [ebp + 0x43140e0a] ; ret
0x080e17ac:	push cs ; and byte ptr [ebp + 0xe], bh ; or byte ptr [ecx - 0x3d], al
0x080e17f4:	xor byte ptr [edx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e1809:	dec ecx ; or edx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e1963:	push cs ; or al, 0x83 ; add ebp, dword ptr [edx + 0xa] ; ret
0x080e196e:	push cs ; add al, 0x4b ; or eax, dword ptr [ecx + 0xa] ; ret
0x080e19b7:	add byte ptr [eax + eax], bl ; add byte ptr [eax], al ; add bl, al
0x080e19c8:	add byte ptr [edx + 9], dh ; add eax, dword ptr [edx] ; push ecx ; ret
0x080e19d7:	add byte ptr [eax + eax], bl ; add byte ptr [eax], al ; and bl, al
0x080e19f7:	add byte ptr [eax], bh ; add byte ptr [eax], al ; add byte ptr [eax - 0x3d], al
0x080e1a24:	inc eax ; pop ebx ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080e1a83:	add byte ptr [eax], ch ; add byte ptr [eax], al ; int3 ; ret
0x080e1ac3:	and byte ptr [esi + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e1ad8:	inc edi ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080e1b07:	push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; inc ecx ; ret
0x080e1bbe:	adc al, 0x83 ; add eax, 0xc30a4e02
0x080e1bd1:	push cs ; add al, 0x47 ; or ecx, dword ptr [ecx + 0xa] ; ret
0x080e1be4:	push cs ; add al, 0x44 ; or esi, dword ptr [edi + 0xa] ; ret
0x080e1c29:	inc esp ; or ebp, dword ptr [eax + 0xc] ; add al, 4 ; ret
0x080e1ca1:	and byte ptr [esi + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e1d4a:	add dword ptr [0xa01f703], -0x3d
0x080e1d59:	add al, 0x48 ; or eax, dword ptr [edx] ; out 0xa, al ; ret
0x080e1d8a:	add dword ptr [0xa01e303], -0x3d
0x080e1d99:	add al, 0x46 ; or eax, dword ptr [edx] ; push eax ; or al, bl
0x080e1dc9:	add al, 0x83 ; add eax, 0xc30afb02
0x080e1e12:	push cs ; and byte ptr [ecx + 0xe], bl ; adc al, 0x41 ; ret
0x080e1e8a:	push cs ; xor byte ptr [edi + 0xe], al ; adc al, 0x43 ; ret
0x080e1ed5:	add dh, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080e1f10:	add al, ah ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e205b:	inc eax ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e20c4:	xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x46 ; ret
0x080e20da:	or edx, dword ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e20f9:	xor byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e21a1:	add al, 0x5c ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e21d4:	add al, 0x48 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e222a:	add al, 0x46 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e2511:	cmp eax, dword ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e2563:	jo 0x52 ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080e2636:	add dword ptr [0xa013c03], -0x3d
0x080e2799:	adc byte ptr [ebx + 0xa770204], al ; ret
0x080e27b1:	and byte ptr [ecx + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; ret
0x080e27e8:	adc byte ptr [ebp + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e2860:	adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080e28c2:	add dword ptr [0xa042003], -0x3d
0x080e28f2:	add dword ptr [0xa032f03], -0x3d
0x080e2902:	dec eax ; or eax, dword ptr [ebx] ; loope 7 ; or al, bl
0x080e2a6a:	add dword ptr [ebx + 0xa], ebp ; push cs ; or al, 0x43 ; ret
0x080e2a77:	inc ebp ; or edx, dword ptr [esi + ecx + 0xc] ; inc ebx ; ret
0x080e2ab0:	push cs ; inc eax ; push ecx ; push cs ; adc al, 0x41 ; ret
0x080e2ae6:	add dword ptr [0xa011403], -0x3d
0x080e2b3e:	jo 0x47 ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e2b50:	or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [eax - 0x3d], cl
0x080e2c12:	adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x46 ; ret
0x080e2c1f:	inc ebp ; or eax, dword ptr [ebx + 0xe] ; or al, 0x43 ; ret
0x080e2c44:	or al, 0x83 ; add eax, dword ptr [edx] ; inc esi ; or al, bl
0x080e2c7a:	adc byte ptr [edi + 0xa], cl ; push cs ; or al, 0x43 ; ret
0x080e2cdf:	or ebp, dword ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e2d5b:	add al, byte ptr [edx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080e2d69:	or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x43 ; ret
0x080e2dd7:	or ebx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e2e5a:	dec eax ; push cs ; inc eax ; dec edx ; push cs ; add al, 0xc3
0x080e2ef8:	push cs ; adc byte ptr [ebx - 0x3cf597fc], al
0x080e2f3f:	and byte ptr [esi + 0xa], bh ; push cs ; adc al, 0x41 ; ret
0x080e2fc8:	and byte ptr [edx + ecx + 0xe], ah ; adc byte ptr [ebx - 0x3d], al
0x080e2fda:	or eax, dword ptr [esi + 0xa] ; push cs ; adc byte ptr [eax - 0x3d], cl
0x080e300c:	and byte ptr [ebx + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e3051:	adc byte ptr [ebp + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e30a4:	adc byte ptr [edx + ecx + 0xe], dl ; or al, 0x41 ; ret
0x080e3181:	adc byte ptr [edx], al ; push ebx ; push cs ; or al, 0x41 ; ret
0x080e31c1:	add al, 0x83 ; add eax, 0xc30ace02
0x080e322b:	xor byte ptr [esi + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e326a:	add dword ptr [0xa030903], -0x3d
0x080e32ac:	and byte ptr [ebx + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080e32c2:	or esi, dword ptr [edx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e3311:	add al, 0x83 ; add eax, 0xc30a4802
0x080e3351:	adc byte ptr [edi + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e335b:	or ecx, dword ptr [edx + ecx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e3420:	add ch, byte ptr [edi + 0x41140e0a] ; ret
0x080e3436:	or ebp, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e344c:	or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e3477:	inc ecx ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e34aa:	add dword ptr [0xa010903], -0x3d
0x080e34ba:	dec ebx ; or eax, dword ptr [ebx] ; sbb eax, dword ptr [edx] ; or al, bl
0x080e3509:	and byte ptr [esi + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080e3798:	push cs ; xor byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e3836:	and byte ptr [esi + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080e3843:	inc edx ; or eax, dword ptr [ebx + 0xe] ; or al, 0x43 ; ret
0x080e387e:	push cs ; sub al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e38ba:	push cs ; sbb al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e39e4:	adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ebx - 0x3d], al
0x080e39fc:	push cs ; adc byte ptr [esi + 0xe], cl ; or byte ptr [ebx - 0x3d], al
0x080e3a4b:	push cs ; or al, 0x83 ; add esi, dword ptr [ebx + 0xa] ; ret
0x080e3aab:	push eax ; push 0x41140e0a ; ret
0x080e3ac1:	or ecx, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e3ad9:	adc al, byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3b4f:	imul ecx, dword ptr [esi], 0xc0e4110 ; ret
0x080e3b5d:	mov dword ptr [ecx + 0xb], 0xc30c0e45
0x080e3b93:	arpl word ptr [esi], cx ; adc byte ptr [ecx + 0xe], al ; or al, 0xc3
0x080e3bcd:	add al, 0x83 ; add eax, 0xc30ab602
0x080e3bdc:	add al, 0x46 ; or eax, dword ptr [edx] ; outsb dx, byte ptr [esi] ; or al, bl
0x080e3c16:	dec edx ; test dword ptr [edi + edx*2], eax ; push cs ; adc bl, al
0x080e3c80:	and byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e3cef:	inc eax ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e4001:	inc esp ; add dword ptr [ebx], 0x7b ; or al, ch ; ret
0x080e4009:	add al, 4 ; inc esi ; or edx, dword ptr [edx + 0xa] ; ret
0x080e4062:	add al, 0x83 ; add eax, 0xc3100e74
0x080e409a:	adc al, 0x83 ; add eax, 0xc30a8002
0x080e40ad:	push cs ; add al, 0x49 ; or ecx, dword ptr [edx + 0xa] ; ret
0x080e40c0:	push cs ; add al, 0x46 ; or esi, dword ptr [edx + ecx - 0x3d]
0x080e4116:	or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e412c:	or ebp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e4141:	inc ebp ; or edx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080e4180:	add ch, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e4198:	pop es ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e4224:	rol byte ptr [ecx], 1 ; dec ebx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4266:	add dl, byte ptr [eax + 0x2e] ; and byte ptr [edx + 0xa], ah ; ret
0x080e4272:	add al, 4 ; inc edi ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080e42a9:	dec ebp ; and byte ptr cs:[edx], al ; js 0x10 ; ret
0x080e42b7:	add al, 4 ; inc edi ; or esp, dword ptr [edx + 0xa] ; ret
0x080e4368:	and byte ptr [esi + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e4492:	adc al, 0x4b ; push cs ; adc byte ptr [edi + 0xa], al ; ret
0x080e4592:	or ecx, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e45a6:	or eax, dword ptr [esi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e45b0:	or eax, dword ptr [esi + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e45d0:	or edx, dword ptr [edx + ecx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e46a3:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], al ; ret
0x080e4709:	adc byte ptr [ecx + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080e4717:	or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x43 ; ret
0x080e475d:	lcall -0x3cba:0x140e0a02
0x080e483d:	sbb al, byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e4852:	inc ecx ; or edx, dword ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x080e48f3:	or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x48 ; ret
0x080e497f:	push cs ; or al, 0x83 ; add ebx, dword ptr [ecx + 0xa] ; ret
0x080e49c8:	push cs ; adc byte ptr [ebx - 0x3ca5fdfc], al
0x080e49ff:	push cs ; adc al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4a26:	add dword ptr [0xa0a1703], -0x3d
0x080e4a78:	inc eax ; jne 0xd ; push cs ; adc al, 0x41 ; ret
0x080e4c11:	add al, 0x83 ; add eax, 0xc3017803
0x080e4c4e:	add dword ptr [0xa01dc03], -0x3d
0x080e4c7d:	add al, 0x83 ; add eax, 0xc30afd02
0x080e4cbe:	add dword ptr [0xa023f03], -0x3d
0x080e4cce:	inc ecx ; or eax, dword ptr [ebx] ; or byte ptr [ecx], al ; or al, bl
0x080e4cdc:	add al, 4 ; inc ecx ; or ebx, dword ptr [edi + 0xa] ; ret
0x080e4d4e:	add dword ptr [0xa028d03], -0x3d
0x080e4d88:	add ebx, dword ptr [edx + 0x41140e01] ; ret
0x080e4df6:	dec edx ; test dword ptr [edx + ebx*2], eax ; push cs ; adc bl, al
0x080e4e38:	push cs ; and byte ptr [ecx + 0xe], ah ; adc al, 0x41 ; ret
0x080e4e76:	add dword ptr [0xa02b803], -0x3d
0x080e4eed:	xor byte ptr [edx + ecx + 0xe], ah ; adc al, 0x41 ; ret
0x080e4f0c:	xor byte ptr [ebp + 0xa], bl ; push cs ; adc al, 0x46 ; ret
0x080e4f49:	pop ecx ; and byte ptr cs:[edx], al ; inc ebx ; or al, bl
0x080e5013:	push cs ; adc byte ptr [edi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e5045:	push cs ; and byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e506d:	push cs ; sbb al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e50a1:	push cs ; xor byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e50d1:	and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xa], bl ; ret
0x080e50f2:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; ret
0x080e524c:	add cl, byte ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e5298:	or esp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e52ae:	or ebp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e5352:	add dword ptr [esi + 0xa], eax ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e53cd:	push cs ; sbb al, 0x45 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e5433:	push cs ; sub byte ptr [ebx + 0xe], al ; adc byte ptr [ecx - 0x3d], al
0x080e5536:	add dl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e554d:	add dl, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e55d2:	add dl, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e5601:	adc eax, dword ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e5745:	adc byte ptr [edi + 0xa], ah ; push cs ; or al, 0x41 ; ret
0x080e5753:	or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x41 ; ret
0x080e5761:	or edx, dword ptr [ebp + 0xa] ; push cs ; or al, 0x41 ; ret
0x080e576e:	inc ecx ; or edx, dword ptr [edi + 0xe] ; or al, 0x41 ; ret
0x080e57a4:	add ch, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e585c:	add ch, cl ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e5881:	xor byte ptr [edx + ecx + 0xe], dh ; adc al, 0x43 ; ret
0x080e58fa:	push ebx ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080e5912:	mov ecx, 0x140e0a03 ; inc ecx ; ret
0x080e5929:	add bl, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e5fd2:	arpl word ptr [ecx], ax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e5fea:	rol dword ptr [ebx], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e6599:	add al, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e65af:	or ecx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e668d:	xor byte ptr [edi + 0xa], dh ; push cs ; adc al, 0x43 ; ret
0x080e671e:	and al, byte ptr [edx + ecx] ; push cs ; adc al, 0x41 ; ret
0x080e69a6:	insb byte ptr es:[edi], dx ; dec eax ; push cs ; shr byte ptr [edx + eax - 0x3d], 1
0x080e6bfa:	xor byte ptr [ecx + 0xa], bh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e6c4b:	inc eax ; js 0xd ; push cs ; adc al, 0x41 ; ret
0x080e6cf9:	sbb byte ptr [edx], al ; push edi ; push cs ; or al, 0x41 ; ret
0x080e6d56:	adc al, 0x83 ; add eax, 0xc30a4a02
0x080e6d68:	lds ecx, ptr [esi] ; add al, 0x47 ; or eax, dword ptr [ecx - 0x3d]
0x080e6f54:	add dh, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e6fea:	or eax, dword ptr [edx] ; int3 ; push cs ; adc al, 0x43 ; ret
0x080e7018:	adc byte ptr [edi + 0xa], bl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e702c:	or edx, dword ptr [esi + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7035:	dec ecx ; or eax, dword ptr [esi + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e70c2:	xor al, 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e70f4:	push eax ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e710a:	or ebp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e7155:	add bl, byte ptr [ecx + 0x41140e0a] ; ret
0x080e721d:	add al, byte ptr [edx] ; in eax, dx ; push cs ; adc al, 0x41 ; ret
0x080e7251:	adc byte ptr [ebx + 0xa530204], al ; ret
0x080e72b9:	add al, byte ptr [eax + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e72cf:	or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e7378:	add dword ptr [esi + 0xa], ecx ; push cs ; adc al, 0x46 ; ret
0x080e738d:	inc ebp ; or eax, dword ptr [esi + 0xe] ; adc al, 0x43 ; ret
0x080e73cd:	add al, 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e73e3:	or edi, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e742c:	push cs ; adc byte ptr [edx + 0xe], bh ; or al, 0x41 ; ret
0x080e7469:	add al, byte ptr [edx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7472:	inc esi ; or ecx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e7501:	and byte ptr [ebx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e755d:	add dh, byte ptr [edi + 0x43140e0a] ; ret
0x080e7572:	inc ecx ; or eax, dword ptr [esi + 0xe] ; adc al, 0x43 ; ret
0x080e75c9:	add al, 4 ; inc ebp ; or ecx, dword ptr [edi + 0xa] ; ret
0x080e7644:	pop es ; add dl, byte ptr [esi - 0x3c39383b]
0x080e76cd:	add al, 0x83 ; add eax, 0xc30a6602
0x080e76da:	or al, 4 ; add al, 0x41 ; or ecx, dword ptr [ecx - 0x3d]
0x080e782c:	adc byte ptr [edx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7836:	or eax, dword ptr [edi + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e7840:	or ecx, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e7849:	inc edi ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080e786c:	adc byte ptr [edi + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7876:	or edx, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e787f:	inc esi ; or eax, dword ptr [esi + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e793d:	push cs ; xor byte ptr [edi + 0xe], ah ; adc byte ptr [ecx - 0x3d], al
0x080e7978:	and byte ptr [eax + 0xa], bl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e7994:	and byte ptr [edx + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e79df:	push eax ; jl 0xd ; push cs ; adc al, 0x43 ; ret
0x080e79f4:	dec eax ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080e7a35:	aas ; add cl, byte ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e7a61:	jo 0x51 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e7ac2:	push cs ; inc eax ; push cs ; adc al, 0x41 ; ret
0x080e7b0a:	add al, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e7b1f:	inc esi ; or ebx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e7b64:	push cs ; inc eax ; js 0x12 ; adc al, 0x41 ; ret
0x080e7ba4:	add al, byte ptr [edx + 0x41140e0a] ; ret
0x080e7bef:	pushal ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7c56:	and byte ptr [edi + 0xe], bl ; adc byte ptr [ecx + 0xa], al ; ret
0x080e7d04:	push cs ; and byte ptr [eax + 0xe], cl ; or al, 0x45 ; ret
0x080e7dee:	and byte ptr [edi + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080e7e04:	or ebx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e7fab:	pushal ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7fc1:	or ecx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e8092:	pushal ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x08048418:	or cl, byte ptr [ecx + 0x1da29f2] ; retf
0x08049a30:	inc ebp ; enter 0x428b, 0xc ; mov ebx, ecx
0x0804a6ff:	mov eax, 0 ; mov ebx, ecx
0x0804b07a:	mov ebx, dword ptr [edi] ; mov eax, dword ptr [edi - 4] ; bswap ebx
0x0804b473:	mov ebx, dword ptr [eax + 4] ; je 7 ; bswap ebx
0x0804b520:	mov ebp, 0xffffff6c ; bswap ebx
0x0804bc07:	jp 0xffffff82 ; cli ; js 0x14 ; test cl, bl
0x0804d6d1:	push edi ; mov edi, edx ; push esi ; push ebx ; mov ebx, ecx
0x08050774:	test byte ptr [edi + 0x29000000], bl ; retf
0x0805081e:	or byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [ecx], ch ; retf
0x08051d32:	mov ebx, dword ptr [esi + 8] ; mov ebp, edi ; sub ebx, ecx
0x08051d53:	dec esi ; add al, 0x8b ; pop esi ; or byte ptr [ecx], ch ; retf
0x08051d95:	pop esi ; or byte ptr [ebx - 0x34d6ef3c], al
0x08051dbe:	mov ebp, eax ; add esp, 0x10 ; add ebx, ecx
0x08052791:	add byte ptr [eax - 0x7bf09d06], al ; retf
0x08052ed0:	mov ecx, dword ptr [edx + 8] ; mov edx, dword ptr [edx] ; cmp ebx, ecx
0x080531be:	xor al, 0x85 ; leave ; je 0x23 ; cmp ebx, ecx
0x08053a6d:	or byte ptr [ecx], bh ; fnstenv dword ptr [ebx + 0x2d] ; sub ebx, ecx
0x080550cb:	mov ebp, 0xff ; mov ebx, ecx
0x080550d9:	jo 0xfffffffe ; shr ebx, 3 ; xor ebx, ecx
0x08055128:	inc esp ; iretd ; mov byte ptr [eax + ebx], cl ; sub ebx, ecx
0x080555bd:	add esi, edi ; fld dword ptr [ecx] ; shl dword ptr [ecx], cl ; retf
0x080559d2:	or byte ptr [ecx], al ; fild qword ptr [ecx] ; jmp 0xffffff89 ; retf
0x08055fa6:	add al, 0 ; add byte ptr [ecx], bh ; ret ; jne 0xffffffd2
0x08056a9a:	or byte ptr [ecx], ch ; jmp 5 ; ret 0xcb83
0x0805732f:	xor byte ptr [ecx - 0x76f7dbbc], cl ; retf
0x08057355:	or dword ptr [ecx - 0x76c3dba4], ecx ; retf
0x08058bf1:	sbb ebx, dword ptr [edi + 1] ; add al, ch ; push esi ; retf
0x0805a158:	shl esi, cl ; mov dword ptr [ebx + 8], eax ; mov ebx, ecx
0x0805af47:	adc dword ptr [esi], 1 ; add byte ptr [eax], al ; mov ebx, ecx
0x0805af90:	or ebp, 0 ; add byte ptr [eax], al ; mov ebx, ecx
0x0805afd5:	or dword ptr [eax - 0x77000000], 0xffffffcb
0x0805b00e:	lea eax, dword ptr [eax + 4] ; jae 0x54 ; mov ebx, ecx
0x0805ca32:	inc edx ; mov ebx, 0x427f0f66 ; retf
0x0805d051:	and byte ptr [edi - 1], bl ; and al, 0x8d ; xor bl, cl
0x0805d0ac:	pop esp ; cmp byte ptr [eax], ah ; movdqa xmm1, xmm3
0x0805d0da:	add dword ptr [edi - 1], ebx ; and al, 0x8d ; xor bl, cl
0x0805d21a:	add bl, byte ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805d35a:	add ebx, dword ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805d5da:	add eax, 0x8d24ff5f ; xor bl, cl
0x0805d99a:	or byte ptr [edi - 1], bl ; and al, 0x8d ; xor bl, cl
0x0805dada:	or dword ptr [edi - 1], ebx ; and al, 0x8d ; xor bl, cl
0x0805dc1a:	or bl, byte ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805dd5a:	or ebx, dword ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805dfda:	or eax, 0x8d24ff5f ; xor bl, cl
0x0805e25a:	maxps xmm7, xmm7 ; and al, 0x8d ; xor bl, cl
0x080615bd:	nop ; nop ; nop ; pcmpeqb xmm1, xmm3
0x080631bc:	add byte ptr [eax], al ; add byte ptr [eax], al ; push ebx ; mov ebx, ecx
0x0806321c:	sub al, 1 ; enter -0x35ff, 0x29 ; retf
0x080634de:	ret ; nop ; movdqu xmm1, xmmword ptr [eax - 0x35]
0x080634e3:	dec eax ; retf ; movdqu xmm2, xmmword ptr [edx - 0x35]
0x08063f6d:	cmp cl, byte ptr [edi] ; rol dword ptr [ecx], 1 ; movaps xmm1, xmm3
0x08063f9d:	movaps xmm2, xmmword ptr [ecx + 0x1f] ; movaps xmm1, xmm3
0x080640ad:	cmp cl, byte ptr [edi] ; rol dword ptr [edx], 1 ; movaps xmm1, xmm3
0x080640dd:	movaps xmm2, xmmword ptr [ecx + 0x1e] ; movaps xmm1, xmm3
0x080641ed:	cmp cl, byte ptr [edi] ; rol dword ptr [ebx], 1 ; movaps xmm1, xmm3
0x0806421d:	movaps xmm2, xmmword ptr [ecx + 0x1d] ; movaps xmm1, xmm3
0x0806432d:	cmp cl, byte ptr [edi] ; rol dword ptr [edi + ecx], 1 ; sub bl, cl
0x0806435d:	movaps xmm2, xmmword ptr [ecx + 0x1c] ; movaps xmm1, xmm3
0x0806448d:	movaps xmm2, xmmword ptr [ecx + 0x1b] ; movaps xmm1, xmm3
0x0806458d:	cmp cl, byte ptr [edi] ; rol dword ptr [esi], 1 ; movaps xmm1, xmm3
0x080645bd:	movaps xmm2, xmmword ptr [ecx + 0x1a] ; movaps xmm1, xmm3
0x080646bd:	cmp cl, byte ptr [edi] ; rol dword ptr [edi], 1 ; movaps xmm1, xmm3
0x080646ed:	movaps xmm2, xmmword ptr [ecx + 0x19] ; movaps xmm1, xmm3
0x080647ed:	cmp cl, byte ptr [edi] ; ror dword ptr [eax], 1 ; movaps xmm1, xmm3
0x0806481d:	movaps xmm2, xmmword ptr [ecx + 0x18] ; movaps xmm1, xmm3
0x0806491d:	cmp cl, byte ptr [edi] ; ror dword ptr [ecx], 1 ; movaps xmm1, xmm3
0x0806494d:	movaps xmm2, xmmword ptr [ecx + 0x17] ; movaps xmm1, xmm3
0x08064a4d:	cmp cl, byte ptr [edi] ; ror dword ptr [edx], 1 ; movaps xmm1, xmm3
0x08064a7d:	movaps xmm2, xmmword ptr [ecx + 0x16] ; movaps xmm1, xmm3
0x08064b7d:	cmp cl, byte ptr [edi] ; ror dword ptr [ebx], 1 ; movaps xmm1, xmm3
0x08064bad:	movaps xmm2, xmmword ptr [ecx + 0x15] ; movaps xmm1, xmm3
0x08064cad:	cmp cl, byte ptr [edi] ; ror dword ptr [edi + ecx], 1 ; sub bl, cl
0x08064cdd:	movaps xmm2, xmmword ptr [ecx + 0x14] ; movaps xmm1, xmm3
0x08064e0d:	movaps xmm2, xmmword ptr [ecx + 0x13] ; movaps xmm1, xmm3
0x08064f0d:	cmp cl, byte ptr [edi] ; ror dword ptr [esi], 1 ; movaps xmm1, xmm3
0x08064f3d:	movaps xmm2, xmmword ptr [ecx + 0x12] ; movaps xmm1, xmm3
0x0806503d:	cmp cl, byte ptr [edi] ; ror dword ptr [edi], 1 ; movaps xmm1, xmm3
0x0806506d:	movaps xmm2, xmmword ptr [ecx + 0x11] ; movaps xmm1, xmm3
0x08066e00:	add esp, dword ptr [esi + 0xf] ; xlatb ; shr byte ptr [ecx], 0xcb
0x0806af7d:	por mm3, mm7 ; pcmpeqb xmm1, xmm3
0x0806b5ab:	inc dword ptr [ebx - 0x7bf0ff07] ; retf
0x0806b75b:	test byte ptr [ecx - 0x7cf0f7f2], ch ; retf
0x0806b985:	dec edx ; adc byte ptr [ebx - 0x34760f1f], al
0x0806b9de:	rol dword ptr [eax - 0x7d], -0x15 ; add dword ptr [ebp - 0x35], esi
0x0806c263:	nop ; lea esi, dword ptr [esi] ; mov ebx, ecx
0x0806dd6b:	fisttp word ptr [ecx + 0x38f989eb] ; retf
0x0806eae3:	mov edx, 2 ; mov ebx, ecx
0x0806ed63:	jne 0x1d ; mov edi, dword ptr [edx + 4] ; cmp ebx, ecx
0x0807034f:	leave ; je 0xffffffd1 ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x08070382:	adc al, 0xeb ; wait ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x0807038d:	mov esi, dword ptr [edx + 8] ; test esi, esi ; jne 0xffffffd2
0x08070393:	retf ; cmp ebp, ebx ; jne 0xffffff8d ; jmp 0xffffffd2
0x080703fa:	sub edx, dword ptr [eax] ; sub ecx, 1 ; mov ebx, ecx
0x08070546:	push edi ; jecxz 0xe ; or al, ch ; add ebx, ecx
0x0807094e:	test byte ptr [ebp - 0x76ffffff], cl ; retf
0x08071dc2:	ror byte ptr [edi], 1 ; mov esi, 0xcb890173
0x080724d8:	mov al, 0xb ; or byte ptr [ebx - 0x18], dl ; fxch st(0), st(3)
0x08072a72:	add cl, byte ptr [ebp + 0x1000d54] ; retf
0x08072ea6:	ret 0x8304 ; mov byte ptr [ecx + edi], 0xcb
0x08072ecb:	add byte ptr [ecx], al ; add edx, 4 ; cmp ebx, ecx
0x080739e1:	inc esp ; and al, 0x5c ; mov dword ptr [ebx], edx ; mov ebx, ecx
0x08074bcb:	loopne 0xfffffffa ; and ecx, 7 ; sub ebx, ecx
0x08075950:	and ebp, 0x3f ; or esi, ebp ; cmp ebx, ecx
0x08076960:	movzx eax, ax ; mov dword ptr [ebx], eax ; mov ebx, ecx
0x080779e3:	push edi ; push esi ; push ebx ; mov esi, edx ; mov ebx, ecx
0x0807847f:	or byte ptr [ebx + 0x1be08ec], al ; retf
0x08078733:	sal dword ptr [ebx - 0x7f], cl ; cli ; add ebx, ecx
0x08078760:	sal byte ptr [ecx - 0x7f], 1 ; cli ; add ebx, ecx
0x08078b1d:	inc dword ptr [ecx + 0x1189c7c] ; retf
0x08078d13:	push edi ; push esi ; push ebx ; mov esi, eax ; mov ebx, ecx
0x08078d30:	add byte ptr [ebx + 0x16808ec], al ; retf
0x0807930b:	test eax, eax ; cmove ebx, esi ; cmp ebx, ecx
0x08079c0c:	ret ; mov eax, ebx ; sub esi, edx ; mov ebx, ecx
0x0807aa0f:	lea ecx, dword ptr [eax + esi] ; sub edx, edi ; cmp ebx, ecx
0x0807bb3f:	test bl, bl ; je 0x41 ; movsx ecx, bl
0x0807c7a2:	test dword ptr [ebx + edi*8 - 0x34fe0001], ebp
0x0807c941:	cld ; mov eax, 0xa6e8080c ; retf
0x0807dbc1:	xchg dword ptr [eax + 0x1fffff8], edi ; retf
0x0807f7d6:	dec dword ptr [ebx - 0x7bf0efbb] ; retf
0x08080951:	ror byte ptr [ecx - 0x7af053bb], 0xcb
0x080812d1:	test byte ptr [edx - 0x16000004], bh ; retf
0x08081aea:	mov ebx, dword ptr [eax] ; add edx, 1 ; cmp ebx, ecx
0x08081b35:	cmp dword ptr [ebp - 0x7c], ebx ; je 0xc ; mov ebx, ecx
0x08081e71:	in al, dx ; add al, 0x8d ; add al, 0x8e ; add ebx, ecx
0x08082414:	lea ebx, dword ptr [edx + ebx - 1] ; cmove ecx, ebx
0x08082428:	add eax, 1 ; mov dword ptr [ebx], eax ; mov ebx, ecx
0x08083091:	and byte ptr [ecx + 0x39d889c2], cl ; retf
0x08083556:	add byte ptr [eax], al ; sub ecx, 1 ; sub ebx, ecx
0x080840df:	pop esp ; mov esi, dword ptr gs:[edi] ; movsx ecx, bl
0x08085ffa:	pop eax ; adc byte ptr [ebx - 0x34c6ebb8], cl
0x0808b5ea:	dec ebp ; adc byte ptr [ebx - 0x34d6eba3], cl
0x0808b831:	inc ebx ; pop eax ; mov eax, dword ptr [eax + 0x20] ; jmp 0xffffffd2
0x0808ba78:	dec ebp ; add byte ptr [ebx - 0x34d6fba3], cl
0x0808be3e:	adc al, 0x85 ; sal byte ptr [edx + ecx - 0x3f], 0xcb
0x0808e172:	add byte ptr [ebp - 0x3ef58b40], al ; retf
0x0808e257:	adc al, 0x85 ; sal byte ptr [edx + ecx - 0x3f], cl ; retf
0x0808ecb5:	sbb byte ptr [eax], al ; add byte ptr [eax], al ; cmova ecx, ebx
0x0808fb45:	add byte ptr [ebx + 0x306808ec], al ; retf
0x0808fb5f:	add byte ptr [ebx + 0x7680cec], al ; retf
0x0808fb77:	add byte ptr [eax - 0x4b45ffc8], al ; retf
0x0808fc99:	in al, dx ; add al, 0x6a ; add al, 0x68 ; adc ecx, ebx
0x0808fe88:	in al, dx ; add al, 0x6a ; adc ebp, dword ptr [eax - 0x4c] ; retf
0x0808fea1:	inc dword ptr [ebx + 0x306808ec] ; retf
0x080901ed:	call dword ptr [eax + 0x6a] ; add al, 0x68 ; adc ecx, ebx
0x08090449:	in al, dx ; add dword ptr [eax], eax ; add byte ptr [eax + 0x18], ch ; retf
0x08090d3f:	lodsd eax, dword ptr [esi] ; xchg ebx, edi ; ljmp ptr [eax - 0x70] ; retf
0x08090d49:	daa ; add eax, dword ptr [eax] ; add byte ptr [eax + 0x18], ch ; retf
0x08090d58:	xchg eax, esp ; xchg ebx, edi ; ljmp ptr [eax - 0x70] ; retf
0x08090d62:	ret 2 ; add byte ptr [eax + 0x18], ch ; retf
0x08091252:	or al, 0x89 ; xor eax, eax ; jmp 0xffffffd2
0x08091c03:	mov al, byte ptr [0x68000001] ; in al, -0x35
0x08091dca:	add edi, 0 ; add byte ptr [eax], al ; mov ebx, ecx
0x08093277:	inc esp ; add eax, 0xe4680000 ; retf
0x0809423a:	iretd ; add al, byte ptr [eax] ; add byte ptr [eax - 0x1c], ch ; retf
0x080942de:	xchg eax, ebp ; add dword ptr [eax], eax ; add byte ptr [ecx], al ; jne 0xffffffd2
0x080949d1:	or byte ptr [eax], 0 ; add byte ptr [eax - 0x1c], ch ; retf
0x080952cd:	cmp byte ptr [ecx - 0x76cfdb94], cl ; retf
0x080957b3:	ret 0xc101 ; loope 0xa ; add ebx, ecx
0x08095b14:	pushfd ; xor ebx, eax ; xor ecx, edx ; or ebx, ecx
0x080966fd:	mov al, 0x2c ; add al, byte ptr [eax] ; add byte ptr [ecx], ch ; retf
0x0809673e:	adc eax, 0x80eaa08 ; mov ebx, ecx
0x08096e2c:	add edi, dword ptr [edx] ; mov edx, dword ptr [ebp + 8] ; mov ebx, ecx
0x080983f5:	lea eax, dword ptr [esi + 0xc] ; mov ebx, eax ; sub ebx, ecx
0x080984e6:	shl edx, cl ; test dword ptr [ebp - 0x20], edx ; jne 0xffffffd2
0x08098763:	les ecx, ptr [edx + ebp*2] ; add dword ptr [eax + 0x32], ebp ; retf
0x08098d21:	mov ebp, esp ; push edi ; push esi ; push ebx ; mov ebx, ecx
0x080992fc:	add dh, byte ptr [edx + 0x11] ; mov ebx, edx ; cmp ebx, ecx
0x080997db:	and byte ptr [edx - 0x17aff7f2], bh ; retf
0x08099b1e:	ret ; mov ecx, dword ptr [esp + 0xc] ; je 0xffffffd2
0x0809bb1a:	or dword ptr [esi + 0x24], esi ; mov ecx, edi ; cmp bl, cl
0x0809bc6e:	inc dword ptr [ebp + 0x793d74c0] ; retf
0x0809bc75:	lea ebx, dword ptr [edi + 1] ; cmp esi, ebx ; jge 0xffffffd2
0x0809cc73:	cmp eax, 0xff ; jne 0xffffff8d ; mov ebx, ecx
0x0809d0e6:	mov dword ptr [ebp - 0x28], eax ; add eax, ebx ; mov ebx, ecx
0x0809d16e:	add dword ptr [ebp - 0x20], ecx ; mov edx, eax ; add ebx, ecx
0x0809ecdd:	jmp 0x8245c8e ; mov ebx, ecx
0x0809ef04:	sti ; pop ds ; or ebx, 1 ; add ebx, ecx
0x0809ef0a:	retf ; cmp esi, ebx ; je 0x44 ; mov ebx, ecx
0x0809ef1e:	add eax, ebx ; mov ebx, esi ; push ebp ; and ebx, ecx
0x0809f39c:	popfd ; ret ; shr ecx, 0x1f ; cmp bl, cl
0x0809faf5:	ror byte ptr [ecx - 0x7bf04fbb], 0xcb
0x080a1115:	jne 0x26 ; mov dword ptr [ebp + 0xc], ebx ; mov ebx, ecx
0x080a1786:	mov edx, dword ptr [eax + 0x10] ; test edx, edx ; jne 0xffffffd2
0x080a2103:	xor eax, 0x80eb7dc ; mov ebx, ecx
0x080a2241:	or cl, byte ptr [ebx + 0x74c33901] ; retf
0x080a2829:	inc edi ; add cl, byte ptr [ebp - 0x3476fdb1]
0x080a6412:	cld ; cmp edi, 1 ; cmove ecx, ebx
0x080a6518:	mov dword ptr [edi], eax ; lea edi, dword ptr [eax + ebx] ; mov ebx, ecx
0x080a66c6:	jmp 0xffffc032 ; mov ebx, ecx
0x080a790c:	mov dword ptr [ebp + 8], esi ; mov esi, ebx ; mov ebx, ecx
0x080a7daa:	xchg eax, ebp ; mov al, byte ptr [0x89fffffa] ; retf
0x080a8fd0:	push edi ; push esi ; xor esi, esi ; push ebx ; mov ebx, ecx
0x080a9456:	xchg eax, edx ; add dword ptr [eax], eax ; add byte ptr [edi], cl ; scasd eax, dword ptr es:[edi] ; retf
0x080aa3a6:	add byte ptr [eax], al ; cmp ecx, 9 ; jne 0xffffffd2
0x080abbf4:	or byte ptr [ebx - 0x76dfdbbc], cl ; retf
0x080abe41:	fimul dword ptr [ecx - 0x7683dba4] ; retf
0x080ac924:	sbb cl, byte ptr [ebp + 0xd] ; or al, ch ; ret ; retf
0x080ac95e:	pop esp ; dec ebp ; or eax, 0xcb89e808
0x080b1b80:	add byte ptr [ecx - 0x16d7dbbc], cl ; retf
0x080b258d:	loope 1 ; dec dword ptr [edi] ; add byte ptr [ecx], cl ; retf
0x080b2d2b:	adc byte ptr [ebp - 0x79f00f93], cl ; retf
0x080b5b2b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; sub ebx, ecx
0x080b714c:	jmp 0xfffffa04 ; cmp ebx, ecx
0x080b715b:	jmp 0xfffff9f5 ; cmp ebx, ecx
0x080b716a:	jmp 0xfffff9e6 ; xor ebx, ecx
0x080b718e:	jmp 0xfffff9c2 ; add ebx, ecx
0x080b7197:	jmp 0xfffff9b9 ; or ebx, ecx
0x080b71b9:	jmp 0xfffff997 ; sub ebx, ecx
0x080b71d0:	jmp 0xfffff980 ; and ebx, ecx
0x080b71d9:	jmp 0xfffff977 ; cmp ebx, ecx
0x080b71e8:	jmp 0xfffff968 ; cmp ebx, ecx
0x080b71f7:	jmp 0xfffff959 ; cmp ebx, ecx
0x080b7206:	jmp 0xfffff94a ; cmp ebx, ecx
0x080b727b:	add byte ptr [eax], al ; add byte ptr [eax + 0xf], al ; test cl, bl
0x080b7bd4:	mov eax, dword ptr [edx + eax*4] ; je 0x14 ; mov ebx, ecx
0x080b88ff:	sldt word ptr [eax] ; xor esi, edi ; xor ebx, ecx
0x080b8ff1:	push edi ; mov edi, eax ; push esi ; push ebx ; mov ebx, ecx
0x080ba436:	push eax ; inc dword ptr [ebx - 0x34880206]
0x080ba797:	mov al, byte ptr [0x3d080eae] ; add ebx, ecx
0x080ba7ad:	mov ch, 0xa0 ; scasb al, byte ptr es:[edi] ; push cs ; or byte ptr [ecx], al ; retf
0x080ba9ae:	add eax, 0x80eaef8 ; add ebx, ecx
0x080bc94f:	or bl, ah ; retf 0x805 ; adc ecx, ebx
0x080bc95b:	or byte ptr [ebx - 0x3cf7fa35], al ; retf
0x080bc98f:	or dh, bl ; retf 0x805 ; push cs ; retf
0x080bc99f:	or byte ptr [esi - 0x11f7fa35], bh ; retf
0x080bc9cf:	or cl, bl ; retf 0x805 ; or ebx, ecx
0x080bc9df:	or byte ptr [ecx - 0x16f7fa35], bh ; retf
0x080bca0f:	or ah, dl ; retf 0x805 ; add al, 0xcb
0x080bca1b:	or byte ptr [ebx + ecx*8 + 5], dh
0x080bca1f:	or byte ptr [ebx + ecx*8 - 0x341bf7fb], dh
0x080bca53:	or bh, bh ; retf 0x805 ; das ; retf
0x080bca5f:	or byte ptr [edi - 0x20f7fa35], ch ; retf
0x080bca93:	or dl, bh ; retf 0x805 ; sub cl, bl
0x080bca9f:	or byte ptr [edx - 0x25f7fa35], ch ; retf
0x080bcad7:	or byte ptr [0x650805cb], ah ; retf
0x080bcadf:	or byte ptr [ebp - 0x2af7fa35], ah ; retf
0x080bcb13:	or al, dh ; retf 0x805 ; and bl, cl
0x080bcb1f:	or byte ptr [eax - 0x2ff7fa35], ah ; retf
0x080bd8df:	or bh, bh ; retf 0x806 ; or ebx, ecx
0x080bd8e3:	or byte ptr [ecx], cl ; retf ; push es ; or byte ptr [ebx], dl ; retf
0x080bd8eb:	or byte ptr [0x270806cb], bl ; retf
0x080bd8ef:	or byte ptr [edi], ah ; retf ; push es ; or byte ptr [ecx], dh ; retf
0x080bd8f3:	or byte ptr [ecx], dh ; retf ; push es ; or byte ptr [ebx], bh ; retf
0x080bd8f7:	or byte ptr [ebx], bh ; retf ; push es ; or byte ptr [ebp - 0x35], al
0x080bd8fb:	or byte ptr [ebp - 0x35], al ; push es ; or byte ptr [edi - 0x35], cl
0x080bd8ff:	or byte ptr [edi - 0x35], cl ; push es ; or byte ptr [ecx - 0x35], bl
0x080bd903:	or byte ptr [ecx - 0x35], bl ; push es ; or byte ptr [ebx - 0x35], ah
0x080bd907:	or byte ptr [ebx - 0x35], ah ; push es ; or byte ptr [ebp - 0x35], ch
0x080bd90b:	or byte ptr [ebp - 0x35], ch ; push es ; or byte ptr [edi - 0x35], dh
0x080bd913:	or byte ptr [ecx - 0x74f7f935], al ; retf
0x080bd917:	or byte ptr [ebx - 0x6af7f935], cl ; retf
0x080bd91b:	or byte ptr [ebp - 0x60f7f935], dl ; retf
0x080bd91f:	or byte ptr [edi - 0x56f7f935], bl ; retf
0x080bd923:	or byte ptr [ecx - 0x4cf7f935], ch ; retf
0x080bd927:	or byte ptr [ebx - 0x42f7f935], dh ; retf
0x080bd92f:	or byte ptr [ecx - 0x31], dh ; push es ; or cl, dl ; retf
0x080bd933:	or cl, dl ; retf ; push es ; or bl, bl ; retf
0x080bd937:	or bl, bl ; retf ; push es ; or ch, ah ; retf
0x080bd93b:	or ch, ah ; retf ; push es ; or bh, ch ; retf
0x080bd93f:	or bh, ch ; retf ; push es ; or cl, bh ; retf
0x080bd992:	push es ; or cl, al ; int3 ; push es ; or bl, cl
0x080bda13:	or byte ptr [edi - 0x38f7f934], cl ; retf
0x080bdb62:	push es ; or byte ptr [ecx], cl ; int 6 ; or bl, cl
0x080bf9db:	add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [ecx], al ; retf
0x080bfa53:	add byte ptr [edi], dh ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080bfa57:	or byte ptr [esi], ch ; retf ; or al, 8 ; dec esp ; retf
0x080bfaa7:	or byte ptr [edi], dh ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080c02e6:	add byte ptr [eax], al ; retf 0 ; add bl, cl
0x080c609a:	add byte ptr [eax], al ; enter 0, 0 ; retf
0x080c66be:	add byte ptr [eax], al ; lds eax, ptr [edi] ; add byte ptr [eax], al ; retf
0x080c6a46:	add byte ptr [eax], al ; enter 0xa, 0 ; retf
0x080c6e46:	add byte ptr [eax], al ; enter 0xd, 0 ; retf
0x080c7246:	add byte ptr [eax], al ; enter 0x10, 0 ; retf
0x080c75c2:	add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; retf
0x080c8f4a:	add dword ptr [eax], eax ; add byte ptr [eax], al ; add byte ptr [eax], al ; retf
0x080cb53b:	or al, al ; or dword ptr [eax + ecx], ecx ; add ebx, ecx
0x080cb53f:	or byte ptr [ecx], al ; retf ; or al, 8 ; add ebx, ecx
0x080cba13:	or byte ptr [ebp - 0x32], ah ; pop es ; or al, al ; retf
0x080cbf9e:	add byte ptr [eax], al ; retf ; jle 0xd ; or bl, cl
0x080cbfa2:	or byte ptr [eax], cl ; retf ; jle 0xd ; or bl, cl
0x080cbfca:	or byte ptr [eax], cl ; jnp 0x7e ; or byte ptr [eax], cl ; retf
0x080cc0e6:	or byte ptr [eax], cl ; xchg byte ptr [bx + si], cl ; or bl, cl
0x080cf01b:	or ah, ah ; mov ah, 0xc ; or byte ptr [ecx], al ; retf
0x080cf05b:	je 0x27 ; add byte ptr [eax], al ; add ebx, ecx
0x080cffc4:	inc ebx ; mov bx, 0xf32d ; retf
0x080d0029:	movsb byte ptr es:[edi], byte ptr [esi] ; sub eax, 0xea4ca798 ; retf
0x080d0421:	xchg eax, edi ; add byte ptr [edi - 0x34b4067e], al
0x080d046a:	jge 0xffffffdb ; dec ebp ; push eax ; xor byte ptr [ecx], ah ; retf
0x080d04d8:	sar dword ptr [ecx + 0x5b92ac50], -0x35
0x080d0705:	in eax, dx ; lodsb al, byte ptr [esi] ; xchg eax, edi ; jo 0x6b ; salc ; retf
0x080d0f13:	sbb eax, 0x30565c9 ; in eax, dx ; retf
0x080d0faa:	pop edx ; xor dword ptr [edx - 0x3e], ecx ; dec ecx ; sbb ecx, ebx
0x080d12fd:	dec esp ; out dx, eax ; push ecx ; test al, 0xf2 ; dec ebp ; retf
0x080d146d:	test eax, 0x35eea9cd ; outsb dx, byte ptr [esi] ; retf
0x080d1db1:	push 0x1b6e41b5 ; std ; retf
0x080d1e7a:	push ss ; out dx, al ; out 0x78, al ; jnp 0x60 ; retf
0x080d1fab:	add dword ptr [edx - 0x36a5831f], esp ; retf
0x080d2020:	mov ebx, 0x1b5c347e ; jmp 0xffffffd2
0x080d217a:	xor byte ptr [esi - 0x73e34314], ch ; retf
0x080d21e9:	pop ss ; insb byte ptr es:[edi], dx ; inc edi ; js 0xfffffff7 ; pushal ; retf
0x080d23e3:	loopne 0x79 ; and dword ptr [eax - 0x52], ecx ; adc ebx, ecx
0x080d28d8:	jbe 0xffffffcd ; mov ds, word ptr [edx + edx - 0x71] ; retf
0x080d291a:	loope 0xffffff92 ; mov eax, dword ptr [0xcb584ce4]
0x080d2ee1:	out dx, eax ; cmp cl, byte ptr [esi] ; and byte ptr [ebx + 0x3d], bh ; retf
0x080d4c13:	and al, 0x49 ; xchg eax, edx ; and al, 9 ; or bl, cl
0x080d521b:	inc dword ptr [eax - 0x33] ; cld ; inc dword ptr [eax - 0x35]
0x080d521f:	inc dword ptr [eax - 0x35] ; cld ; inc dword ptr [eax - 0x35]
0x080d5227:	dec dword ptr [eax - 0x77000335] ; retf
0x080d689f:	add eax, dword ptr [esi + 0x2058304] ; retf
0x080d8b93:	add al, bl ; xor al, 0 ; add byte ptr [eax], cl ; retf
0x080d8c1f:	add byte ptr [ebp + esi], ah ; add byte ptr [ebx + ecx*8], ch
0x080d8c57:	add byte ptr [ebp + esi - 0x341c0000], bl
0x080dca02:	add byte ptr [eax], al ; cmp al, 0x5a ; stc ; dec ebx
0x080dd482:	lds ecx, ptr [esi] ; add al, 0x4a ; or eax, dword ptr [ebx] ; retf
0x080ddb07:	add byte ptr [esp + eax*4], cl ; add ah, dh ; retf
0x080ddb33:	add byte ptr [eax - 0x7c], bh ; add byte ptr [eax], al ; clc ; retf
0x080de5c7:	add byte ptr [edi + ecx*4], cl ; add byte ptr [eax], al ; add al, 0xcb
0x080de5db:	add byte ptr [eax], ah ; pop dword ptr [eax] ; add byte ptr [eax], dl ; retf
0x080de603:	add byte ptr [eax - 0x71], cl ; add byte ptr [eax], al ; sbb bl, cl
0x080de62b:	add byte ptr [eax - 0x71], dh ; add byte ptr [eax], al ; and bl, cl
0x080decdf:	add cl, byte ptr [edi + 0xe] ; rol byte ptr [edx], 2 ; retf
0x080df02f:	add dword ptr [0x2280e43], -0x35
0x080e0353:	add byte ptr [eax + 0x180000ac], bl ; retf
0x080e03bf:	add byte ptr [ebp*4 - 0x34840000], al
0x080e0413:	add byte ptr [eax - 0x53], bl ; add byte ptr [eax], al ; fmul st(3)
0x080e4d33:	add byte ptr [eax - 0xa], bh ; add byte ptr [eax], al ; mov bl, cl
0x080b75ce:	xor byte ptr [edx + ecx + 0x66], 0x3d ; syscall
0x080bb827:	adc byte ptr [eax + 0x50f3008], ch
0x080d265d:	fdiv st(2) ; scasd eax, dword ptr es:[edi] ; daa ; push esp ; syscall
0x0806c76b:	mov eax, 1 ; int 0x80
0x0807a4ab:	mov eax, 0xad ; int 0x80
0x0807a4b4:	mov eax, 0x77 ; int 0x80
0x080b69be:	jmp dword ptr [esi - 0x7f] ; js 0xb ; int 0x80
0x080b6a8a:	jmp dword ptr [esi - 0x7f] ; js 0xa ; int 0x80
0x080b75c8:	mov bh, 0x40 ; add eax, 0x80cd3d66
0x080d2479:	out 0x47, eax ; fstp xword ptr [edi] ; imul ecx, ebp, -0x80
0x080481ab:	or al, ch ; scasd eax, dword ptr es:[edi] ; add eax, 0xc3810000
0x080483c4:	add eax, 0x5e5b0000 ; pop edi ; pop ebp ; ret
0x0804847a:	mov dword ptr [eax], ebx ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; ret
0x080484ca:	add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08048793:	call eax ; add esp, 0x10 ; leave ; ret
0x080487cd:	call edx ; add esp, 0x10 ; leave ; ret
0x0804880c:	sub byte ptr [edi - 0x36fef7f2], 0xf3 ; ret
0x08048898:	les eax, ptr [ecx + ebx*2] ; pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x080488b0:	add byte ptr [eax], al ; add esp, 0x10 ; nop ; leave ; ret
0x08048bb7:	jns 0x5f5e5b08 ; pop ebp ; ret
0x08048c1b:	inc ecx ; dec ebp ; inc esp ; sete al ; test al, bl
0x08048f7b:	add esp, 0x6c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080490b3:	push edi ; test dword ptr [edi], 0xc389c7af
0x080492be:	mov dword ptr [0x80ea068], eax ; xor eax, eax ; ret
0x08049379:	add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080493ff:	ror dword ptr [eax + ecx], cl ; cmovne esi, ebx ; mov ebx, eax
0x08049486:	add esp, 0x20 ; cmp eax, 0xff ; mov ebx, eax
0x08049595:	or al, 0x89 ; enter 0x5e5b, 0x5f ; pop ebp ; ret
0x080495f4:	leave ; pop ebx ; mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x0804975e:	inc ebx ; add al, 0x83 ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x08049858:	fnstcw word ptr [ecx] ; sti ; cmovb eax, ecx ; mov ebx, eax
0x08049eb1:	loopne 0xfffffff2 ; push eax ; mov dword ptr [ebp - 0x44], eax ; mov ebx, eax
0x08049f80:	mov ch, 0xc ; or byte ptr [ebx - 0x3c7cfe3e], al
0x0804a04c:	add byte ptr [ebx - 0x3f7aef3c], al ; mov ebx, eax
0x0804a21d:	int3 ; call 0x30123 ; mov ebx, eax
0x0804a2b9:	je 0x3a1 ; mov ebx, eax
0x0804a397:	inc dword ptr [edx] ; add byte ptr [ebx - 0x3c76ef3c], al
0x0804a4ee:	hlt ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804a539:	cmp dh, byte ptr [eax + edx - 0x7d] ; ret 0x8301 ; ret
0x0804a615:	int3 ; call 0x2fd2b ; mov ebx, eax
0x0804a7c8:	add byte ptr [eax - 0x158b7f80], 0x89 ; ret
0x0804a7d6:	test eax, 0x8080 ; cmove eax, ebx
0x0804a930:	push ebp ; push edi ; mov edi, ecx ; push esi ; push ebx ; mov ebx, eax
0x0804a9d4:	inc eax ; or byte ptr [ebp - 0x7cd98a40], al ; ret
0x0804aae3:	les esi, ptr [eax] ; mov edx, dword ptr [esp + 0xc] ; mov ebx, eax
0x0804aba0:	push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x0804ac2a:	or byte ptr [0xfffff000], bh ; mov ebx, eax
0x0804aca2:	lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ad2a:	pop ecx ; add al, byte ptr [eax] ; cmp eax, 0xff ; mov ebx, eax
0x0804b462:	inc dword ptr [ebx + 0xfff0878] ; xchg eax, ebp ; ret
0x0804c05c:	sub byte ptr [eax + 0xf178910], 0x85 ; ret
0x0804c43d:	hlt ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804c56c:	sbb al, 0x89 ; rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; pop ebp ; ret
0x0804c6b3:	push edi ; call 0xeb5d ; sub ebx, eax
0x0804c7a6:	push esi ; call 0xea6a ; sub ebx, eax
0x0804c836:	push edi ; call 0xe9da ; sub ebx, eax
0x0804c896:	push edi ; call 0xe97a ; sub ebx, eax
0x0804cbdb:	or al, 0x89 ; call 0x5d5f5e62 ; ret
0x0804cc82:	je 0x17e ; mov ebx, eax
0x0804cce5:	jne 0xfffffff3 ; cmp dl, 0x2e ; mov ebx, eax
0x0804ce0e:	mov bl, 0xff ; inc dword ptr [ebx - 0x3c76ef3c]
0x0804ce5f:	nop ; test eax, eax ; je 0x29 ; push ebx ; mov ebx, eax
0x0804ce82:	add byte ptr [eax], al ; add esp, 0x18 ; pop ebx ; ret
0x0804ceb0:	push ebp ; push edi ; mov ebp, edx ; push esi ; push ebx ; mov ebx, eax
0x0804d05e:	aaa ; cld ; lea eax, dword ptr [edx + eax - 2] ; cmp ebx, eax
0x0804d163:	add byte ptr [eax], al ; lea eax, dword ptr [esp + 0x30] ; cmp ebx, eax
0x0804d17e:	add byte ptr [ecx + 0x5f5e5bf0], cl ; pop ebp ; ret
0x0804d7d1:	mov dh, 0x11 ; test dl, dl ; jne 0xffffffe6 ; ret
0x0804d80e:	adc al, 0x89 ; push 0xc ; mov dword ptr [edx + 0x18], eax ; ret
0x0804dbcf:	add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804de52:	add al, 0x89 ; push eax ; cld ; add edx, edi ; cmp ebx, eax
0x0804ded9:	sub esp, 4 ; div dword ptr [ebp + 0x10] ; mov ebx, eax
0x0804e0ec:	sbb al, 0x89 ; fcomp dword ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x0804e154:	fisttp dword ptr [ecx + 0x5f5e5bd8] ; pop ebp ; ret
0x0804e31f:	je 0x85 ; mov ebx, eax
0x0804e406:	add byte ptr [eax], al ; xor eax, eax ; add esp, 0xc ; ret
0x0804e4ba:	adc al, byte ptr [eax] ; add byte ptr [eax], al ; add esp, 0x2c ; ret
0x0804e652:	sub al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x0804ec04:	mov eax, 0x8300001c ; les ebx, ptr [ebx + eax*8]
0x0804ed90:	hlt ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804f009:	lea edx, dword ptr [eax + 0x98] ; mov ebx, eax
0x0804f066:	or dword ptr [ebx - 0x2776f73c], eax ; pop ebx ; ret
0x0804f094:	or byte ptr [ebx - 0x2776f73c], al ; pop ebx ; ret
0x0804f09c:	lea esi, dword ptr [esi] ; xor ebx, ebx ; jmp 0xffffffcb
0x0804f8c2:	add byte ptr [ecx + 0x5f5e5bd8], cl ; pop ebp ; ret
0x0804f957:	and al, 8 ; push ebp ; call dword ptr [eax + 0x40] ; mov ebx, eax
0x0804f96d:	mov esi, dword ptr [ebp + 0x1c] ; mov ecx, dword ptr [ebp + 0x58] ; mov ebx, eax
0x0804f9aa:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x0804f9f0:	mov eax, dword ptr [ebp + 0x4c] ; mov edx, dword ptr [ebp + 0x50] ; mov ebx, eax
0x0804fa75:	clc ; mov edx, edi ; mov edi, dword ptr [ebp + 0x20] ; mov ebx, eax
0x0804fafb:	adc byte ptr [ebx - 0x66ebdb84], cl ; mov ebx, eax
0x0804fb75:	push ebp ; push eax ; mov edx, dword ptr [esp + 4] ; mov ebx, eax
0x0804fbaa:	and al, 4 ; sar ebx, 2 ; imul eax, ebx
0x0804fcb3:	cli ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804fd7a:	add esp, 0x9c ; mov ebx, eax
0x0804fd81:	ret ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ff02:	push 0 ; push ebp ; call dword ptr [eax + 0x40] ; mov ebx, eax
0x08050180:	mov eax, dword ptr [eax] ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x080501b8:	mov eax, dword ptr [edx] ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x080501d4:	mov eax, 0xffffffff ; pop ebx ; pop esi ; ret
0x08050228:	or byte ptr [eax - 1], bh ; pop ebx ; ret
0x080503b2:	cmp al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x080504bc:	and al, 0x14 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0805064c:	mov eax, 0xffffffff ; pop esi ; pop edi ; ret
0x080507bd:	dec edx ; adc byte ptr [ecx - 0x7627d608], cl ; ret
0x0805080a:	lodsd eax, dword ptr [esi] ; add eax, dword ptr [eax] ; add esp, 0x10 ; sub ebx, eax
0x080508e8:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3c76f314], al
0x080509aa:	les edx, ptr [eax] ; test eax, eax ; mov dword ptr [esi], eax ; je 0xffffffcb
0x08050b7a:	cld ; je 0xfffffff6 ; mov ecx, dword ptr [ebp + 8] ; mov ebx, eax
0x08050cd3:	mov eax, ebx ; mov dword ptr [esi], edi ; pop ebx ; pop esi ; pop edi ; ret
0x08050d0c:	add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; jmp 0xffffffcb
0x08050d48:	mov dword ptr [ebx + 0x50], edx ; add esp, 8 ; pop ebx ; ret
0x08050dc1:	or byte ptr [ecx + 0x8c483d8], cl ; pop ebx ; ret
0x08050e34:	mov ch, 0xb ; or byte ptr [ebx - 0x3ca4f73c], al
0x08050e3f:	add byte ptr [edi + 0x56], dl ; mov edi, edx ; push ebx ; mov ebx, eax
0x0805128a:	add byte ptr [ecx + 0x5f5e5bf8], cl ; pop ebp ; ret
0x0805146b:	mov edi, eax ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x080517ba:	push dword ptr [edi + 0xb] ; add esp, 8 ; pop ebx ; ret
0x080517de:	nop ; nop ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08051a4a:	inc ebx ; or byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x08051a7e:	add byte ptr [eax], al ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08051c61:	mov ebx, 0x830001b3 ; les ebx, ptr [ebx + eax*8]
0x08051cf9:	add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051ed8:	sbb al, 0x5b ; pop esi ; sub eax, ebp ; pop edi ; pop ebp ; ret
0x08052120:	movzx eax, byte ptr [eax] ; add esp, 8 ; pop ebx ; ret
0x0805244a:	les edx, ptr [eax] ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x08052475:	stosd dword ptr es:[edi], eax ; add dword ptr [eax], eax ; add esp, 0x10 ; mov ebx, eax
0x080524c7:	add al, ch ; jae 0xffffffe5 ; add dword ptr [eax], eax ; mov ebx, eax
0x08052535:	mov dword ptr [esi], edi ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x08052544:	je 0xfffffff0 ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; ret
0x08052574:	sal bh, 0xd8 ; add esp, 8 ; pop ebx ; ret
0x08052884:	mov ebx, edi ; cmp bl, 2 ; setbe bl
0x08052a22:	cmp al, 0x5b ; mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x08052a60:	or esi, 0x80 ; mov ebx, eax
0x08052a70:	and edi, 0x1000 ; mov ebx, eax
0x080530d4:	or al, ch ; mov edx, 0xc3f30001
0x080530e3:	push ebx ; mov esi, 0 ; mov ebx, eax
0x0805331a:	ret 0xfffd ; jmp dword ptr [esi - 0x70] ; ret
0x0805348c:	adc byte ptr [ebx + 0x5e5b10c4], al ; pop edi ; ret
0x08053520:	dec edi ; rol dword ptr [ebp - 0xc0d8a2e], -0x3d
0x0805354e:	and al, 0x89 ; push eax ; or al, 0x89 ; push eax ; add al, 0xc3
0x08053580:	mov dword ptr [eax + 0x24], ecx ; mov dword ptr [eax + 4], edx ; pop ebx ; ret
0x08053641:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3ca4e73c], al
0x0805387d:	add dword ptr [ecx + 0x8c48303], ecx ; pop ebx ; ret
0x0805388a:	dec byte ptr [ecx + 0x8c48303] ; pop ebx ; ret
0x080538ba:	test ecx, ecx ; je 0xe ; pop ebx ; pop esi ; pop edi ; ret
0x08053904:	jnp 0x22 ; mov dword ptr [ebx], eax ; pop ebx ; pop esi ; pop edi ; ret
0x0805392e:	jmp 0xffffffcf ; mov eax, 0xffffffff ; ret
0x08053a1e:	or al, 0x5b ; sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08053a32:	or al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x08053a8c:	mov byte ptr [edi + eax], dl ; add eax, 1 ; cmp ebx, eax
0x08053aba:	or al, 0x5b ; pop esi ; sub eax, ebp ; pop edi ; pop ebp ; ret
0x08053b5a:	add byte ptr [eax], al ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; ret
0x08053bbb:	push eax ; call dword ptr [edx + 0x24] ; add esp, 0x2c ; ret
0x08053c0c:	mov eax, 1 ; pop ebx ; pop esi ; ret
0x08053ce1:	mov dword ptr [eax + 0x5c], 0 ; ret
0x08053d7d:	inc eax ; or byte ptr [eax], al ; add byte ptr [eax], al ; add bl, dh ; ret
0x08053e8d:	inc eax ; pop esp ; add byte ptr [eax], al ; add byte ptr [eax], al ; pop ebx ; ret
0x08053eab:	add byte ptr es:[eax], al ; add byte ptr [eax], al ; xor eax, eax ; ret
0x08053f09:	xor byte ptr [ebp + 0xc], 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x08053f97:	and ebp, edi ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08053fca:	and dword ptr [ebx], 0xffffffef ; add esp, 8 ; pop ebx ; ret
0x08053fec:	push dword ptr [ebp - 0x25] ; add esp, 8 ; pop ebx ; ret
0x0805402c:	mov eax, dword ptr [esp + 8] ; add eax, ebx ; pop ebx ; ret
0x08054037:	add byte ptr [ecx], ch ; rol byte ptr [ebx - 0x3ca4fe18], 1
0x08054203:	sub al, 0x89 ; clc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08054550:	cmp edx, 0x200 ; jne 0xffffffcb
0x0805461b:	jae 0x32 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0805466e:	mov eax, dword ptr [edx] ; test eax, eax ; jne 0xfffffffa ; ret
0x08054676:	lea edx, dword ptr [eax + 0x30] ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; ret
0x08054687:	or byte ptr [ebx + 0x422b0840], cl ; or bl, al
0x080546a7:	push eax ; or al, 0x8b ; inc ecx ; or byte ptr [ecx], ch ; rol bl, 1
0x080546b1:	push eax ; or byte ptr [ebx - 0x2fd6f7bf], cl ; ret
0x080546b7:	rol bl, 1 ; mov eax, 0xffffffff ; ret
0x080546fc:	mov dword ptr [eax + 4], edx ; xor eax, eax ; pop ebx ; pop esi ; ret
0x08054772:	lea esi, dword ptr [esi] ; ret
0x080547a5:	inc esi ; add al, 0x88 ; pop edi ; dec dword ptr [edi] ; mov dh, 0xc3
0x080548ce:	add byte ptr es:[eax - 1], bh ; ret
0x080548de:	add byte ptr [eax], al ; mov eax, 0xffffffff ; ret
0x080548eb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; ret
0x0805490a:	mov esp, 0x27 ; add bl, dh ; ret
0x0805491e:	add byte ptr [eax], al ; mov eax, dword ptr [0x80ea080] ; ret
0x08054940:	mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x34] ; ret
0x0805494d:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3cfbdbbc], cl
0x0805499b:	add dword ptr [0x80eb4c0], 1 ; ret
0x080549dc:	or al, ch ; mov eax, dword ptr cs:[0xc3f30001]
0x08054a07:	mov ah, 0xe ; or byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x08054a38:	fidiv dword ptr [ebx + 0x1d] ; movzx eax, byte ptr [edx] ; pop ebx ; ret
0x08054a57:	add byte ptr [eax - 1], bh ; pop ebx ; ret
0x08054e87:	les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; cdq ; pop ebp ; ret
0x08054f2e:	call dword ptr [eax - 0x48] ; inc ebx
0x08055043:	or dword ptr [ebx], 8 ; add esp, 0x18 ; pop ebx ; ret
0x0805505a:	cmovae eax, dword ptr [edx + 8] ; sub eax, dword ptr [edx + 0xc] ; ret
0x0805509d:	add al, byte ptr [ebx + 0x508901ca] ; add al, 0xc3
0x080550b8:	pop ebx ; or edx, 1 ; mov dword ptr [eax + 4], edx ; ret
0x0805513c:	les eax, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08055226:	or byte ptr [ebx - 0x77], bl ; call 0xc35d5f66
0x08055234:	or byte ptr [ecx + 0x5f5e5be8], cl ; pop ebp ; ret
0x08055473:	jae 0xe ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x08055600:	add al, 0xa5 ; push cs ; or byte ptr [ecx], ch ; sti ; add ebx, eax
0x08055607:	ret ; mov eax, dword ptr [0x80ea508] ; cmp ebx, eax
0x080556ac:	and esi, 0xfffffff8 ; lea ebx, dword ptr [esi - 0x11] ; cmp ebx, eax
0x080556b6:	mov edi, dword ptr [0x80eaa08] ; sub ebx, eax
0x08055816:	add esp, 4 ; mov eax, edx ; pop ebx ; pop esi ; ret
0x0805583c:	sub edi, edi ; call dword ptr [eax - 0x3c76acaa]
0x0805586d:	add byte ptr [eax], al ; add esp, 0x24 ; pop ebx ; pop esi ; ret
0x080558d5:	les esp, ptr [eax] ; add esp, 0x24 ; pop ebx ; pop esi ; ret
0x0805599c:	inc esp ; add eax, 0x60c8d10 ; add ebx, eax
0x08055b01:	inc esp ; and al, 0xc ; mov eax, dword ptr [ebp + 4] ; mov ebx, eax
0x08055b19:	inc esi ; mov eax, dword ptr [ebp] ; sub ebp, eax ; add ebx, eax
0x08055d31:	inc esp ; and al, 8 ; and eax, 0xfffffff8 ; mov ebx, eax
0x08055dbd:	mov ebp, dword ptr [eax + 0x1c] ; add dword ptr [eax + 4], ebx ; mov ebx, eax
0x08055e3e:	loope 4 ; je 0x62 ; mov edx, dword ptr [eax] ; mov ebx, eax
0x08055e78:	les edx, ptr [eax] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08055fa3:	je 0x4cd ; cmp ebx, eax
0x08055fe4:	mov eax, dword ptr [ebp + 0x30] ; lea edi, dword ptr [ebx + esi] ; cmp ebx, eax
0x0805603c:	add al, 1 ; jne 0x74 ; mov eax, dword ptr [ebx] ; sub ebx, eax
0x0805619d:	clc ; add eax, ebx ; and eax, 7 ; sub ebx, eax
0x08056272:	lea eax, dword ptr [edi + ebx] ; and eax, 7 ; sub ebx, eax
0x08056ac8:	add byte ptr [ecx], ch ; clc ; lea edx, dword ptr [ecx + edi] ; mov ebx, eax
0x08056af6:	sub al, 0x89 ; enter 0x5e5b, 0x5f ; pop ebp ; ret
0x08056b0a:	inc esp ; and al, 4 ; sub eax, 1 ; test eax, ebx
0x08056b4d:	lea ebx, dword ptr [eax + edi + 3] ; neg eax ; and ebx, eax
0x08056cb5:	sti ; mov eax, dword ptr [0x80ea508] ; cmp ebx, eax
0x08056d1d:	and eax, ebx ; test eax, eax ; mov edx, eax ; mov ebx, eax
0x080570c0:	and al, 0xc ; and eax, dword ptr [esp + 0x14] ; mov ebx, eax
0x0805726a:	cmpxchg dword ptr [edi + 8], ebx ; cmp esi, eax ; mov ebx, eax
0x08057295:	je 0x1f0 ; mov ebx, eax
0x08057451:	pop esp ; test dword ptr [eax], esi ; mov eax, dword ptr [ebx + 8] ; cmp ebx, eax
0x080574a8:	pop esp ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080574cd:	jl 0x26 ; adc byte ptr [ebx - 0x3cc6f7bd], cl
0x08057511:	mov edx, dword ptr [eax + 0x14] ; mov dword ptr [esi + 0x10], eax ; mov ebx, eax
0x080578b7:	mov edx, dword ptr [0x80eb51c] ; mov ebx, eax
0x08057c9c:	ror dword ptr [ebx], 0x56 ; push ebx ; mov edi, ecx ; mov ebx, eax
0x08057e04:	lea eax, dword ptr [ebx + 8] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08057e17:	add byte ptr [eax + eax], cl ; add byte ptr [eax], al ; xor eax, eax ; ret
0x08057efb:	add byte ptr [ebx - 0x3fcef73c], al ; pop ebx ; ret
0x0805801c:	add esp, 4 ; xor eax, eax ; pop ebx ; pop esi ; ret
0x08058030:	or al, 0 ; add byte ptr [eax], al ; jmp 0xffffffec ; mov ebx, eax
0x080580b2:	push 1 ; add byte ptr [ebx - 0x3ca4f73c], al
0x08058307:	sbb al, 0x89 ; clc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080587df:	add byte ptr [ecx + 0x80eb4f8], ah ; cmp ebx, eax
0x080587eb:	je 0x168 ; mov ebx, eax
0x080587f8:	mov ebx, dword ptr [ebx + 0x440] ; cmp ebx, eax
0x080588a8:	jne 0x288 ; cmp ebx, eax
0x08058bbc:	add dword ptr [eax], eax ; mov eax, 0x80ea520 ; ret
0x08058bc3:	ret ; lea esi, dword ptr [esi] ; xor eax, eax ; ret
0x08058bfb:	sal byte ptr [ebp + eax - 0x7d], 0xc4 ; or byte ptr [ebx - 0x3d], bl
0x08058c4b:	movsb byte ptr es:[edi], byte ptr [esi] ; push cs ; or byte ptr [eax], dl ; jg 0xb ; or bl, al
0x08058cc5:	push cs ; or byte ptr [ebp - 0x29], dh ; pop ebx ; pop esi ; ret
0x08058d1e:	or al, ch ; in al, dx ; pop ebp ; add dword ptr [eax], eax ; ret
0x08058da7:	push cs ; or byte ptr [eax], al ; add byte ptr [eax], al ; add bl, dh ; ret
0x08058dd3:	mov ch, 0xe ; or byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x08058e65:	mov eax, edx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080590dc:	mov eax, esi ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080591af:	add byte ptr [eax], al ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; ret
0x08059270:	inc dword ptr [ebx + 0x5e5b10c4] ; pop edi ; ret
0x08059287:	rol byte ptr [ebx + 0x5e5b10c4], cl ; pop edi ; ret
0x080592dd:	or al, ch ; lodsd eax, dword ptr [esi] ; sar bh, 0xff ; mov ebx, eax
0x08059371:	rol byte ptr [ebx - 0x3b7cef3c], 1 ; or al, 0xc3
0x0805955f:	inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x08059643:	xor edx, edx ; mov eax, esi ; div ecx ; cmp ebx, eax
0x0805967e:	into ; sar bh, 0xff ; test eax, eax ; mov ebx, eax
0x08059976:	pop ebx ; sub eax, 8 ; pop esi ; pop edi ; pop ebp ; ret
0x08059982:	sbb al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x08059b19:	add byte ptr [ebx - 0x2f76f73c], al ; pop ebx ; ret
0x08059e95:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3c7cfb14], al
0x0805a52a:	add byte ptr [eax], al ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; ret
0x0805a9ce:	add esp, 0x5c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805aca5:	add dword ptr [eax], eax ; add byte ptr [ebx - 0x3c76cfb9], cl
0x0805ad4c:	add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x0805adf7:	in al, dx ; or byte ptr [ebx - 0x9ebdba4], cl ; ret
0x0805adff:	add esi, dword ptr [esi + ecx - 0x7d] ; les ecx, ptr [eax] ; pop ebx ; ret
0x0805ae4a:	or byte ptr [eax + 0x16], bh ; pop ebx ; ret
0x0805ae6a:	je 0xe ; mov eax, 0x16 ; ret
0x0805ae93:	dec dword ptr [edi] ; inc esp ; ret 0xc483 ; sbb al, 0xc3
0x0805aec3:	push es ; lea eax, dword ptr [0x8067940] ; ret
0x0805b05a:	je 3 ; inc eax ; pop ebp ; pop ebx ; pop esi ; pop edi ; ret
0x0805b0bf:	push es ; lea eax, dword ptr [0x80616f0] ; ret
0x0805b0df:	inc edx ; test al, al ; jne 0xfffffff9 ; xor eax, eax ; ret
0x0805b12f:	push es ; lea eax, dword ptr [0x8063c80] ; ret
0x0805b1c3:	mov eax, dword ptr [esp + 0x10] ; pop ebx ; pop esi ; pop edi ; ret
0x0805b2c3:	je 3 ; inc eax ; sub eax, dword ptr [esp + 4] ; ret
0x0805b39b:	add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805b724:	add al, 0 ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x0805b844:	add dword ptr [eax], edi ; ret 0x940f ; shl byte ptr [ecx], 0xc3
0x0805b97a:	pop esp ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805ba48:	sub al, 8 ; add ebp, dword ptr [esp + 0x10] ; cmp ebx, eax
0x0805bb77:	and al, 0x14 ; mov eax, dword ptr [esp + 0x20] ; cmp ebx, eax
0x0805bc77:	push cs ; lea eax, dword ptr [0x8067e30] ; ret
0x0805bc7e:	ret ; lea eax, dword ptr [0x805bc90] ; ret
0x0805bc85:	ret ; lea eax, dword ptr [0x80683a0] ; ret
0x0805be23:	inc dword ptr [eax] ; je 5 ; inc eax ; pop edi ; pop esi ; ret
0x0805be53:	push es ; lea eax, dword ptr [0x80630f0] ; ret
0x0805be75:	cmp cl, byte ptr [edx] ; jne 8 ; xor eax, eax ; pop ebx ; ret
0x0805be7c:	ret ; sbb eax, eax ; sbb eax, -1 ; pop ebx ; ret
0x0805be91:	add al, ch ; leave ; enter -2, -0x7f ; ret
0x0805c12b:	sbb eax, eax ; sbb eax, -1 ; pop esi ; pop ebx ; ret
0x0805c181:	push es ; lea eax, dword ptr [0x805ec80] ; ret
0x0805c1b5:	mov esi, edx ; mov eax, dword ptr [esp + 8] ; pop edi ; ret
0x0805c1e0:	salc ; mov eax, dword ptr [esp + 8] ; cld ; pop edi ; ret
0x0805c213:	push es ; lea eax, dword ptr [0x805fd40] ; ret
0x0805c25b:	rep stosb byte ptr es:[edi], al ; mov eax, dword ptr [esp + 8] ; pop edi ; ret
0x0805c28a:	movsw word ptr es:[edi], word ptr [esi] ; rep movsd dword ptr es:[edi], dword ptr [esi] ; xchg eax, edi ; mov esi, edx ; ret
0x0805c2cf:	push es ; lea eax, dword ptr [0x80654d0] ; ret
0x0805c367:	mov byte ptr [edi], ah ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x0805c39f:	push es ; lea eax, dword ptr [0x806b180] ; ret
0x0805c437:	push cs ; lea eax, dword ptr [0x80686f0] ; ret
0x0805c43e:	ret ; lea eax, dword ptr [0x805c450] ; ret
0x0805c445:	ret ; lea eax, dword ptr [0x8068a10] ; ret
0x0805c50e:	add bh, bh ; add byte ptr [ecx + eax + 0x40], dh ; pop edi ; ret
0x0805c677:	add eax, 0x174d138 ; inc eax ; pop edi ; ret
0x0805c6c2:	mov dword ptr [edx - 4], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805c6e5:	mov byte ptr [edx - 1], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805c706:	mov dword ptr [edx - 2], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805cae5:	salc ; inc edx ; clc ; mov eax, dword ptr [esp + 4] ; ret
0x0805cbe1:	jg 0x44 ; mov bl, 0x66 ; movq qword ptr [edx - 0x3d], mm0
0x0805e2c5:	mov dword ptr [edx - 4], ecx ; mov eax, dword ptr [esp + 4] ; ret
0x0805e36c:	mov byte ptr [edx - 1], cl ; mov eax, dword ptr [esp + 4] ; ret
0x0805e3fd:	mov dword ptr [edx - 2], ecx ; mov eax, dword ptr [esp + 4] ; ret
0x0805e933:	or byte ptr [ecx + 0x24448b0a], cl ; add al, 0xc3
0x0805e9ba:	or byte ptr [eax + 0x24448b0a], cl ; add al, 0xc3
0x0805ea4b:	mov word ptr [edx], cx ; mov eax, dword ptr [esp + 4] ; ret
0x0805eae2:	add byte ptr [eax + 0x24448b02], cl ; add al, 0xc3
0x0805fa9a:	pop es ; pop esi ; pop edi ; mov eax, dword ptr [esp + 4] ; ret
0x0805ff0e:	mov byte ptr [edi], al ; pop edi ; mov eax, dword ptr [esp + 4] ; ret
0x0806059c:	add byte ptr [eax], al ; add byte ptr [eax], al ; pcmpeqb xmm0, xmm3
0x08061623:	pop es ; movzx eax, byte ptr [edx + 7] ; sub eax, ecx ; ret
0x08061631:	mov dh, 8 ; movzx eax, byte ptr [edx] ; sub eax, ecx ; ret
0x08061683:	add eax, 0x542b60f ; sub eax, ecx ; ret
0x08061693:	push es ; movzx eax, byte ptr [edx + 6] ; sub eax, ecx ; ret
0x080616e2:	add byte ptr [eax], al ; add byte ptr [edi + 2], dh ; neg eax ; ret
0x080616e5:	ja 4 ; neg eax ; ret ; xor eax, eax ; ret
0x0806187a:	mov dh, 0xc ; push cs ; sub eax, ecx ; pop esi ; pop edi ; ret
0x08061a01:	daa ; sub edi, 1 ; xor esi, esi ; cmp bl, al
0x08061a2a:	mov dh, 0xfb ; sub eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x08062b87:	push esi ; imul dword ptr [ecx] ; rcr byte ptr [edi + 0x5e], 1 ; pop ebx ; ret
0x08062ba6:	push esi ; int1 ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bb6:	push esi ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bd6:	push esi ; hlt ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062be6:	push esi ; cmc ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bf6:	push esi ; imul byte ptr [ecx] ; rcr byte ptr [edi + 0x5e], 1 ; pop ebx ; ret
0x08062e99:	jne 0x227 ; pop ebx ; ret
0x08062f56:	jne 0x18a ; pop ebx ; ret
0x08063011:	jne 0xcf ; pop ebx ; ret
0x080630af:	add byte ptr [eax], al ; add byte ptr [eax], al ; jne 0x31 ; pop ebx ; ret
0x0806318c:	add byte ptr [eax], al ; add byte ptr [eax], al ; pop ebx ; xor eax, eax ; ret
0x080631a3:	mov dh, 0 ; movzx edx, byte ptr [edx] ; sub eax, edx ; ret
0x080631ab:	nop ; lea esi, dword ptr [esi] ; xor eax, eax ; ret
0x08063287:	jne 0x9c9 ; pop ebx ; ret
0x08063310:	jne 0x956 ; pop ebx ; ret
0x080633ab:	jne 0x8bb ; pop ebx ; ret
0x08063459:	jne 0x80d ; pop ebx ; ret
0x080634d7:	jne 0x779 ; pop ebx ; ret
0x08063554:	jne 0x712 ; pop ebx ; ret
0x080635df:	jne 0x687 ; pop ebx ; ret
0x0806367d:	jne 0x5e9 ; pop ebx ; ret
0x08063705:	jne 0x54b ; pop ebx ; ret
0x08063792:	jne 0x4d4 ; pop ebx ; ret
0x0806382d:	jne 0x439 ; pop ebx ; ret
0x080638db:	jne 0x38b ; pop ebx ; ret
0x08063973:	jne 0x2dd ; pop ebx ; ret
0x0806397d:	je 0x28 ; add bl, dh ; movq mm1, qword ptr [eax - 0x3d]
0x08063982:	outsd dx, dword ptr [esi] ; dec eax ; ret ; movdqu xmm2, xmmword ptr [edx - 0x3d]
0x08063a10:	jne 0x256 ; pop ebx ; ret
0x08063abb:	jne 0x1ab ; pop ebx ; ret
0x08063b79:	jne 0xed ; pop ebx ; ret
0x08063c05:	add byte ptr [eax], al ; add byte ptr [eax], al ; jne 0x4b ; pop ebx ; ret
0x08063c39:	add byte ptr [eax], al ; add byte ptr [eax], al ; jne 0x17 ; pop ebx ; ret
0x08063e18:	movaps xmmword ptr [edx + esi], xmm2 ; pcmpeqb xmm0, xmm3
0x08063edc:	fmul dword ptr [ebp + 0xf664049] ; xlatb ; ret
0x08065180:	mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edi ; pop edi ; ret
0x080651b4:	movlpd qword ptr [edx], xmm0 ; mov eax, edi ; pop edi ; ret
0x080651fa:	add cl, byte ptr [ecx - 0x776f7be] ; pop edi ; ret
0x08065234:	movdqu xmmword ptr [edx], xmm0 ; mov eax, edi ; pop edi ; ret
0x08065240:	mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; mov eax, edi ; pop edi ; ret
0x08065268:	add cl, byte ptr [eax - 0x776fdbe] ; pop edi ; ret
0x08065276:	add al, 0x88 ; inc edx ; add al, 0x89 ; clc ; pop edi ; ret
0x08065288:	mov word ptr [edx + 4], ax ; mov eax, edi ; pop edi ; ret
0x08065296:	add ecx, dword ptr [ecx - 0x776fcbe] ; pop edi ; ret
0x080652aa:	add cl, byte ptr [eax - 0x776f7be] ; pop edi ; ret
0x080652cc:	mov word ptr [edx + 8], ax ; mov eax, edi ; pop edi ; ret
0x080652ea:	add cl, byte ptr [ecx - 0x776f8be] ; pop edi ; ret
0x0806530e:	movlps qword ptr [edx + 5], xmm1 ; mov eax, edi ; pop edi ; ret
0x0806532e:	movlps qword ptr [edx + 6], xmm1 ; mov eax, edi ; pop edi ; ret
0x0806534e:	movlps qword ptr [edx + 7], xmm1 ; mov eax, edi ; pop edi ; ret
0x0806535f:	add byte ptr [edx - 0x76fd77ff], cl ; rol bl, 1
0x08065371:	mov eax, dword ptr [ecx] ; mov word ptr [edx], ax ; mov eax, edx ; ret
0x08065387:	inc ecx ; add cl, byte ptr [eax - 0x2f76fdbe] ; ret
0x0806538f:	nop ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edx ; ret
0x080653a5:	inc ecx ; add al, 0x88 ; inc edx ; add al, 0x89 ; rol bl, 1
0x080653b7:	add al, 0x66 ; mov dword ptr [edx + 4], eax ; mov eax, edx ; ret
0x080653c5:	inc ecx ; add ecx, dword ptr [ecx - 0x2f76fcbe] ; ret
0x080653d3:	add dword ptr [esi + 0xf], esp ; adc eax, dword ptr [edx] ; mov eax, edx ; ret
0x080653e9:	adc eax, dword ptr [edx] ; mov byte ptr [edx + 8], al ; mov eax, edx ; ret
0x08065429:	adc eax, dword ptr [edx] ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x08065449:	adc eax, dword ptr [edx] ; mov dword ptr [edx + 8], eax ; mov eax, edx ; ret
0x0806546d:	movlpd qword ptr [edx + 5], xmm1 ; mov eax, edx ; ret
0x0806548d:	movlpd qword ptr [edx + 6], xmm1 ; mov eax, edx ; ret
0x080654ad:	movlpd qword ptr [edx + 7], xmm1 ; mov eax, edx ; ret
0x080654c3:	add ebx, esi ; movq qword ptr [edx], mm0 ; mov eax, edx ; ret
0x080669d1:	add dword ptr [ecx + 0x3428d02], ecx ; pop edi ; ret
0x08066a05:	movlps qword ptr [edx], xmm0 ; lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x08066a4b:	mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 0xb] ; pop edi ; ret
0x08066a85:	movq qword ptr [edx], mm0 ; lea eax, dword ptr [edx + 0xf] ; pop edi ; ret
0x08066a90:	mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; pop edi ; ret
0x08066aa3:	mov word ptr [edx], ax ; lea eax, dword ptr [edx + 1] ; pop edi ; ret
0x08066ab9:	mov byte ptr [edx + 2], al ; lea eax, dword ptr [edx + 2] ; pop edi ; ret
0x08066ad7:	mov byte ptr [edx + 4], al ; lea eax, dword ptr [edx + 4] ; pop edi ; ret
0x08066ae9:	mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 5] ; pop edi ; ret
0x08066b07:	mov dword ptr [edx + 3], eax ; lea eax, dword ptr [edx + 6] ; pop edi ; ret
0x08066b1b:	mov byte ptr [edx + 8], al ; lea eax, dword ptr [edx + 8] ; pop edi ; ret
0x08066b3d:	mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 9] ; pop edi ; ret
0x08066b5b:	mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; pop edi ; ret
0x08066b7f:	adc ecx, dword ptr [edx + 5] ; lea eax, dword ptr [edx + 0xc] ; pop edi ; ret
0x08066b9f:	adc ecx, dword ptr [edx + 6] ; lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x08066bbf:	adc ecx, dword ptr [edx + 7] ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08066bcf:	add byte ptr [edx - 0x72fd77ff], cl ; add al, bl
0x08066bf8:	add cl, byte ptr [eax + 0x428d0242] ; add al, bl
0x08066c00:	mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; ret
0x08066c16:	add al, 0x88 ; inc edx ; add al, 0x8d ; inc edx ; add al, 0xc3
0x08066c28:	mov word ptr [edx + 4], ax ; lea eax, dword ptr [edx + 5] ; ret
0x08066c36:	add ecx, dword ptr [ecx + 0x428d0342] ; push es ; ret
0x08066c44:	movlpd qword ptr [edx], xmm0 ; lea eax, dword ptr [edx + 7] ; ret
0x08066c5a:	add cl, byte ptr [eax + 0x428d0842] ; or bl, al
0x08066c7c:	mov word ptr [edx + 8], ax ; lea eax, dword ptr [edx + 9] ; ret
0x08066c9a:	add cl, byte ptr [ecx + 0x428d0742] ; or al, bl
0x08066cba:	add cl, byte ptr [ecx + 0x428d0842] ; or eax, ebx
0x08066cde:	movlps qword ptr [edx + 5], xmm1 ; lea eax, dword ptr [edx + 0xc] ; ret
0x08066cfe:	movlps qword ptr [edx + 6], xmm1 ; lea eax, dword ptr [edx + 0xd] ; ret
0x08066d1e:	movlps qword ptr [edx + 7], xmm1 ; lea eax, dword ptr [edx + 0xe] ; ret
0x08066d34:	movdqu xmmword ptr [edx], xmm0 ; lea eax, dword ptr [edx + 0xf] ; ret
0x08066e45:	movq qword ptr [edx + ebx], mm2 ; pcmpeqb xmm0, xmm3
0x08066f09:	pcmpeqb xmm3, xmm0 ; pmovmskb eax, xmm3
0x08066f47:	pminub xmm3, xmm2 ; pcmpeqb xmm0, xmm3
0x08066ff7:	add al, 0x89 ; inc edx ; add al, 0x89 ; clc ; pop edi ; ret
0x0806704d:	movlps qword ptr [edx + 8], xmm0 ; mov eax, edi ; pop edi ; ret
0x080670dc:	or byte ptr [eax - 0x776f7be], cl ; pop edi ; ret
0x0806711c:	pop es ; mov dword ptr [edx + 7], eax ; mov eax, edi ; pop edi ; ret
0x0806713c:	or byte ptr [ecx - 0x776f7be], cl ; pop edi ; ret
0x0806715e:	movlps qword ptr [edx + 5], xmm0 ; mov eax, edi ; pop edi ; ret
0x0806717e:	movlps qword ptr [edx + 6], xmm0 ; mov eax, edi ; pop edi ; ret
0x0806719e:	movlps qword ptr [edx + 7], xmm0 ; mov eax, edi ; pop edi ; ret
0x08067225:	inc ecx ; add al, 0x89 ; inc edx ; add al, 0x89 ; rol bl, 1
0x0806723b:	inc ecx ; or byte ptr [eax - 0x2f76f7be], cl ; ret
0x0806727b:	inc ecx ; pop es ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x0806729b:	inc ecx ; or byte ptr [ecx - 0x2f76f7be], cl ; ret
0x080672bd:	movlpd qword ptr [edx + 5], xmm0 ; mov eax, edx ; ret
0x080672dd:	movlpd qword ptr [edx + 6], xmm0 ; mov eax, edx ; ret
0x080672fd:	movlpd qword ptr [edx + 7], xmm0 ; mov eax, edx ; ret
0x0806731d:	movlpd qword ptr [edx + 8], xmm0 ; mov eax, edx ; ret
0x080675e8:	mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x0806763e:	adc eax, dword ptr [edx + 8] ; lea eax, dword ptr [edx + 0xf] ; pop edi ; ret
0x0806776f:	adc eax, dword ptr [edx + 5] ; lea eax, dword ptr [edx + 0xc] ; pop edi ; ret
0x0806778f:	adc eax, dword ptr [edx + 6] ; lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x080677af:	adc eax, dword ptr [edx + 7] ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08067836:	add al, 0x89 ; inc edx ; add al, 0x8d ; inc edx ; pop es ; ret
0x0806784c:	or byte ptr [eax + 0x428d0842], cl ; or bl, al
0x0806788c:	pop es ; mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; ret
0x080678ac:	or byte ptr [ecx + 0x428d0842], cl ; or eax, ebx
0x080678ce:	movlps qword ptr [edx + 5], xmm0 ; lea eax, dword ptr [edx + 0xc] ; ret
0x080678ee:	movlps qword ptr [edx + 6], xmm0 ; lea eax, dword ptr [edx + 0xd] ; ret
0x0806790e:	movlps qword ptr [edx + 7], xmm0 ; lea eax, dword ptr [edx + 0xe] ; ret
0x0806792e:	movlps qword ptr [edx + 8], xmm0 ; lea eax, dword ptr [edx + 0xf] ; ret
0x08067a9a:	add al, byte ptr [eax] ; add byte ptr [ebp - 0x3ca0f8b9], cl
0x08067ae0:	add al, byte ptr [eax] ; add byte ptr [ebp - 0x3ca0fcb9], cl
0x08067b3d:	add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0f0b9], cl
0x08067b83:	add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0f4b9], cl
0x08067bc9:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f8b9], cl
0x08067c1c:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f0b9], cl
0x08067c2c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi] ; pop edi ; ret
0x08067c3d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0feb9], cl
0x08067c4d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fdb9], cl
0x08067c5d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fcb9], cl
0x08067c6d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fbb9], cl
0x08067c7d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fab9], cl
0x08067c8d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f9b9], cl
0x08067c9d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f7b9], cl
0x08067cad:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f6b9], cl
0x08067cbd:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f5b9], cl
0x08067ccd:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f4b9], cl
0x08067cdd:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f3b9], cl
0x08067ced:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f2b9], cl
0x08067cfd:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f1b9], cl
0x08067d0c:	add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop edi ; ret
0x08067d72:	add byte ptr [eax], al ; add eax, edi ; add eax, ecx ; pop edi ; ret
0x08067e13:	or al, 0x83 ; out dx, eax ; adc byte ptr [ecx], al ; clc ; pop edi ; ret
0x08067e1c:	lea esi, dword ptr [esi] ; xor eax, eax ; pop edi ; ret
0x08068000:	pcmpeqb xmm3, xmm1 ; pmovmskb eax, xmm3
0x08068042:	add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0fcb9], cl
0x08068065:	add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0f8b9], cl
0x08068134:	enter 0, 0 ; xor eax, eax ; pop edi ; ret
0x0806813c:	lea esi, dword ptr [esi] ; mov eax, edi ; pop edi ; ret
0x080682cc:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, edi ; pop edi ; ret
0x08068312:	push es ; jb 0x7e ; lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x08068322:	pop es ; jb 0x6e ; lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x08068332:	or dword ptr [edx + 0x5b], esi ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x08068342:	or dh, byte ptr [edx + 0x4b] ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x08068352:	or esi, dword ptr [edx + 0x3b] ; lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x08068362:	or eax, 0x478d2b72 ; or al, 0x5f ; ret
0x08068372:	push cs ; jb 0x1e ; lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x080683db:	leave ; sub edx, ecx ; jbe 0x35 ; add eax, ecx ; ret
0x08068598:	pcmpeqb mm1, qword ptr [edi + 0x30] ; pmovmskb eax, xmm3
0x080685ad:	mov esp, 0x7448dc0 ; xor byte ptr [edi - 0x3d], bl
0x0806861c:	mov al, 0 ; add byte ptr [eax], al ; xor eax, eax ; pop edi ; ret
0x08068652:	test eax, eax ; jne 0x5e ; xor eax, eax ; pop edi ; ret
0x0806866f:	add byte ptr [edi], cl ; mov esp, 0x5ff801c0 ; ret
0x08068681:	mov esp, 0x38448dc0 ; adc byte ptr [edi - 0x3d], bl
0x08068691:	mov esp, 0x38448dc0 ; and byte ptr [edi - 0x3d], bl
0x080686a3:	sub edx, eax ; jbe 0x3d ; add eax, edi ; pop edi ; ret
0x080686b8:	jbe 0x28 ; lea eax, dword ptr [edi + eax + 0x10] ; pop edi ; ret
0x080686c8:	jbe 0x18 ; lea eax, dword ptr [edi + eax + 0x20] ; pop edi ; ret
0x080686d8:	jbe 8 ; lea eax, dword ptr [edi + eax + 0x30] ; pop edi ; ret
0x080686dc:	pop es ; xor byte ptr [edi - 0x3d], bl ; xor eax, eax ; pop edi ; ret
0x080688e4:	test al, 0 ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 7] ; ret
0x08068937:	mov ch, 0 ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xf] ; ret
0x0806893b:	lea eax, dword ptr [edx + 0xf] ; ret ; nop ; mov eax, edx ; ret
0x0806894c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 1] ; ret
0x0806895c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 2] ; ret
0x0806896c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 4] ; ret
0x0806897c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 5] ; ret
0x0806898c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 6] ; ret
0x0806899c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 8] ; ret
0x080689ac:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 9] ; ret
0x080689bc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xa] ; ret
0x080689cc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xc] ; ret
0x080689dc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xd] ; ret
0x080689ec:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xe] ; ret
0x080689fb:	mov edi, 0 ; xor eax, eax ; ret
0x08068a3f:	je 0x11 ; bsf ecx, ecx ; add eax, ecx ; ret
0x08068a8a:	bsf eax, eax ; add eax, edx ; add eax, ecx ; ret
0x08068bc7:	pcmpeqb mm1, qword ptr [edx + 0x30] ; pmovmskb eax, xmm3
0x08068bd7:	bsf eax, eax ; lea eax, dword ptr [edx + eax + 0x30] ; ret
0x08068be0:	bsf eax, eax ; lea eax, dword ptr [eax + edx - 0x10] ; ret
0x08068bee:	add byte ptr [eax], al ; bsf eax, eax ; add eax, edx ; ret
0x08068c00:	bsf eax, eax ; lea eax, dword ptr [eax + edx + 0x10] ; ret
0x08068c10:	bsf eax, eax ; lea eax, dword ptr [eax + edx + 0x20] ; ret
0x08068c6c:	add al, 0xb3 ; je 0xffffffe4 ; pop ebx ; pop esi ; pop edi ; ret
0x08068c76:	add byte ptr es:[ebx + 0x31], bl ; rcr byte ptr [esi + 0x5f], 0xc3
0x0806b007:	test eax, eax ; add ecx, dword ptr [eax + ecx] ; sub eax, ecx ; ret
0x0806b155:	ja 4 ; neg eax ; add esp, 4 ; ret
0x0806b158:	fadd dword ptr [ebx + 0x31c304c4]
0x0806b478:	add ecx, dword ptr [eax + ecx] ; sub eax, ecx ; pop esi ; pop edi ; ret
0x0806b47c:	enter 0x5f5e, -0x3d ; xor eax, eax ; pop edi ; ret
0x0806b493:	add byte ptr [eax], al ; ja 6 ; neg eax ; pop edi ; ret
0x0806ba6f:	add byte ptr [eax], al ; mov eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x0806bdaa:	mov dword ptr [edx + ecx - 4], ebx ; mov eax, edx ; pop ebx ; ret
0x0806beee:	add byte ptr [eax], al ; cpuid ; mov ebp, ebx ; mov ebx, eax
0x0806bf9b:	and al, 0xc ; cmp edx, 1 ; sete bl
0x0806bfec:	lea eax, dword ptr [ebx + 1] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806c18b:	pop esi ; pop edi ; pop ebp ; ret ; nop ; xor eax, eax ; ret
0x0806c200:	xor eax, eax ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806c286:	add byte ptr [eax], al ; and ch, 0xf0 ; cmovne eax, ebx
0x0806c3bf:	cmp edx, 2 ; je 0x11 ; xor eax, eax ; ret
0x0806c437:	add esp, 0x10 ; add esp, 8 ; pop ebx ; ret
0x0806c471:	add byte ptr [eax], al ; xor eax, eax ; add esp, 0x1c ; ret
0x0806c486:	mov eax, dword ptr [esp + 0xc] ; add esp, 0x1c ; ret
0x0806c67c:	add byte ptr [eax], al ; add byte ptr [eax], al ; push esi ; push ebx ; mov ebx, eax
0x0806c6c3:	or byte ptr [ecx], al ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806c72f:	je 0x21 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806c7c7:	ljmp -0x7680:0x4d8bfffe ; ret
0x0806c7cc:	or byte ptr [ecx + 0x10c483c3], 0x83 ; ret
0x0806c987:	pop ebx ; sub eax, 1 ; pop esi ; pop edi ; pop ebp ; ret
0x0806c99c:	add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806c9d1:	add byte ptr [eax], cl ; add byte ptr [edi], cl ; inc ebx ; shr ebx, -0x3d
0x0806c9e5:	adc byte ptr [ebx], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x0806cf9a:	add byte ptr ss:[eax], al ; cmp eax, 0xff ; mov ebx, eax
0x0806cfbf:	dec dword ptr [edi] ; cmp dword ptr [edx + 0x36], 0 ; add bl, al
0x0806cfe7:	inc esp ; inc esp ; and al, 0x18 ; add esp, 0x2c ; ret
0x0806d077:	dec dword ptr [edi] ; add edx, 0x35 ; add byte ptr [eax], al ; ret
0x0806d0e7:	dec dword ptr [edi] ; adc dword ptr [edx + 0x35], 0 ; add bl, al
0x0806d11b:	dec dword ptr [edi] ; sbb dword ptr [esi], 0x35 ; add byte ptr [eax], al ; ret
0x0806d157:	dec dword ptr [edi] ; and edx, 0x34 ; add byte ptr [eax], al ; ret
0x0806d1bf:	push dword ptr [edi + 0xe] ; add esp, 8 ; pop ebx ; ret
0x0806d1d2:	xor al, 0 ; add byte ptr [ebx - 0x3ca4f73c], al
0x0806d20b:	ja 0x55 ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x0806d266:	cmpsb byte ptr [esi], byte ptr es:[edi] ; call 0x33da ; mov ebx, eax
0x0806d90b:	push esi ; mov eax, dword ptr [esp + 0x3c] ; push edi ; sub ebx, eax
0x0806d9cb:	dec dword ptr [edi] ; sub dword ptr [esi + 0x2c], 0 ; add bl, al
0x0806da1f:	add esp, 4 ; mov eax, ebx ; pop ebx ; pop esi ; ret
0x0806da6e:	add byte ptr [eax], al ; mov eax, esi ; neg eax ; cmp ebx, eax
0x0806da83:	push cs ; or byte ptr [ebp - 0xcfd8b40], al ; ret
0x0806dac7:	dec ecx ; inc esp ; and al, 0x18 ; add esp, 0x2c ; ret
0x0806db07:	push dword ptr [edi + 0xb] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806dbbb:	dec dword ptr [edi] ; cmp dword ptr [esi + 0x2a], 0 ; add bl, al
0x0806dbed:	dec dword ptr [edi] ; or dword ptr [edx + ebp], 0 ; ret
0x0806dc1d:	dec dword ptr [edi] ; sbb dword ptr [edx + ebp], 0 ; add bl, al
0x0806dc32:	mov esi, edx ; push ebx ; mov edx, dword ptr [eax + 4] ; mov ebx, eax
0x0806dc82:	salc ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0806dd5b:	jl 0x26 ; and byte ptr [ebp - 0x3c60f025], al
0x0806dd62:	ret ; mov ebp, ebx ; test edi, edi ; setg bl
0x0806dda6:	add esp, 8 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806dfa4:	sal byte ptr [ecx + ebx - 0x73], 0x53 ; add al, 0x83 ; ret
0x0806dfb6:	jne 0xffffffe2 ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; ret
0x0806e039:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3c7c1bbb], cl
0x0806e0cd:	je 0x28 ; add byte ptr [ebx - 0x3c7c1bbb], cl
0x0806e3e2:	mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x0806e5bb:	add dword ptr [edi - 0xe], esi ; mov eax, esi ; imul eax, ebx
0x0806e5d7:	jne 0xfffffff9 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806e5ea:	add al, ch ; mov al, byte ptr [0x89000206] ; ret
0x0806e5f7:	mov ch, 0xe ; or byte ptr [ebx - 0x3cc6ef3c], al
0x0806e87d:	inc dword ptr [ebx - 0x3f7aef3c] ; jne 0xffffffcb
0x0806e8c2:	les edx, ptr [eax] ; test eax, eax ; je 0x84 ; mov ebx, eax
0x0806e998:	add byte ptr [eax], al ; test eax, eax ; cmove eax, edx ; ret
0x0806e9d2:	push cs ; or byte ptr [ebx + 0x5e5b04c4], al ; ret
0x0806ea28:	or al, 0x83 ; les edx, ptr [eax] ; pop ebx ; pop esi ; pop edi ; ret
0x0806ea69:	dec dword ptr [edi] ; adc eax, 0x1b ; add byte ptr [eax], al ; ret
0x0806eace:	cmp edx, dword ptr [esp + 4] ; setae al ; ret
0x0806eb04:	test eax, eax ; jne 0xfffffff1 ; pop esi ; pop ebx ; pop edx ; ret
0x0806eb0d:	je 0x28 ; add byte ptr [ebx + 0x51], dl ; push edx ; mov ebx, eax
0x0806eb5b:	test byte ptr [eax], al ; add byte ptr [eax], al ; cmp edx, eax ; mov ebx, eax
0x0806eb6a:	or dh, byte ptr [edi + edx - 0x7d] ; les ecx, ptr [eax] ; pop ebx ; ret
0x0806ed8a:	pop ebx ; pop esi ; pop edi ; pop ebp ; ret ; nop ; cmp ebx, eax
0x0806f09a:	les edx, ptr [eax] ; jmp 0xffffffe6 ; nop ; ret
0x0806f0e3:	push es ; or byte ptr [ecx - 0x3776fbbf], cl ; ret
0x0806f54a:	xchg eax, edx ; insd dword ptr es:[edi], dx ; add al, byte ptr [eax] ; test eax, eax ; mov ebx, eax
0x0806f92a:	out -3, eax ; inc dword ptr [ebp - 0x3cbbf040]
0x08070433:	mov eax, 1 ; pop esi ; pop edi ; ret
0x08070452:	mov esp, 0xc085080e ; je 0xe ; ret
0x08070463:	or al, ch ; test dword ptr [esi], 0xc3890002
0x0807046a:	ret ; call 0x20ee6 ; cmp ebx, eax
0x0807047c:	lahf ; push cs ; or byte ptr [ebx - 0x3ca4f73c], al
0x08070487:	add al, ch ; push cs ; add al, byte ptr [eax] ; mov ebx, eax
0x08070490:	fmul qword ptr [esi] ; add al, byte ptr [eax] ; xor edx, edx ; cmp ebx, eax
0x08070514:	rol byte ptr [ecx], 1 ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; ret
0x0807052f:	loope 5 ; pop ebx ; shl eax, cl ; pop esi ; pop edi ; ret
0x08070649:	mov dword ptr [edx], eax ; mov eax, 0xffffffff ; ret
0x08070af9:	push ebp ; push edi ; mov edi, edx ; push esi ; push ebx ; mov ebx, eax
0x08070d76:	jbe 2 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08070d8e:	add byte ptr [eax], al ; mov eax, dword ptr [0x80ebcdc] ; ret
0x08070de7:	add byte ptr [eax], al ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08071295:	or byte ptr [ebx - 0x97ae78a], cl ; jne 0xffffffcb
0x080713c5:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3cfe3b8b], cl
0x080714dc:	test eax, eax ; cmove eax, dword ptr [ebp - 0x48] ; mov ebx, eax
0x080715d2:	add esi, 1 ; add ebx, 0x3c
0x080717c1:	sal byte ptr [esi + 0x17], 1 ; imul eax, esi, 0x3c ; add ebx, eax
0x0807186e:	add byte ptr es:[ebp + 0x57], dl ; push esi ; push ebx ; mov ebx, eax
0x0807190c:	mov eax, dword ptr [eax + 4] ; test eax, eax ; cmove eax, ebx
0x08071e02:	mov ch, 0xc ; or byte ptr [ebx - 0x3c7cfe3a], al
0x08071e5b:	add dword ptr [eax], eax ; add byte ptr [ebx - 0x3c7cfe3f], al
0x08072099:	les edx, ptr [eax] ; test eax, eax ; je 0x49 ; mov ebx, eax
0x080728bb:	or byte ptr [ebx - 0x77], bl ; inc esi ; xor byte ptr [esi + 0x5f], bl ; ret
0x08072af6:	add al, 0x8b ; pop es ; add edx, 1 ; cmp ebx, eax
0x08072ba1:	cmp al, 0x89 ; fcomp dword ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x08072c1c:	or al, ch ; into ; push 0xc389fffd
0x08072e72:	and al, 0x6c ; sub ebx, esi ; sub eax, edx ; cmp ebx, eax
0x08072eee:	and byte ptr [ecx], bl ; fild dword ptr [ebx - 0x3c7c011d]
0x08072f76:	add al, 0x8b ; add dword ptr [ebx - 0x3cc6fe3e], eax
0x080732e1:	cmp al, 0x89 ; rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; pop ebp ; ret
0x08073a1f:	and al, 4 ; push es ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3d], dh
0x08073ca2:	and al, 0x1c ; mov dword ptr [esp + 0x3c], eax ; mov ebx, eax
0x08073fa7:	add ecx, 1 ; mov byte ptr [ecx + 3], dl ; cmp ebx, eax
0x08074655:	mov eax, dword ptr [ebp] ; cmp eax, 0x7f ; jbe 0xffffffcb
0x08074973:	mov dword ptr [eax], edi ; mov edi, dword ptr [esp + 0x74] ; mov ebx, eax
0x08074ed2:	je 0xffffff8b ; stc ; mov eax, dword ptr [eax + 0x14] ; mov ebx, eax
0x08074fc8:	rol byte ptr [eax + 0xa7580fa], 0x89 ; ret
0x08075d6f:	nop ; mov edx, dword ptr [ebp + 0x14] ; mov eax, dword ptr [edx] ; mov ebx, eax
0x08075f20:	inc esp ; and al, 0x1c ; and eax, 7 ; mov ebx, eax
0x080768fb:	add al, byte ptr [eax] ; add byte ptr [ebx - 0x3c76fd19], al
0x0807791b:	movzx esi, word ptr [edi + 8] ; xor edx, edx ; mov ebx, eax
0x08077abe:	jbe 2 ; mov eax, dword ptr [0x80eb5c0] ; ret
0x08077bb1:	push cs ; add esp, 0x60 ; pop ebx ; pop esi ; pop edi ; ret
0x08077c02:	mov bh, bh ; inc dword ptr [ebx - 0x3c760008]
0x08077cda:	push esi ; mov esi, edx ; push ebx ; mov edi, ecx ; mov ebx, eax
0x08077d02:	rol byte ptr [ebx + 0x5e5b10c4], 0x5f ; ret
0x08077d28:	pop ss ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x08077d2e:	pop edi ; ret ; mov eax, 0xffffffff ; ret
0x08077eb7:	mov bh, 0 ; mov esi, edx ; add eax, edx ; mov ebx, eax
0x08078110:	adc esi, edi ; inc dword ptr [ebx - 0x3c0ce33c]
0x0807814e:	add esi, dword ptr [edi + ecx - 0x7d] ; les ecx, ptr [eax] ; pop ebx ; ret
0x0807819b:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3ca4f73c], al
0x0807830b:	les edx, ptr [eax] ; test eax, eax ; mov esi, eax ; mov ebx, eax
0x08078450:	add al, 0x83 ; sti ; or eax, 0xc3831a74
0x08078569:	sbb al, 0x5b ; mov eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08078984:	jg 4 ; add byte ptr [eax], al ; mov esi, ebx ; mov ebx, eax
0x08078bd8:	cmpsd dword ptr [esi], dword ptr es:[edi] ; mov eax, dword ptr [0x80eaef8] ; cmp ebx, eax
0x08078c69:	stc ; pop edi ; movsx esi, cl ; sete bl
0x08078c71:	cmp cl, 0x3a ; mov edi, ebx ; sete bl
0x08078cfb:	add esi, eax ; add ch, byte ptr [edi] ; mov byte ptr [eax], 0 ; ret
0x080792ca:	add al, 0 ; add byte ptr [ebp - 0x3c0cff8a], cl
0x0807932e:	add ecx, 0x1c ; mov esi, edx ; push ecx ; mov ebx, eax
0x080795bf:	nop ; call 0xffff7081 ; mov ebx, eax
0x080796aa:	adc byte ptr [0xfffff000], bh ; mov ebx, eax
0x080797ab:	jmp 0xfffffdd9 ; push ebx ; mov ebx, eax
0x080797e3:	sti ; std ; inc dword ptr [ebx - 0x3ca4e73c]
0x08079835:	push esp ; and al, 8 ; mov eax, dword ptr [eax] ; sub eax, dword ptr [edx] ; ret
0x08079a3d:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3c7cfe3e], al
0x08079dc9:	inc edx ; and al, 0x6c ; add eax, dword ptr [edx + 0x20] ; cmp ebx, eax
0x08079dcc:	add eax, dword ptr [edx + 0x20] ; cmp ebx, eax ; cmovge eax, ebx
0x08079fcc:	lea esi, dword ptr [esi] ; mov eax, dword ptr [edi] ; cmp ebx, eax
0x0807a0f6:	mov ecx, dword ptr [ebp - 0x1d0] ; sub ebx, eax
0x0807a30b:	fsubr qword ptr [esi + 0x774080e] ; pop ebx ; ret
0x0807a349:	mov eax, dword ptr gs:[eax] ; mov eax, dword ptr [eax + edx*4 + 0x40] ; ret
0x0807a365:	add eax, dword ptr gs:[0] ; ret
0x0807a3cc:	add byte ptr [edx], al ; add byte ptr [eax], al ; mov dword ptr gs:[edx], eax ; ret
0x0807a439:	scasb al, byte ptr es:[edi] ; push esp ; and al, 0xc ; add esp, 0x14 ; ret
0x0807a46c:	call dword ptr [0x80ea9f0] ; mov ebx, eax
0x0807a5a5:	add dword ptr [eax], eax ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x0807a663:	xor al, 0x83 ; in al, dx ; sbb byte ptr [ebx + 0x5e], 0x5f ; ret
0x0807a69c:	inc dword ptr [ebx + 0x5e5b80ec] ; pop edi ; ret
0x0807aa4f:	add byte ptr [eax], al ; mov ebx, dword ptr [esp + 8] ; add ebx, eax
0x0807ac20:	xor edi, edi ; mov eax, edi ; mov edi, ebx ; mov ebx, eax
0x0807ac2a:	lea esi, dword ptr [esi] ; mov ebx, eax
0x0807ac8c:	add byte ptr [ecx + 0x80eb524], ah ; cmp ebx, eax
0x0807b0db:	das ; std ; jmp dword ptr [esi - 0x70] ; xor eax, eax ; ret
0x0807b67b:	jne 0xffffffed ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0807b6e3:	jne 0xffffffe5 ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0807b79f:	add byte ptr [ecx], dh ; rol byte ptr [ebx - 0x3c7cfe17], cl
0x0807b7c2:	and al, 4 ; movsx eax, byte ptr [eax + 5] ; cmp ebx, eax
0x0807b7ca:	jge 0x100 ; sub ebx, eax
0x0807b817:	and eax, 1 ; shl eax, 2 ; or ebx, eax
0x0807b847:	and al, 0x89 ; enter 0x5e5b, 0x5f ; pop ebp ; ret
0x0807b960:	add esp, 0x10 ; mov eax, esi ; pop ebx ; pop esi ; ret
0x0807b9c8:	add esp, 0x24 ; mov eax, esi ; pop ebx ; pop esi ; ret
0x0807bba4:	push esi ; push ebx ; mov esi, edx ; mov edi, ecx ; mov ebx, eax
0x0807bce1:	cmc ; std ; inc dword ptr [ebx - 0x3cd6ef3c]
0x0807bd75:	hlt ; std ; inc dword ptr [ebx - 0x3cd6ef3c]
0x0807be48:	fadd qword ptr [eax] ; add byte ptr [ebx - 0x3cfee7b2], cl
0x0807c002:	test dword ptr [ebx + edi*8 - 0x7cac0001], ebp ; ret
0x0807c360:	ja 0x111e ; add ebx, eax
0x0807c3c1:	add byte ptr [eax], al ; add dword ptr [ebp + 0x14], 1 ; add ebx, eax
0x0808065d:	je 0xe3 ; mov ebx, eax
0x0808069d:	add al, 0x91 ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x0808070b:	add byte ptr [eax], al ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x08080737:	mov dword ptr [ebx], eax ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x08080772:	in eax, 0x57 ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08080893:	test eax, 0xc483fffd ; adc byte ptr [ecx], ch ; ret
0x08080910:	test al, 0xfd ; inc dword ptr [ebx - 0x3cd6ef3c]
0x080809dc:	sal bh, cl ; test byte ptr [ecx], 0xd8 ; pop ebx ; pop esi ; ret
0x08080cc6:	sub eax, dword ptr [ebp - 0x98] ; mov ebx, eax
0x08080dbd:	je 0x28 ; add byte ptr [ebx - 0x3c7c6fbb], cl
0x08081bf8:	js 0x9d8 ; mov ebx, eax
0x08081cde:	sub eax, 1 ; mov dword ptr [ebp - 0x74], eax ; mov ebx, eax
0x08081d25:	mov dword ptr [ebp - 0x8c], eax ; mov ebx, eax
0x0808260a:	add byte ptr [eax], al ; add byte ptr [ecx - 0x3cd66f83], cl
0x08082987:	inc ebp ; mov word ptr [eax], es ; add byte ptr [eax], al ; add cl, ch ; ret
0x08082c76:	dec dword ptr [ecx + 0x8c483d0] ; pop ebx ; ret
0x08082d22:	add dword ptr [ecx + 0xf08247c], ecx ; test eax, ebx
0x08082dde:	fxam ; fnstsw ax ; fstp st(0) ; mov ebx, eax
0x08082f62:	or al, 8 ; mov dword ptr [esp + 0xc], ebx ; mov ebx, eax
0x080831d3:	adc byte ptr [ecx], dh ; leave ; add eax, 1 ; cmp ebx, eax
0x08083241:	add ecx, dword ptr [ebp - 0x3ffe6dfc] ; sub ebx, eax
0x08083ada:	mov esp, 0x27 ; add dh, dh ; ret
0x08083cfb:	add al, byte ptr [eax] ; add byte ptr [ebp - 0x3c7cfbb6], cl
0x08083d6b:	cmp eax, 0xff ; sete al ; jmp 0xffffffcb
0x08083fb3:	jne 0xfffff037 ; add ebx, eax
0x080844c0:	mov ebx, dword ptr [ecx] ; test ebx, ebx ; je 0x1d ; cmp ebx, eax
0x0808451f:	add esp, 0x14 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080846f4:	or byte ptr [edi + edi*8 + 0x1cc483ff], bl ; ret
0x08084712:	mov eax, dword ptr [edx + 0xc] ; mov ebx, dword ptr [edx + 0x10] ; sub ebx, eax
0x0808477c:	sub al, 0x85 ; add byte ptr [eax], al ; add byte ptr [eax], al ; sub ebx, eax
0x08084944:	mov edx, dword ptr [ebp - 0x2c] ; sub edx, 4 ; cmp ebx, eax
0x0808497c:	sub eax, 4 ; sub edx, 4 ; cmp ebx, eax
0x08084992:	hlt ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08084a78:	push esi ; add byte ptr [eax], al ; mov ecx, dword ptr [esi + 0x18] ; add ebx, eax
0x080852ed:	lea eax, dword ptr [ebp - 0x420] ; cmp ebx, eax
0x08085324:	test dword ptr [ebx + edi*8 + 0x3901ffff], esp ; ret
0x080854e2:	sub esi, 1 ; test esi, esi ; setg bl
0x08085732:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3c76fbbf], cl
0x080859f2:	call dword ptr [eax + 0x1c] ; add esp, 0x10 ; cmp ebx, eax
0x08085c62:	mov eax, dword ptr [ebp - 0x478] ; mov ebx, eax
0x08085d12:	dec dword ptr [ecx + 0x2f8c1c8] ; mov ebx, eax
0x08085dfe:	and edi, esp ; inc dword ptr [ebx - 0x3c76ef3c]
0x08085e69:	add esp, 0x10 ; cmp eax, 0xff ; mov ebx, eax
0x08085f23:	mov dword ptr [ebp - 0x478], edx ; cmp ebx, eax
0x08085f5b:	push eax ; add byte ptr [eax], al ; add esp, 0x10 ; cmp ebx, eax
0x08085f7b:	dec dword ptr [ecx + 0x10452bd0] ; cmp ebx, eax
0x080860a9:	test dword ptr [eax], eax ; add byte ptr [ebx - 0x3c76ef3c], al
0x080863e6:	push ds ; cld ; inc dword ptr [ebx - 0x3c76ef3c]
0x08086852:	dec dword ptr [ecx + 0x1c683d9] ; mov ebx, eax
0x08087219:	aas ; std ; inc dword ptr [ebx - 0x3c76ef3c]
0x08087a9c:	add al, 0 ; add byte ptr [edi], cl ; mov dh, 0x80 ; add bl, al
0x08087adf:	add eax, dword ptr [eax] ; add byte ptr [edi], cl ; mov dh, 0x80 ; add bl, al
0x08088142:	add byte ptr [eax], al ; push edx ; push edx ; push 0x2b ; jmp 0xffffffcb
0x0808820d:	add byte ptr [eax], al ; push eax ; push eax ; push 0x2b ; jmp 0xffffffcb
0x08088888:	idiv bh ; dec dword ptr [edi] ; mov dh, 0x80 ; add bl, al
0x08089862:	mov edi, ecx ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08089a8e:	jmp 0xffffffdf ; pop ebx ; mov eax, ecx ; pop esi ; pop edi ; ret
0x08089cd3:	or al, 0x5b ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x0808a090:	mov dword ptr [eax], ebx ; mov eax, ecx ; pop ebx ; pop esi ; pop edi ; ret
0x0808a6c7:	les edx, ptr [eax] ; test eax, eax ; je 0x61 ; add ebx, eax
0x0808a6e0:	add byte ptr [ebx + 0x5e5b60c4], al ; pop edi ; ret
0x0808a74e:	adc byte ptr [ebp + 0x3b8965c0], al ; jne 0xffffffcb
0x0808a7f1:	hlt ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808a8b3:	les edx, ptr [eax] ; test eax, eax ; je 0x25 ; add ebx, eax
0x0808a981:	sal bh, cl ; neg byte ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x0808aaee:	hlt ; pop ebx ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x0808ab4d:	mov eax, dword ptr [esi + 4] ; mov ebx, dword ptr [esi + 8] ; sub ebx, eax
0x0808abe4:	mov ebx, dword ptr [esi + 8] ; mov dword ptr [ebp - 0x20], eax ; sub ebx, eax
0x0808ac05:	test eax, eax ; mov ecx, eax ; je 0xd ; mov ebx, eax
0x0808afec:	dec esp ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808b17c:	inc esp ; and al, 0x1c ; mov eax, dword ptr [ecx + 0x20] ; sub ebx, eax
0x0808b222:	adc bh, bh ; je 0x28 ; and byte ptr [eax - 0x18], dl ; ret
0x0808b290:	adc byte ptr [ecx + 0x48890850], cl ; and bl, al
0x0808b2c2:	mov dword ptr [eax + 8], ebx ; mov dword ptr [eax + 0x20], ecx ; pop ebx ; ret
0x0808b302:	mov dword ptr [ebx + 0x3c], eax ; add esp, 8 ; pop ebx ; ret
0x0808b56a:	adc byte ptr [ebx - 0x2f76f73c], al ; pop ebx ; ret
0x0808b696:	sbb al, 0x5b ; pop esi ; sub eax, edi ; pop edi ; pop ebp ; ret
0x0808b6bf:	sal byte ptr [esi + ecx - 0x7d], cl ; les ecx, ptr [eax] ; pop ebx ; ret
0x0808b712:	sbb byte ptr [eax], ch ; and byte ptr [eax], al ; add al, ch ; ret
0x0808b73b:	add dword ptr [eax], eax ; add byte ptr [eax], al ; add esp, 0xc ; ret
0x0808b945:	mov eax, dword ptr [edx] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0808bc1a:	sar eax, 2 ; sub eax, 1 ; pop ebx ; ret
0x0808bcbc:	inc ecx ; or cl, al ; cli ; add ch, byte ptr [ecx] ; rol bl, 1
0x0808bd25:	xchg eax, ecx ; mov dword ptr [eax], edx ; xor eax, eax ; pop ebx ; pop esi ; ret
0x0808be03:	add al, 0x8b ; inc eax ; and al, 0x8b ; inc eax ; sub bl, al
0x0808be9c:	add al, byte ptr [eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; ret
0x0808beac:	add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; ret
0x0808bebd:	les edx, ptr [eax] ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; ret
0x0808c1e5:	sub al, 0x89 ; call 0x5d5f5e62 ; ret
0x0808c2ed:	push esi ; call 0xfffbbef3 ; mov ebx, eax
0x0808c491:	push es ; lea eax, dword ptr [0x808d810] ; ret
0x0808c4c3:	push es ; lea eax, dword ptr [0x808cff0] ; ret
0x0808c681:	jne 5 ; lea eax, dword ptr [esi + 3] ; pop esi ; pop edi ; ret
0x0808c943:	jne 0x8d ; mov ebx, eax
0x0808cc33:	add edx, eax ; add esi, dword ptr [esp + 0x14] ; cmp ebx, eax
0x0808cda8:	push dword ptr [ebp + 0x75] ; add eax, 1 ; cmp ebx, eax
0x0808cdef:	dec esp ; pop ebx ; pop esi ; add eax, edx ; pop edi ; pop ebp ; ret
0x0808cf0c:	or al, 0x89 ; rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; pop ebp ; ret
0x0808d054:	sub al, 4 ; add byte ptr [eax], al ; push esi ; push ebx ; mov ebx, eax
0x0808d0b4:	enter 3, 0 ; push esi ; push ebx ; mov ebx, eax
0x0808d13e:	add byte ptr [eax - 0x3fcea1a5], dl ; pop edi ; ret
0x0808d152:	xlatb ; retf -0x367b ; jne 0x1e ; mov ebx, eax
0x0808d242:	ljmp -0x16a2:0x5bfffffe ; ret
0x0808d330:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca00fb9], cl
0x0808d355:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca00bb9], cl
0x0808d37f:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca007b9], cl
0x0808d3a8:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca003b9], cl
0x0808d3ad:	cld ; pop edi ; ret ; lea eax, dword ptr [edi - 0xf] ; pop edi ; ret
0x0808d3bd:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca00db9], cl
0x0808d3cd:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca00cb9], cl
0x0808d3dd:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca00ab9], cl
0x0808d3ed:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca009b9], cl
0x0808d3fd:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca008b9], cl
0x0808d40d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca006b9], cl
0x0808d41d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca005b9], cl
0x0808d42d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca004b9], cl
0x0808d43d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca002b9], cl
0x0808d44d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca001b9], cl
0x0808d45d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca000b9], cl
0x0808d694:	add byte ptr [edi], cl ; mov ebp, 0x5ff801c0 ; ret
0x0808d6a0:	test edx, edx ; jne 0xffffffe0 ; push esi ; push ebx ; mov ebx, eax
0x0808d7e5:	rol byte ptr [ecx], 0xf8 ; sub eax, 0x10 ; pop edi ; ret
0x0808d7ec:	ret ; lea esi, dword ptr [esi] ; xor eax, eax ; pop edi ; ret
0x0808d7fe:	add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; xor eax, eax ; ret
0x0808daf2:	add eax, dword ptr [eax] ; add byte ptr [ebx - 0x3ca0fc40], al
0x0808db18:	add eax, dword ptr [eax] ; add byte ptr [ebx - 0x3ca0f840], al
0x0808db3f:	add eax, dword ptr [eax] ; add byte ptr [ebx - 0x3ca0f440], al
0x0808db68:	add eax, dword ptr [eax] ; add byte ptr [ebx - 0x3ca0f040], al
0x0808dbd0:	jne 0x10 ; mov eax, dword ptr [esp + 0xc] ; pop edi ; ret
0x0808dc0e:	add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0fcc0], cl
0x0808dc41:	add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0f8c0], cl
0x0808dc78:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f4c0], cl
0x0808dca1:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f0c0], cl
0x0808dcb6:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fec0], cl
0x0808dcc6:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fdc0], cl
0x0808dcd6:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fbc0], cl
0x0808dce2:	push es ; jb 0x7e ; lea eax, dword ptr [eax + 5] ; pop edi ; ret
0x0808dcf2:	pop es ; jb 0x6e ; lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x0808dd02:	or dword ptr [edx + 0x5b], esi ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x0808dd12:	or dh, byte ptr [edx + 0x4b] ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x0808dd22:	or esi, dword ptr [edx + 0x3b] ; lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x0808dd32:	or eax, 0x408d2b72 ; or al, 0x5f ; ret
0x0808dd42:	push cs ; jb 0x1e ; lea eax, dword ptr [eax + 0xd] ; pop edi ; ret
0x0808dd5e:	add byte ptr [eax], al ; mov eax, dword ptr [esp + 0xc] ; pop edi ; ret
0x0808ddbc:	add byte ptr [eax + 4], bh ; pop edi ; ret
0x0808de15:	add byte ptr [eax + 8], bh ; pop edi ; ret
0x0808de65:	add byte ptr [eax + 0xc], bh ; pop edi ; ret
0x0808de99:	pop esp ; mov eax, 0x10 ; pop edi ; ret
0x0808dead:	nop ; nop ; nop ; add eax, 1 ; pop edi ; ret
0x0808deb2:	add dword ptr [edi - 0x3d], ebx ; add eax, 2 ; pop edi ; ret
0x0808deb7:	add bl, byte ptr [edi - 0x3d] ; add eax, 3 ; pop edi ; ret
0x0808debc:	add ebx, dword ptr [edi - 0x3d] ; add eax, 4 ; pop edi ; ret
0x0808dec1:	add al, 0x5f ; ret ; add eax, 5 ; pop edi ; ret
0x0808dec6:	add eax, 0xc083c35f ; push es ; pop edi ; ret
0x0808decb:	push es ; pop edi ; ret ; add eax, 7 ; pop edi ; ret
0x0808ded0:	pop es ; pop edi ; ret ; add eax, 8 ; pop edi ; ret
0x0808ded5:	or byte ptr [edi - 0x3d], bl ; add eax, 9 ; pop edi ; ret
0x0808deda:	or dword ptr [edi - 0x3d], ebx ; add eax, 0xa ; pop edi ; ret
0x0808dedf:	or bl, byte ptr [edi - 0x3d] ; add eax, 0xb ; pop edi ; ret
0x0808dee4:	or ebx, dword ptr [edi - 0x3d] ; add eax, 0xc ; pop edi ; ret
0x0808dee9:	or al, 0x5f ; ret ; add eax, 0xd ; pop edi ; ret
0x0808deee:	or eax, 0xc083c35f ; push cs ; pop edi ; ret
0x0808def3:	push cs ; pop edi ; ret ; add eax, 0xf ; pop edi ; ret
0x0808df76:	cmova eax, esi ; sub eax, ebx ; pop ebx ; pop esi ; ret
0x0808df82:	cmovbe eax, esi ; sub eax, ebx ; pop ebx ; pop esi ; ret
0x0808e001:	push es ; lea eax, dword ptr [0x808ea20] ; ret
0x0808e088:	jne 5 ; mov dword ptr [edx + 8], ecx ; pop ebx ; pop esi ; ret
0x0808e0ff:	adc byte ptr [ebx + 0x5e5b30c4], al ; pop edi ; ret
0x0808e345:	les eax, ptr [eax + 0x5b] ; sub eax, esi ; pop esi ; pop edi ; ret
0x0808e6b8:	test eax, eax ; jne 0xffffffc8 ; mov eax, edx ; pop ebx ; ret
0x0808e6bc:	mov eax, edx ; pop ebx ; ret ; xor eax, eax ; pop ebx ; ret
0x0808e6c3:	ret ; mov eax, 1 ; pop ebx ; ret
0x0808e6ca:	ret ; mov eax, 2 ; pop ebx ; ret
0x0808e6f7:	je 6 ; test edx, edx ; jne 0xfffffff9 ; ret
0x0808eb59:	mov cl, dl ; and cl, 0xf ; je 0x27 ; ret
0x0808eb73:	in eax, 0xf ; je 0x1d ; add eax, 2 ; ret
0x0808eb7c:	lea esi, dword ptr [esi] ; add eax, 1 ; ret
0x0808eb8c:	add byte ptr [eax], al ; add byte ptr [eax], al ; add eax, 3 ; ret
0x0808ebae:	add byte ptr [eax], al ; mov eax, 1 ; ret
0x0808ebbe:	add byte ptr [eax], al ; mov eax, 2 ; ret
0x0808ebce:	add byte ptr [eax], al ; mov eax, 3 ; ret
0x0808ebde:	add byte ptr [eax], al ; mov eax, 4 ; ret
0x0808ebee:	add byte ptr [eax], al ; mov eax, 5 ; ret
0x0808ebfe:	add byte ptr [eax], al ; mov eax, 6 ; ret
0x0808ec0e:	add byte ptr [eax], al ; mov eax, 7 ; ret
0x0808ec66:	inc edx ; add eax, dword ptr [ebp + 0x5bd475db] ; ret
0x0808ec6c:	pop ebx ; ret ; nop ; mov eax, ebx ; pop ebx ; ret
0x0808ec74:	lea esi, dword ptr [esi] ; mov eax, edx ; pop ebx ; ret
0x0808ec9a:	call dword ptr [0x80ea9f0] ; pop ebx ; ret
0x0808ecc5:	add byte ptr [eax], al ; cmp eax, 0x3b ; cmova eax, ebx
0x0808ecd4:	shr dword ptr [ebx - 0x2e], cl ; cmp al, 0x5b ; add eax, edx ; ret
0x0808ed54:	movsb byte ptr es:[edi], byte ptr [esi] ; add dword ptr [eax], eax ; add byte ptr [ecx], dh ; sal dh, 0xc3
0x0808ed85:	imul eax, edx, 0x190 ; cmp ebx, eax
0x0808eee6:	add esp, 0x18 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808ef4c:	add eax, 0xc06bf029 ; cmp ebx, eax
0x0808efcb:	ret 0xfffc ; mov dword ptr [esp], esi ; mov ebx, eax
0x0808f0cd:	sbb al, 0x89 ; call 0x5d5f5e62 ; ret
0x0808f187:	add dword ptr [eax], eax ; add byte ptr [eax], al ; pop esi ; pop edi ; pop ebp ; ret
0x0808f2ad:	mov eax, dword ptr [eax] ; cmp byte ptr [eax], 0x2c ; sete bl
0x0808f2af:	cmp byte ptr [eax], 0x2c ; sete bl ; add ebx, eax
0x0808f68d:	test eax, eax ; jne 0xb ; pop ebx ; pop esi ; pop edi ; ret
0x0808f8c9:	sub byte ptr [ecx + 0x5e5b2443], cl ; pop edi ; ret
0x0808fa45:	fadd dword ptr [ebx + 0x5e5b10c4] ; pop edi ; ret
0x0809027a:	and al, 0x90 ; add byte ptr [eax], al ; add byte ptr [edi], cl ; mov ebx, es
0x080904b8:	add byte ptr [ebx + 1], bh ; test eax, ebx
0x08090d81:	rcl byte ptr [edi - 0x77], cl ; xlatb ; push esi ; push ebx ; mov ebx, eax
0x08090e90:	test eax, eax ; js 0x70 ; push esi ; push ebx ; mov ebx, eax
0x08090ed4:	les ecx, ptr [ebx + eax*4] ; les esp, ptr [ebx + ebx*2 + 0x5e] ; ret
0x08090ef7:	add esp, 0x64 ; xor eax, eax ; pop ebx ; pop esi ; ret
0x08090efb:	rcr byte ptr [ebx + 0x5e], 0xc3 ; nop ; xor eax, eax ; ret
0x08090f12:	add byte ptr [ebx + ebp + 0x53], dh ; mov ecx, edx ; mov ebx, eax
0x08090fd9:	push dword ptr [edi + 0xc] ; add esp, 8 ; pop ebx ; ret
0x08091135:	fscale ; inc dword ptr [ebx - 0x3ca4e73c]
0x08091140:	push ebp ; push edi ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08091347:	dec dword ptr [edi] ; xor edx, 0xfffffff2 ; std ; inc ebx
0x08091354:	add bh, bh ; adc eax, 0x80ea9f0 ; ret
0x08091405:	je 0x28 ; add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0xc3
0x0809142d:	dec dword ptr [edi] ; or dword ptr [edx + esi*8], 0xfffffffd ; inc ebx
0x0809145b:	dec dword ptr [edi] ; sbb esi, -0xf ; std ; inc ebx
0x080914c0:	dec dword ptr [edi] ; cmp dword ptr [ecx - 0xf], -3 ; inc ebx
0x080914e5:	rol byte ptr [ebx - 0x49f0a33c], 0xc0 ; ret
0x0809157b:	add esp, 0x34 ; mov eax, ebx ; pop ebx ; pop esi ; ret
0x080915aa:	call dword ptr [0x80ea9f0] ; cmp ebx, eax
0x080915b5:	push cs ; or byte ptr [edi + 7], dh ; xor eax, eax ; pop ebx ; ret
0x080915f7:	dec dword ptr [edi] ; add dword ptr [edx - 0x10], -3 ; inc ebx
0x0809162b:	dec dword ptr [edi] ; or dword ptr [esi], 0xfffffff0 ; std ; inc ebx
0x080916ca:	test edx, edx ; je 0x38 ; mov ecx, dword ptr [edx] ; mov ebx, eax
0x080916f4:	leave ; je 0xe ; mov ebx, dword ptr [edx + 0x10] ; and ebx, eax
0x080916fd:	adc al, 0x9a ; add eax, dword ptr [edx + ecx] ; pop ebx ; pop esi ; ret
0x08091735:	je 0x16b ; mov ebx, eax
0x08091902:	jge 0x77 ; adc byte ptr [ebx - 0x3c7cfe12], al
0x08091912:	in eax, dx ; jne 0x5b ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091925:	leave ; je 0xffffffe6 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091965:	movsd dword ptr es:[edi], dword ptr [esi] ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x08091999:	inc dword ptr [eax + 0xf3afe7e] ; inc esp ; ret
0x08091b59:	inc ebx ; add al, 0x85 ; sal byte ptr [ecx - 0x77], 0xc3
0x08091d0e:	add byte ptr [ebx], al ; push es ; cmp eax, 0x33 ; mov ebx, eax
0x08091f24:	push dword ptr [ebp - 0x20] ; and eax, 0xfffffff0 ; mov ebx, eax
0x08092561:	popfd ; cld ; inc dword ptr [ebx - 0x3cc6ef3c]
0x08092867:	mov bh, 0x40 ; xor byte ptr [ebx - 0x3c76dfa9], cl
0x080928b2:	mov dword ptr [ebp - 0x80], eax ; mov eax, dword ptr [ebp - 0x7c] ; add ebx, eax
0x08092c3f:	lea eax, dword ptr [edx + edx*2] ; lea eax, dword ptr [edi + eax*8] ; cmp ebx, eax
0x08092d04:	mov dword ptr [0xc483fffd], eax ; adc byte ptr [ecx], bh ; ret
0x08093086:	popal ; sti ; inc dword ptr [ebp - 0x3c7af040]
0x0809364e:	add byte ptr [eax], al ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08093954:	dec ebx ; add dword ptr [ecx + ecx*8 - 0x3c7c898c], eax
0x08093f6f:	add byte ptr [edi], cl ; mov dh, 0x44 ; and al, 0xf ; cmp bl, al
0x08093f92:	movzx ebx, byte ptr [ecx] ; movzx eax, byte ptr [edx] ; cmp bl, al
0x0809496c:	lcall ptr [ebx + edx*8 + 0xc] ; or byte ptr [edi], cl ; test al, bl
0x080950bd:	je 0x28 ; add byte ptr [ebx - 0x3c76e7ba], cl
0x080954e3:	adc al, 0x89 ; or byte ptr [ecx - 0x3c7cf390], cl
0x080957b4:	add ecx, eax ; loope 9 ; add ebx, ecx ; add ebx, eax
0x08095b0f:	mov ebx, dword ptr [ebp - 0x68] ; mov ecx, dword ptr [ebp - 0x64] ; xor ebx, eax
0x08095b26:	cwde ; xor ebx, ebx ; or edx, eax ; setne bl
0x08095b52:	sti ; dec dword ptr [ebx - 0x7af0f7bb] ; ret
0x080961ee:	mov dword ptr [eax + 0x18c], edx ; ret
0x0809621d:	add byte ptr [ecx + 0x18890], cl ; add bl, al
0x08096259:	or bh, bh ; rol byte ptr [ebx - 0x3c94ef3c], 1
0x080962fa:	lcall ptr [edx + 0x59] ; lea edx, dword ptr [eax + 1] ; mov ebx, eax
0x0809634d:	insb byte ptr es:[edi], dx ; and al, 0x14 ; add esp, 0x10 ; add ebx, eax
0x08096451:	rol byte ptr [ecx], 0x89 ; inc esp ; and al, 0xc ; mov ebx, eax
0x0809646d:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3c7cf714], al
0x080965ed:	jmp dword ptr [esi - 0x70] ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08096665:	add byte ptr [ecx + esi], al ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x0809669b:	nop ; nop ; nop ; nop ; nop ; push ebx ; mov ebx, eax
0x080966b5:	sal byte ptr [ebp + 5], 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x08096719:	sbb edi, ebx ; inc dword ptr [ebx - 0x3ca4e73c]
0x0809676a:	js 8 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08096798:	add ch, bl ; or al, 8 ; mov esi, edx ; mov ebx, eax
0x08096a3d:	test byte ptr [ebx + 0x3e03887d], cl ; mov ebx, eax
0x08096c52:	and eax, 0xc4830000 ; adc cl, ch ; ret
0x08097274:	and cl, al ; loopne 9 ; add eax, edx ; cmp ebx, eax
0x080973e1:	mov dword ptr [ebp - 0x5c], eax ; mov eax, dword ptr [esi + 4] ; mov ebx, eax
0x0809794d:	mov dword ptr [ebp - 0x78], eax ; mov eax, dword ptr [edi + 4] ; mov ebx, eax
0x08098312:	or edx, esi ; je 0x57 ; xor ecx, ecx ; mov ebx, eax
0x080983dd:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3c7cfbba], cl
0x080984a1:	mov ch, 0xe ; or byte ptr [ebp - 0x3cc6c4fc], cl
0x0809887e:	add dword ptr [eax], eax ; add byte ptr [eax], al ; shl eax, cl ; cmp ebx, eax
0x08098896:	add ecx, 8 ; mov dword ptr [ecx - 8], esi ; cmp ebx, eax
0x08098c63:	sal byte ptr [ebp + 0x4a], 0x83 ; in al, dx ; or al, 0x89 ; ret
0x08098cf6:	mov dword ptr [eax], 0 ; mov ebx, eax
0x08098f7f:	je 0x17d ; cmp ebx, eax
0x08099169:	sar byte ptr [eax + 0x44], 0x83 ; in al, dx ; add al, 0x89 ; ret
0x08099302:	retf ; jne 0xffffffe6 ; mov eax, dword ptr [ecx] ; pop ebx ; pop esi ; ret
0x08099359:	add esp, 4 ; mov eax, esi ; pop ebx ; pop esi ; ret
0x080993f5:	test edx, edx ; je 0xb ; mov esi, dword ptr [edx] ; jmp 0xffffffcb
0x08099447:	jne 8 ; mov eax, dword ptr [0x80eba08] ; ret
0x08099480:	dec ecx ; add al, 0x85 ; leave ; jne 0xffffffe0 ; pop ebx ; ret
0x08099482:	test ecx, ecx ; jne 0xffffffde ; pop ebx ; ret ; ret
0x08099498:	mov eax, dword ptr [0x80eba04] ; mov dword ptr [edx], eax ; ret
0x080994f7:	je 0x19 ; add esp, 0x14 ; pop ebx ; pop edi ; ret
0x08099500:	add esp, 0x14 ; xor eax, eax ; pop ebx ; pop edi ; ret
0x080995a3:	lds ecx, ptr [ebx - 0x72f3db84] ; sbb al, 0xc3
0x080996e8:	push cs ; or byte ptr [ebx - 0x7bf00790], cl ; ret
0x080997ed:	call 0xfffaec95 ; xor eax, eax ; ret
0x080998ec:	cmp eax, 0xff ; cmove eax, edx ; pop edi ; ret
0x0809991f:	jae 0xffffffc3 ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; ret
0x0809994a:	mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; sub ebx, eax
0x08099957:	je 0x29 ; mov esi, eax ; mov eax, dword ptr [esi] ; cmp ebx, eax
0x08099ae4:	add byte ptr [eax], al ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x08099b3d:	adc byte ptr [eax], dl ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; ret
0x08099c4e:	push dword ptr [0x80e9fec] ; mov ebx, eax
0x08099f2f:	mov eax, ebx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08099f32:	les eax, ptr [ebx + ebx*2] ; pop esi ; ret ; xor eax, eax ; ret
0x0809a217:	or byte ptr [ebx + 0xfc08500], cl ; inc esp ; ret
0x0809ac2b:	inc ebp ; or al, 0x8b ; jne 0xd ; mov byte ptr [ebp - 0x3d], al
0x0809b926:	or byte ptr [ebx + ebx - 0x7d], dh ; les ecx, ptr [eax] ; pop ebx ; ret
0x0809ba45:	dec esp ; and al, 0x28 ; add esp, 0x4c ; ret
0x0809bb39:	or byte ptr [ebx + 0x5e], bl ; pop edi ; neg eax ; pop ebp ; ret
0x0809bb55:	leave ; pop ebx ; sub eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x0809bd14:	fmul qword ptr [ebp + 0x1e76ff43] ; mov ebx, eax
0x0809bee3:	and dh, 0xc ; or byte ptr [eax - 0x18], dl ; arpl bx, ax
0x0809bf0b:	lea edx, dword ptr [esi + eax] ; add eax, 0x30 ; cmp ebx, eax
0x0809bf59:	js 0xfffffd23 ; mov ebx, eax
0x0809c02c:	fmul qword ptr [ebp + 0x3c76ff43] ; mov ebx, eax
0x0809c166:	push eax ; inc dword ptr [ebx + 0x376fdfa] ; ret
0x0809c185:	add byte ptr [eax], al ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x0809c1a6:	add byte ptr [eax], al ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x0809c1aa:	adc al, 0x5b ; pop esi ; ret ; nop ; mov ebx, eax
0x0809c203:	push esi ; push ebx ; mov edx, dword ptr [esp + 0xc] ; mov ebx, eax
0x0809c244:	rol byte ptr [ebx + 0x5e5b10c4], 1 ; pop edi ; ret
0x0809c4bb:	cmp edx, eax ; je 0xd ; add esp, 0xc ; ret
0x0809c533:	sub eax, dword ptr gs:[0] ; ret
0x0809c5cc:	mov al, byte ptr [0x8300005a] ; les ebx, ptr [ebx + eax*8]
0x0809c629:	mov dword ptr [ebx + 0xc], eax ; add esp, 0x28 ; pop ebx ; ret
0x0809c668:	test edx, edx ; jne 8 ; add esp, 0x2c ; ret
0x0809c692:	mov eax, dword ptr [esp + 0xc] ; add esp, 0x2c ; ret
0x0809c6cf:	or al, 3 ; inc edx ; add al, 0x83 ; les ebx, ptr [ebx + eax*8]
0x0809c74f:	inc ebx ; or byte ptr [ebx + 0x5e5b20c4], al ; ret
0x0809c78d:	inc ebx ; or byte ptr [ebx + 0x5e5b10c4], al ; ret
0x0809c85b:	les edx, ptr [eax] ; mov eax, edx ; add esp, 0x1c ; ret
0x0809c8a4:	add byte ptr [eax], al ; add eax, 0xfffffffc ; ret
0x0809c904:	sbb byte ptr [ebx - 0x3fcef73c], al ; pop ebx ; ret
0x0809c9af:	loopne 4 ; sub eax, 1 ; pop ebx ; pop esi ; ret
0x0809c9bd:	add byte ptr [eax], al ; add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0xc3
0x0809cac9:	mov dword ptr [esp + 0x1c], eax ; div ecx ; mov ebx, eax
0x0809cadf:	add byte ptr [ecx], dh ; fstp xword ptr [ecx] ; clc ; setb bl
0x0809cca2:	mov eax, dword ptr [esp + 0xc] ; sub ecx, eax ; add ebx, eax
0x0809ce18:	xchg eax, edi ; dec edx ; mov eax, dword ptr [esi + edx*4] ; shld ebx, eax, cl
0x0809ce27:	loopne 0xffffff8b ; pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce2f:	shl ebx, cl ; mov dword ptr [edi], ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce78:	xchg eax, edi ; inc edx ; mov eax, dword ptr [esi + edx*4] ; shrd ebx, eax, cl
0x0809ce87:	call 0x5b58078e ; pop esi ; pop edi ; ret
0x0809ce8f:	shr ebx, cl ; mov dword ptr [edi], ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0809cfa1:	add esp, 0x20 ; mov dword ptr [ebp - 0x1c], eax ; add ebx, eax
0x0809cfab:	mov dword ptr [ebp - 0x2c], ebx ; mov ebx, dword ptr [ebp + 0xc] ; add ebx, eax
0x0809d1e1:	out dx, al ; mov eax, ebp ; pop ebx ; pop ebp ; pop esi ; pop edi ; ret
0x0809d533:	mov dword ptr [esi + eax*4], edx ; add eax, 1 ; cmp ebx, eax
0x0809d6ba:	add byte ptr [eax], al ; add byte ptr [ecx - 0x3c7c54fc], cl
0x0809d883:	mov dword ptr [edx + eax*4], ebp ; add eax, 1 ; cmp ebx, eax
0x0809d953:	mov dword ptr [esi + eax*4], ecx ; add eax, 1 ; cmp ebx, eax
0x0809dabb:	add esp, 0x20 ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0809dad3:	add esp, 0x10 ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0809dbb8:	scasd eax, dword ptr es:[edi] ; sbb eax, eax ; neg eax ; pop esi ; pop edi ; ret
0x0809dbf4:	jmp 0xffffff8b ; call 0x5f5e5d62 ; ret
0x0809dc80:	add byte ptr [ecx + 0x5f5e5b17], cl ; pop ebp ; ret
0x0809dc9b:	add al, byte ptr [eax] ; add byte ptr [eax], al ; pop esi ; pop edi ; pop ebp ; ret
0x0809dd8d:	ret ; nop ; test edi, edi ; sete bl
0x0809dd94:	ret ; test edx, edx ; sete al ; test al, bl
0x0809de94:	add esp, 0x24 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809dedf:	add byte ptr [ecx], dh ; rol byte ptr [ebx - 0x3c7cfb17], cl
0x0809df22:	add byte ptr [eax], al ; cmp eax, ebp ; jne 0xfffffff6 ; sub ebx, eax
0x0809e034:	or byte ptr [eax], al ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x0809e099:	add esp, 0xc8 ; pop ebx ; ret
0x0809e0bd:	inc eax ; cmp byte ptr [ebp - 0xcfa8740], al ; ret
0x0809e39e:	push esi ; sti ; inc dword ptr [ebx - 0x3cc6ef3c]
0x0809e3ab:	je 0x26 ; adc al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x0809e3f3:	mov bh, 0xe ; or byte ptr [eax - 0x3cf7f149], dh
0x0809e511:	add byte ptr [ebx + 0x5e5b10c4], al ; pop edi ; ret
0x0809e624:	adc byte ptr [ebx + 0x5f5e04c4], al ; ret
0x0809e6de:	ror byte ptr [ecx + 0x5e5b0453], 0x5f ; ret
0x0809e864:	inc dword ptr [ebx - 0x3b7cf33c] ; or al, 0xc3
0x0809e8d2:	or al, 0x89 ; adc byte ptr [ebx - 0x3ca4f73c], al
0x0809e8f2:	or al, 0x89 ; add al, byte ptr [ebx - 0x3ca4f73c]
0x0809e956:	add byte ptr [ecx + 0x8c48302], cl ; pop ebx ; ret
0x0809e9c4:	les ebx, ptr [edi + ecx] ; mov dh, 0xc0 ; neg eax ; ret
0x0809ea92:	les edx, ptr [eax] ; mov eax, edx ; add esp, 0x2c ; ret
0x0809eab7:	test eax, eax ; je 9 ; pop ebx ; pop esi ; pop edi ; ret
0x0809ed00:	sub eax, edi ; mov edi, dword ptr [esp + 4] ; sub ebx, eax
0x0809eeae:	mov esi, 0x83ffff0a ; les ebx, ptr [ebx + eax*8]
0x0809ef23:	and ebx, ecx ; push edi ; and ebx, 1 ; add ebx, eax
0x0809efd5:	pop ds ; mov ebx, edx ; sar ebx, 3 ; sub ebx, eax
0x0809f128:	cli ; sar edi, 0x1f ; mov ebx, edx ; sub ebx, eax
0x0809f20c:	lea eax, dword ptr [edx + edx*4] ; lea eax, dword ptr [eax + eax*4] ; sub ebx, eax
0x0809f396:	sbb dword ptr [ecx], ebp ; call 0x9d0fda40 ; ret
0x0809f44c:	dec dword ptr [ecx + 0x5f5e5bd8] ; pop ebp ; ret
0x0809f5c0:	push esi ; mov esi, edx ; push ebx ; mov edx, ecx ; mov ebx, eax
0x0809f5f8:	cli ; add byte ptr [ecx - 0xcfd8130], cl ; ret
0x0809f61a:	jecxz 0x67 ; mov dword ptr [0x68], eax ; ret
0x0809f690:	clc ; pop ebx ; sar eax, 2 ; pop esi ; pop edi ; ret
0x0809f6d2:	mov dword ptr [ebx + 0x14], eax ; add esp, 0xc ; pop ebx ; ret
0x0809fb11:	mov dword ptr [eax + 0x160], edi ; mov ebx, eax
0x0809fd44:	add al, 0xbd ; add byte ptr [eax], al ; add byte ptr [eax], al ; mov ebx, eax
0x080a0389:	add al, byte ptr [eax] ; add byte ptr [ebx - 0x3cc6fe40], al
0x080a061e:	call dword ptr [eax + 0x53565755] ; mov ebx, eax
0x080a122c:	lahf ; sti ; inc dword ptr [ebx - 0x3cfeef3c]
0x080a13bc:	loopne 0xffffffba ; push cs ; add byte ptr [eax], al ; add byte ptr [ecx], al ; ret
0x080a13d2:	add al, 0xe8 ; cmp byte ptr [esi - 0x3cfe0005], bl
0x080a1734:	inc ebx ; or al, 0x85 ; sal byte ptr [esp + eax + 1], 0xc3
0x080a1865:	in al, dx ; or al, 0x85 ; sal byte ptr [edi + eax*2 - 0x77], 0xc3
0x080a1977:	add al, 0 ; add byte ptr [eax], al ; mov eax, dword ptr [eax] ; add ebx, eax
0x080a2099:	mov esi, dword ptr [esp + 0x38] ; sub ebx, edx ; cmp ebx, eax
0x080a2222:	les esp, ptr [eax] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a223e:	adc al, 0xc6 ; mov ecx, dword ptr [edx] ; mov eax, dword ptr [ecx] ; cmp ebx, eax
0x080a224d:	test eax, eax ; jne 0x21 ; mov eax, dword ptr [ecx] ; cmp ebx, eax
0x080a2354:	je 0x43 ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x080a2728:	add dword ptr [edi + eax - 0x73], esi ; add ch, al ; faddp st(3)
0x080a27df:	inc esp ; sahf ; or byte ptr [ebx - 0x3c7cef3c], al
0x080a297b:	test dword ptr [edx + edi*8 - 0x49f00001], ecx ; ret
0x080a29aa:	movzx eax, byte ptr [edx] ; lea edi, dword ptr [eax - 0x30] ; mov ebx, eax
0x080a3152:	mov eax, dword ptr [ebp - 0x588] ; mov ebx, eax
0x080a326f:	jne 0x1dd9 ; mov ebx, eax
0x080a32b3:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3c7cfeb0], cl
0x080a364b:	jne 0x7e9 ; mov ebx, eax
0x080a3c66:	mov dword ptr [ebp - 0x574], edi ; mov ebx, eax
0x080a3dfd:	jp 0 ; mov ebx, edi ; cmp bl, cl ; ja 0xffffffcb
0x080a479c:	push dword ptr [ebp - 0x1f] ; mov esi, dword ptr [ebp + 8] ; mov ebx, eax
0x080a4850:	add al, 0 ; add byte ptr [ebp - 0x3cc600b9], cl
0x080a549f:	sar bh, cl ; dec dword ptr [ecx - 0x3c76f7b3]
0x080a5771:	clc ; push dword ptr [ebp - 0x44] ; mov ecx, ebx ; mov ebx, eax
0x080a66cc:	retf ; jmp 0xffffe9f7 ; mov ebx, eax
0x080a7090:	add cl, ch ; bound esi, qword ptr [esi - 0x3c7c0001]
0x080a7173:	add dword ptr [ebp - 0x55c], eax ; add ebx, eax
0x080a7b38:	add dword ptr [ebp - 0x568], eax ; add ebx, eax
0x080a8075:	mov ebx, edi ; sub eax, ecx ; add edx, eax ; sub ebx, eax
0x080a8422:	mov bl, byte ptr [edi - 0x3b7c0001] ; sbb al, 0xc3
0x080a8654:	mov dword ptr [ebx + 8], eax ; add esp, 0x28 ; pop ebx ; ret
0x080a86f7:	les ecx, ptr [edi + ecx] ; mov dh, 0xc0 ; neg eax ; ret
0x080a8715:	mov dword ptr [ebx + 0xc], eax ; add esp, 8 ; pop ebx ; ret
0x080a877e:	adc byte ptr [ebx - 0x2776e73c], al ; pop ebx ; ret
0x080a87a8:	mov dword ptr [ebx + 0x10], eax ; add esp, 0x14 ; pop ebx ; ret
0x080a8819:	adc byte ptr [ebx - 0x2776d73c], al ; pop ebx ; ret
0x080a898a:	add byte ptr [eax], cl ; leave ; jne 7 ; xor eax, eax ; ret
0x080a8b28:	dec esp ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a8ba9:	push cs ; or byte ptr [esi - 0x7d], ah ; add al, 0x42 ; add ebx, eax
0x080a8cd2:	add esp, 0xa8 ; pop ebx ; ret
0x080a8d2e:	nop ; nop ; mov eax, dword ptr [0x80ebc9c] ; ret
0x080a8d64:	dec dword ptr [ecx + 0x14c48303] ; pop ebx ; ret
0x080a8ecc:	inc ebp ; rol byte ptr [ebx + 0x4d8d08ec], 1 ; ret
0x080a8f6a:	sti ; inc dword ptr [ebx + 0x7d8010c4] ; ret
0x080a909c:	mov al, byte ptr [0x83000000] ; les ebp, ptr [ebx + eax*8]
0x080a90ca:	jb 2 ; add byte ptr [eax], al ; add esp, 0x2c ; ret
0x080a9e76:	xchg byte ptr [ebx], dh ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x080a9e98:	movsb byte ptr es:[edi], byte ptr [esi] ; pushal ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x080a9ee7:	jne 0x39 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080a9efa:	inc esp ; rol dword ptr [ebx + 0x5e5b04c4], -0x3d
0x080a9f18:	inc esp ; ret ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080a9f32:	inc ebp ; rol dword ptr [ebx + 0x5e5b04c4], -0x3d
0x080aa40a:	jne 0xffffffee ; mov esi, dword ptr [esp + 0xc] ; add ebx, eax
0x080aa6ed:	add esi, esi ; inc esp ; inc edx ; add dword ptr [eax], esp ; mov ebx, eax
0x080aa807:	add cl, bl ; out dx, al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080aae90:	add byte ptr [ebx - 0x27], bl ; loopne 0x63 ; pop edi ; pop ebp ; ret
0x080ab137:	adc ecx, 0 ; add eax, 1 ; cmp ebx, eax
0x080ac2fe:	pushfd ; and al, 0x80 ; add byte ptr [eax], al ; add byte ptr [ecx], bh ; ret
0x080ae91d:	loopne 1 ; inc dword ptr [ebx - 0x3c16ef3c]
0x080af096:	pop ds ; cmp dword ptr [esp + 0x38], ebx ; seta bl
0x080af888:	sub al, 0x5b ; pop esi ; pop edi ; pop ebp ; fmul st(0) ; ret
0x080af8d0:	sub al, 0x5b ; pop esi ; pop edi ; pop ebp ; fmulp st(1) ; ret
0x080b051e:	add byte ptr ss:[eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b2351:	push esi ; mov edi, ecx ; push ebx ; mov esi, edx ; mov ebx, eax
0x080b235a:	in al, dx ; and bl, ch ; add eax, 0xc3839066
0x080b2391:	push ds ; add esp, 0x20 ; pop ebx ; pop esi ; pop edi ; ret
0x080b252b:	and al, 0xd9 ; add al, 0x24 ; add esp, 4 ; ret
0x080b256a:	loope 1 ; dec dword ptr [edi] ; and byte ptr [esi - 0x7f], 0xc3
0x080b2599:	add al, 0x24 ; add esp, 0xc ; pop ebx ; pop esi ; ret
0x080b25f6:	add al, 0xdb ; sub al, 0x24 ; add esp, 0x1c ; ret
0x080b262f:	push es ; lea eax, dword ptr [0x80b5210] ; ret
0x080b268a:	stosd dword ptr es:[edi], eax ; je 0xffffffde ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b2697:	add byte ptr [ebx + 0x31], bl ; rcr byte ptr [esi + 0x5f], 0x5d ; ret
0x080b2b8c:	dec dword ptr [ebp + 0xf660076] ; je 0xffffffcb
0x080b4ef6:	add dh, bh ; fadd dword ptr [ebx - 0x3ca2fb3c]
0x080b4f01:	les eax, ptr [esi + ebx*2] ; pop edi ; pop ebp ; xor eax, eax ; ret
0x080b51cb:	into ; jne 0x15 ; pop esi ; pop ebp ; xor eax, eax ; ret
0x080b556d:	or al, 8 ; sub eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x080b557e:	add byte ptr [eax], al ; pop esi ; xor eax, eax ; pop edi ; pop ebp ; ret
0x080b5594:	add byte ptr [edi + 2], dh ; neg eax ; pop edi ; pop ebp ; ret
0x080b55b6:	add dword ptr [ebp + 0x49], esi ; cmp ebp, 4 ; jbe 0xffffffcb
0x080b58c7:	xor edx, edx ; mov eax, esi ; div ecx ; mov ebx, eax
0x080b59a9:	add byte ptr [eax], al ; test edx, edx ; mov ecx, esi ; mov ebx, eax
0x080b5cb8:	mov eax, dword ptr [edx + 0x58] ; add esp, 8 ; pop ebx ; ret
0x080b5cbf:	ret ; add esp, 8 ; xor eax, eax ; pop ebx ; ret
0x080b5ce0:	mov eax, dword ptr [edx + 0x5c] ; add esp, 8 ; pop ebx ; ret
0x080b5cf0:	mov eax, dword ptr [edx + 0x54] ; add esp, 8 ; pop ebx ; ret
0x080b5f4b:	jg 0xffffffd5 ; loopne 0xffffff87 ; rol dword ptr [edi], 9 ; ret
0x080b6284:	add byte ptr [eax], al ; shl eax, cl ; neg eax ; or ebx, eax
0x080b6583:	mov byte ptr [eax + 0x18d8], 4 ; ret
0x080b6593:	xor byte ptr [eax], al ; add byte ptr [eax], al ; push esi ; push ebx ; mov ebx, eax
0x080b71c6:	dec dword ptr [ecx - 0x6086628] ; mov ebx, eax
0x080b77e6:	adc bl, byte ptr [ebx - 0x77] ; push esi ; dec esp ; pop esi ; pop edi ; ret
0x080b77f3:	dec esp ; add byte ptr [eax], al ; add byte ptr [eax], al ; pop esi ; pop edi ; ret
0x080b7875:	sub ecx, edx ; cmp dword ptr [edi + 0x10], ecx ; sete bl
0x080b7985:	add byte ptr [ecx + 0x5f5e5bd0], cl ; pop ebp ; ret
0x080b79a0:	in al, dx ; sub al, 0x89 ; pop esp ; and al, 0xc ; mov ebx, eax
0x080b7b85:	mov eax, dword ptr [eax] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080b7b90:	mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x48] ; ret
0x080b7beb:	sbb byte ptr [ecx + 0x8c48308], cl ; pop ebx ; ret
0x080b7bfc:	mov dword ptr [edx + eax*4], ebx ; add esp, 8 ; pop ebx ; ret
0x080b7c10:	mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x4c] ; ret
0x080b7c2c:	call 0x8b018924 ; inc edx ; dec esp ; ret
0x080b7c44:	mov eax, dword ptr [esp + 4] ; mov dword ptr [eax + 0x4c], edx ; ret
0x080b7c50:	mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x50] ; ret
0x080b7c60:	mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x5c] ; ret
0x080b7c99:	inc esp ; and al, 0xc ; add esp, 0x18 ; pop ebx ; ret
0x080b7cb0:	mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x58] ; ret
0x080b7cc0:	mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x54] ; ret
0x080b7da9:	pop edi ; pop ebp ; ret ; lea esi, dword ptr [esi] ; ret
0x080b7e4c:	mov esi, dword ptr [ebp - 8] ; mov edi, dword ptr [ebp - 4] ; leave ; ret
0x080b7eed:	jge 0xfffffffe ; mov ebp, dword ptr [ebp] ; mov esp, ecx ; ret
0x080b81b9:	pop esi ; pop edi ; pop ebp ; ret ; mov eax, dword ptr [esp] ; ret
0x080b81bd:	mov eax, dword ptr [esp] ; ret ; mov ecx, dword ptr [esp] ; ret
0x080b81c1:	mov ecx, dword ptr [esp] ; ret ; mov esi, dword ptr [esp] ; ret
0x080b81c5:	mov esi, dword ptr [esp] ; ret ; mov edi, dword ptr [esp] ; ret
0x080b81c9:	mov edi, dword ptr [esp] ; ret ; mov ebp, dword ptr [esp] ; ret
0x080b81f7:	add dword ptr [eax], eax ; add byte ptr [eax], al ; cmova eax, edx ; ret
0x080b837b:	add byte ptr [ebp + 0x22], dh ; add esp, 8 ; pop ebx ; ret
0x080b838e:	or byte ptr [eax + 4], bh ; pop ebx ; ret
0x080b83aa:	or byte ptr [eax + 2], bh ; pop ebx ; ret
0x080b83e0:	mov eax, dword ptr [edx + 8] ; add esp, 8 ; pop ebx ; ret
0x080b8403:	hlt ; add esp, 8 ; xor eax, eax ; pop ebx ; ret
0x080b8410:	mov eax, dword ptr [edx + 4] ; add esp, 8 ; pop ebx ; ret
0x080b8640:	ret 0xc483 ; and byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x080b871a:	add al, byte ptr [ebx + 0x5e5b10c4] ; pop edi ; ret
0x080b88bf:	in al, dx ; pop esp ; mov edx, dword ptr [esp + 0x70] ; mov ebx, eax
0x080b92f7:	push esp ; and al, 0x20 ; movzx ebp, al ; mov ebx, eax
0x080b946c:	ror byte ptr [eax], 0x89 ; inc esp ; and al, 0x14 ; mov ebx, eax
0x080b950f:	mov edi, ebx ; mov dword ptr [esp + 0xc], ebx ; mov ebx, eax
0x080b980b:	add byte ptr [ebx + 0x5e], bl ; mov dword ptr [edx + 0x14], eax ; pop edi ; ret
0x080b98ab:	add byte ptr [ecx + 0x5e5b1446], cl ; pop edi ; ret
0x080b98cc:	mov ecx, dword ptr [eax] ; test ecx, ecx ; jne 0xc ; ret
0x080b98f8:	jne 8 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080ba2ca:	dec esp ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080ba325:	or byte ptr [ebx - 0x247aef3c], al ; jne 0xffffffcb
0x080ba387:	fdiv dword ptr [ebp - 0x1a] ; add esp, 8 ; pop ebx ; ret
0x080ba3d0:	jne 0xffffffd8 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080ba500:	or byte ptr [ebp - 0x1b], dh ; add esp, 8 ; pop ebx ; ret
0x080ba619:	jne 0xffffffe5 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080ba67b:	inc dword ptr [ebx - 0x3b7cef3c] ; or al, 0xc3
0x080ba6a6:	in al, dx ; stc ; inc dword ptr [ebx - 0x3c0ce33c]
0x080ba7ea:	test esi, esi ; jne 0xffffffd6 ; pop ebx ; pop esi ; pop edi ; ret
0x080baaa5:	test esi, esi ; jne 0xffffffe3 ; pop ebx ; pop esi ; pop edi ; ret
0x080bac10:	add esp, 0x14 ; xor eax, eax ; pop ebx ; pop esi ; ret
0x080badca:	or al, ch ; inc eax ; cmp eax, 0xc3f3fffb
0x080bc959:	retf ; add eax, 0x5cb8308 ; or bl, al
0x080bd39e:	push es ; or byte ptr [eax], bh ; ret 0x806 ; inc ebp ; ret
0x080bd3a2:	push es ; or byte ptr [ebp - 0x3d], al ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3ae:	push es ; or byte ptr [eax], al ; ret 0x806 ; inc ebp ; ret
0x080bd3be:	push es ; or byte ptr [eax], al ; ret 0x806 ; adc eax, ebx
0x080bd3c6:	push es ; or byte ptr [eax], al ; ret 0x806 ; or ebx, eax
0x080bd3ca:	push es ; or byte ptr [ecx], cl ; ret ; push es ; or byte ptr [ebx], bh ; ret
0x080bd3ce:	push es ; or byte ptr [ebx], bh ; ret ; push es ; or byte ptr [ecx], dh ; ret
0x080bd3d2:	push es ; or byte ptr [ecx], dh ; ret ; push es ; or byte ptr [edi], ah ; ret
0x080bd3da:	push es ; or byte ptr [0x4d0806c3], bl ; ret
0x080bd3de:	push es ; or byte ptr [ebp - 0x3d], cl ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3e2:	push es ; or byte ptr [eax - 0x3d], bh ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3ee:	push es ; or byte ptr [eax], al ; ret 0x806 ; js 0xffffffcb
0x080bd41a:	push es ; or byte ptr [0x620806c3], bl ; ret
0x080bd8c1:	retf 0x806 ; mov ecx, 0xc30806ca
0x080c02c5:	add byte ptr [eax], al ; add dl, al ; add byte ptr [eax], al ; add bl, al
0x080c629d:	add al, byte ptr [eax] ; add byte ptr [edi - 0x3cfffffe], bh
0x080c6375:	add eax, dword ptr [eax] ; add byte ptr [ebp - 0x3cfffffd], bh
0x080c6791:	or byte ptr [eax], al ; add byte ptr [esi - 0x3cfffff8], bh
0x080c68e5:	or dword ptr [eax], eax ; add al, al ; or dword ptr [eax], eax ; add bl, al
0x080c6ce5:	or al, 0 ; add al, al ; or al, 0 ; add bl, al
0x080c70e5:	sldt word ptr [eax] ; ror byte ptr [edi], 0 ; add bl, al
0x080c7f19:	and al, 0 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080c8409:	xor eax, dword ptr [eax] ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080c8f11:	aam 1 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080c96a9:	aad 1 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080cb606:	jns 0xf ; int3 ; int3 ; int3 ; or al, 0xc ; ret
0x080cba71:	out 7, eax ; or byte ptr [edi - 0x19], dh ; pop es ; or bl, al
0x080cbbf1:	out 7, al ; or byte ptr [eax], dl ; out 7, eax ; or bl, al
0x080ce701:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3cf7f31a], bh
0x080cf93c:	mov esp, 0xc0bfbebd ; rol edx, -0x3d
0x080cfc08:	xchg eax, edi ; mov bh, byte ptr [edx] ; mov eax, 0xc31e1ad9
0x080cfc44:	push ebx ; jno 0xffffffff ; out -0x6b, eax ; push es ; cld ; ret
0x080cfde8:	aas ; mov ch, 0x31 ; mov ah, bl ; push esi ; ret
0x080cffe9:	sti ; push edx ; cdq ; inc esp ; push ds ; mov ah, 0x13 ; ret
0x080d012f:	xchg dword ptr [esp + eax + 0x6fa9ce9d], esp ; ret
0x080d05d3:	int 0xe0 ; fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x080d0637:	aas ; or al, 0x45 ; sub al, 0xb3 ; push edi ; cmp bl, al
0x080d0e80:	sbb al, 0x90 ; push ds ; sar ecx, 1 ; jnp 0xffffffc0 ; ret
0x080d1004:	jo 0x73 ; mov ebp, 0xfb67d10d ; ret
0x080d1165:	dec ch ; fnsave dword ptr [ebp + eax*8 + 0x34] ; fadd st(3)
0x080d12c1:	fld qword ptr [esi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [edx] ; ret
0x080d1e0a:	adc eax, dword ptr [ecx] ; imul esp, dword ptr [edx], 0xc3a0d612
0x080d228e:	mov cl, byte ptr [0xeeb0f650] ; fcmovb st(0), st(3)
0x080d228f:	or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x080d25e2:	inc edx ; jl 0xffffff8b ; outsd dx, dword ptr [esi] ; aad 8 ; stosd dword ptr es:[edi], eax ; ret
0x080d271b:	push ss ; mov dl, 0x9f ; sub edi, esi ; int 0x6b ; ret
0x080d27c7:	mov ecx, 0xbb00eaf5 ; xchg dword ptr [esi - 0x3d], esi
0x080d2888:	sub eax, 0x57251962 ; inc eax ; jno 0xffffffcb
0x080d2ce9:	mov ebp, 0xf62dedb2 ; clc ; and al, bl
0x080d4bd3:	int3 ; int3 ; int3 ; int3 ; or al, 0x30 ; or al, 0xc3
0x080d4bd6:	int3 ; or al, 0x30 ; or al, 0xc3 ; xor byte ptr [ebx + eax*8], cl
0x080d5182:	cld ; call dword ptr [ecx + 0x13fffcc2] ; ret
0x080d5186:	cld ; call dword ptr [ebx] ; ret ; cld ; jmp dword ptr [ecx - 0x3d]
0x080d518d:	ret ; cld ; inc dword ptr [ebp - 0x3c00033c]
0x080d518e:	cld ; inc dword ptr [ebp - 0x3c00033c] ; ret
0x080d587b:	add byte ptr [ecx], 0x48 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d590a:	or eax, dword ptr [edx] ; test eax, 0x41140e0a ; ret
0x080d599b:	dec edx ; push cs ; xor byte ptr [esi + ecx + 0x14], cl ; inc ecx ; ret
0x080d59ca:	push ecx ; push cs ; adc byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d5b0b:	and byte ptr [edx], al ; dec ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5b22:	or eax, dword ptr [edx] ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5b63:	push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [edi + 0xa], al ; ret
0x080d5bbe:	dec esi ; push cs ; adc byte ptr [ecx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d5c08:	push cs ; adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080d5c35:	add al, 0x83 ; add eax, 0xa014503 ; ret
0x080d5c45:	add al, 0x47 ; or eax, dword ptr [ebx] ; rol byte ptr [ecx], 1 ; or al, bl
0x080d5c75:	add al, 0x83 ; add eax, 0xa034903 ; ret
0x080d5c83:	or al, 4 ; add al, 0x41 ; or ebp, dword ptr [edx + ecx - 0x3d]
0x080d5c93:	add al, 0x4b ; or eax, dword ptr [ebx] ; ja 7 ; or al, bl
0x080d5d0e:	push cs ; push eax ; pop ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d5d25:	or eax, dword ptr [edx] ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5de0:	push eax ; push cs ; adc byte ptr [edi + 0xe], al ; or al, 0x41 ; ret
0x080d5e0d:	add al, 0x83 ; add eax, 0xa010003 ; ret
0x080d5e81:	inc ecx ; push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x41 ; ret
0x080d5eed:	add al, 0x83 ; add eax, 0xa02bf03 ; ret
0x080d5f47:	xor byte ptr [edx], al ; xchg eax, esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6045:	push cs ; xor byte ptr [ebx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080d60ce:	push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d6129:	and byte ptr [edx], al ; dec ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6191:	xor byte ptr [edx], al ; pushal ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d61dc:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d621b:	push cs ; xor byte ptr [ebx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d6231:	inc ecx ; or edx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d62c6:	or byte ptr [edx], 0x46 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6337:	push cs ; xor byte ptr [ecx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080d643d:	inc esp ; push cs ; push eax ; dec eax ; push cs ; adc al, 0x41 ; ret
0x080d64d9:	add al, 0x83 ; add eax, 0xa01a603 ; ret
0x080d64e7:	or al, 4 ; add al, 0x46 ; or ebx, dword ptr [edx + ecx - 0x3d]
0x080d6551:	xor byte ptr [edx], al ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6575:	dec eax ; push cs ; xor byte ptr [eax + 0xe], bl ; adc al, 0x45 ; ret
0x080d6627:	and byte ptr [edx], al ; int3 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d671d:	inc eax ; add cl, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d674b:	or eax, dword ptr [edx] ; cld ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d67cc:	inc eax ; add ah, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d67e4:	add ebx, dword ptr [ecx + 0x140e0a01] ; inc ecx ; ret
0x080d683c:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a6e02
0x080d684a:	or al, 4 ; add al, 0x46 ; or edx, dword ptr [ebp + 0xa] ; ret
0x080d68a0:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30acb02
0x080d68c2:	idiv edi ; cmc ; add byte ptr [eax], al ; add byte ptr [ebx + eax*8], al
0x080d68d9:	add al, 2 ; push ebx ; adc byte ptr cs:[ebp + 0xa], bl ; ret
0x080d68e5:	or al, 4 ; add al, 0x49 ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080d68f1:	or al, 4 ; add al, 0x41 ; or eax, dword ptr [edx + ecx - 0x3d]
0x080d695f:	push cs ; adc byte ptr [edx + 0xa], dl ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d6969:	inc ebx ; or ebp, dword ptr [eax + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d69c3:	add eax, 0x202e9702 ; outsb dx, byte ptr [esi] ; or al, bl
0x080d69d1:	or al, 4 ; add al, 0x47 ; or esi, dword ptr [ebp + 0xa] ; ret
0x080d6a14:	push cs ; xor byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d6a69:	add al, 0x83 ; add eax, 0xa020f03 ; ret
0x080d6a78:	add al, 4 ; inc ebp ; or eax, dword ptr [edx] ; dec ebx ; or al, bl
0x080d6ac4:	mov al, 1 ; push eax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6b0c:	add dword ptr [edx], eax ; dec ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d6b66:	add dword ptr [edx], eax ; pop edx ; or cl, byte ptr [esi] ; adc al, 0x47 ; ret
0x080d6b91:	mov al, 1 ; dec ebp ; or cl, byte ptr [esi] ; adc al, 0x45 ; ret
0x080d6cb8:	push cs ; and byte ptr [edx + ecx + 0xe], ah ; or al, 0x41 ; ret
0x080d6cc6:	inc ecx ; or eax, dword ptr [ebp + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d6cdd:	push cs ; and byte ptr [edi + 0xa], bl ; push cs ; or al, 0x41 ; ret
0x080d6ceb:	inc ecx ; or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x46 ; ret
0x080d6d2d:	push cs ; adc byte ptr [eax + 0xa], cl ; push cs ; or byte ptr [esi - 0x3d], al
0x080d6d36:	add al, 0x41 ; or edx, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d6d9d:	push eax ; add cl, byte ptr [eax + 0x41140e0a] ; ret
0x080d6db2:	add al, 0x43 ; or esp, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d6de4:	push cs ; adc byte ptr [ebx + 0xa], ah ; push cs ; or al, 0x41 ; ret
0x080d6e02:	push cs ; adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x46 ; ret
0x080d6e10:	inc ebp ; or edx, dword ptr [ecx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d6eaa:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [edx + 0xa], cl ; ret
0x080d6f42:	push cs ; xor byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d6ffb:	rol byte ptr [ecx], 0x52 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d709b:	mov al, 0xa ; add dl, byte ptr [edi - 0x3cbeebf2]
0x080d70d1:	add al, 0x83 ; add eax, 0xa016e03 ; ret
0x080d713c:	push cs ; xor byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; ret
0x080d7176:	push cs ; adc byte ptr [ebp + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7195:	inc ecx ; push cs ; or byte ptr [ebx - 0x3cf5a5fe], al
0x080d719b:	or al, bl ; push cs ; add al, 0x45 ; or eax, dword ptr [ecx - 0x3d]
0x080d71ca:	dec eax ; push cs ; adc byte ptr [esi + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d71f7:	push cs ; adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ebx - 0x3d], al
0x080d7200:	add al, 0x41 ; or ebx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d723c:	push cs ; and byte ptr [ecx + 0xa], dh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080d7291:	add al, 0x83 ; add eax, 0xa013e03 ; ret
0x080d729f:	or al, 4 ; add al, 0x46 ; or eax, dword ptr [edi + 0xa] ; ret
0x080d72b0:	inc esi ; or esp, dword ptr [eax + 0x2e] ; adc byte ptr [edx + ecx - 0x3d], ch
0x080d7328:	mov al, byte ptr [0xe0a7201] ; adc al, 0x43 ; ret
0x080d736d:	add dword ptr [edx], eax ; pop esp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7398:	mov al, byte ptr [0xe0a4d01] ; adc al, 0x43 ; ret
0x080d7424:	push cs ; adc byte ptr [edx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d742d:	add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d747c:	add dword ptr [edx], eax ; dec eax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d750e:	push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [esi + 0xa], ah ; ret
0x080d7557:	add byte ptr [ecx], 0x7c ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d75e2:	inc ebx ; push cs ; adc byte ptr [ebx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d766e:	push cs ; and byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d76af:	xor byte ptr [edx], al ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d772b:	xor byte ptr [edx], al ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7772:	push cs ; xor byte ptr [eax + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d77e9:	inc esp ; or ebp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d781b:	push cs ; adc byte ptr [edx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7824:	add al, 0x49 ; or esi, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d7841:	inc ecx ; push cs ; or byte ptr [ebx - 0x3cf597fe], al
0x080d7848:	ret ; push cs ; add al, 0x47 ; or edx, dword ptr [eax + 0xa] ; ret
0x080d784e:	or al, bl ; push cs ; add al, 0x48 ; or eax, dword ptr [ecx - 0x3d]
0x080d788d:	push cs ; and byte ptr [ecx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d78f9:	pop ecx ; push cs ; and byte ptr [edi + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d7929:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; ret
0x080d798c:	push cs ; xor byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], cl ; ret
0x080d79c2:	inc ebp ; push cs ; adc byte ptr [esi + ecx + 8], ah ; inc ecx ; ret
0x080d7a17:	push cs ; and byte ptr [edx + 0xe], bh ; adc byte ptr [ebx + 0xa], ah ; ret
0x080d7a7a:	push cs ; push eax ; je 0xe ; push cs ; adc al, 0x43 ; ret
0x080d7a99:	push cs ; push eax ; dec eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7afa:	push eax ; add bh, ch ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b11:	or eax, dword ptr [edx] ; xlatb ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b7a:	push cs ; adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d7bbc:	push cs ; adc byte ptr [ebx + 0xa570204], al ; ret
0x080d7c46:	push cs ; adc byte ptr [esi + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7c8f:	dec ebx ; push cs ; adc byte ptr [ebp + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d7cc3:	inc eax ; add dh, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d7d9b:	push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d7e06:	push cs ; and byte ptr [ebx + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080d7e77:	push cs ; adc byte ptr [edx + ecx + 0xe], dh ; or byte ptr [ecx - 0x3d], al
0x080d7eac:	inc ecx ; push cs ; and byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d7ee8:	adc byte ptr [edx], al ; pop eax ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7ef2:	inc ebx ; or ecx, dword ptr [eax + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080d7efc:	inc edx ; or esp, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f51:	push cs ; adc byte ptr [ecx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f7f:	push cs ; adc byte ptr [edi + 0xa], ch ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f89:	inc esp ; or ecx, dword ptr [eax + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7fbb:	inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf5b3fc], al
0x080d7fd3:	push cs ; and byte ptr [esi + 0xe], al ; adc byte ptr [edx + ecx - 0x3d], ah
0x080d8072:	push cs ; and byte ptr [edi + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080d8087:	add al, 0x4b ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d80e4:	push cs ; and byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080d8131:	and byte ptr [esi + 0xe], al ; adc byte ptr [edx], al ; pushal ; or al, bl
0x080d819a:	push cs ; and byte ptr [esi + 0xa], ah ; push cs ; or al, 0x46 ; ret
0x080d81b0:	dec eax ; push cs ; and byte ptr [ebx + 0xe], cl ; or al, 0x46 ; ret
0x080d81fb:	or byte ptr [ebx + 0x1030302], al ; or al, bl
0x080d8201:	or al, bl ; push cs ; add al, 0x44 ; or ecx, dword ptr [edi - 0x3d]
0x080d8240:	push cs ; adc byte ptr [eax + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d824a:	dec eax ; or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d829c:	push cs ; adc byte ptr [ebx + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080d82c3:	push cs ; adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d82d8:	inc esi ; push cs ; adc byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d82f5:	inc ecx ; push cs ; or byte ptr [ebx - 0x3cf58dfe], al
0x080d82fb:	or al, bl ; push cs ; add al, 0x45 ; or eax, dword ptr [esi - 0x3d]
0x080d8357:	push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d83bc:	xor byte ptr [edx], al ; jbe 0xe ; push cs ; adc al, 0x41 ; ret
0x080d8474:	push cs ; adc byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080d8482:	inc esi ; or edx, dword ptr [ecx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d84ef:	push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; inc eax ; or al, bl
0x080d857e:	add byte ptr [eax], al ; les ebp, ptr [esi] ; add byte ptr [eax], al ; cmp al, 0xc3
0x080d8592:	add byte ptr [eax], al ; fsubr dword ptr [esi] ; add byte ptr [eax], al ; cmp bl, al
0x080d85a6:	add byte ptr [eax], al ; in al, dx ; add byte ptr cs:[eax], al ; xor al, 0xc3
0x080d85ba:	add byte ptr [eax], al ; add byte ptr [edi], ch ; add byte ptr [eax], al ; xor bl, al
0x080d85ce:	add byte ptr [eax], al ; adc al, 0x2f ; add byte ptr [eax], al ; sub al, 0xc3
0x080d85e2:	add byte ptr [eax], al ; sub byte ptr [edi], ch ; add byte ptr [eax], al ; sub bl, al
0x080d85f6:	add byte ptr [eax], al ; cmp al, 0x2f ; add byte ptr [eax], al ; and al, 0xc3
0x080d860a:	add byte ptr [eax], al ; push eax ; das ; add byte ptr [eax], al ; and bl, al
0x080d861e:	add byte ptr [eax], al ; das ; add byte ptr [eax], al ; sbb al, 0xc3
0x080d8632:	add byte ptr [eax], al ; js 0x33 ; add byte ptr [eax], al ; sbb bl, al
0x080d8646:	add byte ptr [eax], al ; mov word ptr [edi], gs ; add byte ptr [eax], al ; adc al, 0xc3
0x080d865a:	add byte ptr [eax], al ; mov al, byte ptr [0x5000002f] ; ret
0x080d866e:	add byte ptr [eax], al ; mov ah, 0x2f ; add byte ptr [eax], al ; jl 0xffffffcb
0x080d8682:	add byte ptr [eax], al ; enter 0x2f, 0 ; mov bl, al
0x080d8691:	inc ecx ; push cs ; or byte ptr [ebx - 0x3cf591fe], al
0x080d8697:	or al, bl ; push cs ; add al, 0x41 ; or ebx, dword ptr [esi - 0x3d]
0x080d86a6:	add byte ptr [eax], al ; in al, dx ; das ; add byte ptr [eax], al ; mov ah, 0xc3
0x080d8715:	xor byte ptr [edx], al ; dec ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8756:	push cs ; inc eax ; pop edx ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080d87a3:	push cs ; inc eax ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d87b9:	inc ebx ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x45 ; ret
0x080d8807:	and byte ptr [edx], al ; or cl, byte ptr fs:[esi] ; adc al, 0x43 ; ret
0x080d881d:	inc edi ; or edx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8833:	inc edx ; or esi, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d884a:	or eax, dword ptr [edx] ; imul ecx, dword ptr [edx], 0xc341140e
0x080d88a7:	dec ecx ; push cs ; adc byte ptr [esi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d88f5:	push cs ; and byte ptr [ebx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080d8946:	inc ecx ; push cs ; and byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d8975:	inc ecx ; push cs ; or byte ptr [ebx - 0x3cf595fe], al
0x080d89ae:	push cs ; sbb byte ptr [edx], al ; push cs ; adc al, 0x41 ; ret
0x080d89eb:	sbb al, 2 ; ror byte ptr [edx], 1 ; push cs ; adc al, 0x41 ; ret
0x080d8a01:	inc ebx ; or eax, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d8aaa:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], dl ; ret
0x080d8b56:	and byte ptr [edx], al ; dec ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8bb6:	push cs ; xor byte ptr [edx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080d8c39:	adc byte ptr [edx], al ; les ecx, ptr [edx] ; push cs ; or al, 0x43 ; ret
0x080d8c70:	push cs ; xor byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080d8ca2:	push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8cfd:	push cs ; and byte ptr [edx + ecx + 0xe], dh ; adc al, 0x41 ; ret
0x080d8d13:	inc esi ; or edx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d8d54:	add eax, dword ptr [ecx + eax + 0x41140e0a] ; ret
0x080d8d7b:	dec ebp ; push cs ; inc eax ; add bl, byte ptr [esi + 0xe] ; add al, 0xc3
0x080d8dcb:	xor byte ptr [edx], al ; retf 0xe0a ; adc al, 0x41 ; ret
0x080d8de1:	inc ecx ; or ebp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8e24:	push cs ; adc byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8e84:	push cs ; push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8ec3:	push cs ; push eax ; dec edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8fac:	add edi, dword ptr [esi] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080d8fff:	inc eax ; add bh, byte ptr [edi + 0x43140e0a] ; ret
0x080d90d8:	add esp, dword ptr [edx + 0x140e0a02] ; inc ebx ; ret
0x080d910c:	add esi, dword ptr [edi + 0x140e0a01] ; inc ebx ; ret
0x080d9123:	or eax, dword ptr [edx] ; fisttp dword ptr [edx] ; push cs ; adc al, 0x43 ; ret
0x080d91db:	xor byte ptr [edx], al ; loope 0xe ; push cs ; adc al, 0x41 ; ret
0x080d91f1:	inc edi ; or eax, dword ptr [edx] ; insb byte ptr es:[edi], dx ; push cs ; adc al, 0x44 ; ret
0x080d9230:	adc byte ptr [edx], al ; imul ecx, dword ptr [edx], 0xe ; or byte ptr [ebp - 0x3d], al
0x080d9239:	add al, 0x4c ; or ecx, dword ptr [edi + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080d9261:	adc byte ptr [edx], al ; mov word ptr [edx], cs ; push cs ; or al, 0x45 ; ret
0x080d9270:	or eax, dword ptr [edx] ; dec edi ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d927e:	dec edi ; or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x43 ; ret
0x080d92a8:	adc byte ptr [edx], al ; je 0xe ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d92b2:	inc edi ; or esp, dword ptr [edx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d92bb:	add al, 0x4b ; or ebp, dword ptr [edi + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d92ef:	xor byte ptr [edx], al ; mov ecx, dword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080d9307:	add edi, dword ptr [eax] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080d93ad:	push cs ; inc eax ; jno 0xe ; push cs ; adc al, 0x41 ; ret
0x080d93c3:	dec eax ; or esp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d9440:	add eax, dword ptr [eax + 0x140e0a01] ; inc ebx ; ret
0x080d9456:	inc ecx ; or esi, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x45 ; ret
0x080d9494:	push cs ; adc byte ptr [ebx + 0xa], ch ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d949d:	add al, 0x41 ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d94d2:	inc ebx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; pop ebp ; ret
0x080d9505:	dec edi ; push cs ; or byte ptr [ebx - 0x3c9bfdfe], al
0x080d9545:	adc byte ptr [edx], al ; test dword ptr [edx], ecx ; push cs ; or al, 0x41 ; ret
0x080d95a0:	add ebx, dword ptr [edi + 0xc0e0a01] ; inc ecx ; ret
0x080d95cc:	push cs ; adc byte ptr [ebx + 0xab70204], al ; ret
0x080d95e5:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9603:	push cs ; and byte ptr [ebp + 0xe], al ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9677:	xor byte ptr [edx], al ; cmpsb byte ptr [esi], byte ptr es:[edi] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d96a8:	push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080d9704:	push cs ; xor byte ptr [ebx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d976f:	and byte ptr [edx], al ; test dword ptr [edx], 0xc341140e
0x080d97a2:	push cs ; and byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d9802:	push cs ; xor byte ptr [eax + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080d9818:	inc ebp ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x44 ; ret
0x080d982e:	inc ebx ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d9868:	adc byte ptr [edx], al ; mov ecx, 0x43080e0a ; ret
0x080d989b:	and byte ptr [edx], al ; mov esp, 0x41140e0a ; ret
0x080d9a0b:	push cs ; adc byte ptr [esi + 0xa], bl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d9a14:	add al, 0x4d ; or ecx, dword ptr [esi + ecx + 8] ; inc ecx ; ret
0x080d9a3c:	push cs ; adc byte ptr [eax + 0xa], dh ; push cs ; or al, 0x41 ; ret
0x080d9a94:	add ecx, dword ptr [ebx + eax + 0x41140e0a] ; ret
0x080d9aab:	or eax, dword ptr [edx] ; lahf ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d9b03:	inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf595fc], al
0x080d9b4f:	inc eax ; add bh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d9bb3:	push eax ; add bh, byte ptr [esi + 0x43140e0a] ; ret
0x080d9c55:	inc esi ; push cs ; jo 0x58 ; push cs ; adc al, 0x41 ; ret
0x080d9d5d:	push cs ; mov al, 0x12 ; dec ebx ; push cs ; adc al, 0x43 ; ret
0x080d9dcb:	push cs ; adc byte ptr [edx + ecx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d9dd4:	add al, 0x4a ; or edi, dword ptr [ebx + 0xe] ; or byte ptr [esi - 0x3d], al
0x080d9ed0:	dec edx ; add dword ptr [edx + eax], 0x73 ; push cs ; or al, 0xc3
0x080d9f5f:	and al, 2 ; mov ebx, 0x41140e0a ; ret
0x080d9fcb:	add ebp, ebp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080d9ff7:	or byte ptr [edx], al ; push eax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080da04e:	push cs ; jo 0x46 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080da075:	jo 4 ; jbe 0xe ; push cs ; adc al, 0x43 ; ret
0x080da122:	push cs ; or byte ptr [ebx + 0x40e5b02], al ; ret
0x080da12b:	push cs ; or byte ptr [ebx + 0x40e4602], al ; ret
0x080da13f:	mov cl, byte ptr [esi] ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da14f:	jo 0x10 ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da15f:	jnp 0x10 ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da16f:	mov byte ptr [esi], cl ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da17f:	wait ; push cs ; or dh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da250:	dec edx ; add dword ptr [edx + eax], 0x77 ; push cs ; or al, 0xc3
0x080da2e8:	push cs ; or byte ptr [ebx + 0x40e4f02], al ; ret
0x080da2f3:	or byte ptr [ebx + 0xea40202], al ; add al, 0xc3
0x080da5d1:	push cs ; or al, 0x83 ; add ecx, dword ptr [esi + 0xe] ; or bl, al
0x080da610:	inc ecx ; push cs ; or bh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da65b:	inc ecx ; push cs ; adc byte ptr [ebx - 0x3c53fdfc], al
0x080da682:	push cs ; or byte ptr [ebx + 0x40e4902], al ; ret
0x080da820:	inc ecx ; push cs ; or dh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da8a3:	add dword ptr [edx], 3 ; bound eax, qword ptr [edx] ; push cs ; add al, 0xc3
0x080da8ad:	or byte ptr [ebx + 0xebc0202], al ; add al, 0xc3
0x080da8b7:	or byte ptr [ebx + 0xeba0202], al ; add al, 0xc3
0x080da8c1:	or byte ptr [ebx + 0xe9d0202], al ; add al, 0xc3
0x080da8ca:	push cs ; or byte ptr [ebx + 0x40e6a02], al ; ret
0x080da8e7:	or byte ptr [ebx + 0xe6a0202], al ; add al, 0xc3
0x080da8f0:	push cs ; or byte ptr [ebx + 0x40e4702], al ; ret
0x080da8fa:	or byte ptr [ebx + 0xecd0202], al ; add al, 0xc3
0x080da904:	or byte ptr [ebx + 0xe880202], al ; add al, 0xc3
0x080da90e:	or byte ptr [ebx + 0xe9a0202], al ; add al, 0xc3
0x080da918:	or byte ptr [ebx + 0xead0202], al ; add al, 0xc3
0x080da922:	or byte ptr [ebx + 0xe7d0202], al ; add al, 0xc3
0x080da92c:	or byte ptr [ebx + 0xe7c0202], al ; add al, 0xc3
0x080da936:	or byte ptr [ebx + 0xe8a0202], al ; add al, 0xc3
0x080da94a:	or byte ptr [ebx + 0xe870202], al ; add al, 0xc3
0x080da954:	or byte ptr [ebx + 0xe8c0202], al ; add al, 0xc3
0x080da972:	or byte ptr [ebx + 0xe970202], al ; add al, 0xc3
0x080da97c:	or byte ptr [ebx + 0xe9c0202], al ; add al, 0xc3
0x080da986:	or byte ptr [ebx + 0xeaa0202], al ; add al, 0xc3
0x080da990:	or byte ptr [ebx + 0xebd0202], al ; add al, 0xc3
0x080da99a:	or byte ptr [ebx + 0xe8b0202], al ; add al, 0xc3
0x080da9a3:	push cs ; or byte ptr [ebx + 0x40e7302], al ; ret
0x080da9ac:	push cs ; or byte ptr [ebx + 0x40e6602], al ; ret
0x080dab3e:	add dword ptr [ebx], 3 ; int3 ; add dword ptr [esi], ecx ; or bl, al
0x080dafcb:	inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf581fc], al
0x080db0b7:	adc al, 0x83 ; add eax, 0x100ea002 ; ret
0x080db0c6:	push cs ; adc dh, al ; add ch, byte ptr [edx + 0xe] ; or al, 0xc3
0x080db0db:	sbb byte ptr [ebx + 0xeab0206], al ; adc al, 0xc3
0x080db0e8:	inc ecx ; push cs ; or al, 0xc6 ; inc ecx ; push cs ; or bl, al
0x080db0f2:	or al, 0x83 ; add eax, dword ptr [edx] ; pop esi ; push cs ; or bl, al
0x080db0f8:	or bl, al ; add ebx, esp ; add cl, byte ptr [esi] ; add al, 0xc3
0x080db12f:	xor byte ptr [edx], al ; out 0xa, eax ; push cs ; adc al, 0x41 ; ret
0x080db147:	add ebp, dword ptr [esi] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x4a ; ret
0x080db15d:	inc ecx ; or esp, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080db1de:	push cs ; inc eax ; add dl, byte ptr [esi + ecx + 0x14] ; inc ecx ; ret
0x080db1fc:	add al, 0x87 ; add eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080db231:	adc byte ptr [edx], al ; dec ecx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080db28a:	push cs ; inc eax ; push esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db2a1:	or eax, dword ptr [edx] ; cli ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db2ef:	dec eax ; push cs ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080db34b:	add eax, dword ptr [esi + 0x7c058304] ; or al, bl
0x080db37d:	adc byte ptr [edx], al ; inc ecx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080db3c7:	push cs ; adc byte ptr [ecx + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080db3d5:	dec edx ; or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x46 ; ret
0x080db404:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ab702
0x080db44f:	pushal ; add ch, byte ptr [esi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080db46e:	push cs ; pushal ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db490:	push cs ; pushal ; or cl, byte ptr [0x4614] ; ret
0x080db4b4:	add edi, dword ptr [edx + eax + 0x41140e0a] ; ret
0x080db511:	inc ecx ; push cs ; or byte ptr [ebx - 0x3cf5a4fe], al
0x080db517:	or al, bl ; push cs ; add al, 0x44 ; or eax, dword ptr [ecx - 0x3d]
0x080db55a:	push cs ; or byte ptr [ebx + 0x40e5802], al ; ret
0x080db566:	push cs ; or al, 0x83 ; add ebx, dword ptr [eax + 0xe] ; or bl, al
0x080db5ec:	add al, 0x4a ; or ecx, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080db614:	push cs ; and byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080db657:	rol byte ptr [ecx], 1 ; push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db66e:	or eax, dword ptr [edx] ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db690:	rol byte ptr [ecx], 1 ; pop esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080db82c:	push cs ; adc byte ptr [ebp + 0xa], bh ; push cs ; or al, 0x43 ; ret
0x080db84c:	push cs ; adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x43 ; ret
0x080db8ce:	inc ecx ; lds ecx, ptr [esi] ; add al, 0x42 ; or eax, dword ptr [esi - 0x3d]
0x080db90b:	xor byte ptr [edx], al ; push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db920:	add al, 0x43 ; or ecx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080dba11:	inc edx ; push cs ; and byte ptr [ebp + 0xe], cl ; or al, 0x41 ; ret
0x080dba47:	sbb al, 2 ; mov dl, 0xa ; push cs ; adc al, 0x41 ; ret
0x080dbad9:	push cs ; xor byte ptr [ecx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080dbaef:	inc esi ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dbb2f:	push cs ; and byte ptr [ebp + 0xe], al ; adc byte ptr [esi + 0xa], dl ; ret
0x080dbb6c:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a7f02
0x080dbb7c:	add al, 0x42 ; or eax, dword ptr [ebx] ; rol dword ptr [ecx], 1 ; or al, bl
0x080dbbea:	push cs ; xor byte ptr [eax + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080dbc5c:	push cs ; adc byte ptr [edx], al ; inc ebx ; push cs ; or al, 0x41 ; ret
0x080dbc71:	add byte ptr gs:[eax], al ; insb byte ptr es:[edi], dx ; sub ecx, edi ; inc ebx
0x080dbc89:	add al, 0x83 ; add eax, 0xa012103 ; ret
0x080dbc98:	add al, 4 ; inc ebx ; or eax, dword ptr [edx] ; loop 0x11 ; ret
0x080dbd90:	push cs ; adc byte ptr [esi + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dbdf4:	push cs ; adc byte ptr [ebx + 0xc0e6004], al ; ret
0x080dbe7c:	inc ecx ; push cs ; or cl, al ; inc ecx ; push cs ; add al, 0xc3
0x080dbe9b:	push cs ; adc byte ptr [edx + ecx + 0xe], ch ; or byte ptr [ecx - 0x3d], al
0x080dbecd:	dec edx ; push cs ; and byte ptr [esi + 0xe], ah ; adc al, 0x41 ; ret
0x080dbf13:	add eax, dword ptr [esi + 0x2058304] ; push esi ; ret
0x080dbf40:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a9f02
0x080dbf4e:	or al, 4 ; add al, 0x45 ; or ecx, dword ptr [ebx + 0xa] ; ret
0x080dbfed:	mov al, 1 ; push 0x41140e0a ; ret
0x080dc0af:	pushal ; add ebx, dword ptr [edx + eax] ; push cs ; adc al, 0x41 ; ret
0x080dc159:	inc eax ; add cl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080dc19c:	inc eax ; add ch, byte ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dc252:	push cs ; push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dc288:	push cs ; adc byte ptr [ebx + 0xa400204], al ; ret
0x080dc2f7:	add eax, dword ptr [edx] ; bound ecx, qword ptr [edx] ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dc309:	inc ecx ; or edx, dword ptr [eax + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dc3d1:	add al, 0x83 ; add eax, 0xa015303 ; ret
0x080dc42b:	inc ebp ; push cs ; xor byte ptr [ebp + 0xe], ah ; adc al, 0x43 ; ret
0x080dc4b7:	inc ecx ; push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x45 ; ret
0x080dc53c:	push cs ; and byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080dc584:	dec edx ; push cs ; adc byte ptr [edi + 0xe], al ; or al, 0x41 ; ret
0x080dc5e9:	push cs ; adc byte ptr [ebp + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dc5f6:	add al, 0x48 ; or eax, dword ptr [ebx + 0xe] ; or al, 0x41 ; ret
0x080dc651:	push cs ; adc byte ptr [esi + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080dc68d:	add al, 0x83 ; add eax, 0xa076903 ; ret
0x080dc69c:	add al, 4 ; inc esi ; or eax, dword ptr [edx] ; dec byte ptr [edx] ; ret
0x080dc6e2:	push cs ; xor byte ptr [eax + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080dc780:	push cs ; inc eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc7f6:	push cs ; inc eax ; push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc836:	push cs ; and byte ptr [edx], al ; push 0xc343140e
0x080dc89a:	push cs ; xor byte ptr [edx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080dc8d9:	dec eax ; push cs ; xor byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dc90c:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a6502
0x080dc948:	push cs ; adc byte ptr [eax + 0xa], dl ; push cs ; or al, 0x43 ; ret
0x080dc955:	add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; or al, 0x46 ; ret
0x080dc9b3:	dec eax ; push cs ; and byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dc9e8:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a4c02
0x080dca19:	add al, 0x83 ; add eax, 0xa023803 ; ret
0x080dca62:	inc ebp ; push cs ; and byte ptr [ebx + 0xb], cl ; add bl, byte ptr [ebp - 0x3d]
0x080dcaaf:	push eax ; add bh, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dcac7:	add ebx, dword ptr [edi + 0x140e0a01] ; inc ecx ; ret
0x080dcb00:	push eax ; add al, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080dcb4e:	inc ecx ; or ecx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dcbb7:	pushal ; add dh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dcc87:	push eax ; add bh, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dccae:	push eax ; add cl, byte ptr [ebp + 0x41140e0a] ; ret
0x080dcce7:	push eax ; add cl, byte ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dcd36:	or eax, dword ptr [edx] ; jnp 0xe ; push cs ; adc al, 0x43 ; ret
0x080dcda3:	push eax ; add dh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dce7b:	push eax ; add al, byte ptr [eax + 0x41140e0a] ; ret
0x080dceb3:	push cs ; push eax ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dcf27:	pushal ; add bh, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dd213:	jo 4 ; mov byte ptr [edx], cl ; push cs ; adc al, 0x41 ; ret
0x080dd433:	pushal ; add bh, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080dd7cc:	add edx, dword ptr [edx + 0x140e0a01] ; inc ecx ; ret
0x080dd7e2:	inc ecx ; or edx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080dd847:	pushal ; add bl, byte ptr [eax + 0x41140e0a] ; ret
0x080dd899:	push cs ; inc eax ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080dd8ae:	add al, 0x44 ; or ebx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080dd8e0:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30abc02
0x080dd8ed:	lds ecx, ptr [esp + eax] ; add al, 0x4b ; or ecx, dword ptr [ecx - 0x3d]
0x080dd99e:	jo 4 ; bound ecx, qword ptr [edx] ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dd9ba:	push cs ; jo 0x50 ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dd9f0:	push cs ; jo 0x51 ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dda41:	push cs ; and byte ptr [edi + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dda52:	add al, 0x47 ; or ebx, dword ptr [esi + ecx + 0x10] ; inc ecx ; ret
0x080dda8b:	pushal ; add dl, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080ddb23:	dec eax ; push cs ; adc byte ptr [edi + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080ddb67:	push cs ; adc byte ptr [eax + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080ddbf6:	push cs ; xor byte ptr [edi + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080ddc0c:	inc esp ; or ebx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080ddc4f:	push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x45 ; ret
0x080ddcf4:	push cs ; xor byte ptr [edi + 0xa], cl ; push cs ; adc al, 0x43 ; ret
0x080ddd2b:	push cs ; xor byte ptr [ebx + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080ddda0:	inc edx ; push cs ; and byte ptr [eax + 0xe], dl ; adc byte ptr [ebp - 0x3d], al
0x080dde03:	mov al, byte ptr [0xe0a4801] ; adc al, 0x41 ; ret
0x080dde72:	mov al, byte ptr [0xe0a4601] ; adc al, 0x41 ; ret
0x080dde88:	inc edx ; or edx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080de017:	sbb al, 2 ; xchg eax, edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de02b:	push cs ; add al, 0x48 ; or esp, dword ptr [ebx + 0xe] ; add al, 0xc3
0x080de054:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a5902
0x080de062:	or al, 4 ; add al, 0x46 ; or ebp, dword ptr [ecx + 0xa] ; ret
0x080de0bd:	xor byte ptr [edx], al ; popal ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de108:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ad002
0x080de117:	add al, 4 ; inc edx ; or eax, dword ptr [edx] ; inc ebx ; or al, bl
0x080de1a8:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a6802
0x080de1b8:	add al, 0x49 ; or eax, dword ptr [ebx] ; dec ecx ; add ecx, dword ptr [edx] ; ret
0x080de21a:	push cs ; and byte ptr [edx + 0xe], dl ; adc byte ptr [ebp + 0xa], al ; ret
0x080de24d:	inc edi ; push cs ; or byte ptr [ebx - 0x3cf584fe], al
0x080de2ed:	inc ecx ; push cs ; or byte ptr [ebx - 0x3cf581fe], al
0x080de2f3:	or al, bl ; push cs ; add al, 0x41 ; or ebx, dword ptr [ecx - 0x3d]
0x080de328:	add al, byte ptr [edx] ; fmul qword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080de33d:	add al, 0x44 ; or esi, dword ptr [ebx + 0xe] ; adc al, 0x41 ; ret
0x080de365:	inc ecx ; push cs ; or byte ptr [ebx - 0x3cf5b2fe], al
0x080de36b:	or al, bl ; push cs ; add al, 0x4a ; or edx, dword ptr [edx - 0x3d]
0x080de39b:	add dword ptr [edx], eax ; inc ecx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080de3ac:	add al, 0x46 ; or esi, dword ptr [eax + 0xe] ; adc byte ptr [ecx - 0x3d], al
0x080de439:	add al, byte ptr [edx] ; iretd ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de4b1:	add al, 0x83 ; add eax, 0xa013603 ; ret
0x080de4f6:	push cs ; adc byte ptr [ebx + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080de4ff:	add al, 0x46 ; or ecx, dword ptr [edi + 0xe] ; or byte ptr [esi - 0x3d], al
0x080de556:	push cs ; and byte ptr [esi + 0xa], dh ; push cs ; adc al, 0x43 ; ret
0x080de56b:	add al, 0x45 ; or esp, dword ptr [edi + 0xe] ; adc al, 0x46 ; ret
0x080de6e0:	push cs ; adc byte ptr [ebx + 0xa480204], al ; ret
0x080de72c:	add ecx, dword ptr [ecx + eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080de742:	inc edx ; or esp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080de786:	dec eax ; push cs ; sbb al, 0x71 ; push cs ; or al, 0x43 ; ret
0x080de7c1:	dec eax ; push cs ; xor byte ptr [ebp + 0xe], dh ; or al, 0x43 ; ret
0x080de7e6:	inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; dec ecx ; ret
0x080de84e:	push cs ; and byte ptr [edx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080de883:	add eax, dword ptr [esi + 0x6b058304] ; or al, bl
0x080de892:	add al, 4 ; dec esp ; or eax, dword ptr [edx] ; lodsd eax, dword ptr [esi] ; or al, bl
0x080de8c5:	add al, 0x83 ; add eax, 0xa018203 ; ret
0x080de8f5:	add al, 0x83 ; add eax, 0xa075e03 ; ret
0x080de924:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ae502
0x080de9bd:	loopne 0x43 ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dea02:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xa], dl ; ret
0x080dea2a:	xor byte ptr [esi + 0xe], cl ; adc byte ptr [edx], al ; dec edx ; or al, bl
0x080dea48:	push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [ebp + 0xa], al ; ret
0x080dea89:	add al, 0x83 ; add eax, 0xa016903 ; ret
0x080deab2:	inc ecx ; push cs ; or al, 0x83 ; add ebp, dword ptr [esi + 0xa] ; ret
0x080deae9:	add al, 0x83 ; add eax, 0xa060903 ; ret
0x080deaf9:	add al, 0x48 ; or eax, dword ptr [ebx] ; lahf ; add dword ptr [edx], ecx ; ret
0x080deb07:	or al, 4 ; add al, 0x46 ; or eax, dword ptr [esi + 0xa] ; ret
0x080deb6c:	adc byte ptr [edx], al ; js 0xe ; push cs ; or byte ptr [ecx - 0x3d], al
0x080debfb:	rol byte ptr [edx], 0x54 ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080decf8:	add al, byte ptr [edx] ; mov ah, 0xa ; push cs ; adc al, 0x41 ; ret
0x080ded42:	rol byte ptr [edx], 0x52 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080def9a:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; or al, 0x41 ; ret
0x080defdc:	push cs ; and byte ptr [eax + 0xe], dl ; adc byte ptr [esi + 0xa], ah ; ret
0x080df033:	sub byte ptr [edx], al ; retf ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080df048:	add al, 0x41 ; or ecx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080df11b:	inc ecx ; push cs ; adc byte ptr [ebx - 0x3cb8fdfc], al
0x080df156:	push cs ; and byte ptr [edi + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080df16c:	inc esi ; or ecx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080df1bf:	add eax, dword ptr [esi + 0x56058304] ; or al, bl
0x080df1ce:	add al, 4 ; dec ecx ; or eax, dword ptr [edx] ; mov byte ptr [edx], cl ; ret
0x080df200:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ae002
0x080df20e:	or al, 4 ; add al, 0x47 ; or eax, dword ptr [edx] ; inc edx ; ret
0x080df26d:	add al, 0x83 ; add eax, 0xa016203 ; ret
0x080df27b:	or al, 4 ; add al, 0x47 ; or edx, dword ptr [ecx + 0xa] ; ret
0x080df28a:	add al, 4 ; inc esp ; or eax, dword ptr [edx] ; insd dword ptr es:[edi], dx ; or al, bl
0x080df338:	add dword ptr [edx], 0x46 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080df34e:	inc edi ; or eax, dword ptr [edx] ; dec esi ; push cs ; adc al, 0x46 ; ret
0x080df393:	inc esi ; push cs ; adc byte ptr [ebx - 0x3cb6fdfc], al
0x080df40d:	push cs ; and byte ptr [eax + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080df443:	inc ecx ; push cs ; adc byte ptr [ebx - 0x3cadfdfc], al
0x080df49c:	push cs ; and byte ptr [eax + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080df520:	push cs ; jo 0x4b ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080df532:	dec ecx ; or edi, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080df573:	add eax, 0x102e6f02 ; pop ebp ; or al, bl
0x080df581:	or al, 4 ; add al, 0x48 ; or edi, dword ptr [edi + 0xa] ; ret
0x080df5c8:	push cs ; adc byte ptr [eax + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080df5d6:	inc esi ; or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x46 ; ret
0x080df610:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a7c02
0x080df621:	dec eax ; or edx, dword ptr [ebp + 0x2e] ; adc byte ptr [eax + 0xa], ch ; ret
0x080df62f:	or al, 4 ; add al, 0x48 ; or eax, dword ptr [esi + 0xa] ; ret
0x080df664:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a7702
0x080df672:	or al, 4 ; add al, 0x4b ; or edx, dword ptr [eax + 0xa] ; ret
0x080df685:	add bh, byte ptr [eax - 0x54fdefd2] ; or al, bl
0x080df6e6:	push cs ; xor byte ptr [esi + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080df70b:	push cs ; xor byte ptr [ecx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080df792:	push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x43 ; ret
0x080df7b6:	inc esi ; push cs ; xor byte ptr [ebp + 0xe], al ; adc al, 0x43 ; ret
0x080df802:	push cs ; pushal ; dec edx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080df826:	inc esi ; push cs ; pushal ; inc ebp ; push cs ; adc al, 0x43 ; ret
0x080df863:	inc eax ; add cl, byte ptr [ebp + 0x41140e0a] ; ret
0x080df949:	inc edi ; or ecx, dword ptr [ecx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080df987:	xor byte ptr [edx], al ; push eax ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080df9bb:	push cs ; xor byte ptr [edi + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080df9fc:	push cs ; adc byte ptr [edi + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfa30:	inc esi ; push cs ; adc byte ptr [ecx + 0xe], bl ; or byte ptr [ebx - 0x3d], al
0x080dfa63:	dec eax ; push cs ; adc byte ptr [esi + ecx + 0xc], dl ; inc ecx ; ret
0x080dfab7:	push cs ; xor byte ptr [edx + ecx + 0xe], bl ; adc al, 0x41 ; ret
0x080dfacc:	add al, 0x43 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080dfb78:	push cs ; adc byte ptr [esi + 0xa], dh ; push cs ; or al, 0x41 ; ret
0x080dfbb0:	inc ecx ; push cs ; and byte ptr [eax + 0xe], ah ; or byte ptr [ecx - 0x3d], al
0x080dfbdd:	adc byte ptr [edx], al ; insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080dfc15:	push cs ; adc byte ptr [eax + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dfc22:	add al, 0x4b ; or ecx, dword ptr [edx + 0xe] ; or al, 0x41 ; ret
0x080dfc4d:	adc byte ptr [edx], al ; dec esp ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080dfc7c:	push cs ; adc byte ptr [ebp + 0xa], bh ; push cs ; or al, 0x41 ; ret
0x080dfc92:	dec eax ; push cs ; adc byte ptr [eax + 0xe], dl ; or al, 0x41 ; ret
0x080dfcd0:	push cs ; xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080dfd1b:	push cs ; adc byte ptr [ebx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfd3f:	push cs ; adc byte ptr [ecx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfd6f:	or al, bl ; push cs ; add al, 0x45 ; or ecx, dword ptr [ecx - 0x3d]
0x080dfda6:	dec ecx ; or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x41 ; ret
0x080dfdeb:	push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; dec ecx ; or al, bl
0x080dfe96:	push cs ; and byte ptr [ecx + 0xa], bl ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dfea8:	inc ebp ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dfeb9:	add al, 0x45 ; or eax, dword ptr [edi + 0xe] ; adc byte ptr [ebx - 0x3d], al
0x080dff0e:	push cs ; and byte ptr [esi + 0xa], dl ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dff20:	inc esp ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dffd7:	add eax, dword ptr [esi + 0x2058304] ; ret
0x080e0010:	add ebp, dword ptr [edi] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080e0129:	push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0169:	push cs ; inc eax ; or cl, byte ptr [0x4114] ; ret
0x080e028a:	add edx, dword ptr [esi + 2] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e02a0:	inc ecx ; or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e02ff:	add eax, dword ptr [edx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e0335:	or eax, dword ptr [edx] ; out dx, eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e038f:	push cs ; and byte ptr [ecx + 0xa], dl ; push cs ; adc al, 0x43 ; ret
0x080e03a4:	add al, 0x45 ; or esp, dword ptr [ecx + 0xe] ; adc al, 0x43 ; ret
0x080e03f5:	and byte ptr [edx], al ; pop edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e0430:	add al, 0x44 ; push cs ; or al, 0xc6 ; push cs ; or bl, al
0x080e0441:	add al, 0x49 ; push cs ; or al, 0xc6 ; push cs ; or bl, al
0x080e0461:	adc byte ptr [ebx + 0xe7f0204], al ; or al, 0xc3
0x080e0472:	push cs ; adc byte ptr [esi + 0xc0e4204], al ; ret
0x080e048c:	adc byte ptr [esi + 0xe560204], al ; or al, 0xc3
0x080e049d:	push cs ; adc byte ptr [esi + 0xc0e7504], al ; ret
0x080e04ae:	push cs ; adc byte ptr [esi + 0xc0e7104], al ; ret
0x080e04bf:	push cs ; adc byte ptr [esi + 0xc0e7304], al ; ret
0x080e04d0:	push cs ; adc byte ptr [esi + 0xc0e4d04], al ; ret
0x080e04e1:	push cs ; adc byte ptr [esi + 0xc0e4a04], al ; ret
0x080e0536:	push cs ; adc byte ptr [esi + 0xc0e4f04], al ; ret
0x080e06e4:	add al, 0x47 ; push cs ; or al, 0xc6 ; push cs ; or bl, al
0x080e06fe:	add al, 0x4d ; push cs ; or al, 0xc6 ; push cs ; or bl, al
0x080e0727:	adc byte ptr [ebx + 0xe840204], al ; or al, 0xc3
0x080e0740:	push cs ; adc byte ptr [esi + 0xc0e7204], al ; ret
0x080e08e7:	push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; jp 0x11 ; ret
0x080e0992:	inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; pop esp ; ret
0x080e09d7:	push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e09e9:	dec edx ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e0a73:	inc ebp ; or ebx, dword ptr [eax + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e0aa7:	push cs ; push eax ; imul ecx, dword ptr [edx], 0xc341100e
0x080e0b3c:	loopne 4 ; insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e0b52:	inc esp ; or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e0bfe:	push cs ; or byte ptr [ebx + 0xa6e0202], al ; ret
0x080e0c05:	ret ; push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0c0c:	ret ; push cs ; add al, 0x41 ; or eax, dword ptr [esi + 0xa] ; ret
0x080e0c12:	or al, bl ; push cs ; add al, 0x41 ; or eax, dword ptr [esi - 0x3d]
0x080e0c89:	add al, byte ptr [edx] ; mov bl, 0xa ; push cs ; adc al, 0x43 ; ret
0x080e0d4a:	push cs ; or byte ptr [ebx + 0xa4c0202], al ; ret
0x080e0d51:	ret ; push cs ; add al, 0x43 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0d58:	ret ; push cs ; add al, 0x45 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0da4:	add byte ptr [esi + ecx + 8], al ; add dword ptr [edx], 0x65 ; ret
0x080e0dd8:	add edi, esi ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e0dee:	inc ebx ; or ebx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e0e29:	pop ebp ; push cs ; adc byte ptr [eax + 0xe], bl ; or al, 0x41 ; ret
0x080e0e85:	push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e0eb3:	push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080e0ef2:	push cs ; and byte ptr [esi + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080e0f08:	inc ebx ; or eax, dword ptr [edx] ; push ebp ; push cs ; adc al, 0x41 ; ret
0x080e0f48:	dec eax ; push cs ; adc byte ptr [ebp + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e0f95:	push cs ; xor byte ptr [edx + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080e1065:	inc ebp ; push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ebp - 0x3d], al
0x080e10c7:	inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf5b6fc], al
0x080e110a:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edx], al ; pop ebx ; or al, bl
0x080e1154:	push cs ; adc byte ptr [ebx + 0xa690204], al ; ret
0x080e11c1:	push cs ; and byte ptr [edi + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e11e8:	push cs ; and byte ptr [edx + 0xa], ch ; push cs ; adc byte ptr [ebx - 0x3d], al
0x080e1237:	loopne 3 ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e1517:	add esp, dword ptr [esi + 1] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e152c:	add al, 0x41 ; or ecx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e158c:	and byte ptr [edx], al ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e159e:	inc ecx ; lds ecx, ptr [esi] ; add al, 0x46 ; or eax, dword ptr [edx] ; ret
0x080e163c:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], ch ; ret
0x080e169e:	push cs ; jo 0x46 ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080e16ab:	add al, 0x45 ; or ebx, dword ptr [edx + 0xe] ; or al, 0x43 ; ret
0x080e16d2:	push ecx ; push cs ; adc byte ptr [eax + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e16fb:	push cs ; adc byte ptr [ebx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e1705:	dec eax ; or ecx, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e173e:	dec eax ; or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e1773:	and byte ptr [edx], al ; xchg eax, ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e17ab:	inc edx ; push cs ; and byte ptr [ebp + 0xe], bh ; or byte ptr [ecx - 0x3d], al
0x080e17f3:	push cs ; xor byte ptr [edx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e1808:	add al, 0x49 ; or edx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e18b1:	inc edi ; or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x43 ; ret
0x080e1962:	inc ecx ; push cs ; or al, 0x83 ; add ebp, dword ptr [edx + 0xa] ; ret
0x080e19b6:	add byte ptr [eax], al ; sbb al, 0 ; add byte ptr [eax], al ; add bl, al
0x080e19c7:	add byte ptr [eax], al ; jb 0xd ; add eax, dword ptr [edx] ; push ecx ; ret
0x080e19d6:	add byte ptr [eax], al ; sbb al, 0 ; add byte ptr [eax], al ; and bl, al
0x080e19f6:	add byte ptr [eax], al ; cmp byte ptr [eax], al ; add byte ptr [eax], al ; inc eax ; ret
0x080e1a23:	push cs ; inc eax ; pop ebx ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080e1a32:	or eax, dword ptr [eax] ; and byte ptr [eax], al ; add byte ptr [eax], al ; jl 0xffffffcb
0x080e1a82:	add byte ptr [eax], al ; push 0xcc000000 ; ret
0x080e1ac2:	push cs ; and byte ptr [esi + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e1ad7:	add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080e1b06:	inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; inc ecx ; ret
0x080e1bbd:	push cs ; adc al, 0x83 ; add eax, 0xc30a4e02
0x080e1bd0:	lds ecx, ptr [esi] ; add al, 0x47 ; or ecx, dword ptr [ecx + 0xa] ; ret
0x080e1be3:	lds ecx, ptr [esi] ; add al, 0x44 ; or esi, dword ptr [edi + 0xa] ; ret
0x080e1c28:	add al, 0x44 ; or ebp, dword ptr [eax + 0xc] ; add al, 4 ; ret
0x080e1ca0:	push cs ; and byte ptr [esi + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e1d49:	add al, 0x83 ; add eax, 0xa01f703 ; ret
0x080e1d58:	add al, 4 ; dec eax ; or eax, dword ptr [edx] ; out 0xa, al ; ret
0x080e1d89:	add al, 0x83 ; add eax, 0xa01e303 ; ret
0x080e1d98:	add al, 4 ; inc esi ; or eax, dword ptr [edx] ; push eax ; or al, bl
0x080e1dc8:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30afb02
0x080e1e11:	dec eax ; push cs ; and byte ptr [ecx + 0xe], bl ; adc al, 0x41 ; ret
0x080e1e89:	dec eax ; push cs ; xor byte ptr [edi + 0xe], al ; adc al, 0x43 ; ret
0x080e1ed4:	xor byte ptr [edx], al ; je 0xe ; push cs ; adc al, 0x41 ; ret
0x080e1f0f:	xor byte ptr [edx], al ; les ecx, ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e205a:	push cs ; inc eax ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e20c3:	push cs ; xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x46 ; ret
0x080e20d9:	inc ecx ; or edx, dword ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e20f8:	push cs ; xor byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e21a0:	rol byte ptr [esp + ebx*2], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e21d3:	rol byte ptr [eax + ecx*2], 1 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e2229:	rol byte ptr [esi + eax*2], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e2437:	inc eax ; add al, byte ptr [eax + 0x41140e0a] ; ret
0x080e24a0:	xor byte ptr [edx], al ; dec ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e24b7:	or eax, dword ptr [edx] ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e2510:	add edi, dword ptr [ebx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080e2562:	push cs ; jo 0x53 ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080e2635:	add al, 0x83 ; add eax, 0xa013c03 ; ret
0x080e2798:	push cs ; adc byte ptr [ebx + 0xa770204], al ; ret
0x080e27b0:	push cs ; and byte ptr [ecx + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; ret
0x080e27e7:	push cs ; adc byte ptr [ebp + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e285f:	push cs ; adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080e28c1:	add al, 0x83 ; add eax, 0xa042003 ; ret
0x080e28f1:	add al, 0x83 ; add eax, 0xa032f03 ; ret
0x080e2901:	add al, 0x48 ; or eax, dword ptr [ebx] ; loope 8 ; or al, bl
0x080e2a69:	loopne 3 ; imul ecx, dword ptr [edx], 0xe ; or al, 0x43 ; ret
0x080e2a76:	add al, 0x45 ; or edx, dword ptr [esi + ecx + 0xc] ; inc ebx ; ret
0x080e2aaf:	pop ebx ; push cs ; inc eax ; push ecx ; push cs ; adc al, 0x41 ; ret
0x080e2ae5:	add al, 0x83 ; add eax, 0xa011403 ; ret
0x080e2b3d:	push cs ; jo 0x48 ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e2b4f:	dec eax ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [eax - 0x3d], cl
0x080e2c11:	push cs ; adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x46 ; ret
0x080e2c1e:	add al, 0x45 ; or eax, dword ptr [ebx + 0xe] ; or al, 0x43 ; ret
0x080e2c43:	push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; inc esi ; or al, bl
0x080e2c79:	push cs ; adc byte ptr [edi + 0xa], cl ; push cs ; or al, 0x43 ; ret
0x080e2cde:	dec eax ; or ebp, dword ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e2d14:	add byte ptr [esi + ecx + 8], bl ; add dword ptr [edx], 0x6b ; ret
0x080e2d5a:	and byte ptr [edx], al ; inc edx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080e2d68:	inc edx ; or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x43 ; ret
0x080e2dd6:	dec eax ; or ebx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e2e59:	push eax ; dec eax ; push cs ; inc eax ; dec edx ; push cs ; add al, 0xc3
0x080e2ef7:	inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf597fc], al
0x080e2f3e:	push cs ; and byte ptr [esi + 0xa], bh ; push cs ; adc al, 0x41 ; ret
0x080e2fc7:	mov al, byte ptr [0xe0a6420] ; adc byte ptr [ebx - 0x3d], al
0x080e2fd9:	inc ebp ; or eax, dword ptr [esi + 0xa] ; push cs ; adc byte ptr [eax - 0x3d], cl
0x080e300b:	mov al, byte ptr [0xe0a4b20] ; adc byte ptr [ecx - 0x3d], al
0x080e3050:	push cs ; adc byte ptr [ebp + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e30a3:	push cs ; adc byte ptr [edx + ecx + 0xe], dl ; or al, 0x41 ; ret
0x080e3104:	xor byte ptr [edx], al ; or cl, byte ptr fs:[esi] ; adc al, 0x43 ; ret
0x080e3180:	push cs ; adc byte ptr [edx], al ; push ebx ; push cs ; or al, 0x41 ; ret
0x080e31c0:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ace02
0x080e322a:	push cs ; xor byte ptr [esi + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e3269:	add al, 0x83 ; add eax, 0xa030903 ; ret
0x080e32ab:	push cs ; and byte ptr [ebx + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080e32c1:	inc ebp ; or esi, dword ptr [edx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e3310:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a4802
0x080e3350:	push cs ; adc byte ptr [edi + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e335a:	dec esp ; or ecx, dword ptr [edx + ecx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e341f:	sbb al, 2 ; scasd eax, dword ptr es:[edi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3435:	inc esp ; or ebp, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e344b:	inc ecx ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e3476:	add al, 0x41 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e34a9:	add al, 0x83 ; add eax, 0xa010903 ; ret
0x080e34b9:	add al, 0x4b ; or eax, dword ptr [ebx] ; sbb eax, dword ptr [edx] ; or al, bl
0x080e3508:	push cs ; and byte ptr [esi + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080e3797:	inc edx ; push cs ; xor byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e3835:	push cs ; and byte ptr [esi + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080e3842:	add al, 0x42 ; or eax, dword ptr [ebx + 0xe] ; or al, 0x43 ; ret
0x080e387d:	inc ebp ; push cs ; sub al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e38b9:	inc ebp ; push cs ; sbb al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e39e3:	push cs ; adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ebx - 0x3d], al
0x080e39fb:	dec eax ; push cs ; adc byte ptr [esi + 0xe], cl ; or byte ptr [ebx - 0x3d], al
0x080e3a4a:	inc ecx ; push cs ; or al, 0x83 ; add esi, dword ptr [ebx + 0xa] ; ret
0x080e3aaa:	push cs ; push eax ; push 0x41140e0a ; ret
0x080e3ac0:	inc ecx ; or ecx, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e3ad8:	add edx, dword ptr [edx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e3b4e:	adc al, 0x69 ; push cs ; adc byte ptr [ecx + 0xe], al ; or al, 0xc3
0x080e3b5c:	add al, 0xc7 ; inc ecx ; or eax, dword ptr [ebp + 0xe] ; or al, 0xc3
0x080e3b92:	adc al, 0x63 ; push cs ; adc byte ptr [ecx + 0xe], al ; or al, 0xc3
0x080e3bcc:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ab602
0x080e3bdb:	add al, 4 ; inc esi ; or eax, dword ptr [edx] ; outsb dx, byte ptr [esi] ; or al, bl
0x080e3c15:	add eax, 0x5704854a ; push cs ; adc bl, al
0x080e3c7f:	push cs ; and byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e3cee:	push cs ; inc eax ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e4000:	add eax, 0x7b038344 ; or al, ch ; ret
0x080e4008:	or al, 4 ; add al, 0x46 ; or edx, dword ptr [edx + 0xa] ; ret
0x080e4061:	test dword ptr [ebx + eax*4], eax ; add eax, 0xc3100e74
0x080e4099:	push cs ; adc al, 0x83 ; add eax, 0xc30a8002
0x080e40ac:	lds ecx, ptr [esi] ; add al, 0x49 ; or ecx, dword ptr [edx + 0xa] ; ret
0x080e40bf:	lds ecx, ptr [esi] ; add al, 0x46 ; or esi, dword ptr [edx + ecx - 0x3d]
0x080e40ff:	xor byte ptr [edx], al ; jge 0xe ; push cs ; adc al, 0x41 ; ret
0x080e4115:	inc ebx ; or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e412b:	dec eax ; or ebp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e4140:	add al, 0x45 ; or edx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080e417f:	cmp byte ptr [edx], al ; imul ecx, dword ptr [edx], 0xe ; adc al, 0x41 ; ret
0x080e4197:	add eax, dword ptr [edi] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e4223:	push cs ; rol byte ptr [ecx], 1 ; dec ebx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4265:	add al, 2 ; push eax ; and byte ptr cs:[edx + 0xa], ah ; ret
0x080e4271:	or al, 4 ; add al, 0x47 ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080e42a8:	add cl, byte ptr [ebp + 0x2e] ; and byte ptr [edx], al ; js 0x11 ; ret
0x080e42b6:	or al, 4 ; add al, 0x47 ; or esp, dword ptr [edx + 0xa] ; ret
0x080e4367:	push cs ; and byte ptr [esi + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e444b:	inc ebp ; push cs ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080e4491:	push cs ; adc al, 0x4b ; push cs ; adc byte ptr [edi + 0xa], al ; ret
0x080e4591:	inc edi ; or ecx, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e45a5:	inc edi ; or eax, dword ptr [esi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e45af:	inc edi ; or eax, dword ptr [esi + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e45cf:	dec eax ; or edx, dword ptr [edx + ecx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e4636:	inc ecx ; push cs ; xor byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e46a2:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], al ; ret
0x080e4708:	push cs ; adc byte ptr [ecx + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080e4716:	dec eax ; or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x43 ; ret
0x080e475c:	add ebx, dword ptr [edx + 0x140e0a02] ; inc esi ; ret
0x080e483c:	add ebx, dword ptr [edx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e4851:	add al, 0x41 ; or edx, dword ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x080e48dc:	add dword ptr [edx], eax ; or cl, byte ptr fs:[esi] ; adc al, 0x43 ; ret
0x080e48f2:	inc ecx ; or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x48 ; ret
0x080e497e:	inc ebx ; push cs ; or al, 0x83 ; add ebx, dword ptr [ecx + 0xa] ; ret
0x080e49c7:	inc esp ; push cs ; adc byte ptr [ebx - 0x3ca5fdfc], al
0x080e49fe:	inc ebp ; push cs ; adc al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4a25:	add al, 0x83 ; add eax, 0xa0a1703 ; ret
0x080e4a77:	push cs ; inc eax ; jne 0xe ; push cs ; adc al, 0x41 ; ret
0x080e4c10:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc3017803
0x080e4c4d:	add al, 0x83 ; add eax, 0xa01dc03 ; ret
0x080e4c7c:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30afd02
0x080e4cbd:	add al, 0x83 ; add eax, 0xa023f03 ; ret
0x080e4ccd:	add al, 0x41 ; or eax, dword ptr [ebx] ; or byte ptr [ecx], al ; or al, bl
0x080e4cdb:	or al, 4 ; add al, 0x41 ; or ebx, dword ptr [edi + 0xa] ; ret
0x080e4d17:	and byte ptr [edx], al ; inc esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e4d4d:	add al, 0x83 ; add eax, 0xa028d03 ; ret
0x080e4df5:	add eax, 0x5a04854a ; push cs ; adc bl, al
0x080e4e37:	dec eax ; push cs ; and byte ptr [ecx + 0xe], ah ; adc al, 0x41 ; ret
0x080e4e75:	add al, 0x83 ; add eax, 0xa02b803 ; ret
0x080e4eec:	push cs ; xor byte ptr [edx + ecx + 0xe], ah ; adc al, 0x41 ; ret
0x080e4f0b:	push cs ; xor byte ptr [ebp + 0xa], bl ; push cs ; adc al, 0x46 ; ret
0x080e4f48:	add bl, byte ptr [ecx + 0x2e] ; and byte ptr [edx], al ; inc ebx ; or al, bl
0x080e5012:	inc ebx ; push cs ; adc byte ptr [edi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e5044:	inc ebp ; push cs ; and byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e506c:	inc edi ; push cs ; sbb al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e50a0:	inc ebp ; push cs ; xor byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e50d0:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xa], bl ; ret
0x080e50f1:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; ret
0x080e524b:	pushal ; add cl, byte ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e5297:	dec eax ; or esp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e52ad:	inc esi ; or ebp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e5351:	mov al, 1 ; inc esi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e53cc:	inc ebp ; push cs ; sbb al, 0x45 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e5432:	dec ecx ; push cs ; sub byte ptr [ebx + 0xe], al ; adc byte ptr [ecx - 0x3d], al
0x080e5535:	pushal ; add dl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e554c:	or eax, dword ptr [edx] ; push ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e55d1:	pushal ; add dl, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e5600:	add edx, dword ptr [ebx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x46 ; ret
0x080e5744:	push cs ; adc byte ptr [edi + 0xa], ah ; push cs ; or al, 0x41 ; ret
0x080e5752:	inc edx ; or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x41 ; ret
0x080e5760:	inc edi ; or edx, dword ptr [ebp + 0xa] ; push cs ; or al, 0x41 ; ret
0x080e576d:	add al, 0x41 ; or edx, dword ptr [edi + 0xe] ; or al, 0x41 ; ret
0x080e57a3:	inc eax ; add ch, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e585b:	xor byte ptr [edx], al ; jmp 0x43140e11 ; ret
0x080e5880:	push cs ; xor byte ptr [edx + ecx + 0xe], dh ; adc al, 0x43 ; ret
0x080e58f9:	add edx, dword ptr [ebx + 1] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e5911:	add edi, dword ptr [ecx + 0x140e0a03] ; inc ecx ; ret
0x080e5928:	or eax, dword ptr [edx] ; pop ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e597e:	add al, byte ptr [edx] ; dec esp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e5fd1:	add esp, dword ptr [ebx + 1] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e5fe9:	add edx, ecx ; add ecx, dword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e6056:	or byte ptr [edx], al ; dec esp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e655b:	inc eax ; add ch, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e6598:	or eax, dword ptr [edx] ; inc ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e65ae:	dec ebx ; or ecx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e668c:	push cs ; xor byte ptr [edi + 0xa], dh ; push cs ; adc al, 0x43 ; ret
0x080e671d:	add esp, dword ptr [edx] ; add al, 0xa ; push cs ; adc al, 0x41 ; ret
0x080e6773:	insb byte ptr es:[edi], dx ; add cl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080e69a5:	loopne 0x6e ; dec eax ; push cs ; shr byte ptr [edx + eax - 0x3d], 1
0x080e6bf9:	push cs ; xor byte ptr [ecx + 0xa], bh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e6c4a:	push cs ; inc eax ; js 0xe ; push cs ; adc al, 0x41 ; ret
0x080e6cf8:	push cs ; sbb byte ptr [edx], al ; push edi ; push cs ; or al, 0x41 ; ret
0x080e6d55:	push cs ; adc al, 0x83 ; add eax, 0xc30a4a02
0x080e6d67:	inc ecx ; lds ecx, ptr [esi] ; add al, 0x47 ; or eax, dword ptr [ecx - 0x3d]
0x080e6f53:	xor byte ptr [edx], al ; ja 0xe ; push cs ; adc al, 0x41 ; ret
0x080e6f93:	inc eax ; add dh, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e6fd3:	xor byte ptr [edx], al ; push ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e6fe9:	inc ebx ; or eax, dword ptr [edx] ; int3 ; push cs ; adc al, 0x43 ; ret
0x080e7017:	push cs ; adc byte ptr [edi + 0xa], bl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7021:	inc ecx ; or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e702b:	dec edx ; or edx, dword ptr [esi + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7034:	add al, 0x49 ; or eax, dword ptr [esi + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e70c1:	add esi, dword ptr [ecx + eax] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e70f3:	push cs ; push eax ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7109:	inc esi ; or ebp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e7154:	add al, byte ptr [edx] ; cdq ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e71b1:	add dword ptr [edx], eax ; loope 0xe ; push cs ; adc al, 0x41 ; ret
0x080e721c:	add byte ptr [edx], 2 ; in eax, dx ; push cs ; adc al, 0x41 ; ret
0x080e7250:	push cs ; adc byte ptr [ebx + 0xa530204], al ; ret
0x080e72b8:	add dword ptr [edx], eax ; inc eax ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e72ce:	inc ebp ; or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e7377:	lock add dword ptr [esi + 0xa], ecx ; push cs ; adc al, 0x46 ; ret
0x080e738c:	add al, 0x45 ; or eax, dword ptr [esi + 0xe] ; adc al, 0x43 ; ret
0x080e73cc:	add eax, dword ptr [ecx + eax] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e73e2:	inc esi ; or edi, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e73f8:	inc ecx ; or ebp, dword ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e742b:	dec esi ; push cs ; adc byte ptr [edx + 0xe], bh ; or al, 0x41 ; ret
0x080e7468:	adc byte ptr [edx], al ; inc edx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e7471:	add al, 0x46 ; or ecx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e7500:	push cs ; and byte ptr [ebx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e755c:	add al, byte ptr [edx] ; mov bh, 0xa ; push cs ; adc al, 0x43 ; ret
0x080e7571:	add al, 0x41 ; or eax, dword ptr [esi + 0xe] ; adc al, 0x43 ; ret
0x080e75c8:	or al, 4 ; add al, 0x45 ; or ecx, dword ptr [edi + 0xa] ; ret
0x080e76cc:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a6602
0x080e76d9:	lds ecx, ptr [esp + eax] ; add al, 0x41 ; or ecx, dword ptr [ecx - 0x3d]
0x080e77fd:	dec esp ; push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x41 ; ret
0x080e782b:	push cs ; adc byte ptr [edx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7835:	inc esi ; or eax, dword ptr [edi + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e783f:	dec ebx ; or ecx, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e7848:	add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080e786b:	push cs ; adc byte ptr [edi + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7875:	dec ecx ; or edx, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e787e:	add al, 0x46 ; or eax, dword ptr [esi + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e793c:	push eax ; push cs ; xor byte ptr [edi + 0xe], ah ; adc byte ptr [ecx - 0x3d], al
0x080e7977:	push cs ; and byte ptr [eax + 0xa], bl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e7993:	push cs ; and byte ptr [edx + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e79de:	push cs ; push eax ; jl 0xe ; push cs ; adc al, 0x43 ; ret
0x080e79f3:	add al, 0x48 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080e7a34:	add edi, dword ptr [edi] ; add cl, byte ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e7a60:	push cs ; jo 0x52 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e7ac1:	dec eax ; push cs ; inc eax ; push cs ; adc al, 0x41 ; ret
0x080e7b09:	inc eax ; add al, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e7b1e:	add al, 0x46 ; or ebx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e7b63:	pop eax ; push cs ; inc eax ; js 0x13 ; adc al, 0x41 ; ret
0x080e7ba3:	pushal ; add al, byte ptr [edx + 0x41140e0a] ; ret
0x080e7bee:	push cs ; pushal ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7c55:	push cs ; and byte ptr [edi + 0xe], bl ; adc byte ptr [ecx + 0xa], al ; ret
0x080e7d03:	inc edx ; push cs ; and byte ptr [eax + 0xe], cl ; or al, 0x45 ; ret
0x080e7da8:	inc esp ; push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e7ded:	push cs ; and byte ptr [edi + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080e7e03:	inc esp ; or ebx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e7e57:	push eax ; push cs ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080e7faa:	push cs ; pushal ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7fc0:	dec eax ; or ecx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e8091:	push cs ; pushal ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x08048417:	retf -0x76f6 ; sub edx, ebx ; add ebx, ecx
0x08049a2f:	mov dword ptr [ebp - 0x38], eax ; mov eax, dword ptr [edx + 0xc] ; mov ebx, ecx
0x08049abb:	add eax, 1 ; mov dword ptr [ebp - 0x38], eax ; jmp 0xffffffd3
0x0804a2d5:	add byte ptr [ebx + 0xfdb851b], cl ; test cl, bl
0x0804a6fe:	add byte ptr [eax], bh ; mov ebx, ecx
0x0804b079:	pop ebp ; mov ebx, dword ptr [edi] ; mov eax, dword ptr [edi - 4] ; bswap ebx
0x0804b472:	test byte ptr [ebx + 0x2740458], 0xf ; retf
0x0804b51f:	mov edi, dword ptr [ebp - 0x94] ; bswap ebx
0x0804d13d:	loopne 0xffffffb4 ; or ecx, dword ptr [eax] ; test ecx, ecx ; je 0xffffffd3
0x0804d6d0:	push ebp ; push edi ; mov edi, edx ; push esi ; push ebx ; mov ebx, ecx
0x08050773:	je 0xa5 ; sub ebx, ecx
0x0805081d:	and al, 8 ; add byte ptr [eax], al ; add byte ptr [eax], al ; sub ebx, ecx
0x08051d52:	mov ecx, dword ptr [esi + 4] ; mov ebx, dword ptr [esi + 8] ; sub ebx, ecx
0x08051d94:	mov ebx, dword ptr [esi + 8] ; add esp, 0x10 ; sub ebx, ecx
0x08051dbd:	sbb al, 0x89 ; lds eax, ptr [ebx - 0x34feef3c]
0x08052ecf:	add byte ptr [ebx + 0x128b084a], cl ; cmp ebx, ecx
0x080531bd:	dec ebp ; xor al, 0x85 ; leave ; je 0x24 ; cmp ebx, ecx
0x08053a6c:	pop esi ; or byte ptr [ecx], bh ; fnstenv dword ptr [ebx + 0x2d] ; sub ebx, ecx
0x080550ca:	push ebx ; mov ebp, 0xff ; mov ebx, ecx
0x080550d8:	mov esi, dword ptr [eax - 4] ; shr ebx, 3 ; xor ebx, ecx
0x08055127:	cmove ecx, edi ; mov byte ptr [eax + ebx], cl ; sub ebx, ecx
0x080555bc:	xor dword ptr [ebx], eax ; neg ecx ; add ebx, edx ; and ebx, ecx
0x080559d1:	push cs ; or byte ptr [ecx], al ; fild qword ptr [ecx] ; jmp 0xffffff8a ; retf
0x08055fa5:	mov dword ptr [eax + eax], 0x75c33900 ; retf
0x08056a99:	push cs ; or byte ptr [ecx], ch ; jmp 6 ; ret 0xcb83
0x08056ba6:	xor byte ptr [ecx], al ; fiadd dword ptr [ebx - 0x347cef15]
0x0805732e:	inc ebp ; xor byte ptr [ecx - 0x76f7dbbc], cl ; retf
0x08057354:	out dx, eax ; or dword ptr [ecx - 0x76c3dba4], ecx ; retf
0x08057d71:	enter -0x909, -0x7b ; ror byte ptr [edi], cl ; test ecx, ebx
0x0805af46:	jae 0x11c ; mov ebx, ecx
0x0805af8f:	jae 0xd3 ; mov ebx, ecx
0x0805afd4:	jae 0x8e ; mov ebx, ecx
0x0805b00d:	iretd ; lea eax, dword ptr [eax + 4] ; jae 0x55 ; mov ebx, ecx
0x0805ca31:	jg 0x44 ; mov ebx, 0x427f0f66 ; retf
0x0805d0ab:	outsd dx, dword ptr [esi] ; pop esp ; cmp byte ptr [eax], ah ; movdqa xmm1, xmm3
0x0805d0d9:	pop es ; add dword ptr [edi - 1], ebx ; and al, 0x8d ; xor bl, cl
0x0805d219:	pop es ; add bl, byte ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805d359:	pop es ; add ebx, dword ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805d5d9:	pop es ; add eax, 0x8d24ff5f ; xor bl, cl
0x0805d999:	pop es ; or byte ptr [edi - 1], bl ; and al, 0x8d ; xor bl, cl
0x0805dad9:	pop es ; or dword ptr [edi - 1], ebx ; and al, 0x8d ; xor bl, cl
0x0805dc19:	pop es ; or bl, byte ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805dd59:	pop es ; or ebx, dword ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805dfd9:	pop es ; or eax, 0x8d24ff5f ; xor bl, cl
0x0805e259:	pop es ; maxps xmm7, xmm7 ; and al, 0x8d ; xor bl, cl
0x080604fc:	sar byte ptr [ecx + 0x10], 0x83 ; retf
0x080615bc:	nop ; nop ; nop ; nop ; pcmpeqb xmm1, xmm3
0x080631bb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; push ebx ; mov ebx, ecx
0x0806321b:	jae 0x2e ; add eax, ecx ; add edx, ecx ; sub ebx, ecx
0x080634dd:	pop ebx ; ret ; nop ; movdqu xmm1, xmmword ptr [eax - 0x35]
0x080634e2:	outsd dx, dword ptr [esi] ; dec eax ; retf ; movdqu xmm2, xmmword ptr [edx - 0x35]
0x08063f6c:	palignr mm2, mm1, 1 ; movaps xmm1, xmm3
0x08063f9c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x1f], dl ; movaps xmm1, xmm3
0x080640ac:	palignr mm2, mm1, 2 ; movaps xmm1, xmm3
0x080640dc:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x1e], dl ; movaps xmm1, xmm3
0x080641ec:	palignr mm2, mm1, 3 ; movaps xmm1, xmm3
0x0806421c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x1d], dl ; movaps xmm1, xmm3
0x0806432c:	palignr mm2, mm1, 4 ; movaps xmm1, xmm3
0x0806435c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x1c], dl ; movaps xmm1, xmm3
0x0806445c:	palignr mm2, mm1, 5 ; movaps xmm1, xmm3
0x0806448c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x1b], dl ; movaps xmm1, xmm3
0x0806458c:	palignr mm2, mm1, 6 ; movaps xmm1, xmm3
0x080645bc:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x1a], dl ; movaps xmm1, xmm3
0x080646bc:	palignr mm2, mm1, 7 ; movaps xmm1, xmm3
0x080646ec:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x19], dl ; movaps xmm1, xmm3
0x080647ec:	palignr mm2, mm1, 8 ; movaps xmm1, xmm3
0x0806481c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x18], dl ; movaps xmm1, xmm3
0x0806491c:	palignr mm2, mm1, 9 ; movaps xmm1, xmm3
0x0806494c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x17], dl ; movaps xmm1, xmm3
0x08064a4c:	palignr mm2, mm1, 0xa ; movaps xmm1, xmm3
0x08064a7c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x16], dl ; movaps xmm1, xmm3
0x08064b7c:	palignr mm2, mm1, 0xb ; movaps xmm1, xmm3
0x08064bac:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x15], dl ; movaps xmm1, xmm3
0x08064cac:	palignr mm2, mm1, 0xc ; movaps xmm1, xmm3
0x08064cdc:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x14], dl ; movaps xmm1, xmm3
0x08064ddc:	palignr mm2, mm1, 0xd ; movaps xmm1, xmm3
0x08064e0c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x13], dl ; movaps xmm1, xmm3
0x08064f0c:	palignr mm2, mm1, 0xe ; movaps xmm1, xmm3
0x08064f3c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x12], dl ; movaps xmm1, xmm3
0x0806503c:	palignr mm2, mm1, 0xf ; movaps xmm1, xmm3
0x0806506c:	adc cl, byte ptr [edi] ; sub byte ptr [ecx + 0x11], dl ; movaps xmm1, xmm3
0x08066dff:	je 5 ; pmovmskb eax, xmm0 ; sub ebx, ecx
0x0806af7c:	por xmm3, xmm7 ; pcmpeqb xmm1, xmm3
0x0806b984:	lea ecx, dword ptr [edx + 0x10] ; and ecx, 0xfffffff0 ; mov ebx, ecx
0x0806b98c:	sub ebx, edx ; add eax, ebx ; mov ebx, esi ; sub ebx, ecx
0x0806b9dd:	add ecx, 0x40 ; sub ebx, 1 ; jne 0xffffffd3
0x0806c262:	lahf ; nop ; lea esi, dword ptr [esi] ; mov ebx, ecx
0x0806d53a:	add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [esi - 0x18], dl ; retf
0x0806dd6a:	mov edi, ebx ; mov ebx, ebp ; mov ecx, edi ; cmp bl, cl
0x0806eae2:	push esi ; mov edx, 2 ; mov ebx, ecx
0x0806ed62:	add esi, dword ptr [ebp + 0x1b] ; mov edi, dword ptr [edx + 4] ; cmp ebx, ecx
0x0807034e:	test ecx, ecx ; je 0xffffffd2 ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x08070381:	and al, 0x14 ; jmp 0xffffff9f ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x0807038c:	xchg eax, ebx ; mov esi, dword ptr [edx + 8] ; test esi, esi ; jne 0xffffffd3
0x08070392:	jne 0xffffffcd ; cmp ebp, ebx ; jne 0xffffff8e ; jmp 0xffffffd3
0x080703f9:	add byte ptr [ebx], ch ; adc byte ptr [ebx - 0x3476fe17], al
0x0807094d:	je 0x193 ; mov ebx, ecx
0x08070a8a:	call 0x86000004 ; leave ; mov ebx, ecx
0x08071dc1:	jne 0xffffffd2 ; movsx esi, byte ptr [ebx + 1] ; mov ebx, ecx
0x080724d7:	pop es ; mov al, 0xb ; or byte ptr [ebx - 0x18], dl ; fxch st(0), st(3)
0x08072a71:	loope 4 ; lea edx, dword ptr [ebp + ecx] ; add ebx, ecx
0x08072ea5:	add edx, 4 ; add esi, 4 ; cmp ebx, ecx
0x08072eca:	add dword ptr [eax], 1 ; add edx, 4 ; cmp ebx, ecx
0x080739e0:	cmp dword ptr [esp + 0x5c], eax ; mov dword ptr [ebx], edx ; mov ebx, ecx
0x08074bca:	and eax, 0xfffffff8 ; and ecx, 7 ; sub ebx, ecx
0x0807594f:	add dword ptr [ebx - 0x11f6c01b], eax ; cmp ebx, ecx
0x08075c2c:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov dword ptr [ebx], edx ; mov ebx, ecx
0x0807695f:	add byte ptr [edi], cl ; mov bh, 0xc0 ; mov dword ptr [ebx], eax ; mov ebx, ecx
0x080779e2:	in eax, 0x57 ; push esi ; push ebx ; mov esi, edx ; mov ebx, ecx
0x080786d0:	dec dword ptr [ebx + 0x3d4c2444] ; add ebx, ecx
0x08078ceb:	imul edi, edi, 0xd089ffff ; jmp 0xffffffd3
0x08078d12:	in eax, 0x57 ; push esi ; push ebx ; mov esi, eax ; mov ebx, ecx
0x08078d5a:	sbb eax, 0xc708458b ; add byte ptr [ecx], al ; retf
0x0807930a:	and byte ptr [ebp - 0x21bbf040], al ; cmp ebx, ecx
0x0807998b:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, ebx ; mov ebx, ecx
0x08079c0b:	pop ebp ; ret ; mov eax, ebx ; sub esi, edx ; mov ebx, ecx
0x0807aa0e:	or cl, byte ptr [ebp - 0x5d6cff4] ; cmp ebx, ecx
0x0807bb3e:	sbb dword ptr [ebx + ebx*8 - 0x41f0c28c], eax ; retf
0x0807c271:	add byte ptr [ebx - 0x17a9f314], al ; retf
0x0807c7a1:	mov eax, dword ptr [ebp - 0x454] ; add ebx, ecx
0x0807cd93:	mov edx, dword ptr [ebp - 0x458] ; add ebx, ecx
0x0807d298:	jg 0x1e6 ; add ebx, ecx
0x0807d434:	mov eax, dword ptr [ebp - 0x43c] ; add ebx, ecx
0x0807dbc0:	ja 0xfffff8be ; add ebx, ecx
0x08080966:	adc byte ptr [ebp + 0xfc789c0], al ; test ecx, ebx
0x08081ae9:	add al, 0x8b ; sbb byte ptr [ebx - 0x34c6fe3e], al
0x08081b34:	sbb byte ptr [ecx], bh ; pop ebp ; test byte ptr [edi + eax - 0x77], dh ; retf
0x08081bbd:	mov edx, dword ptr [ebp - 0xb0] ; mov ebx, ecx
0x08081bd6:	add byte ptr [eax], al ; add byte ptr [eax], al ; sub esi, ebx ; mov ebx, ecx
0x08081e70:	sub esp, 4 ; lea eax, dword ptr [esi + ecx*4] ; add ebx, ecx
0x08082413:	nop ; lea ebx, dword ptr [edx + ebx - 1] ; cmove ecx, ebx
0x08082427:	inc dword ptr [ebx + 0x38901c0] ; mov ebx, ecx
0x08083090:	les esp, ptr [eax] ; mov edx, eax ; mov eax, ebx ; cmp ebx, ecx
0x08083555:	add byte ptr [eax], al ; add byte ptr [ebx - 0x34d6fe17], al
0x080840de:	je 0x5e ; mov esi, dword ptr gs:[edi] ; movsx ecx, bl
0x0808411c:	and al, 0x33 ; mov edx, dword ptr gs:[eax] ; movsx ecx, bl
0x08085ff9:	mov ebx, dword ptr [eax + 0x10] ; mov ecx, dword ptr [eax + 0x14] ; cmp ebx, ecx
0x080867c9:	lea esp, dword ptr [ebx + edi*8 - 0x7af00001] ; retf
0x08087dc5:	jg 0x2b ; enter -0x3dc7, 0xf ; xchg ebx, ecx
0x0808b5e9:	mov ecx, dword ptr [ebp + 0x10] ; mov ebx, dword ptr [ebp + 0x14] ; sub ebx, ecx
0x0808b830:	mov eax, dword ptr [ebx + 0x58] ; mov eax, dword ptr [eax + 0x20] ; jmp 0xffffffd3
0x0808ba77:	mov ecx, dword ptr [ebp] ; mov ebx, dword ptr [ebp + 4] ; sub ebx, ecx
0x0808be3d:	pop edi ; adc al, 0x85 ; sal byte ptr [edx + ecx - 0x3f], 0xcb
0x0808e256:	pop eax ; adc al, 0x85 ; sal byte ptr [edx + ecx - 0x3f], cl ; retf
0x0808ecb4:	mov ebx, 0x18 ; cmova ecx, ebx
0x0808fa74:	add byte ptr [eax], al ; add bh, al ; inc ebx ; sub byte ptr [ebx], al ; retf
0x0809044d:	push 0x80ccb18
0x08090d25:	dec dword ptr [ecx + 0x68c4ebf1] ; nop ; retf
0x08091251:	inc ebx ; or al, 0x89 ; xor eax, eax ; jmp 0xffffffd3
0x08091c07:	push 0x80ccbe4
0x08091dc9:	jae 0xcd ; mov ebx, ecx
0x08093d6c:	mov dword ptr [esp + 0x18], edi ; mov edi, ebx ; mov ebx, ecx
0x080942dd:	xchg dword ptr [ebp + 0x1000001], edx ; jne 0xffffffd3
0x080952cc:	and al, 0x38 ; mov dword ptr [esp + 0x30], ebp ; mov ebx, ecx
0x08095680:	rcl cl, 1 ; call 0x9bad008 ; retf
0x080957b2:	add edx, 1 ; shl ecx, 5 ; add ebx, ecx
0x08095b13:	dec ebp ; pushfd ; xor ebx, eax ; xor ecx, edx ; or ebx, ecx
0x080966fc:	push dword ptr [eax + 0x22c] ; sub ebx, ecx
0x0809673d:	mov edx, dword ptr [0x80eaa08] ; mov ebx, ecx
0x08096e2b:	add al, 3 ; cmp cl, byte ptr [ebx - 0x3476f7ab]
0x080984e5:	adc bl, dl ; loop 0xffffff89 ; push ebp ; loopne 0x7c ; retf
0x08098d20:	push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov ebx, ecx
0x080992fb:	cmp dword ptr [edx], eax ; jb 0x15 ; mov ebx, edx ; cmp ebx, ecx
0x08099b1d:	mov ebx, eax ; mov ecx, dword ptr [esp + 0xc] ; je 0xffffffd3
0x0809a30a:	or al, 0x68 ; call 0xe8080ce8 ; retf
0x0809af67:	add al, 2 ; add byte ptr [eax], al ; or byte ptr [edi], cl ; test ecx, ebx
0x0809bb19:	stc ; or dword ptr [esi + 0x24], esi ; mov ecx, edi ; cmp bl, cl
0x0809bc74:	retf ; lea ebx, dword ptr [edi + 1] ; cmp esi, ebx ; jge 0xffffffd3
0x0809cc72:	or byte ptr [ebx - 0x778a0008], al ; mov ebx, ecx
0x0809d16d:	in al, 1 ; dec ebp ; loopne 0xffffff8e ; ret 0xcb01
0x0809e44a:	adc byte ptr [ebp + 0xfc389c0], al ; test cl, bl
0x0809ecdc:	imul ecx ; mov dword ptr [esp + 8], ebx ; mov ebx, ecx
0x0809ef03:	sar ebx, 0x1f ; or ebx, 1 ; add ebx, ecx
0x0809ef09:	add ebx, ecx ; cmp esi, ebx ; je 0x45 ; mov ebx, ecx
0x0809ef1d:	or byte ptr [ecx], al ; fmul dword ptr [ecx - 0x34deaa0d]
0x0809ef64:	les edx, ptr [eax] ; jmp 0xffffff8d ; mov esi, ebx ; mov ebx, ecx
0x0809f136:	loop 4 ; sub ecx, edx ; mov ebp, ecx ; mov ebx, ecx
0x0809f39b:	setge bl ; shr ecx, 0x1f ; cmp bl, cl
0x0809fbd8:	add byte ptr [eax], al ; add byte ptr [eax], al ; xor edi, edi ; mov ebx, ecx
0x080a0332:	add byte ptr [eax], al ; add byte ptr [ebp - 0x347af025], al
0x080a0c3f:	sete cl ; and eax, 0xfffffff0 ; mov ebx, ecx
0x080a1114:	xlatb ; jne 0x27 ; mov dword ptr [ebp + 0xc], ebx ; mov ebx, ecx
0x080a1785:	xor cl, byte ptr [ebx - 0x2d7aefb0] ; jne 0xffffffd3
0x080a2102:	mov esi, dword ptr [0x80eb7dc] ; mov ebx, ecx
0x080a2240:	mov ecx, dword ptr [edx] ; mov eax, dword ptr [ecx] ; cmp ebx, eax ; je 0xffffffd3
0x080a2828:	mov dh, 0x47 ; add cl, byte ptr [ebp - 0x3476fdb1]
0x080a3dfb:	movzx edi, byte ptr [edx - 2] ; mov ebx, edi ; cmp bl, cl
0x080a438f:	mov dword ptr [ebp - 0x57c], ebx ; mov ebx, ecx
0x080a50d0:	mov dword ptr [ebp - 0x59c], ebx ; mov ebx, ecx
0x080a6411:	mov ebx, 0x1ff83fc ; cmove ecx, ebx
0x080a6517:	dec dword ptr [ecx + 0x183c8d07] ; mov ebx, ecx
0x080a790b:	leave ; mov dword ptr [ebp + 8], esi ; mov esi, ebx ; mov ebx, ecx
0x080a7c75:	lea ecx, dword ptr [ebp - 0x438] ; sub ebx, ecx
0x080a7da9:	mov dword ptr [ebp - 0x560], edx ; mov ebx, ecx
0x080a8d76:	mov esi, eax ; mov eax, ecx ; mov edi, edx ; mov ebx, ecx
0x080a8fcf:	add byte ptr [edi + 0x56], dl ; xor esi, esi ; push ebx ; mov ebx, ecx
0x080a9455:	xchg byte ptr [edx + 0xf000001], dl ; scasd eax, dword ptr es:[edi] ; retf
0x080aa3a5:	add dword ptr [eax], eax ; add byte ptr [ebx - 0x348af607], al
0x080abbf3:	and al, 8 ; mov eax, dword ptr [esp + 0x20] ; mov ebx, ecx
0x080abe40:	mov edx, ebx ; mov dword ptr [esp + 0x7c], ebx ; mov ebx, ecx
0x080af026:	mov gs, word ptr [edi + 3] ; add byte ptr [eax], al ; lea edi, dword ptr [eax - 0x35]
0x080b254c:	mov esi, dword ptr [esp + 0x18] ; mov eax, dword ptr [esi] ; mov ebx, ecx
0x080b258c:	and ecx, 0xfffff ; or ebx, ecx
0x080b2d2a:	std ; adc byte ptr [ebp - 0x79f00f93], cl ; retf
0x080b5b02:	mov edi, dword ptr [esp + 8] ; sub eax, esi ; sbb ebx, ecx
0x080b5b2a:	mov esp, 0x27 ; add byte ptr [ecx], ch ; retf
0x080b727a:	ret 0 ; add byte ptr [eax + 0xf], al ; test cl, bl
0x080b7bd3:	add al, 0x8b ; add al, 0x82 ; je 0x15 ; mov ebx, ecx
0x080b88fe:	js 0x11 ; add byte ptr [eax], al ; xor esi, edi ; xor ebx, ecx
0x080b8ff0:	push ebp ; push edi ; mov edi, eax ; push esi ; push ebx ; mov ebx, ecx
0x080ba435:	lea edx, dword ptr [eax - 1] ; cmp edx, 0xfd ; ja 0xffffffd3
0x080ba7ac:	add al, 0xb5 ; mov al, byte ptr [0x1080eae] ; retf
0x080bc94e:	add eax, 0x5cae308 ; or byte ptr [ebx], dl ; retf
0x080bc952:	add eax, 0x5cb1308 ; or byte ptr [ebx - 0x35], al
0x080bc956:	add eax, 0x5cb4308
0x080bc95a:	add eax, 0x5cb8308 ; or bl, al ; retf
0x080bc95e:	add eax, 0x5cbc308 ; or bl, dh ; retf
0x080bc98e:	add eax, 0x5cade08 ; or byte ptr [esi], cl ; retf
0x080bc992:	add eax, 0x5cb0e08 ; or byte ptr [esi], bh ; retf
0x080bc996:	add eax, 0x5cb3e08 ; or byte ptr [esi - 0x35], bh
0x080bc99a:	add eax, 0x5cb7e08
0x080bc99e:	add eax, 0x5cbbe08 ; or dh, ch ; retf
0x080bc9ce:	add eax, 0x5cad908 ; or byte ptr [ecx], cl ; retf
0x080bc9d2:	add eax, 0x5cb0908 ; or byte ptr [ecx], bh ; retf
0x080bc9d6:	add eax, 0x5cb3908 ; or byte ptr [ecx - 0x35], bh
0x080bc9da:	add eax, 0x5cb7908
0x080bc9de:	add eax, 0x5cbb908 ; or cl, ch ; retf
0x080bca0e:	add eax, 0x5cad408 ; or byte ptr [ebx + ecx*8], al
0x080bca12:	add eax, 0x5cb0408 ; or byte ptr [ebx + ecx*8], dh
0x080bca16:	add eax, 0x5cb3408
0x080bca1a:	add eax, 0x5cb7408
0x080bca1e:	add eax, 0x5cbb408 ; or ah, ah ; retf
0x080bca52:	add eax, 0x5caff08 ; or byte ptr [edi], ch ; retf
0x080bca56:	add eax, 0x5cb2f08 ; or byte ptr [edi - 0x35], ch
0x080bca5a:	add eax, 0x5cb6f08
0x080bca5e:	add eax, 0x5cbaf08 ; or bh, bl ; retf
0x080bca92:	add eax, 0x5cafa08 ; or byte ptr [edx], ch ; retf
0x080bca96:	add eax, 0x5cb2a08 ; or byte ptr [edx - 0x35], ch
0x080bca9a:	add eax, 0x5cb6a08
0x080bca9e:	add eax, 0x5cbaa08 ; or dl, bl ; retf
0x080bcad6:	add eax, 0x5cb2508 ; or byte ptr [ebp - 0x35], ah
0x080bcada:	add eax, 0x5cb6508
0x080bcade:	add eax, 0x5cba508 ; or ch, dl ; retf
0x080bcb12:	add eax, 0x5caf008 ; or byte ptr [eax], ah ; retf
0x080bcb16:	add eax, 0x5cb2008 ; or byte ptr [eax - 0x35], ah
0x080bcb1a:	add eax, 0x5cb6008
0x080bcb1e:	add eax, 0x5cba008 ; or al, dl ; retf
0x080bd8de:	push es ; or bh, bh ; retf 0x806 ; or ebx, ecx
0x080bd8e2:	push es ; or byte ptr [ecx], cl ; retf ; push es ; or byte ptr [ebx], dl ; retf
0x080bd8ea:	push es ; or byte ptr [0x270806cb], bl ; retf
0x080bd8ee:	push es ; or byte ptr [edi], ah ; retf ; push es ; or byte ptr [ecx], dh ; retf
0x080bd8f2:	push es ; or byte ptr [ecx], dh ; retf ; push es ; or byte ptr [ebx], bh ; retf
0x080bd8f6:	push es ; or byte ptr [ebx], bh ; retf ; push es ; or byte ptr [ebp - 0x35], al
0x080bd8fa:	push es ; or byte ptr [ebp - 0x35], al ; push es ; or byte ptr [edi - 0x35], cl
0x080bd8fe:	push es ; or byte ptr [edi - 0x35], cl ; push es ; or byte ptr [ecx - 0x35], bl
0x080bd902:	push es ; or byte ptr [ecx - 0x35], bl ; push es ; or byte ptr [ebx - 0x35], ah
0x080bd906:	push es ; or byte ptr [ebx - 0x35], ah ; push es ; or byte ptr [ebp - 0x35], ch
0x080bd90a:	push es ; or byte ptr [ebp - 0x35], ch ; push es ; or byte ptr [edi - 0x35], dh
0x080bd912:	push es ; or byte ptr [ecx - 0x74f7f935], al ; retf
0x080bd916:	push es ; or byte ptr [ebx - 0x6af7f935], cl ; retf
0x080bd91a:	push es ; or byte ptr [ebp - 0x60f7f935], dl ; retf
0x080bd91e:	push es ; or byte ptr [edi - 0x56f7f935], bl ; retf
0x080bd922:	push es ; or byte ptr [ecx - 0x4cf7f935], ch ; retf
0x080bd926:	push es ; or byte ptr [ebx - 0x42f7f935], dh ; retf
0x080bd92e:	push es ; or byte ptr [ecx - 0x31], dh ; push es ; or cl, dl ; retf
0x080bd932:	push es ; or cl, dl ; retf ; push es ; or bl, bl ; retf
0x080bd936:	push es ; or bl, bl ; retf ; push es ; or ch, ah ; retf
0x080bd93a:	push es ; or ch, ah ; retf ; push es ; or bh, ch ; retf
0x080bd93e:	push es ; or bh, ch ; retf ; push es ; or cl, bh ; retf
0x080bd991:	int3 ; push es ; or cl, al ; int3 ; push es ; or bl, cl
0x080bda12:	push es ; or byte ptr [edi - 0x38f7f934], cl ; retf
0x080bdb61:	int 6 ; or byte ptr [ecx], cl ; int 6 ; or bl, cl
0x080bf9da:	add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add ebx, ecx
0x080bfa52:	add byte ptr [eax], al ; aaa ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080bfa56:	or ecx, dword ptr [eax] ; retf ; or al, 8 ; dec esp ; retf
0x080bfaa6:	or al, 8 ; aaa ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080c02e5:	add byte ptr [eax], al ; add dl, cl ; add byte ptr [eax], al ; add bl, cl
0x080c6099:	add byte ptr [eax], al ; add al, cl ; add byte ptr [eax], al ; add bl, cl
0x080c62a5:	add al, byte ptr [eax] ; add bh, al ; add al, byte ptr [eax] ; add bl, cl
0x080c66bd:	pop es ; add byte ptr [eax], al ; lds eax, ptr [edi] ; add byte ptr [eax], al ; retf
0x080c6a45:	or al, byte ptr [eax] ; add al, cl ; or al, byte ptr [eax] ; add bl, cl
0x080c6e45:	or eax, 0xdc80000 ; add byte ptr [eax], al ; retf
0x080c7245:	adc byte ptr [eax], al ; add al, cl ; adc byte ptr [eax], al ; add bl, cl
0x080c75c1:	add dword ptr [eax], eax ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c7601:	add al, byte ptr [eax] ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c7f59:	and al, 0 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c8449:	xor eax, dword ptr [eax] ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c8f49:	aam 1 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c96e9:	aad 1 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080cb53a:	or al, 8 ; ror byte ptr [ecx], 0xc ; or byte ptr [ecx], al ; retf
0x080cb53e:	or al, 8 ; add ebx, ecx ; or al, 8 ; add ebx, ecx
0x080cba12:	pop es ; or byte ptr [ebp - 0x32], ah ; pop es ; or al, al ; retf
0x080cbf99:	add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080cbf9d:	add byte ptr [eax], al ; add bl, cl ; jle 0xe ; or bl, cl
0x080cbfa1:	jle 0xa ; or bl, cl ; jle 0xe ; or bl, cl
0x080cbfc9:	jle 0xa ; or byte ptr [ebx + 0x7a], bh ; or byte ptr [eax], cl ; retf
0x080cbfcd:	jp 0xa ; or bl, cl ; jle 0xe ; or bl, cl
0x080cc005:	mov cl, byte ptr [eax] ; or byte ptr [edx], bl ; or dword ptr [eax], 8 ; retf
0x080cc009:	or dword ptr [eax], 8 ; retf ; jle 0xe ; or bl, cl
0x080cc0c5:	jle 0xa ; or byte ptr [eax], dh ; mov dword ptr [eax], ecx ; or bl, cl
0x080cc0c9:	mov dword ptr [eax], ecx ; or bl, cl ; jle 0xe ; or bl, cl
0x080cc0e5:	xchg byte ptr [eax], cl ; or byte ptr [edi - 0x7a], ah ; or byte ptr [eax], cl ; retf
0x080cc0e9:	xchg byte ptr [eax], cl ; or bl, cl ; jle 0xe ; or bl, cl
0x080cc18d:	jp 0xa ; or byte ptr [ebx + 0x7a], bh ; or byte ptr [eax], cl ; retf
0x080ce71a:	inc dword ptr [eax] ; add byte ptr [eax], al ; add byte ptr [eax], al ; add ebx, ecx
0x080cf01a:	or al, 8 ; in al, -0x4c ; or al, 8 ; add ebx, ecx
0x080cf05a:	and eax, 0x662574 ; add byte ptr [ecx], al ; retf
0x080cffc3:	cmpsd dword ptr [esi], dword ptr es:[edi] ; inc ebx ; mov bx, 0xf32d ; retf
0x080d0420:	add dword ptr [edi - 0x67d7900], edx ; dec ebx ; retf
0x080d0469:	xchg eax, ebp ; jge 0xffffffdc ; dec ebp ; push eax ; xor byte ptr [ecx], ah ; retf
0x080d04d7:	jne 0xffffffc3 ; mov ecx, 0x5b92ac50 ; retf
0x080d05c1:	push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x080d0704:	mov gs, ebp ; lodsb al, byte ptr [esi] ; xchg eax, edi ; jo 0x6c ; salc ; retf
0x080d0f12:	sbb bl, byte ptr [0x30565c9] ; in eax, dx ; retf
0x080d0fa9:	pop eax ; pop edx ; xor dword ptr [edx - 0x3e], ecx ; dec ecx ; sbb ecx, ebx
0x080d12fc:	mov bh, 0x4c ; out dx, eax ; push ecx ; test al, 0xf2 ; dec ebp ; retf
0x080d146c:	pop ss ; test eax, 0x35eea9cd ; outsb dx, byte ptr [esi] ; retf
0x080d1db0:	jge 0x6a ; mov ch, 0x41 ; outsb dx, byte ptr [esi] ; sbb edi, ebp ; retf
0x080d1e79:	nop ; push ss ; out dx, al ; out 0x78, al ; jnp 0x61 ; retf
0x080d1e9e:	je 0xffffffc6 ; ret 0xacfc ; loop 0xffffffce ; retf
0x080d1faa:	mov ecx, 0x7ce1a201 ; pop edx ; leave ; retf
0x080d201f:	xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0xffffffd3
0x080d2179:	call 0xbcecae35 ; sbb al, 0x8c ; retf
0x080d21e8:	cmpsb byte ptr [esi], byte ptr es:[edi] ; pop ss ; insb byte ptr es:[edi], dx ; inc edi ; js 0xfffffff8 ; pushal ; retf
0x080d23e2:	add al, 0xe0 ; ja 0x25 ; dec eax ; scasb al, byte ptr es:[edi] ; adc ebx, ecx
0x080d28d7:	jbe 0xffffffce ; mov ds, word ptr [edx + edx - 0x71] ; retf
0x080d2ee0:	test ch, bh ; cmp cl, byte ptr [esi] ; and byte ptr [ebx + 0x3d], bh ; retf
0x080d2f8e:	cmp esi, edi ; pop ebx ; je 0x80 ; sar byte ptr [ebx - 0x35], 1
0x080d4c12:	xchg eax, edx ; and al, 0x49 ; xchg eax, edx ; and al, 9 ; or bl, cl
0x080d521a:	cld ; inc dword ptr [eax - 0x33] ; cld ; inc dword ptr [eax - 0x35]
0x080d521e:	cld ; inc dword ptr [eax - 0x35] ; cld ; inc dword ptr [eax - 0x35]
0x080d5226:	cld ; dec dword ptr [eax - 0x77000335] ; retf
0x080d8b92:	add byte ptr [eax], al ; fdiv dword ptr [eax + eax] ; add byte ptr [eax], cl ; retf
0x080d8c1e:	add byte ptr [eax], al ; xor eax, 0xcb2c0000
0x080d8c56:	add byte ptr [eax], al ; pushfd ; xor eax, 0xcbe40000
0x080dca01:	jae 2 ; add byte ptr [edx + ebx*2], bh ; stc ; dec ebx
0x080dd481:	inc ecx ; lds ecx, ptr [esi] ; add al, 0x4a ; or eax, dword ptr [ebx] ; retf
0x080ddb06:	add byte ptr [eax], al ; dec esp ; test byte ptr [eax], al ; add ah, dh ; retf
0x080ddb32:	add byte ptr [eax], al ; js 0xffffff88 ; add byte ptr [eax], al ; clc ; retf
0x080de5c6:	add byte ptr [eax], al ; or al, 0x8f ; add byte ptr [eax], al ; add al, 0xcb
0x080de5da:	add byte ptr [eax], al ; and byte ptr [edi - 0x34f00000], cl
0x080de602:	add byte ptr [eax], al ; dec eax ; pop dword ptr [eax] ; add byte ptr [eax], bl ; retf
0x080de62a:	add byte ptr [eax], al ; jo 0xffffff93 ; add byte ptr [eax], al ; and bl, cl
0x080decde:	loopne 4 ; dec edi ; push cs ; rol byte ptr [edx], 2 ; retf
0x080df02e:	adc al, 0x83 ; add eax, 0x2280e43 ; retf
0x080e0352:	add byte ptr [eax], al ; cwde ; lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; sbb bl, cl
0x080e03be:	add byte ptr [eax], al ; add al, 0xad ; add byte ptr [eax], al ; jl 0xffffffd3
0x080e0412:	add byte ptr [eax], al ; pop eax ; lodsd eax, dword ptr [esi] ; add byte ptr [eax], al ; fmul st(3)
0x080e4d32:	add byte ptr [eax], al ; js 0xfffffffa ; add byte ptr [eax], al ; mov bl, cl
0x080b75cc:	int 0x80 ; je 0xe ; cmp ax, 0x50f
0x080bb825:	or byte ptr [eax], dl ; sub al, 5 ; or byte ptr [eax], dh ; syscall
0x080d265b:	xor eax, ebx ; repne scasd eax, dword ptr es:[edi] ; daa ; push esp ; syscall
0x0806c769:	or byte ptr [eax + 1], bh ; int 0x80
0x0806f104:	nop ; nop ; nop ; nop ; int 0x80
0x0807a4a9:	nop ; mov eax, 0xad ; int 0x80
0x0807a4b2:	pop eax ; mov eax, 0x77 ; int 0x80
0x080b75c6:	movzx eax, word ptr [eax + 5] ; cmp ax, 0x80cd
0x080d2477:	jle 0xffffffe9 ; inc edi ; fstp xword ptr [edi] ; imul ecx, ebp, -0x80
0x080481aa:	in al, dx ; or al, ch ; scasd eax, dword ptr es:[edi] ; add eax, 0xc3810000
0x080483c3:	sbb al, 5 ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08048479:	int 0x89 ; sbb byte ptr [ecx + 0x5f5e5bd0], cl ; ret
0x080484c9:	add byte ptr [ebx + 0x5e5b2cc4], al ; pop edi ; pop ebp ; ret
0x080485c8:	or byte ptr [ebx + 0x5e5b2cc4], al ; pop edi ; pop ebp ; ret
0x0804875b:	nop ; nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x08048792:	or bh, bh ; rol byte ptr [ebx - 0xc36ef3c], 1 ; ret
0x080487cc:	or bh, bh ; rol byte ptr [ebx - 0xc36ef3c], cl ; ret
0x0804880b:	add eax, 0x80eaf80 ; add ecx, ecx ; ret
0x08048897:	add esp, 4 ; pop ecx ; pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x08048a68:	cmp eax, 0x80e9fcc ; add byte ptr [edi], cl ; test eax, ebx
0x08048bb6:	loopne 0x11 ; mov dword ptr [edx], eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08048c0f:	cmp ebx, 0x68747541 ; sete bl
0x08048c1a:	arpl word ptr [ecx + 0x4d], ax ; inc esp ; sete al ; test al, bl
0x08048f7a:	or byte ptr [ebx + 0x5e5b6cc4], al ; pop edi ; pop ebp ; ret
0x080490b2:	cmp bh, bh ; div edi ; imul eax, edi ; mov ebx, eax
0x080492bd:	add byte ptr [ebx + 0x80ea068], ah ; xor eax, eax ; ret
0x080492da:	call 0xfffffd66 ; add esp, 0x1c ; ret
0x08049378:	out -0x7d, eax ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x080493fe:	int 0xd3 ; or al, 8 ; cmovne esi, ebx ; mov ebx, eax
0x08049535:	call 0xc6b ; add esp, 0x2c ; ret
0x0804953d:	ret ; nop ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08049594:	les ecx, ptr [ecx + ecx*4] ; enter 0x5e5b, 0x5f ; pop ebp ; ret
0x080495f3:	xor ecx, ecx ; pop ebx ; mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x0804975d:	sub eax, dword ptr [ebx + 4] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08049857:	add ecx, ebx ; cmp ebx, edi ; cmovb eax, ecx ; mov ebx, eax
0x08049ca1:	fisttp dword ptr [edi] ; test byte ptr [eax - 0x7d000000], bl ; ret
0x08049eb0:	and eax, 0xfffffff0 ; push eax ; mov dword ptr [ebp - 0x44], eax ; mov ebx, eax
0x0804a04b:	add byte ptr [eax], al ; add esp, 0x10 ; test eax, eax ; mov ebx, eax
0x0804a21c:	inc ebp ; int3 ; call 0x30124 ; mov ebx, eax
0x0804a2b8:	mov al, 0xf ; test byte ptr [ebx - 0x76fffffd], bl ; ret
0x0804a396:	cmpsb byte ptr [esi], byte ptr es:[edi] ; inc dword ptr [edx] ; add byte ptr [ebx - 0x3c76ef3c], al
0x0804a614:	inc ebp ; int3 ; call 0x2fd2c ; mov ebx, eax
0x0804a7c7:	and eax, 0x80808080 ; je 0xfffffff1 ; mov ebx, eax
0x0804a7d5:	adc byte ptr [ecx + 0x8080], ch ; cmove eax, ebx
0x0804a92f:	nop ; push ebp ; push edi ; mov edi, ecx ; push esi ; push ebx ; mov ebx, eax
0x0804aae2:	add esp, 0x30 ; mov edx, dword ptr [esp + 0xc] ; mov ebx, eax
0x0804ab9f:	nop ; push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x0804ac29:	push cs ; or byte ptr [0xfffff000], bh ; mov ebx, eax
0x0804aca1:	add byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x0804ad29:	adc ebx, dword ptr [ecx + 2] ; add byte ptr [ebx - 0x3c760008], al
0x0804b302:	rol byte ptr [eax + eax*8 - 0xce988c], 0x83 ; ret
0x0804b6c7:	mov ebx, esi ; lea eax, dword ptr [edx + 1] ; mov edx, eax ; sub ebx, eax
0x0804bcc6:	js 0x76 ; sbb eax, 0xf58fa80 ; test eax, ebx
0x0804bff4:	call 0xffffc26c ; add esp, 0x1c ; ret
0x0804c05b:	into ; sub byte ptr [eax + 0xf178910], 0x85 ; ret
0x0804c2cc:	adc byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x0804c56b:	les ebx, ptr [ecx + ecx*4] ; rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; pop ebp ; ret
0x0804c6b2:	or al, 0x57 ; call 0xeb5e ; sub ebx, eax
0x0804c835:	add dword ptr [edi - 0x18], edx ; aam 0xe9 ; add byte ptr [eax], al ; sub ebx, eax
0x0804c895:	add dword ptr [edi - 0x18], edx ; je 0xffffffee ; add byte ptr [eax], al ; sub ebx, eax
0x0804c986:	call 0x5b1cc488 ; pop esi ; pop edi ; pop ebp ; ret
0x0804c9b7:	and eax, 0x83ffffff ; in al, dx ; or al, 0x83 ; ret
0x0804cbda:	les ecx, ptr [ecx + ecx*4] ; call 0x5d5f5e63 ; ret
0x0804cc81:	je 0x17f ; mov ebx, eax
0x0804cce4:	cli ; jne 0xfffffff4 ; cmp dl, 0x2e ; mov ebx, eax
0x0804cdd0:	rol dword ptr [ebx + 0x5e5b1cc4], 0x5f ; pop ebp ; ret
0x0804ce0d:	out dx, eax ; mov bl, 0xff ; inc dword ptr [ebx - 0x3c76ef3c]
0x0804ce5e:	nop ; nop ; test eax, eax ; je 0x2a ; push ebx ; mov ebx, eax
0x0804ce81:	les eax, ptr [eax] ; add byte ptr [ebx - 0xca4e73c], al ; ret
0x0804ceaf:	add byte ptr [ebp + 0x57], dl ; mov ebp, edx ; push esi ; push ebx ; mov ebx, eax
0x0804cf17:	int1 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804cf33:	rol byte ptr [ebx + 0x5e5b1cc4], 0x5f ; pop ebp ; ret
0x0804d05d:	je 0x39 ; cld ; lea eax, dword ptr [edx + eax - 2] ; cmp ebx, eax
0x0804d162:	add byte ptr [eax], al ; add byte ptr [ebp + 0x39302444], cl ; ret
0x0804d17d:	add byte ptr [eax], al ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804d78b:	add byte ptr [ebx + 0x5e5b1cc4], al ; pop edi ; pop ebp ; ret
0x0804d7d0:	movzx edx, byte ptr [ecx] ; test dl, dl ; jne 0xffffffe7 ; ret
0x0804d80d:	dec edx ; adc al, 0x89 ; push 0xc ; mov dword ptr [edx + 0x18], eax ; ret
0x0804d941:	or ecx, dword ptr [ebp + 0xeb26c05] ; or al, ch ; ret
0x0804dbce:	add byte ptr [ebx + 0x5e5b3cc4], al ; pop edi ; pop ebp ; ret
0x0804de51:	rol byte ptr [ecx + ecx*4], 0x50 ; cld ; add edx, edi ; cmp ebx, eax
0x0804df5f:	and byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x0804e085:	call 0xfffffd0b ; add esp, 0x2c ; ret
0x0804e0eb:	les ebx, ptr [ecx + ecx*4] ; fcomp dword ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x0804e153:	xor ebx, ebx ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804e31e:	ror byte ptr [edi], 0x84 ; jg 5 ; add byte ptr [eax], al ; mov ebx, eax
0x0804e48b:	call 0x45 ; add esp, 0x2c ; ret
0x0804e4b9:	call 0x17 ; add esp, 0x2c ; ret
0x0804e5ed:	rol byte ptr [ebx + 0x5e5b2cc4], 0x5f ; pop ebp ; ret
0x0804e651:	les ebp, ptr [ecx + esi] ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x0804e915:	call 0xfffffbbb ; add esp, 0x2c ; ret
0x0804ea25:	inc esp ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ebc3:	inc eax ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ec03:	call 0x1cbd ; add esp, 0x1c ; ret
0x0804ec82:	in al, -0x73 ; hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ef1f:	lea esp, dword ptr [ebp - 8] ; mov eax, edx ; pop ebx ; pop esi ; pop ebp ; ret
0x0804efdd:	add byte ptr [eax], al ; add byte ptr [eax - 0xcf7f44b], al ; ret
0x0804f065:	jne 0xb ; add esp, 8 ; mov eax, ebx ; pop ebx ; ret
0x0804f093:	or ecx, dword ptr [eax] ; add esp, 8 ; mov eax, ebx ; pop ebx ; ret
0x0804f09b:	ret ; lea esi, dword ptr [esi] ; xor ebx, ebx ; jmp 0xffffffcc
0x0804f0cd:	call 0xffffff23 ; add esp, 0x1c ; ret
0x0804f25f:	nop ; push ebp ; push edi ; mov ebp, edx ; push esi ; push ebx ; mov ebx, eax
0x0804f566:	dec dword ptr [ebp + 0x5e5bf465] ; pop edi ; pop ebp ; ret
0x0804f8c1:	add byte ptr [eax], al ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804f956:	je 0x26 ; or byte ptr [ebp - 1], dl ; push eax ; inc eax ; mov ebx, eax
0x0804f96c:	add byte ptr [ebx + 0x4d8b1c75], cl ; pop eax ; mov ebx, eax
0x0804f9a9:	pushfd ; add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x0804f9ef:	add byte ptr [ebx + 0x558b4c45], cl ; push eax ; mov ebx, eax
0x0804fa74:	and eax, edi ; mov edx, edi ; mov edi, dword ptr [ebp + 0x20] ; mov ebx, eax
0x0804fafa:	les edx, ptr [eax] ; mov edi, dword ptr [esp + 0x14] ; cdq ; mov ebx, eax
0x0804fb74:	mov dword ptr [ebp + 0x50], edx ; mov edx, dword ptr [esp + 4] ; mov ebx, eax
0x0804fba9:	jl 0x26 ; add al, 0xc1 ; sti ; add cl, byte ptr [edi] ; scasd eax, dword ptr es:[edi] ; ret
0x0804fbc8:	add al, 0x8b ; inc ebp ; dec esp ; mov edx, dword ptr [ebp + 0x50] ; mov ebx, eax
0x0804fc8a:	xlatb ; mov eax, dword ptr [ebp + 0x4c] ; mov edx, dword ptr [ebp + 0x50] ; mov ebx, eax
0x0804fcb2:	mov edx, edi ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804fd79:	add al, 0x81 ; les ebx, ptr [eax + eax - 0x3c770000]
0x0804fd80:	mov ebx, eax ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ff01:	add byte ptr [edx], ch ; push ebp ; call dword ptr [eax + 0x40] ; mov ebx, eax
0x0805017f:	ret ; mov eax, dword ptr [eax] ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x080501b7:	add byte ptr [ebx + 0x14c48302], cl ; pop ebx ; pop esi ; ret
0x08050227:	les ecx, ptr [eax] ; mov eax, 0xffffffff ; pop ebx ; ret
0x08050385:	adc al, 0x83 ; les edi, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x080503b1:	les edi, ptr [ecx + esi] ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x080504bb:	inc esp ; and al, 0x14 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0805064b:	pop ebx ; mov eax, 0xffffffff ; pop esi ; pop edi ; ret
0x080507bc:	mov dword ptr [edx + 0x10], ecx ; mov eax, edi ; sub eax, ebx ; mov ebx, eax
0x080507f2:	fadd dword ptr [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret
0x08050809:	mov bl, 0xad ; add eax, dword ptr [eax] ; add esp, 0x10 ; sub ebx, eax
0x080508e7:	add byte ptr [eax], al ; add byte ptr [eax], al ; sub esp, 0xc ; mov ebx, eax
0x0805094d:	add al, byte ptr [eax] ; add esp, 0x10 ; test eax, eax ; mov ebx, eax
0x08050993:	lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x080509a9:	add esp, 0x10 ; test eax, eax ; mov dword ptr [esi], eax ; je 0xffffffcc
0x08050b79:	clc ; cld ; je 0xfffffff7 ; mov ecx, dword ptr [ebp + 8] ; mov ebx, eax
0x08050b85:	cmp cl, byte ptr [ebp + 0x5e5bf465] ; pop edi ; pop ebp ; ret
0x08050cd2:	xlatb ; mov eax, ebx ; mov dword ptr [esi], edi ; pop ebx ; pop esi ; pop edi ; ret
0x08050d0b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; jmp 0xffffffcc
0x08050d47:	dec esp ; mov dword ptr [ebx + 0x50], edx ; add esp, 8 ; pop ebx ; ret
0x08050d73:	cmp eax, 0xfffff000 ; ja 0xd ; pop ebx ; ret
0x08050dc0:	inc ebx ; or byte ptr [ecx + 0x8c483d8], cl ; pop ebx ; ret
0x08050e17:	inc ebx ; or byte ptr [ebx - 0x2776f73c], al ; pop ebx ; ret
0x08050e33:	loopne 0xffffffb7 ; or ecx, dword ptr [eax] ; add esp, 8 ; pop ebx ; ret
0x08050e3e:	add byte ptr es:[edi + 0x56], dl ; mov edi, edx ; push ebx ; mov ebx, eax
0x08050ea0:	mov eax, esi ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x08051082:	add cl, byte ptr [ebp + 0x5e5bf465] ; pop edi ; pop ebp ; ret
0x08051289:	add byte ptr [eax], al ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080513b3:	and al, 4 ; mov edi, eax ; and edi, dword ptr [esp] ; mov ebx, eax
0x0805146a:	pop ebx ; mov edi, eax ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x0805152e:	mov edi, eax ; pop ebx ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x080517dd:	nop ; nop ; nop ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08051877:	les edi, ptr [ecx + ecx*4 - 0x10] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051a49:	mov dword ptr [ebx + 8], eax ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; ret
0x08051a7d:	add byte ptr [eax], al ; add byte ptr [ebp + 0x57], dl ; push esi ; push ebx ; mov ebx, eax
0x08051c60:	call 0x1b3c0 ; add esp, 0x1c ; ret
0x08051cf8:	push eax ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051d6a:	clc ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051ed7:	les ebx, ptr [ebx + ebx*2] ; pop esi ; sub eax, ebp ; pop edi ; pop ebp ; ret
0x080520bc:	cli ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805211f:	adc byte ptr [edi], cl ; mov dh, 0 ; add esp, 8 ; pop ebx ; ret
0x08052191:	cmp eax, 0xfffff000 ; ja 0x27 ; pop ebx ; ret
0x0805222f:	clc ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08052449:	add esp, 0x10 ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x080524c6:	add al, ch ; jae 0xffffffe6 ; add dword ptr [eax], eax ; mov ebx, eax
0x08052534:	mov dword ptr gs:[esi], edi ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x08052543:	sbb eax, 0x315bee74 ; rcr byte ptr [esi + 0x5f], 0xc3
0x08052566:	mov ecx, ebx ; call 0xffffe8da ; cmp ebx, eax
0x08052573:	mov dh, 0xc0 ; neg eax ; add esp, 8 ; pop ebx ; ret
0x08052751:	rol byte ptr [ebx + 0x5e5b3cc4], 0x5f ; pop ebp ; ret
0x08052883:	aam 0x89 ; sti ; cmp bl, 2 ; setbe bl
0x08052a21:	les edi, ptr [ebx + ebx*2] ; mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x08052b03:	sbb byte ptr [ebx + 0x5e5b3cc4], al ; pop edi ; pop ebp ; ret
0x08052b31:	xor eax, eax ; jmp 0xfffffc21 ; mov ebx, eax
0x08052c64:	mov eax, esi ; movzx eax, al ; pop ebx ; pop esi ; pop edi ; ret
0x080530d3:	push cs ; or al, ch ; mov edx, 0xc3f30001
0x080530e2:	push esi ; push ebx ; mov esi, 0 ; mov ebx, eax
0x0805325c:	adc byte ptr [ebx + 0x5e5b1cc4], al ; pop edi ; pop ebp ; ret
0x08053319:	jmp 0xfffffdc7 ; nop ; ret
0x0805348b:	les edx, ptr [eax] ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0805351f:	cmovg eax, ecx ; test edx, edx ; jne 0xfffffff9 ; ret
0x0805354d:	dec eax ; and al, 0x89 ; push eax ; or al, 0x89 ; push eax ; add al, 0xc3
0x0805357f:	or al, 0x89 ; dec eax ; and al, 0x89 ; push eax ; add al, 0x5b ; ret
0x080535c1:	mov dword ptr [ebx], edx ; xor eax, eax ; add esp, 8 ; pop ebx ; ret
0x08053640:	add byte ptr [eax], al ; add byte ptr [eax], al ; add esp, 0x18 ; pop ebx ; ret
0x08053720:	mov byte ptr [0x8300b60f], al ; les ecx, ptr [eax] ; pop ebx ; ret
0x08053825:	add al, 0xf ; mov dh, 0 ; add esp, 8 ; pop ebx ; ret
0x0805387c:	enter -0x76ff, 3 ; add esp, 8 ; pop ebx ; ret
0x08053889:	loopne 0 ; mov dword ptr [ebx], eax ; add esp, 8 ; pop ebx ; ret
0x080538b9:	sbb al, 0x85 ; leave ; je 0xf ; pop ebx ; pop esi ; pop edi ; ret
0x08053903:	mov dword ptr [ebx + 0x20], edi ; mov dword ptr [ebx], eax ; pop ebx ; pop esi ; pop edi ; ret
0x08053a1d:	les ecx, ptr [ebx + ebx*2] ; sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08053a31:	les ecx, ptr [ecx + esi] ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x08053a8b:	add dword ptr [eax - 0x3f7cf8ec], ecx ; add dword ptr [ecx], edi ; ret
0x08053ab9:	les ecx, ptr [ebx + ebx*2] ; pop esi ; sub eax, ebp ; pop edi ; pop ebp ; ret
0x08053b59:	or al, 0 ; add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x08053bba:	sub al, 0x50 ; call dword ptr [edx + 0x24] ; add esp, 0x2c ; ret
0x08053c0b:	adc al, 0xb8 ; add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; pop esi ; ret
0x08053ce0:	inc edi ; inc eax ; pop esp ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x08053d7c:	mov dword ptr [eax + 8], 0 ; ret
0x08053e8c:	mov dword ptr [eax + 0x5c], 0 ; pop ebx ; ret
0x08053eaa:	mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; ret
0x08053f08:	add eax, dword ptr [eax - 0x3b7cf38b] ; or byte ptr [ebx - 0x3d], bl
0x08053f96:	and dword ptr [ebx], 0xffffffef ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08053fc9:	inc dword ptr [ebx - 0x3b7c10dd] ; or byte ptr [ebx - 0x3d], bl
0x08053feb:	clc ; push dword ptr [ebp - 0x25] ; add esp, 8 ; pop ebx ; ret
0x0805402b:	hlt ; mov eax, dword ptr [esp + 8] ; add eax, ebx ; pop ebx ; ret
0x08054036:	add byte ptr es:[ecx], ch ; rol byte ptr [ebx - 0x3ca4fe18], 1
0x08054202:	les ebp, ptr [ecx + ecx*4] ; clc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080543a3:	or al, 0x83 ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x080543f5:	call 0xfffffc4b ; add esp, 0x1c ; ret
0x0805454f:	add byte ptr [ecx + 0x200fa], al ; add byte ptr [ebp - 0x3d], dh
0x0805461a:	mov dword ptr [ebx + 0x30], esi ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0805466d:	ret 0x28b ; test eax, eax ; jne 0xfffffffb ; ret
0x08054675:	ret ; lea edx, dword ptr [eax + 0x30] ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; ret
0x08054686:	and al, 8 ; mov eax, dword ptr [eax + 8] ; sub eax, dword ptr [edx + 8] ; ret
0x080546a6:	sub edx, dword ptr [eax + 0xc] ; mov eax, dword ptr [ecx + 8] ; sub eax, edx ; ret
0x080546b0:	sub edx, dword ptr [eax + 8] ; mov eax, dword ptr [ecx + 8] ; sub eax, edx ; ret
0x080546b6:	sub eax, edx ; ret ; mov eax, 0xffffffff ; ret
0x080546fb:	retf 0x5089 ; add al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0xc3
0x0805473f:	add byte ptr [eax - 1], bh ; pop ebx ; pop esi ; ret
0x08054771:	dec dword ptr [ebp + 0xb6] ; add bl, dh ; ret
0x080547a4:	mov dword ptr [esi + 4], eax ; mov byte ptr [edi - 1], bl ; movzx eax, bl
0x080547ac:	ret ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080548cd:	je 0x28 ; add byte ptr [eax - 1], bh ; ret
0x080548dd:	add byte ptr [eax], al ; add byte ptr [eax - 1], bh ; ret
0x08054909:	lea edi, dword ptr [edi] ; ret
0x0805491d:	add byte ptr [eax], al ; add byte ptr [ecx + 0x80ea080], ah ; ret
0x0805493f:	add byte ptr [ebx - 0x74fbdbbc], cl ; inc eax ; xor al, 0xc3
0x0805494c:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805499a:	or byte ptr [ebx + 0xeb4c005], al ; or byte ptr [ecx], al ; ret
0x080549db:	push cs ; or al, ch ; mov eax, dword ptr cs:[0xc3f30001]
0x08054a06:	les esi, ptr [esi + ecx + 8] ; add bl, al
0x08054a37:	cmp edx, ebx ; jae 0x21 ; movzx eax, byte ptr [edx] ; pop ebx ; ret
0x08054a56:	add byte ptr [eax], al ; mov eax, 0xffffffff ; pop ebx ; ret
0x08054b9c:	or byte ptr [ebx + 0x5e5b1cc4], al ; pop edi ; pop ebp ; ret
0x08054cd5:	fadd dword ptr [ebx + 0x5e5b2cc4] ; pop edi ; pop ebp ; ret
0x08054dd6:	cdq ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08054e0e:	inc dword ptr [ebx + 0x5e5b0cc4] ; pop edi ; pop ebp ; ret
0x08054e86:	add esp, 0xc ; pop ebx ; pop esi ; pop edi ; cdq ; pop ebp ; ret
0x08054fd7:	add byte ptr [ebx + 0x5e5b0cc4], al ; pop edi ; pop ebp ; ret
0x08055042:	inc dword ptr [ebx - 0x3b7cf7f5] ; sbb byte ptr [ebx - 0x3d], bl
0x08055059:	or byte ptr [edi], cl ; inc ebx ; inc edx ; or byte ptr [ebx], ch ; inc edx ; or al, 0xc3
0x0805509c:	retf -0x7cfe ; retf -0x76ff ; push eax ; add al, 0xc3
0x080550b7:	add byte ptr [ebx - 0x7d], bl ; retf -0x76ff ; push eax ; add al, 0xc3
0x0805513b:	add esp, 4 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08055225:	les ecx, ptr [eax] ; pop ebx ; mov eax, ebp ; pop esi ; pop edi ; pop ebp ; ret
0x08055233:	les ecx, ptr [eax] ; mov eax, ebp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08055472:	mov dword ptr [ebx + 0xc], esi ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x080555ff:	add eax, 0x80ea504 ; sub ebx, edi ; add ebx, eax
0x08055606:	add ebx, eax ; mov eax, dword ptr [0x80ea508] ; cmp ebx, eax
0x0805561c:	enter -0x3b7d, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080556ab:	add al, 0x83 ; out 0xf8, al ; lea ebx, dword ptr [esi - 0x11] ; cmp ebx, eax
0x080556b5:	push cs ; mov edi, dword ptr [0x80eaa08] ; sub ebx, eax
0x08055815:	adc eax, dword ptr [ebx - 0x2f76fb3c] ; pop ebx ; pop esi ; ret
0x0805586c:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5e5b24c4], al ; ret
0x080558d4:	add esp, 0x20 ; add esp, 0x24 ; pop ebx ; pop esi ; ret
0x0805599b:	lea eax, dword ptr [ebp + eax + 0x10] ; lea ecx, dword ptr [esi + eax] ; add ebx, eax
0x080559e2:	add al, 0x83 ; les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08055b00:	mov dword ptr [esp + 0xc], eax ; mov eax, dword ptr [ebp + 4] ; mov ebx, eax
0x08055b18:	jne 0x48 ; mov eax, dword ptr [ebp] ; sub ebp, eax ; add ebx, eax
0x08055bb5:	inc dword ptr [ebx + 0x5e5b2cc4] ; pop edi ; pop ebp ; ret
0x08055d30:	mov dword ptr [esp + 8], eax ; and eax, 0xfffffff8 ; mov ebx, eax
0x08055d8f:	add byte ptr [ebx + 0x408b0450], cl ; or al, 0x83 ; ret
0x08055dbc:	or byte ptr [ebx + 0x58011c68], cl ; add al, 0x89 ; ret
0x08055e0b:	and al, 0x83 ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08055e3d:	and ecx, 2 ; je 0x63 ; mov edx, dword ptr [eax] ; mov ebx, eax
0x08055e77:	add esp, 0x10 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08055fc6:	adc byte ptr [ebx + 0x5e5b3cc4], al ; pop edi ; pop ebp ; ret
0x08055fe3:	add byte ptr [ebx + 0x3c8d3045], cl ; xor edi, dword ptr [ecx] ; ret
0x0805603b:	inc ebx ; add al, 1 ; jne 0x75 ; mov eax, dword ptr [ebx] ; sub ebx, eax
0x0805619c:	pop ecx ; clc ; add eax, ebx ; and eax, 7 ; sub ebx, eax
0x08056271:	clc ; lea eax, dword ptr [edi + ebx] ; and eax, 7 ; sub ebx, eax
0x08056466:	inc dword ptr [ebx + 0x5e5b3cc4] ; pop edi ; pop ebp ; ret
0x08056ac7:	add byte ptr [eax], al ; sub eax, edi ; lea edx, dword ptr [ecx + edi] ; mov ebx, eax
0x08056af5:	les ebp, ptr [ecx + ecx*4] ; enter 0x5e5b, 0x5f ; pop ebp ; ret
0x08056b09:	mov eax, dword ptr [esp + 4] ; sub eax, 1 ; test eax, ebx
0x08056b4c:	add al, 0x8d ; pop esp ; cmp byte ptr [ebx], al ; neg eax ; and ebx, eax
0x08056cb4:	add ebx, edi ; mov eax, dword ptr [0x80ea508] ; cmp ebx, eax
0x08056d1c:	shl byte ptr [ecx], 1 ; fadd dword ptr [ebp - 0x763d7640] ; ret
0x080570bf:	inc esp ; and al, 0xc ; and eax, dword ptr [esp + 0x14] ; mov ebx, eax
0x08057269:	lock cmpxchg dword ptr [edi + 8], ebx ; cmp esi, eax ; mov ebx, eax
0x08057450:	lea ebx, dword ptr [ebp + eax*4 + 0x30] ; mov eax, dword ptr [ebx + 8] ; cmp ebx, eax
0x080574a7:	les ebx, ptr [ecx + ecx*4 - 0x28] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080574cc:	mov dword ptr [esp + 0x10], edi ; mov eax, dword ptr [ebx + 8] ; cmp ebx, eax
0x080578b6:	inc edx ; mov edx, dword ptr [0x80eb51c] ; mov ebx, eax
0x08057c43:	or ecx, dword ptr [eax] ; jmp 0xfffffca2 ; cmp ebx, eax
0x08057c71:	fst dword ptr [ebp - 0x46] ; hlt ; mov esp, 0xc3e8080b
0x08057c9b:	add ecx, 0xb ; push esi ; push ebx ; mov edi, ecx ; mov ebx, eax
0x08057e03:	sbb al, 0x8d ; inc ebx ; or byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x08057e16:	mov dword ptr [eax], 0xc ; xor eax, eax ; ret
0x08057efa:	add byte ptr [eax], al ; add esp, 8 ; xor eax, eax ; pop ebx ; ret
0x0805801b:	add byte ptr [ebx - 0x3fcefb3c], al ; pop ebx ; pop esi ; ret
0x0805802f:	add byte ptr [eax + eax], cl ; add byte ptr [eax], al ; jmp 0xffffffed ; mov ebx, eax
0x080580b1:	pop ebx ; push 1 ; add byte ptr [ebx - 0x3ca4f73c], al
0x08058306:	les ebx, ptr [ecx + ecx*4] ; clc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080586ea:	call 0xffffeb16 ; test eax, eax ; mov ebx, eax
0x080587de:	add byte ptr [eax], al ; mov eax, dword ptr [0x80eb4f8] ; cmp ebx, eax
0x080587ea:	ret 0x840f ; bound eax, qword ptr [ecx] ; add byte ptr [eax], al ; mov ebx, eax
0x080587f7:	add byte ptr [ebx + 0x4409b], cl ; add byte ptr [ecx], bh ; ret
0x080588a7:	leave ; jne 0x289 ; cmp ebx, eax
0x08058bbb:	pop edi ; add dword ptr [eax], eax ; mov eax, 0x80ea520 ; ret
0x08058bc2:	or bl, al ; lea esi, dword ptr [esi] ; xor eax, eax ; ret
0x08058bfa:	test eax, eax ; je 9 ; add esp, 8 ; pop ebx ; ret
0x08058c4a:	shl byte ptr [esi + ecx + 0x57f1008], 1 ; or bl, al
0x08058cc4:	movsd dword ptr es:[edi], dword ptr [esi] ; push cs ; or byte ptr [ebp - 0x29], dh ; pop ebx ; pop esi ; ret
0x08058d1d:	push cs ; or al, ch ; in al, dx ; pop ebp ; add dword ptr [eax], eax ; ret
0x08058da6:	mov ch, 0xe ; or byte ptr [eax], al ; add byte ptr [eax], al ; add bl, dh ; ret
0x08058dd2:	add byte ptr [ebp + 0x80e], dh ; add byte ptr [eax], al ; ret
0x08058e0a:	call 0xffffc946 ; test eax, eax ; mov ebx, eax
0x08058e64:	ja 0xffffff8b ; rol byte ptr [ebx + 0x5e5b04c4], 1 ; ret
0x08058e9f:	call 0xfffffcd1 ; mov edx, esi ; mov ebx, eax
0x08058f04:	call 0xfffff86c ; mov edx, esi ; mov ebx, eax
0x080590db:	add byte ptr [ecx + 0x4c483f0], cl ; pop ebx ; pop esi ; ret
0x080591ae:	add dword ptr [eax], eax ; add byte ptr [ecx + 0x5f5e5bd0], cl ; ret
0x08059286:	call edx ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x080592dc:	or ecx, dword ptr [eax] ; call 0xffffc0b4 ; mov ebx, eax
0x08059370:	call eax ; add esp, 0x10 ; add esp, 0xc ; ret
0x08059642:	adc eax, 0xf089d231 ; div ecx ; cmp ebx, eax
0x0805967d:	call 0xffffc0d3 ; test eax, eax ; mov ebx, eax
0x08059804:	call 0xfffff36c ; mov edx, esi ; mov ebx, eax
0x0805986f:	adc byte ptr [ebx + 0x5e5b0cc4], al ; pop edi ; pop ebp ; ret
0x080598c4:	call 0xffffeeac ; test eax, eax ; mov ebx, eax
0x08059963:	ret 0xc483 ; sbb al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x08059975:	clc ; pop ebx ; sub eax, 8 ; pop esi ; pop edi ; pop ebp ; ret
0x08059981:	les ebx, ptr [ecx + esi] ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x08059b18:	add dword ptr [eax], eax ; add esp, 8 ; mov eax, edx ; pop ebx ; ret
0x08059f02:	cmp eax, 0x83fffffd ; in al, dx ; add al, 0x83 ; ret
0x0805a3bf:	rol byte ptr [ebx + 0x5e5b0cc4], 0x5f ; pop ebp ; ret
0x0805a529:	add byte ptr [eax], al ; add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x0805a5c1:	sbb al, 0x83 ; les ebp, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0805a9cd:	cmp al, 0x83 ; les ebx, ptr [ebx + ebx*2 + 0x5e] ; pop edi ; pop ebp ; ret
0x0805aca4:	or byte ptr [ecx], al ; add byte ptr [eax], al ; mov eax, dword ptr [edi + 0x30] ; mov ebx, eax
0x0805ad4b:	add byte ptr [eax], al ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805adfe:	ret ; add esi, dword ptr [esi + ecx - 0x7d] ; les ecx, ptr [eax] ; pop ebx ; ret
0x0805ae49:	les ecx, ptr [eax] ; mov eax, 0x16 ; pop ebx ; ret
0x0805ae69:	sal byte ptr [esp + ecx - 0x48], cl ; push ss ; add byte ptr [eax], al ; add bl, al
0x0805ae92:	clc ; dec dword ptr [edi] ; inc esp ; ret 0xc483 ; sbb al, 0xc3
0x0805aec2:	je 8 ; lea eax, dword ptr [0x8067940] ; ret
0x0805b059:	add byte ptr [ecx + eax + 0x40], dh ; pop ebp ; pop ebx ; pop esi ; pop edi ; ret
0x0805b0be:	jne 8 ; lea eax, dword ptr [0x80616f0] ; ret
0x0805b0de:	inc ecx ; inc edx ; test al, al ; jne 0xfffffffa ; xor eax, eax ; ret
0x0805b0ec:	mov ecx, 0xffffffff ; cmovb eax, ecx ; ret
0x0805b12e:	je 8 ; lea eax, dword ptr [0x8063c80] ; ret
0x0805b1c2:	daa ; mov eax, dword ptr [esp + 0x10] ; pop ebx ; pop esi ; pop edi ; ret
0x0805b2c2:	add byte ptr [ecx + eax + 0x40], dh ; sub eax, dword ptr [esp + 4] ; ret
0x0805b39a:	clc ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805b723:	dec esp ; add al, 0 ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x0805b843:	mov byte ptr [ecx], 0x38 ; ret 0x940f ; shl byte ptr [ecx], 0xc3
0x0805b8c6:	adc byte ptr [ebx + 0x5e5b5cc4], al ; pop edi ; pop ebp ; ret
0x0805b979:	les ebx, ptr [ecx + esi - 0x40] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805ba47:	lea ebp, dword ptr [eax + ecx] ; add ebp, dword ptr [esp + 0x10] ; cmp ebx, eax
0x0805bb76:	inc esp ; and al, 0x14 ; mov eax, dword ptr [esp + 0x20] ; cmp ebx, eax
0x0805bc76:	je 0x10 ; lea eax, dword ptr [0x8067e30] ; ret
0x0805bc7d:	or bl, al ; lea eax, dword ptr [0x805bc90] ; ret
0x0805bc84:	or bl, al ; lea eax, dword ptr [0x80683a0] ; ret
0x0805be22:	add bh, bh ; add byte ptr [ecx + eax + 0x40], dh ; pop edi ; pop esi ; ret
0x0805be52:	je 8 ; lea eax, dword ptr [0x80630f0] ; ret
0x0805be74:	or byte ptr [edx], bh ; or dh, byte ptr [ebp + 4] ; xor eax, eax ; pop ebx ; ret
0x0805be7b:	pop ebx ; ret ; sbb eax, eax ; sbb eax, -1 ; pop ebx ; ret
0x0805bf0e:	add eax, 0x5e000002 ; xor eax, eax ; pop ebx ; ret
0x0805c08d:	lcall -0x3fcf:0x5e000000 ; pop ebx ; ret
0x0805c12a:	enter -0x3fe7, -0x7d ; fdivr st(7) ; pop esi ; pop ebx ; ret
0x0805c180:	je 8 ; lea eax, dword ptr [0x805ec80] ; ret
0x0805c1b4:	movsd dword ptr es:[edi], dword ptr [esi] ; mov esi, edx ; mov eax, dword ptr [esp + 8] ; pop edi ; ret
0x0805c1df:	mov esi, edx ; mov eax, dword ptr [esp + 8] ; cld ; pop edi ; ret
0x0805c212:	je 8 ; lea eax, dword ptr [0x805fd40] ; ret
0x0805c25a:	sal ebx, 1 ; stosb byte ptr es:[edi], al ; mov eax, dword ptr [esp + 8] ; pop edi ; ret
0x0805c289:	add ah, byte ptr [esi - 0x5b] ; rep movsd dword ptr es:[edi], dword ptr [esi] ; xchg eax, edi ; mov esi, edx ; ret
0x0805c2ce:	je 8 ; lea eax, dword ptr [0x80654d0] ; ret
0x0805c2f4:	inc byte ptr [ebx + 0xc8d03e1] ; int 8 ; ret
0x0805c366:	add dword ptr [eax + 0x5bf88927], ecx ; pop esi ; pop edi ; ret
0x0805c39e:	jne 8 ; lea eax, dword ptr [0x806b180] ; ret
0x0805c3fd:	mov edi, eax ; mov esi, edx ; mov eax, dword ptr [esp + 4] ; ret
0x0805c436:	je 0x10 ; lea eax, dword ptr [0x80686f0] ; ret
0x0805c43d:	or bl, al ; lea eax, dword ptr [0x805c450] ; ret
0x0805c444:	or bl, al ; lea eax, dword ptr [0x8068a10] ; ret
0x0805c50d:	add byte ptr [eax], al ; inc dword ptr [eax] ; je 7 ; inc eax ; pop edi ; ret
0x0805c676:	je 7 ; cmp cl, dl ; je 7 ; inc eax ; pop edi ; ret
0x0805c6c1:	clc ; mov dword ptr [edx - 4], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805c6e4:	sti ; mov byte ptr [edx - 1], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805c705:	mov word ptr [edx - 2], ax ; mov eax, dword ptr [esp + 4] ; ret
0x0805c728:	std ; mov byte ptr [edx - 1], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805c94f:	movq qword ptr [edx - 0x10], mm0 ; mov eax, dword ptr [esp + 4] ; ret
0x0805c982:	out dx, eax ; mov byte ptr [edx - 1], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805ca12:	in al, dx ; mov dword ptr [edx - 4], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805cbc7:	hlt ; mov dword ptr [edx - 4], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805cbe0:	movq qword ptr [edx - 0x4d], mm0 ; movdqa xmmword ptr [edx - 0x3d], xmm0
0x0805e2c4:	cld ; mov dword ptr [edx - 4], ecx ; mov eax, dword ptr [esp + 4] ; ret
0x0805e318:	sti ; mov dword ptr [edx - 4], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805e36b:	dec dword ptr [eax + 0x448bff4a] ; and al, 4 ; ret
0x0805e3fc:	mov word ptr [edx - 2], cx ; mov eax, dword ptr [esp + 4] ; ret
0x0805e932:	mov ecx, dword ptr [eax] ; mov dword ptr [edx], ecx ; mov eax, dword ptr [esp + 4] ; ret
0x0805e96c:	movq qword ptr [edx], xmm0 ; mov eax, dword ptr [esp + 4] ; ret
0x0805e9b9:	mov dh, 8 ; mov byte ptr [edx], cl ; mov eax, dword ptr [esp + 4] ; ret
0x0805ea4a:	or byte ptr [esi - 0x77], ah ; or cl, byte ptr [ebx - 0x3cfbdbbc]
0x0805eae1:	mov dh, 0 ; mov byte ptr [edx], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805fa99:	mov byte ptr [edi], al ; pop esi ; pop edi ; mov eax, dword ptr [esp + 4] ; ret
0x0805ff0d:	add cl, byte ptr [eax + 0x448b5f07] ; and al, 4 ; ret
0x0806059b:	mov dh, 0 ; add byte ptr [eax], al ; add byte ptr [esi + 0xf], ah ; je 0xffffffcc
0x0806157b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; pcmpeqb xmm0, xmm3
0x08061622:	dec eax ; pop es ; movzx eax, byte ptr [edx + 7] ; sub eax, ecx ; ret
0x08061630:	movzx ecx, byte ptr [eax] ; movzx eax, byte ptr [edx] ; sub eax, ecx ; ret
0x08061682:	dec eax ; add eax, 0x542b60f ; sub eax, ecx ; ret
0x08061692:	dec eax ; push es ; movzx eax, byte ptr [edx + 6] ; sub eax, ecx ; ret
0x080616e1:	add dword ptr [eax], eax ; add byte ptr [eax], al ; ja 8 ; neg eax ; ret
0x080616e4:	add byte ptr [edi + 2], dh ; neg eax ; ret ; xor eax, eax ; ret
0x08061879:	movzx ecx, byte ptr [esi + ecx] ; sub eax, ecx ; pop esi ; pop edi ; ret
0x08061a00:	je 0x29 ; sub edi, 1 ; xor esi, esi ; cmp bl, al
0x08061a29:	movzx edi, bl ; sub eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x08062b86:	mov dh, 0x56 ; imul dword ptr [ecx] ; rcr byte ptr [edi + 0x5e], 1 ; pop ebx ; ret
0x08062ba5:	mov dh, 0x56 ; int1 ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bb5:	mov dh, 0x56 ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bd5:	mov dh, 0x56 ; hlt ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062be5:	mov dh, 0x56 ; cmc ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bf5:	mov dh, 0x56 ; imul byte ptr [ecx] ; rcr byte ptr [edi + 0x5e], 1 ; pop ebx ; ret
0x08062e98:	add byte ptr [edi], cl ; test dword ptr [ecx], esp ; add al, byte ptr [eax] ; add byte ptr [ebx - 0x3d], bl
0x08062f55:	add byte ptr [edi], cl ; test dword ptr [ecx + eax - 0x3ca50000], eax
0x08063010:	add byte ptr [edi], cl ; test ecx, ecx ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x080630ae:	mov eax, 0 ; jne 0x32 ; pop ebx ; ret
0x080631a2:	movzx eax, byte ptr [eax] ; movzx edx, byte ptr [edx] ; sub eax, edx ; ret
0x080631aa:	ret ; nop ; lea esi, dword ptr [esi] ; xor eax, eax ; ret
0x08063286:	add byte ptr [edi], cl ; test eax, ebx ; or dword ptr [eax], eax ; add byte ptr [ebx - 0x3d], bl
0x0806330f:	add byte ptr [edi], cl ; test dword ptr [eax + 9], edx ; add byte ptr [eax], al ; pop ebx ; ret
0x080633aa:	add byte ptr [edi], cl ; test dword ptr [ebp + 0x5b000008], esi ; ret
0x08063458:	add byte ptr [edi], cl ; test dword ptr [edi], eax ; or byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x080634d6:	add byte ptr [edi], cl ; test dword ptr [ebx + 7], esi ; add byte ptr [eax], al ; pop ebx ; ret
0x08063553:	add byte ptr [edi], cl ; test dword ptr [edi + eax], ecx ; add byte ptr [eax], al ; pop ebx ; ret
0x080635de:	add byte ptr [edi], cl ; test dword ptr [ecx + 0x5b000006], eax ; ret
0x0806367c:	add byte ptr [edi], cl ; test esp, ebx ; add eax, 0xc35b0000
0x08063704:	add byte ptr [edi], cl ; test dword ptr [ebp + 5], eax ; add byte ptr [eax], al ; pop ebx ; ret
0x08063791:	add byte ptr [edi], cl ; test ecx, esi ; add al, 0 ; add byte ptr [ebx - 0x3d], bl
0x0806382c:	add byte ptr [edi], cl ; test dword ptr [ebx], esi ; add al, 0 ; add byte ptr [ebx - 0x3d], bl
0x080638da:	add byte ptr [edi], cl ; test dword ptr [ebp + 0x5b000003], eax ; ret
0x08063972:	add byte ptr [edi], cl ; test edx, edi ; add al, byte ptr [eax] ; add byte ptr [ebx - 0x3d], bl
0x0806397c:	lea esi, dword ptr [esi] ; movdqu xmm1, xmmword ptr [eax - 0x3d]
0x08063981:	movq mm1, qword ptr [eax - 0x3d] ; movdqu xmm2, xmmword ptr [edx - 0x3d]
0x08063a0f:	add byte ptr [edi], cl ; test dword ptr [eax + 2], edx ; add byte ptr [eax], al ; pop ebx ; ret
0x08063aba:	add byte ptr [edi], cl ; test dword ptr [ebp + 0x5b000001], esp ; ret
0x08063b78:	add byte ptr [edi], cl ; test esp, edi ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3d], bl
0x08063c04:	mov eax, 0 ; jne 0x4c ; pop ebx ; ret
0x08063c38:	mov eax, 0 ; jne 0x18 ; pop ebx ; ret
0x08063e17:	adc byte ptr [edi], cl ; sub dword ptr [edx + esi], edx ; pcmpeqb xmm0, xmm3
0x08063edb:	je 0xffffffda ; lea ecx, dword ptr [ecx + 0x40] ; pmovmskb eax, xmm3
0x0806517f:	add byte ptr [ebx - 0x76fd76ff], cl ; clc ; pop edi ; ret
0x080651b3:	add dword ptr [esi + 0xf], esp ; adc eax, dword ptr [edx] ; mov eax, edi ; pop edi ; ret
0x080651f9:	adc eax, dword ptr [edx] ; mov dword ptr [edx + 8], eax ; mov eax, edi ; pop edi ; ret
0x08065233:	add ebx, esi ; movq qword ptr [edx], mm0 ; mov eax, edi ; pop edi ; ret
0x0806523f:	add byte ptr [edx - 0x76fd77ff], cl ; clc ; pop edi ; ret
0x08065251:	mov eax, dword ptr [ecx] ; mov word ptr [edx], ax ; mov eax, edi ; pop edi ; ret
0x08065267:	inc ecx ; add cl, byte ptr [eax - 0x776fdbe] ; pop edi ; ret
0x08065275:	inc ecx ; add al, 0x88 ; inc edx ; add al, 0x89 ; clc ; pop edi ; ret
0x08065287:	add al, 0x66 ; mov dword ptr [edx + 4], eax ; mov eax, edi ; pop edi ; ret
0x08065295:	inc ecx ; add ecx, dword ptr [ecx - 0x776fcbe] ; pop edi ; ret
0x080652a9:	adc eax, dword ptr [edx] ; mov byte ptr [edx + 8], al ; mov eax, edi ; pop edi ; ret
0x080652e9:	adc eax, dword ptr [edx] ; mov dword ptr [edx + 7], eax ; mov eax, edi ; pop edi ; ret
0x0806530d:	movlpd qword ptr [edx + 5], xmm1 ; mov eax, edi ; pop edi ; ret
0x0806532d:	movlpd qword ptr [edx + 6], xmm1 ; mov eax, edi ; pop edi ; ret
0x0806534d:	movlpd qword ptr [edx + 7], xmm1 ; mov eax, edi ; pop edi ; ret
0x0806535e:	add byte ptr [eax], al ; mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; mov eax, edx ; ret
0x08065370:	mov ax, word ptr [ecx] ; mov word ptr [edx], ax ; mov eax, edx ; ret
0x08065386:	mov al, byte ptr [ecx + 2] ; mov byte ptr [edx + 2], al ; mov eax, edx ; ret
0x0806538e:	ret ; nop ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edx ; ret
0x080653a4:	mov al, byte ptr [ecx + 4] ; mov byte ptr [edx + 4], al ; mov eax, edx ; ret
0x080653b6:	inc ecx ; add al, 0x66 ; mov dword ptr [edx + 4], eax ; mov eax, edx ; ret
0x080653c4:	mov eax, dword ptr [ecx + 3] ; mov dword ptr [edx + 3], eax ; mov eax, edx ; ret
0x080653d2:	adc al, byte ptr [ecx] ; movlpd qword ptr [edx], xmm0 ; mov eax, edx ; ret
0x080653e8:	movlps qword ptr [edx], xmm0 ; mov byte ptr [edx + 8], al ; mov eax, edx ; ret
0x0806540a:	adc eax, dword ptr [edx] ; mov word ptr [edx + 8], ax ; mov eax, edx ; ret
0x08065428:	movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x08065448:	movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 8], eax ; mov eax, edx ; ret
0x0806546c:	add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 5] ; mov eax, edx ; ret
0x0806548c:	add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 6] ; mov eax, edx ; ret
0x080654ac:	add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 7] ; mov eax, edx ; ret
0x080654c2:	outsd dx, dword ptr [esi] ; add ebx, esi ; movq qword ptr [edx], mm0 ; mov eax, edx ; ret
0x080669d0:	mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; pop edi ; ret
0x08066a04:	movlpd qword ptr [edx], xmm0 ; lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x08066a4a:	add cl, byte ptr [ecx + 0x428d0842] ; or ebx, dword ptr [edi - 0x3d]
0x08066a84:	movdqu xmmword ptr [edx], xmm0 ; lea eax, dword ptr [edx + 0xf] ; pop edi ; ret
0x08066a8f:	add byte ptr [edx - 0x72fd77ff], cl ; add bl, byte ptr [edi - 0x3d]
0x08066aa2:	add dword ptr [esi - 0x77], esp ; add cl, byte ptr [ebp - 0x3ca0febe]
0x08066ab8:	add cl, byte ptr [eax + 0x428d0242] ; add bl, byte ptr [edi - 0x3d]
0x08066ad6:	add al, 0x88 ; inc edx ; add al, 0x8d ; inc edx ; add al, 0x5f ; ret
0x08066ae8:	mov word ptr [edx + 4], ax ; lea eax, dword ptr [edx + 5] ; pop edi ; ret
0x08066b06:	add ecx, dword ptr [ecx + 0x428d0342] ; push es ; pop edi ; ret
0x08066b1a:	add cl, byte ptr [eax + 0x428d0842] ; or byte ptr [edi - 0x3d], bl
0x08066b3c:	mov word ptr [edx + 8], ax ; lea eax, dword ptr [edx + 9] ; pop edi ; ret
0x08066b5a:	add cl, byte ptr [ecx + 0x428d0742] ; or bl, byte ptr [edi - 0x3d]
0x08066b7e:	movlps qword ptr [edx + 5], xmm1 ; lea eax, dword ptr [edx + 0xc] ; pop edi ; ret
0x08066b9e:	movlps qword ptr [edx + 6], xmm1 ; lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x08066bbe:	movlps qword ptr [edx + 7], xmm1 ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08066bce:	add byte ptr [eax], al ; mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; ret
0x08066be1:	mov eax, dword ptr [ecx] ; mov word ptr [edx], ax ; lea eax, dword ptr [edx + 1] ; ret
0x08066bf7:	inc ecx ; add cl, byte ptr [eax + 0x428d0242] ; add al, bl
0x08066bff:	ret ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; ret
0x08066c15:	inc ecx ; add al, 0x88 ; inc edx ; add al, 0x8d ; inc edx ; add al, 0xc3
0x08066c27:	add al, 0x66 ; mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 5] ; ret
0x08066c35:	inc ecx ; add ecx, dword ptr [ecx + 0x428d0342] ; push es ; ret
0x08066c43:	add dword ptr [esi + 0xf], esp ; adc eax, dword ptr [edx] ; lea eax, dword ptr [edx + 7] ; ret
0x08066c59:	adc eax, dword ptr [edx] ; mov byte ptr [edx + 8], al ; lea eax, dword ptr [edx + 8] ; ret
0x08066c99:	adc eax, dword ptr [edx] ; mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; ret
0x08066cb9:	adc eax, dword ptr [edx] ; mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 0xb] ; ret
0x08066cdd:	movlpd qword ptr [edx + 5], xmm1 ; lea eax, dword ptr [edx + 0xc] ; ret
0x08066cfd:	movlpd qword ptr [edx + 6], xmm1 ; lea eax, dword ptr [edx + 0xd] ; ret
0x08066d1d:	movlpd qword ptr [edx + 7], xmm1 ; lea eax, dword ptr [edx + 0xe] ; ret
0x08066d33:	add ebx, esi ; movq qword ptr [edx], mm0 ; lea eax, dword ptr [edx + 0xf] ; ret
0x08066e44:	movdqu xmmword ptr [edx + ebx], xmm2 ; pcmpeqb xmm0, xmm3
0x08066f08:	fisub dword ptr [esi + 0xf] ; je 0xffffffdd ; pmovmskb eax, xmm3
0x08066f46:	fbld dword ptr [esi + 0xf] ; fcmovu st(0), st(2) ; pcmpeqb xmm0, xmm3
0x08066ff6:	inc ecx ; add al, 0x89 ; inc edx ; add al, 0x89 ; clc ; pop edi ; ret
0x0806704c:	movlpd qword ptr [edx + 8], xmm0 ; mov eax, edi ; pop edi ; ret
0x0806708f:	ret ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edi ; pop edi ; ret
0x080670db:	inc ecx ; or byte ptr [eax - 0x776f7be], cl ; pop edi ; ret
0x0806711b:	inc ecx ; pop es ; mov dword ptr [edx + 7], eax ; mov eax, edi ; pop edi ; ret
0x0806713b:	inc ecx ; or byte ptr [ecx - 0x776f7be], cl ; pop edi ; ret
0x0806715d:	movlpd qword ptr [edx + 5], xmm0 ; mov eax, edi ; pop edi ; ret
0x0806717d:	movlpd qword ptr [edx + 6], xmm0 ; mov eax, edi ; pop edi ; ret
0x0806719d:	movlpd qword ptr [edx + 7], xmm0 ; mov eax, edi ; pop edi ; ret
0x08067224:	mov eax, dword ptr [ecx + 4] ; mov dword ptr [edx + 4], eax ; mov eax, edx ; ret
0x0806723a:	mov al, byte ptr [ecx + 8] ; mov byte ptr [edx + 8], al ; mov eax, edx ; ret
0x0806727a:	mov eax, dword ptr [ecx + 7] ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x0806729a:	mov eax, dword ptr [ecx + 8] ; mov dword ptr [edx + 8], eax ; mov eax, edx ; ret
0x080672dc:	push es ; movlpd qword ptr [edx + 6], xmm0 ; mov eax, edx ; ret
0x080672fc:	pop es ; movlpd qword ptr [edx + 7], xmm0 ; mov eax, edx ; ret
0x0806731c:	or byte ptr [esi + 0xf], ah ; adc eax, dword ptr [edx + 8] ; mov eax, edx ; ret
0x080675e7:	add al, 0x89 ; inc edx ; add al, 0x8d ; inc edx ; pop es ; pop edi ; ret
0x0806763d:	movlps qword ptr [edx + 8], xmm0 ; lea eax, dword ptr [edx + 0xf] ; pop edi ; ret
0x080676ec:	or byte ptr [eax + 0x428d0842], cl ; or byte ptr [edi - 0x3d], bl
0x0806772c:	pop es ; mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; pop edi ; ret
0x0806774c:	or byte ptr [ecx + 0x428d0842], cl ; or ebx, dword ptr [edi - 0x3d]
0x0806776e:	movlps qword ptr [edx + 5], xmm0 ; lea eax, dword ptr [edx + 0xc] ; pop edi ; ret
0x0806778e:	movlps qword ptr [edx + 6], xmm0 ; lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x080677ae:	movlps qword ptr [edx + 7], xmm0 ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08067835:	inc ecx ; add al, 0x89 ; inc edx ; add al, 0x8d ; inc edx ; pop es ; ret
0x0806784b:	inc ecx ; or byte ptr [eax + 0x428d0842], cl ; or bl, al
0x0806788b:	inc ecx ; pop es ; mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; ret
0x080678ab:	inc ecx ; or byte ptr [ecx + 0x428d0842], cl ; or eax, ebx
0x080678cd:	movlpd qword ptr [edx + 5], xmm0 ; lea eax, dword ptr [edx + 0xc] ; ret
0x080678ed:	movlpd qword ptr [edx + 6], xmm0 ; lea eax, dword ptr [edx + 0xd] ; ret
0x0806790d:	movlpd qword ptr [edx + 7], xmm0 ; lea eax, dword ptr [edx + 0xe] ; ret
0x0806792d:	movlpd qword ptr [edx + 8], xmm0 ; lea eax, dword ptr [edx + 0xf] ; ret
0x08067a99:	jae 4 ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x08067adf:	sub eax, 0x8d000002 ; inc edi ; add ebx, dword ptr [edi - 0x3d]
0x08067b3c:	rol byte ptr [ecx], 1 ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xf] ; pop edi ; ret
0x08067b82:	mov al, byte ptr [ecx] ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xb] ; pop edi ; ret
0x08067bc8:	les eax, ptr [eax] ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x08067c1b:	loope 2 ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xf] ; pop edi ; ret
0x08067c2b:	mov edi, 0 ; lea eax, dword ptr [edi] ; pop edi ; ret
0x08067c3c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 1] ; pop edi ; ret
0x08067c4c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 2] ; pop edi ; ret
0x08067c5c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 3] ; pop edi ; ret
0x08067c6c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 4] ; pop edi ; ret
0x08067c7c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x08067c8c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x08067c9c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x08067cac:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x08067cbc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x08067ccc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xb] ; pop edi ; ret
0x08067cdc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xc] ; pop edi ; ret
0x08067cec:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x08067cfc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xe] ; pop edi ; ret
0x08067d0b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop edi ; ret
0x08067d71:	add byte ptr [eax], al ; add byte ptr [ecx], al ; clc ; add eax, ecx ; pop edi ; ret
0x08067e12:	ja 0xe ; sub edi, 0x10 ; add eax, edi ; pop edi ; ret
0x08067e1b:	nop ; lea esi, dword ptr [esi] ; xor eax, eax ; pop edi ; ret
0x08067efe:	je 0xffffffdb ; lea ecx, dword ptr [ecx + 0x10] ; pmovmskb eax, xmm3
0x08067fff:	and byte ptr [esi + 0xf], ah ; je 0xffffffde ; pmovmskb eax, xmm3
0x08068041:	sbb eax, dword ptr [ecx] ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 3] ; pop edi ; ret
0x08068064:	sub byte ptr [ecx], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x0806808e:	add dword ptr cs:[eax], eax ; add byte ptr [ebp - 0x3ca0f4b9], cl
0x080680b7:	xor eax, 0x8d000001 ; inc edi ; maxps xmm0, xmm3
0x0806813b:	ret ; lea esi, dword ptr [esi] ; mov eax, edi ; pop edi ; ret
0x0806822c:	pushal ; add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0fcb9], cl
0x0806825d:	das ; add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0f8b9], cl
0x08068297:	cmc ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f4b9], cl
0x080682c0:	int3 ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f0b9], cl
0x080682cb:	add byte ptr es:[eax], al ; add byte ptr [eax], al ; mov eax, edi ; pop edi ; ret
0x080682e5:	cmpsd dword ptr [esi], dword ptr es:[edi] ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0feb9], cl
0x080682f5:	xchg eax, edi ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fdb9], cl
0x08068305:	xchg dword ptr [eax], eax ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 4] ; pop edi ; ret
0x08068311:	ljmp 0x547:0x8d7b7206 ; pop edi ; ret
0x08068321:	ljmp 0x647:0x8d6b7207 ; pop edi ; ret
0x08068331:	ljmp 0x847:0x8d5b7209 ; pop edi ; ret
0x08068341:	ljmp 0x947:0x8d4b720a ; pop edi ; ret
0x08068351:	ljmp 0xa47:0x8d3b720b ; pop edi ; ret
0x08068361:	ljmp 0xc47:0x8d2b720d ; pop edi ; ret
0x08068371:	ljmp 0xd47:0x8d1b720e ; pop edi ; ret
0x08068381:	ljmp 0xe47:0x8d0b720f ; pop edi ; ret
0x08068443:	add al, byte ptr [eax] ; add byte ptr [ecx], al ; clc ; add eax, ecx ; pop edi ; ret
0x08068512:	xor byte ptr [esi + 0xf], ah ; je 0xffffffde ; pmovmskb eax, xmm3
0x08068597:	pcmpeqb xmm1, xmmword ptr [edi + 0x30] ; pmovmskb eax, xmm3
0x080685ac:	bsf eax, eax ; lea eax, dword ptr [edi + eax + 0x30] ; pop edi ; ret
0x08068651:	rol dword ptr [ebp + 0x315a75c0], -0x40 ; pop edi ; ret
0x08068660:	bsf eax, eax ; lea eax, dword ptr [eax + edi - 0x10] ; pop edi ; ret
0x0806866e:	add byte ptr [eax], al ; bsf eax, eax ; add eax, edi ; pop edi ; ret
0x08068680:	bsf eax, eax ; lea eax, dword ptr [eax + edi + 0x10] ; pop edi ; ret
0x08068690:	bsf eax, eax ; lea eax, dword ptr [eax + edi + 0x20] ; pop edi ; ret
0x080686a2:	shr byte ptr [ecx], 0xc2 ; jbe 0x3e ; add eax, edi ; pop edi ; ret
0x080686b7:	ret 0x2676 ; lea eax, dword ptr [edi + eax + 0x10] ; pop edi ; ret
0x080686c7:	ret 0x1676 ; lea eax, dword ptr [edi + eax + 0x20] ; pop edi ; ret
0x080686d7:	ret 0x676 ; lea eax, dword ptr [edi + eax + 0x30] ; pop edi ; ret
0x080686db:	inc esp ; pop es ; xor byte ptr [edi - 0x3d], bl ; xor eax, eax ; pop edi ; ret
0x080688c0:	test dword ptr [ebx - 0x73000000], ebx ; inc edx ; add eax, ebx
0x080688e3:	test dword ptr [eax - 0x73000000], ebp ; inc edx ; pop es ; ret
0x0806890d:	test dword ptr [esi - 0x73000000], ebp ; inc edx ; or eax, ebx
0x0806893a:	add byte ptr [ebp - 0x6f3cf0be], cl ; mov eax, edx ; ret
0x0806894b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 1] ; ret
0x0806895b:	mov edi, 0 ; lea eax, dword ptr [edx + 2] ; ret
0x0806896b:	mov edi, 0 ; lea eax, dword ptr [edx + 4] ; ret
0x0806897b:	mov edi, 0 ; lea eax, dword ptr [edx + 5] ; ret
0x0806898b:	mov edi, 0 ; lea eax, dword ptr [edx + 6] ; ret
0x0806899b:	mov edi, 0 ; lea eax, dword ptr [edx + 8] ; ret
0x080689ab:	mov edi, 0 ; lea eax, dword ptr [edx + 9] ; ret
0x080689bb:	mov edi, 0 ; lea eax, dword ptr [edx + 0xa] ; ret
0x080689cb:	mov edi, 0 ; lea eax, dword ptr [edx + 0xc] ; ret
0x080689db:	mov edi, 0 ; lea eax, dword ptr [edx + 0xd] ; ret
0x080689eb:	mov edi, 0 ; lea eax, dword ptr [edx + 0xe] ; ret
0x08068a3e:	leave ; je 0x12 ; bsf ecx, ecx ; add eax, ecx ; ret
0x08068a89:	push ss ; bsf eax, eax ; add eax, edx ; add eax, ecx ; ret
0x08068bc6:	pcmpeqb xmm1, xmmword ptr [edx + 0x30] ; pmovmskb eax, xmm3
0x08068bdf:	nop ; bsf eax, eax ; lea eax, dword ptr [eax + edx - 0x10] ; ret
0x08068bed:	add byte ptr [eax], al ; add byte ptr [edi], cl ; mov esp, 0xc3d001c0
0x08068bff:	add byte ptr [edi], cl ; mov esp, 0x10448dc0 ; adc bl, al
0x08068c0f:	add byte ptr [edi], cl ; mov esp, 0x10448dc0 ; and bl, al
0x08068c6b:	sub eax, dword ptr [ebx + esi*4] ; je 0xffffffe5 ; pop ebx ; pop esi ; pop edi ; ret
0x08068c75:	je 0x28 ; add byte ptr [ebx + 0x31], bl ; rcr byte ptr [esi + 0x5f], 0xc3
0x0806afe1:	add byte ptr [eax], al ; add dh, dh ; shl dword ptr [eax], 0xf ; test eax, ebx
0x0806b154:	add byte ptr [edi + 2], dh ; neg eax ; add esp, 4 ; ret
0x0806b157:	neg eax ; add esp, 4 ; ret ; xor eax, eax ; ret
0x0806b477:	rol byte ptr [ebx], 0xc ; or byte ptr [ecx], ch ; enter 0x5f5e, -0x3d
0x0806b47b:	sub eax, ecx ; pop esi ; pop edi ; ret ; xor eax, eax ; pop edi ; ret
0x0806b492:	add byte ptr [eax], al ; add byte ptr [edi + 2], dh ; neg eax ; pop edi ; ret
0x0806ba6e:	add eax, dword ptr [eax] ; add byte ptr [ecx + 0x5b5e5fd0], cl ; ret
0x0806bda9:	cld ; mov dword ptr [edx + ecx - 4], ebx ; mov eax, edx ; pop ebx ; ret
0x0806beed:	add byte ptr [eax], al ; add byte ptr [edi], cl ; mov byte ptr [0xc389dd89], al
0x0806bf9a:	inc esp ; and al, 0xc ; cmp edx, 1 ; sete bl
0x0806bfeb:	add byte ptr [ebp + 0x5e5b0143], cl ; pop edi ; pop ebp ; ret
0x0806c015:	add al, 0x83 ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0806c18a:	pop ebx ; pop esi ; pop edi ; pop ebp ; ret ; nop ; xor eax, eax ; ret
0x0806c1ff:	add byte ptr [ecx], dh ; rol byte ptr [ebx + 0x5e5b04c4], 0xc3
0x0806c285:	add byte ptr [eax], al ; add byte ptr [eax + 0x450ff0e5], al ; ret
0x0806c3be:	sbb dword ptr [ebx + 0xc7402fa], eax ; xor eax, eax ; ret
0x0806c436:	inc dword ptr [ebx - 0x3b7cef3c] ; or byte ptr [ebx - 0x3d], bl
0x0806c470:	push edi ; add byte ptr [eax], al ; xor eax, eax ; add esp, 0x1c ; ret
0x0806c485:	adc byte ptr [ebx - 0x7cf3dbbc], cl ; les ebx, ptr [ebx + eax*8]
0x0806c48d:	ret ; nop ; xor eax, eax ; add esp, 0x1c ; ret
0x0806c49f:	add byte ptr [ebp - 0x77], dl ; in eax, 0x57 ; push esi ; push ebx ; mov ebx, eax
0x0806c67b:	add byte ptr es:[eax], al ; add byte ptr [eax], al ; push esi ; push ebx ; mov ebx, eax
0x0806c6c2:	inc eax ; or byte ptr [ecx], al ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806c72e:	sal byte ptr [edi + ebx - 0x7d], cl ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x0806c742:	add al, 0xb8 ; add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; pop esi ; ret
0x0806c7c6:	inc esi ; ljmp -0x7680:0x4d8bfffe ; ret
0x0806c7cb:	dec ebp ; or byte ptr [ecx + 0x10c483c3], 0x83 ; ret
0x0806c838:	aaa ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806c986:	add byte ptr [ebx - 0x7d], bl ; call 0x5d5f5e09 ; ret
0x0806c99b:	adc byte ptr [ebx + 0x5e5b4cc4], al ; pop edi ; pop ebp ; ret
0x0806c9d0:	add byte ptr [eax], al ; or byte ptr [eax], al ; cmovae eax, ecx ; jmp 0xffffffcc
0x0806c9e4:	imul edx, dword ptr [eax], 0x5e5b0003 ; pop edi ; pop ebp ; ret
0x0806cfe6:	cmove eax, dword ptr [esp + 0x18] ; add esp, 0x2c ; ret
0x0806d004:	cmp eax, 0xfffff000 ; ja 0xc ; pop ebx ; ret
0x0806d1d1:	imul esi, dword ptr [eax + eax], 0 ; add esp, 8 ; pop ebx ; ret
0x0806d20a:	push dword ptr [edi + 0x53] ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x0806d265:	jmp 0xffffffa8 ; call 0x33db ; mov ebx, eax
0x0806d2c4:	mov esp, 0x5b000000 ; pop esi ; pop edi ; pop ebp ; ret
0x0806d90a:	je 0x58 ; mov eax, dword ptr [esp + 0x3c] ; push edi ; sub ebx, eax
0x0806da1e:	inc dword ptr [ebx - 0x2776fb3c] ; pop ebx ; pop esi ; ret
0x0806da61:	mov eax, 0x8904c483 ; fcomp dword ptr [ebx + 0x5e] ; ret
0x0806da6d:	add byte ptr [eax], al ; add byte ptr [ecx + 0x39d8f7f0], cl ; ret
0x0806da82:	stosb byte ptr es:[edi], al ; push cs ; or byte ptr [ebp - 0xcfd8b40], al ; ret
0x0806dac6:	cmovns eax, dword ptr [esp + 0x18] ; add esp, 0x2c ; ret
0x0806db75:	jae 0x5e5b1cca ; pop edi ; pop ebp ; ret
0x0806dc31:	push esi ; mov esi, edx ; push ebx ; mov edx, dword ptr [eax + 4] ; mov ebx, eax
0x0806dc81:	call esi ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0806dcab:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; push esi ; push ebx ; mov ebx, eax
0x0806dcdf:	mov dh, 0xfe ; inc dword ptr [ebx + 0x5e5b14c4] ; ret
0x0806dd5a:	mov edi, dword ptr [esp + 0x20] ; test ebx, ebx ; setg bl
0x0806dd61:	lahf ; ret ; mov ebp, ebx ; test edi, edi ; setg bl
0x0806dda5:	pop es ; add esp, 8 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806df5a:	cmp byte ptr [ebx + 0x5e5b1cc4], al ; pop edi ; pop ebp ; ret
0x0806dfbd:	ret ; nop ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0806e5ba:	sti ; add dword ptr [edi - 0xe], esi ; mov eax, esi ; imul eax, ebx
0x0806e5d6:	add dword ptr [ebp - 9], esi ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806e5e9:	push 0 ; call 0x206a7 ; mov ebx, eax
0x0806e5f6:	sub byte ptr [ebp - 0x3b7cf7f2], dh ; adc byte ptr [ecx], bh ; ret
0x0806e705:	or byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x0806e8c1:	add esp, 0x10 ; test eax, eax ; je 0x85 ; mov ebx, eax
0x0806e997:	add byte ptr [eax], al ; add byte ptr [ebp - 0x3dbbf040], al ; ret
0x0806e9d1:	test eax, 0xc483080e ; add al, 0x5b ; pop esi ; ret
0x0806ea27:	and al, 0xc ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0806eacd:	sar byte ptr [ebx], 0x54 ; and al, 4 ; setae al ; ret
0x0806eb03:	add eax, dword ptr [ebp + 0x5eed75c0] ; pop ebx ; pop edx ; ret
0x0806eb0c:	lea esi, dword ptr [esi] ; push ebx ; push ecx ; push edx ; mov ebx, eax
0x0806eb2b:	adc eax, 0x80ea9f0 ; pop edx ; pop ecx ; pop ebx ; ret
0x0806eb5a:	or eax, 0x84 ; cmp edx, eax ; mov ebx, eax
0x0806eb69:	stc ; or dh, byte ptr [edi + edx - 0x7d] ; les ecx, ptr [eax] ; pop ebx ; ret
0x0806ecba:	ror byte ptr [ebp + 0x5e5bf465], 0x5f ; pop ebp ; ret
0x0806ed73:	fmul qword ptr [ebp + 0x5e5bf465] ; pop edi ; pop ebp ; ret
0x0806ed89:	rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret ; nop ; cmp ebx, eax
0x0806f058:	mov esi, eax ; mov ecx, 5 ; mov ebx, eax
0x0806f099:	add esp, 0x10 ; jmp 0xffffffe7 ; nop ; ret
0x0806f10a:	nop ; nop ; nop ; nop ; int 0x80 ; ret
0x0806f549:	call 0x26d97 ; test eax, eax ; mov ebx, eax
0x0806f929:	arpl di, sp ; std ; inc dword ptr [ebp - 0x3cbbf040]
0x0806f948:	inc esp ; out -3, eax ; inc dword ptr [ebp - 0x3cbbf040]
0x0806f967:	and eax, 0x85fffde7 ; ror byte ptr [edi], 0x44 ; ret
0x0806face:	std ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x0806fb70:	out -0x7d, eax ; les ebp, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0806feae:	xor eax, eax ; jmp 0xfffff7cc ; mov ebx, eax
0x08070432:	pop ebx ; mov eax, 1 ; pop esi ; pop edi ; ret
0x08070451:	enter 0xebc, 8 ; test eax, eax ; je 0xf ; ret
0x08070462:	in al, dx ; or al, ch ; test dword ptr [esi], 0xc3890002
0x08070469:	mov ebx, eax ; call 0x20ee7 ; cmp ebx, eax
0x0807047b:	int3 ; lahf ; push cs ; or byte ptr [ebx - 0x3ca4f73c], al
0x0807048f:	call 0x20ee1 ; xor edx, edx ; cmp ebx, eax
0x0807052e:	shl ecx, 3 ; pop ebx ; shl eax, cl ; pop esi ; pop edi ; ret
0x08070648:	mov dword ptr gs:[edx], eax ; mov eax, 0xffffffff ; ret
0x08070af8:	add byte ptr [ebp + 0x57], dl ; mov edi, edx ; push esi ; push ebx ; mov ebx, eax
0x08070d12:	adc dh, dh ; inc ebx ; call 0x83c57509 ; ret
0x08070d75:	lea esi, dword ptr [esi] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08070d7d:	ret ; nop ; mov eax, dword ptr [0x80ebcd4] ; ret
0x08070d8d:	add byte ptr [eax], al ; add byte ptr [ecx + 0x80ebcdc], ah ; ret
0x08070de6:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5e5b04c4], al ; ret
0x08071294:	dec esi ; or byte ptr [ebx - 0x97ae78a], cl ; jne 0xffffffcc
0x080713c4:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov esi, dword ptr [ebp - 0x3c] ; add ebx, eax
0x080715d1:	fadd dword ptr [ebx - 0x3c7cfe3a] ; cmp al, 0xe8 ; ret
0x080717c0:	pop ebp ; sal byte ptr [esi + 0x17], 1 ; imul eax, esi, 0x3c ; add ebx, eax
0x0807186d:	je 0x28 ; add byte ptr [ebp + 0x57], dl ; push esi ; push ebx ; mov ebx, eax
0x0807190b:	add byte ptr [ebx - 0x3f7afbc0], cl ; cmove eax, ebx
0x08071c9f:	cmp eax, dword ptr [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret
0x08071dd1:	add al, byte ptr [eax] ; add byte ptr [ebp - 0x7cffd98c], cl ; ret
0x08072059:	in eax, -0x7d ; les eax, ptr [ecx + esi] ; rcr byte ptr [ebx + 0x5e], 0xc3
0x08072098:	add esp, 0x10 ; test eax, eax ; je 0x4a ; mov ebx, eax
0x08072528:	add dword ptr [eax], eax ; add esp, 0x10 ; test eax, eax ; mov ebx, eax
0x080728ba:	or ecx, dword ptr [eax] ; pop ebx ; mov dword ptr [esi + 0x30], eax ; pop esi ; pop edi ; ret
0x080728d9:	mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x08072af5:	adc dword ptr [ebx + ecx*4], eax ; pop es ; add edx, 1 ; cmp ebx, eax
0x08072b10:	adc dword ptr [ebx + 0x5e5b3cc4], eax ; pop edi ; pop ebp ; ret
0x08072ba0:	les edi, ptr [ecx + ecx*4] ; fcomp dword ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x08072be8:	xor byte ptr [ebx + 0x5e5b3cc4], al ; pop edi ; pop ebp ; ret
0x08072c1b:	or ecx, dword ptr [eax] ; call 0xfffd68d5 ; mov ebx, eax
0x08072cd9:	push cs ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08072d16:	xor byte ptr [ebx + 0x5e5b4cc4], al ; pop edi ; pop ebp ; ret
0x08072e71:	inc esp ; and al, 0x6c ; sub ebx, esi ; sub eax, edx ; cmp ebx, eax
0x08072e74:	sub ebx, esi ; sub eax, edx ; cmp ebx, eax ; cmovle eax, ebx
0x08072f75:	push ss ; add al, 0x8b ; add dword ptr [ebx - 0x3cc6fe3e], eax
0x0807308e:	or ecx, dword ptr [eax] ; call 0xfffd6462 ; mov ebx, eax
0x080732e0:	les edi, ptr [ecx + ecx*4] ; rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; pop ebp ; ret
0x080734d9:	push cs ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08073681:	ret 0x8901 ; or eax, dword ptr [ebx - 0x3c7cfb40]
0x08073913:	add al, 0x83 ; les edi, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08073a1e:	inc esp ; and al, 4 ; push es ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3d], dh
0x08073bf0:	jae 0x5e5b4cca ; pop edi ; pop ebp ; ret
0x08073ca1:	dec esp ; and al, 0x1c ; mov dword ptr [esp + 0x3c], eax ; mov ebx, eax
0x08073fa6:	add dword ptr [ebx + 0x518801c1], eax ; add edi, dword ptr [ecx] ; ret
0x08074654:	add byte ptr [ebx - 0x77cffbb], cl ; jg 0x7e ; ret
0x08074972:	dec dword ptr [ecx + 0x247c8b38] ; je 0xffffff91 ; ret
0x08074d6b:	or al, 0x83 ; les ebx, ptr [ebx + ebx*2 + 0x5e] ; pop edi ; pop ebp ; ret
0x08074da6:	xor byte ptr [ebx + 0x5e5b5cc4], al ; pop edi ; pop ebp ; ret
0x08074ed1:	and al, 0x74 ; mov ecx, edi ; mov eax, dword ptr [eax + 0x14] ; mov ebx, eax
0x08074fc7:	loop 0xffffffc2 ; cmp dl, 0x80 ; jne 0x11 ; mov ebx, eax
0x08075f1f:	mov dword ptr [esp + 0x1c], eax ; and eax, 7 ; mov ebx, eax
0x080768fa:	mov dword ptr [edx], eax ; add byte ptr [eax], al ; and edi, 2 ; mov ebx, eax
0x08077665:	add byte ptr [ebx + 0x5e5b4cc4], al ; pop edi ; pop ebp ; ret
0x08077680:	push es ; add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x080776d0:	ror byte ptr [ebp + 0x7400054c], cl ; jge 0xffffff8b ; ret
0x08077872:	adc dword ptr [ebx + 0x5e5b4cc4], eax ; pop edi ; pop ebp ; ret
0x080779d1:	pop ss ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08077a9d:	sbb byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x08077ab4:	add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08077abd:	lea esi, dword ptr [esi] ; mov eax, dword ptr [0x80eb5c0] ; ret
0x08077bb0:	jb 0x10 ; add esp, 0x60 ; pop ebx ; pop esi ; pop edi ; ret
0x08077bf0:	mov eax, 0xffffffff ; pop ebx ; pop esi ; pop edi ; ret
0x08077cd9:	push edi ; push esi ; mov esi, edx ; push ebx ; mov edi, ecx ; mov ebx, eax
0x08077d01:	xor eax, eax ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x08077d27:	mov dword ptr [edi], edx ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x08077d2d:	pop esi ; pop edi ; ret ; mov eax, 0xffffffff ; ret
0x08077eb6:	movzx eax, word ptr [eax] ; mov esi, edx ; add eax, edx ; mov ebx, eax
0x0807814d:	clc ; add esi, dword ptr [edi + ecx - 0x7d] ; les ecx, ptr [eax] ; pop ebx ; ret
0x0807819a:	add byte ptr [eax], al ; add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x0807830a:	add esp, 0x10 ; test eax, eax ; mov esi, eax ; mov ebx, eax
0x080783c3:	call 0xffff5fdd ; add esp, 0x1c ; ret
0x08078568:	les ebx, ptr [ebx + ebx*2] ; mov eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08078641:	mov word ptr [eax], es ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08078904:	cld ; inc dword ptr [ebx - 0x3f7aef3c] ; jne 0xffffffcc
0x08078983:	test byte ptr [edi + 2], bh ; add byte ptr [eax], al ; mov esi, ebx ; mov ebx, eax
0x08078b65:	call 0xfffff86b ; test eax, eax ; mov ebx, eax
0x08078bd7:	jne 0xffffffa9 ; mov eax, dword ptr [0x80eaef8] ; cmp ebx, eax
0x08078c68:	cmp cl, 0x5f ; movsx esi, cl ; sete bl
0x08078c70:	ret ; cmp cl, 0x3a ; mov edi, ebx ; sete bl
0x08078cc0:	add byte ptr [ebx + 0x5e5b08c4], al ; pop edi ; pop ebp ; ret
0x08078cfa:	inc edx ; add esi, eax ; add ch, byte ptr [edi] ; mov byte ptr [eax], 0 ; ret
0x080792c9:	jecxz 6 ; add byte ptr [eax], al ; lea esi, dword ptr [esi] ; ret
0x0807932d:	or al, 0x83 ; rcr dword ptr [ecx + ecx*4], -0x2a ; push ecx ; mov ebx, eax
0x080795be:	ret ; nop ; call 0xffff7082 ; mov ebx, eax
0x080796a9:	les edx, ptr [eax] ; cmp eax, 0xfffff000 ; mov ebx, eax
0x0807971e:	add byte ptr [eax], al ; call 0xffff6f22 ; mov ebx, eax
0x080797e2:	or bh, bl ; std ; inc dword ptr [ebx - 0x3ca4e73c]
0x08079834:	mov edx, dword ptr [esp + 8] ; mov eax, dword ptr [eax] ; sub eax, dword ptr [edx] ; ret
0x080799ac:	mov ebp, 0xfffffe48 ; mov ecx, ebx ; mov ebx, eax
0x08079baa:	add al, 0xf ; adc dword ptr [edi - 0x7cfffffe], -0x3d
0x08079dc8:	imul eax, dword ptr [edx + 0x24], 0x6c ; add eax, dword ptr [edx + 0x20] ; cmp ebx, eax
0x08079dcb:	insb byte ptr es:[edi], dx ; add eax, dword ptr [edx + 0x20] ; cmp ebx, eax ; cmovge eax, ebx
0x08079fcb:	nop ; lea esi, dword ptr [esi] ; mov eax, dword ptr [edi] ; cmp ebx, eax
0x0807a0f5:	dec dword ptr [ebx - 0x1cf73] ; ljmp ptr [ecx] ; ret
0x0807a30a:	adc eax, 0x80eaedc ; je 0xe ; pop ebx ; ret
0x0807a348:	add al, 0x65 ; mov eax, dword ptr [eax] ; mov eax, dword ptr [eax + edx*4 + 0x40] ; ret
0x0807a364:	jmp dword ptr [ebp + 3] ; add eax, 0 ; ret
0x0807a3cb:	add eax, 0x200 ; mov dword ptr gs:[edx], eax ; ret
0x0807a438:	ldmxcsr dword ptr [esp + 0xc] ; add esp, 0x14 ; ret
0x0807a46b:	add bh, bh ; adc eax, 0x80ea9f0 ; mov ebx, eax
0x0807a487:	cmp eax, 0xfffff000 ; ja 0x21 ; pop ebx ; ret
0x0807a5a4:	sub al, 1 ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0807a662:	ja 0x36 ; sub esp, -0x80 ; pop ebx ; pop esi ; pop edi ; ret
0x0807a89a:	cmp al, 1 ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0807aa4e:	add dword ptr [eax], eax ; add byte ptr [ebx + 0x108245c], cl ; ret
0x0807ac1f:	add byte ptr [ecx], dh ; dec dword ptr [ecx - 0x76207608] ; ret
0x0807ac8b:	add byte ptr [eax], al ; mov eax, dword ptr [0x80eb524] ; cmp ebx, eax
0x0807b0da:	mov dl, 0x2f ; std ; jmp dword ptr [esi - 0x70] ; xor eax, eax ; ret
0x0807b625:	call 0xfffffb2b ; add esp, 0x2c ; ret
0x0807b67a:	adc esi, dword ptr [ebp - 0x15] ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0807b6e2:	add esi, dword ptr [ebp - 0x1d] ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0807b79e:	add byte ptr es:[ecx], dh ; rol byte ptr [ebx - 0x3c7cfe17], cl
0x0807b7c1:	inc esp ; and al, 4 ; movsx eax, byte ptr [eax + 5] ; cmp ebx, eax
0x0807b7c9:	ret ; jge 0x101 ; sub ebx, eax
0x0807b816:	rol byte ptr [ebx - 0x1f3efe20], 1 ; add cl, byte ptr [ecx] ; ret
0x0807b846:	les esp, ptr [ecx + ecx*4] ; enter 0x5e5b, 0x5f ; pop ebp ; ret
0x0807b95f:	salc ; add esp, 0x10 ; mov eax, esi ; pop ebx ; pop esi ; ret
0x0807b9c7:	salc ; add esp, 0x24 ; mov eax, esi ; pop ebx ; pop esi ; ret
0x0807bba3:	push edi ; push esi ; push ebx ; mov esi, edx ; mov edi, ecx ; mov ebx, eax
0x0807bce0:	sub al, 0xf5 ; std ; inc dword ptr [ebx - 0x3cd6ef3c]
0x0807bd74:	cwde ; hlt ; std ; inc dword ptr [ebx - 0x3cd6ef3c]
0x0807be47:	push ebp ; fadd qword ptr [eax] ; add byte ptr [ebx - 0x3cfee7b2], cl
0x0807c35f:	ror byte ptr [edi], 1 ; xchg dword ptr [eax], ebx ; adc dword ptr [eax], eax ; add byte ptr [ecx], al ; ret
0x0807c3c0:	adc dword ptr [eax], eax ; add byte ptr [ebx + 0x1011445], al ; ret
0x080804cc:	mov dword ptr [esp + 0xb0], eax ; mov ebx, eax
0x0808065c:	je 0xe2 ; add byte ptr [eax], al ; mov ebx, eax
0x0808069c:	mov dword ptr [ecx + edx*4], eax ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x0808070a:	add byte ptr [eax], al ; add byte ptr [ecx + 0x5f5e5bf0], cl ; ret
0x08080736:	adc byte ptr [ecx + 0x5bf08903], cl ; pop esi ; pop edi ; ret
0x08080771:	mov ebp, esp ; push edi ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08080892:	jp 0xffffffab ; std ; inc dword ptr [ebx - 0x3cd6ef3c]
0x0808090f:	std ; test al, 0xfd ; inc dword ptr [ebx - 0x3cd6ef3c]
0x080809c9:	cmp eax, esi ; ja 0xffffffe7 ; mov eax, ebx ; pop ebx ; pop esi ; ret
0x080809db:	xor edx, edx ; div esi ; add eax, ebx ; pop ebx ; pop esi ; ret
0x08081921:	jne 0xffffff82 ; call 0xfffd98ef ; mov ebx, eax
0x08081b4a:	mov edx, dword ptr [ebp - 0x90] ; cmove eax, ebx
0x08081d24:	ror byte ptr [ecx - 0x8b7b], 0xff ; mov ebx, eax
0x08082609:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov dword ptr [ebp - 0x70], edi ; sub ebx, eax
0x08082bc7:	call 0xffffde29 ; add esp, 0x1c ; ret
0x08082ddd:	clc ; fxam ; fnstsw ax ; fstp st(0) ; mov ebx, eax
0x08082f61:	mov esi, 0x5c89080c ; and al, 0xc ; mov ebx, eax
0x08083064:	mov ecx, dword ptr [esp + 0x150] ; mov ebx, eax
0x080831d2:	and al, 0x10 ; xor ecx, ecx ; add eax, 1 ; cmp ebx, eax
0x08083240:	ljmp -0x3fff:0x92048d03 ; sub ebx, eax
0x08083717:	add byte ptr [eax], al ; pop ebx ; add eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08083d6a:	adc byte ptr [ebx - 0x6bf00008], al ; shr bl, 0xc3
0x080844bf:	add byte ptr [ebx + 0x74db8519], cl ; pop ss ; cmp ebx, eax
0x0808451e:	rol byte ptr [ebx + 0x5e5b14c4], 0x5f ; pop ebp ; ret
0x080845fe:	rol byte ptr [ebx + 0x5e5b10c4], 0x5f ; pop ebp ; ret
0x080846f3:	call 0xffff9c0d ; add esp, 0x1c ; ret
0x08084711:	pop eax ; mov eax, dword ptr [edx + 0xc] ; mov ebx, dword ptr [edx + 0x10] ; sub ebx, eax
0x0808477b:	lea ebp, dword ptr [eax*4] ; sub ebx, eax
0x08084943:	fmul qword ptr [ebx - 0x157c2bab] ; add al, 0x39 ; ret
0x0808497b:	or al, byte ptr [ebx - 0x157cfb18] ; add al, 0x39 ; ret
0x08084a77:	and eax, 0x8b000056 ; dec esi ; sbb byte ptr [ecx], al ; ret
0x08084b22:	ror byte ptr [edi], 0x84 ; xlatb ; add eax, 0xc3830000
0x080852ec:	ror dword ptr [ebp - 0x41f7b], -1 ; cmp ebx, eax
0x08085323:	add dword ptr [ebp - 0x45c], 1 ; cmp ebx, eax
0x080854e1:	inc dword ptr [ebx - 0x97afe12] ; setg bl
0x08085731:	or al, byte ptr [eax] ; add byte ptr [eax], al ; mov eax, dword ptr [ecx + 4] ; mov ebx, eax
0x080859f1:	push edx ; call dword ptr [eax + 0x1c] ; add esp, 0x10 ; cmp ebx, eax
0x08085dfd:	fbld dword ptr [ebx] ; cld ; inc dword ptr [ebx - 0x3c76ef3c]
0x08085f0a:	push ecx ; call dword ptr [eax + 0x1c] ; add esp, 0x10 ; cmp ebx, eax
0x08085f5a:	and dl, byte ptr [eax] ; add byte ptr [ebx - 0x3cc6ef3c], al
0x080860a8:	movsb byte ptr es:[edi], byte ptr [esi] ; test dword ptr [eax], eax ; add byte ptr [ebx - 0x3c76ef3c], al
0x080863e5:	daa ; push ds ; cld ; inc dword ptr [ebx - 0x3c76ef3c]
0x08087218:	hlt ; aas ; std ; inc dword ptr [ebx - 0x3c76ef3c]
0x08087ade:	jmp 0xf000008 ; mov dh, 0x80 ; add bl, al
0x08088141:	adc al, byte ptr [eax] ; add byte ptr [edx + 0x52], dl ; push 0x2b ; jmp 0xffffffcc
0x0808820c:	adc al, byte ptr [eax] ; add byte ptr [eax + 0x50], dl ; push 0x2b ; jmp 0xffffffcc
0x08088887:	inc eax ; idiv bh ; dec dword ptr [edi] ; mov dh, 0x80 ; add bl, al
0x08088e0a:	mov ebp, 0xffffff0 ; mov dh, 0x80 ; add bl, al
0x08089861:	push edi ; mov edi, ecx ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08089a34:	lea eax, dword ptr [edx] ; call 0xfffe50dc ; ret
0x08089cd2:	les ecx, ptr [ebx + ebx*2] ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x0808a08f:	add byte ptr [ecx + 0x5bc88918], cl ; pop esi ; pop edi ; ret
0x0808a6c6:	add esp, 0x10 ; test eax, eax ; je 0x62 ; add ebx, eax
0x0808a6df:	add byte ptr [eax], al ; add esp, 0x60 ; pop ebx ; pop esi ; pop edi ; ret
0x0808a74d:	les edx, ptr [eax] ; test eax, eax ; mov dword ptr gs:[ebx], edi ; jne 0xffffffcc
0x0808a8b2:	add esp, 0x10 ; test eax, eax ; je 0x26 ; add ebx, eax
0x0808a980:	xor edx, edx ; div esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808ab4c:	add byte ptr [ebx + 0x5e8b0446], cl ; or byte ptr [ecx], ch ; ret
0x0808abe3:	add al, 0x8b ; pop esi ; or byte ptr [ecx - 0x3cd61fbb], cl
0x0808ac04:	adc byte ptr [ebp + 0x74c189c0], al ; pop es ; mov ebx, eax
0x0808adf5:	xor al, 0x83 ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0808aec9:	call 0xfffffe77 ; add esp, 0x2c ; ret
0x0808afeb:	les ecx, ptr [ecx + ecx*4 - 0x10] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808b17b:	mov dword ptr [esp + 0x1c], eax ; mov eax, dword ptr [ecx + 0x20] ; sub ebx, eax
0x0808b28f:	mov dword ptr [eax], edx ; mov dword ptr [eax + 8], edx ; mov dword ptr [eax + 0x20], ecx ; ret
0x0808b2c1:	adc byte ptr [ecx + 0x48890858], cl ; and byte ptr [ebx - 0x3d], bl
0x0808b301:	or byte ptr [ecx - 0x3b7cc3bd], cl ; or byte ptr [ebx - 0x3d], bl
0x0808b569:	mov edx, dword ptr [eax] ; add esp, 8 ; mov eax, edx ; pop ebx ; ret
0x0808b695:	les ebx, ptr [ebx + ebx*2] ; pop esi ; sub eax, edi ; pop edi ; pop ebp ; ret
0x0808b6be:	test edx, edx ; je 0x12 ; add esp, 8 ; pop ebx ; ret
0x0808b711:	in al, dx ; sbb byte ptr [eax], ch ; and byte ptr [eax], al ; add al, ch ; ret
0x0808b73a:	mov eax, 1 ; add esp, 0xc ; ret
0x0808b748:	mov eax, 0xffffffff ; add esp, 0xc ; ret
0x0808b795:	or esi, dword ptr [ecx] ; rol byte ptr [ebx + 0x5e5b04c4], 0xc3
0x0808b944:	or byte ptr [ebx + 0x4c48302], cl ; pop ebx ; pop esi ; ret
0x0808ba23:	dec dword ptr [ebx + 0x4c48302] ; pop ebx ; pop esi ; ret
0x0808bb70:	add eax, dword ptr [ebx - 0x3b7c10dd] ; or byte ptr [ebx - 0x3d], bl
0x0808bc19:	rol cl, 1 ; clc ; add al, byte ptr [ebx - 0x3ca4fe18]
0x0808bcbb:	mov eax, dword ptr [ecx + 8] ; sar edx, 2 ; sub eax, edx ; ret
0x0808bd24:	adc al, 0x91 ; mov dword ptr [eax], edx ; xor eax, eax ; pop ebx ; pop esi ; ret
0x0808be02:	and al, 4 ; mov eax, dword ptr [eax + 0x24] ; mov eax, dword ptr [eax + 0x28] ; ret
0x0808be9b:	mov eax, 2 ; pop ebx ; pop esi ; pop edi ; ret
0x0808beab:	mov eax, 1 ; pop ebx ; pop esi ; pop edi ; ret
0x0808bebc:	add esp, 0x10 ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; ret
0x0808c1e4:	les ebp, ptr [ecx + ecx*4] ; call 0x5d5f5e63 ; ret
0x0808c2ec:	sbb al, 0x56 ; call 0xfffbbef4 ; mov ebx, eax
0x0808c370:	adc byte ptr [ebx + 0x5e5b2cc4], al ; pop edi ; pop ebp ; ret
0x0808c490:	je 8 ; lea eax, dword ptr [0x808d810] ; ret
0x0808c4c2:	je 8 ; lea eax, dword ptr [0x808cff0] ; ret
0x0808c680:	into ; jne 6 ; lea eax, dword ptr [esi + 3] ; pop esi ; pop edi ; ret
0x0808c942:	sbb cl, byte ptr [edi] ; test dword ptr [edi - 0x77000000], eax ; ret
0x0808cc32:	mov byte ptr [ecx], 0xc2 ; add esi, dword ptr [esp + 0x14] ; cmp ebx, eax
0x0808ccde:	rol byte ptr [ebx + 0x5e5b4cc4], 0x5f ; pop ebp ; ret
0x0808cd73:	and al, 0x68 ; add eax, 1 ; add esi, eax ; cmp ebx, eax
0x0808cda7:	xor bh, bh ; jne 0x79 ; add eax, 1 ; cmp ebx, eax
0x0808cdee:	les ecx, ptr [ebx + ebx*2 + 0x5e] ; add eax, edx ; pop edi ; pop ebp ; ret
0x0808cf0b:	les ecx, ptr [ecx + ecx*4] ; rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; pop ebp ; ret
0x0808d053:	test dword ptr [esp + eax], ebp ; add byte ptr [eax], al ; push esi ; push ebx ; mov ebx, eax
0x0808d0b3:	test ecx, eax ; add eax, dword ptr [eax] ; add byte ptr [esi + 0x53], dl ; mov ebx, eax
0x0808d13d:	add byte ptr [eax], al ; nop ; pop ebx ; pop esi ; xor eax, eax ; pop edi ; ret
0x0808d151:	pmovmskb ecx, mm2 ; test ecx, ecx ; jne 0x1f ; mov ebx, eax
0x0808d32f:	jge 2 ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x0808d354:	mov byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xc] ; pop edi ; ret
0x0808d37e:	mov es, word ptr [eax] ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 8] ; pop edi ; ret
0x0808d3a7:	xchg eax, ebp ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca003b9], cl
0x0808d3ac:	inc edi ; cld ; pop edi ; ret ; lea eax, dword ptr [edi - 0xf] ; pop edi ; ret
0x0808d3bc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xe] ; pop edi ; ret
0x0808d3cc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xd] ; pop edi ; ret
0x0808d3dc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xb] ; pop edi ; ret
0x0808d3ec:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xa] ; pop edi ; ret
0x0808d3fc:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 9] ; pop edi ; ret
0x0808d40c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 7] ; pop edi ; ret
0x0808d41c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 6] ; pop edi ; ret
0x0808d42c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 5] ; pop edi ; ret
0x0808d43c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 3] ; pop edi ; ret
0x0808d44c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 2] ; pop edi ; ret
0x0808d45c:	add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 1] ; pop edi ; ret
0x0808d693:	add byte ptr [eax], al ; bsr eax, eax ; add eax, edi ; pop edi ; ret
0x0808d69f:	add byte ptr [ebp + 0x56dc75d2], al ; push ebx ; mov ebx, eax
0x0808d71f:	nop ; test edx, edx ; jne 0xffffffe1 ; push esi ; push ebx ; mov ebx, eax
0x0808d79e:	jne 0x12 ; test ebx, ebx ; je 0x62 ; bsr eax, ebx
0x0808d7a7:	add eax, esi ; pop ebx ; pop esi ; sub eax, 0x10 ; pop edi ; ret
0x0808d7eb:	pop edi ; ret ; lea esi, dword ptr [esi] ; xor eax, eax ; pop edi ; ret
0x0808d7fd:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; xor eax, eax ; ret
0x0808daf1:	rol byte ptr [ebx], 0 ; add byte ptr [ebx - 0x3ca0fc40], al
0x0808db17:	scasb al, byte ptr es:[edi] ; add eax, dword ptr [eax] ; add byte ptr [ebx - 0x3ca0f840], al
0x0808db3e:	wait ; add eax, dword ptr [eax] ; add byte ptr [ebx - 0x3ca0f440], al
0x0808db67:	xchg byte ptr [ebx], al ; add byte ptr [eax], al ; add eax, 0xf ; pop edi ; ret
0x0808dbcf:	sal byte ptr [ebp + 0xe], cl ; mov eax, dword ptr [esp + 0xc] ; pop edi ; ret
0x0808dc0d:	dec edi ; add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0fcc0], cl
0x0808dc40:	sbb al, 1 ; add byte ptr [eax], al ; lea eax, dword ptr [eax + 7] ; pop edi ; ret
0x0808dc77:	in eax, 0 ; add byte ptr [eax], al ; lea eax, dword ptr [eax + 0xb] ; pop edi ; ret
0x0808dca0:	mov esp, 0x8d000000 ; inc eax ; maxps xmm0, xmm3
0x0808dcb5:	cmpsd dword ptr [esi], dword ptr es:[edi] ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fec0], cl
0x0808dcc5:	xchg eax, edi ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0fdc0], cl
0x0808dcd5:	xchg dword ptr [eax], eax ; add byte ptr [eax], al ; lea eax, dword ptr [eax + 4] ; pop edi ; ret
0x0808dce1:	out dx, eax ; push es ; jb 0x7f ; lea eax, dword ptr [eax + 5] ; pop edi ; ret
0x0808dcf1:	out dx, eax ; pop es ; jb 0x6f ; lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x0808dd01:	out dx, eax ; or dword ptr [edx + 0x5b], esi ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x0808dd11:	out dx, eax ; or dh, byte ptr [edx + 0x4b] ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x0808dd21:	out dx, eax ; or esi, dword ptr [edx + 0x3b] ; lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x0808dd31:	out dx, eax ; or eax, 0x408d2b72 ; or al, 0x5f ; ret
0x0808dd41:	out dx, eax ; push cs ; jb 0x1f ; lea eax, dword ptr [eax + 0xd] ; pop edi ; ret
0x0808dd5d:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5f0c2444], cl ; ret
0x0808ddbb:	add byte ptr [eax], al ; mov eax, 4 ; pop edi ; ret
0x0808de14:	add byte ptr [eax], al ; mov eax, 8 ; pop edi ; ret
0x0808de64:	add byte ptr [eax], al ; mov eax, 0xc ; pop edi ; ret
0x0808de98:	je 0x5e ; mov eax, 0x10 ; pop edi ; ret
0x0808deac:	nop ; nop ; nop ; nop ; add eax, 1 ; pop edi ; ret
0x0808deb1:	rol byte ptr [ecx], 0x5f ; ret ; add eax, 2 ; pop edi ; ret
0x0808deb6:	rol byte ptr [edx], 0x5f ; ret ; add eax, 3 ; pop edi ; ret
0x0808debb:	rol byte ptr [ebx], 0x5f ; ret ; add eax, 4 ; pop edi ; ret
0x0808dec0:	rol byte ptr [edi + ebx*2], 0xc3 ; add eax, 5 ; pop edi ; ret
0x0808dec5:	rol byte ptr [0xc083c35f], 6 ; pop edi ; ret
0x0808deca:	rol byte ptr [esi], 0x5f ; ret ; add eax, 7 ; pop edi ; ret
0x0808decf:	rol byte ptr [edi], 0x5f ; ret ; add eax, 8 ; pop edi ; ret
0x0808ded4:	ror byte ptr [eax], 0x5f ; ret ; add eax, 9 ; pop edi ; ret
0x0808ded9:	ror byte ptr [ecx], 0x5f ; ret ; add eax, 0xa ; pop edi ; ret
0x0808dede:	ror byte ptr [edx], 0x5f ; ret ; add eax, 0xb ; pop edi ; ret
0x0808dee3:	ror byte ptr [ebx], 0x5f ; ret ; add eax, 0xc ; pop edi ; ret
0x0808dee8:	ror byte ptr [edi + ebx*2], 0xc3 ; add eax, 0xd ; pop edi ; ret
0x0808deed:	ror byte ptr [0xc083c35f], 0xe ; pop edi ; ret
0x0808def2:	ror byte ptr [esi], 0x5f ; ret ; add eax, 0xf ; pop edi ; ret
0x0808e000:	je 8 ; lea eax, dword ptr [0x808ea20] ; ret
0x0808e087:	add al, 0x75 ; add ecx, dword ptr [ecx + 0x5e5b084a] ; ret
0x0808e0fe:	les edx, ptr [eax] ; add esp, 0x30 ; pop ebx ; pop esi ; pop edi ; ret
0x0808e344:	add esp, 0x40 ; pop ebx ; sub eax, esi ; pop esi ; pop edi ; ret
0x0808e3b7:	call 0x349 ; add esp, 0x2c ; ret
0x0808e6b7:	xchg eax, ebx ; test eax, eax ; jne 0xffffffc9 ; mov eax, edx ; pop ebx ; ret
0x0808e6bb:	les ecx, ptr [ecx + 0x31c35bd0]
0x0808e6c2:	pop ebx ; ret ; mov eax, 1 ; pop ebx ; ret
0x0808e6c9:	pop ebx ; ret ; mov eax, 2 ; pop ebx ; ret
0x0808e6f6:	retf 0x474 ; test edx, edx ; jne 0xfffffffa ; ret
0x0808eb58:	pop ss ; mov cl, dl ; and cl, 0xf ; je 0x28 ; ret
0x0808eb72:	and ch, 0xf ; je 0x1e ; add eax, 2 ; ret
0x0808eb7b:	nop ; lea esi, dword ptr [esi] ; add eax, 1 ; ret
0x0808eb8b:	mov edi, 0 ; add eax, 3 ; ret
0x0808ebad:	add byte ptr [eax], al ; add byte ptr [eax + 1], bh ; ret
0x0808ebbd:	add byte ptr [eax], al ; add byte ptr [eax + 2], bh ; ret
0x0808ebcd:	add byte ptr [eax], al ; add byte ptr [eax + 3], bh ; ret
0x0808ebdd:	add byte ptr [eax], al ; add byte ptr [eax + 4], bh ; ret
0x0808ebed:	add byte ptr [eax], al ; add byte ptr [eax + 5], bh ; ret
0x0808ebfd:	add byte ptr [eax], al ; add byte ptr [eax + 6], bh ; ret
0x0808ec0d:	add byte ptr [eax], al ; add byte ptr [eax + 7], bh ; ret
0x0808ec65:	lea eax, dword ptr [edx + 3] ; test ebx, ebx ; jne 0xffffffdb ; pop ebx ; ret
0x0808ec6b:	aam 0x5b ; ret ; nop ; mov eax, ebx ; pop ebx ; ret
0x0808ec73:	ret ; lea esi, dword ptr [esi] ; mov eax, edx ; pop ebx ; ret
0x0808ec77:	add byte ptr [ecx + 0x31c35bd0], cl
0x0808ec99:	or bh, bh ; adc eax, 0x80ea9f0 ; pop ebx ; ret
0x0808ecc4:	push cs ; add byte ptr [eax], al ; cmp eax, 0x3b ; cmova eax, ebx
0x0808ecd3:	inc edi ; shr dword ptr [ebx - 0x2e], cl ; cmp al, 0x5b ; add eax, edx ; ret
0x0808ed84:	cli ; imul eax, edx, 0x190 ; cmp ebx, eax
0x0808eee5:	sbb byte ptr [ebx + 0x5e5b18c4], al ; pop edi ; pop ebp ; ret
0x0808ef4b:	clc ; add eax, 0xc06bf029 ; cmp ebx, eax
0x0808efca:	inc edx ; ret 0xfffc ; mov dword ptr [esp], esi ; mov ebx, eax
0x0808eff3:	mov ebp, 0xc483080e ; add al, 0x5b ; pop esi ; ret
0x0808f019:	lea edi, dword ptr [edi] ; mov ebx, eax
0x0808f088:	adc eax, dword ptr [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret
0x0808f09b:	cld ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x0808f0cc:	les ebx, ptr [ecx + ecx*4] ; call 0x5d5f5e63 ; ret
0x0808f186:	mov eax, 1 ; pop esi ; pop edi ; pop ebp ; ret
0x0808f222:	pop ds ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808f2ac:	sbb al, 0x8b ; add byte ptr [eax - 0x6bf0d3c8], al ; ret
0x0808f2ae:	add byte ptr [eax - 0x6bf0d3c8], al ; ret ; add ebx, eax
0x0808f3b6:	das ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808f68c:	or eax, dword ptr [ebp + 0x5b0775c0] ; pop esi ; pop edi ; ret
0x0808f6af:	sti ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x0808f851:	mov eax, dword ptr [0x80ebd3c] ; add esp, 0xc ; ret
0x0808f8c8:	push ebx ; sub byte ptr [ecx + 0x5e5b2443], cl ; pop edi ; ret
0x0808f95f:	call 0xfffdf1b1 ; add esp, 0xc ; ret
0x0808fa44:	mov eax, ebx ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0808fb1e:	int3 ; add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x08090279:	mov esp, 0x9024 ; add byte ptr [edi], cl ; mov ebx, es
0x080904b7:	add byte ptr [eax], al ; mov ebx, 1 ; test eax, ebx
0x0809066f:	add byte ptr [ebx - 0x397cfe3e], al ; add al, 0x83 ; ret
0x0809098a:	in eax, dx ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08090d80:	test dl, dl ; push edi ; mov edi, edx ; push esi ; push ebx ; mov ebx, eax
0x08090e8f:	nop ; test eax, eax ; js 0x71 ; push esi ; push ebx ; mov ebx, eax
0x08090ed3:	add esp, 0xc ; add esp, 0x64 ; pop ebx ; pop esi ; ret
0x08090ef6:	or byte ptr [ebx - 0x3fce9b3c], al ; pop ebx ; pop esi ; ret
0x08090efa:	xor eax, eax ; pop ebx ; pop esi ; ret ; nop ; xor eax, eax ; ret
0x08090f11:	cmp al, byte ptr [eax] ; je 0x2f ; push ebx ; mov ecx, edx ; mov ebx, eax
0x08090f46:	mov dword ptr [eax], 2 ; xor eax, eax ; ret
0x08091134:	fcomp st(1) ; std ; inc dword ptr [ebx - 0x3ca4e73c]
0x0809113f:	nop ; push ebp ; push edi ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08091313:	add byte ptr [ebx - 0x3fce9b3c], al ; pop ebx ; pop esi ; ret
0x08091353:	add byte ptr [eax], al ; call dword ptr [0x80ea9f0] ; ret
0x08091404:	lea esi, dword ptr [esi] ; xor eax, eax ; pop ebx ; pop esi ; ret
0x080914e4:	xchg eax, esp ; rol byte ptr [ebx - 0x49f0a33c], 0xc0 ; ret
0x0809157a:	add byte ptr [ebx - 0x2776cb3c], al ; pop ebx ; pop esi ; ret
0x080915a9:	or bh, bh ; adc eax, 0x80ea9f0 ; cmp ebx, eax
0x080915b4:	mov bh, 0xe ; or byte ptr [edi + 7], dh ; xor eax, eax ; pop ebx ; ret
0x08091699:	and al, 0x83 ; les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x080916f3:	test ecx, ecx ; je 0xf ; mov ebx, dword ptr [edx + 0x10] ; and ebx, eax
0x080916fc:	lea edx, dword ptr [edx + ebx*4] ; add eax, dword ptr [edx + ecx] ; pop ebx ; pop esi ; ret
0x080918e5:	add byte ptr [eax], al ; add byte ptr [edx + edx*8 - 0x3c7ccb8c], al
0x08091901:	cli ; jge 0x78 ; adc byte ptr [ebx - 0x3c7cfe12], al
0x08091911:	test ebp, ebp ; jne 0x5c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091924:	test cl, cl ; je 0xffffffe7 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091964:	jne 0xffffffa7 ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x08091a7b:	fmul qword ptr [edi] ; test byte ptr [esi - 0x7d000000], ch ; ret
0x08091b58:	mov eax, dword ptr [ebx + 4] ; test eax, eax ; je 0x28 ; mov ebx, eax
0x08091b72:	in eax, -0x7d ; les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08091d0d:	add byte ptr [eax], al ; add eax, dword ptr [esi] ; cmp eax, 0x33 ; mov ebx, eax
0x08091e98:	loopne 0xffffff8f ; hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091f23:	push edx ; push dword ptr [ebp - 0x20] ; and eax, 0xfffffff0 ; mov ebx, eax
0x08092259:	dec dword ptr [edi] ; test dword ptr [edx - 0x7d000000], ebp ; ret
0x0809234a:	ror byte ptr [ebp + 0x5e5bf465], 1 ; pop edi ; pop ebp ; ret
0x08092560:	or al, 0x9d ; cld ; inc dword ptr [ebx - 0x3cc6ef3c]
0x080927dc:	fmul dword ptr [ebp + 0x5e5bf465] ; pop edi ; pop ebp ; ret
0x0809280d:	add al, 0 ; add byte ptr [ebx - 0x7af0fe08], al ; ret
0x08092866:	movzx eax, word ptr [eax + 0x30] ; mov edx, dword ptr [edi + 0x20] ; mov ebx, eax
0x080928b1:	add cl, byte ptr [ecx + 0x458b8045] ; test byte ptr [ecx], al ; ret
0x08092c3e:	or byte ptr [ebp + 0x48d5204], 0xc7 ; cmp ebx, eax
0x08092d03:	mov ecx, 0x83fffda3 ; les edx, ptr [eax] ; cmp ebx, eax
0x08092d12:	movzx eax, word ptr [esi + 0x158] ; mov ebx, eax
0x08093085:	out 0x61, eax ; sti ; inc dword ptr [ebp - 0x3c7af040]
0x0809364d:	add byte ptr [eax], al ; add byte ptr [esi + 0x53], dl ; mov esi, edx ; mov ebx, eax
0x08093953:	mov dh, 0x4b ; add dword ptr [ecx + ecx*8 - 0x3c7c898c], eax
0x08093e6f:	fld qword ptr [eax] ; add byte ptr [eax], al ; sub esp, 0xc ; mov ebx, eax
0x08093f6e:	add byte ptr es:[edi], cl ; mov dh, 0x44 ; and al, 0xf ; cmp bl, al
0x08093f91:	add dword ptr [edi], ecx ; mov dh, 0x19 ; movzx eax, byte ptr [edx] ; cmp bl, al
0x08094ad7:	push es ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080950bc:	lea esi, dword ptr [esi] ; mov eax, dword ptr [esi + 0x18] ; mov ebx, eax
0x080950cb:	add byte ptr [eax], al ; add byte ptr [ebp + 0x6b1474c0], al ; ret
0x080957b3:	ret 0xc101 ; loope 0xa ; add ebx, ecx ; add ebx, eax
0x08095b0e:	add byte ptr [ebx + 0x4d8b985d], cl ; pushfd ; xor ebx, eax
0x08095b25:	inc ebp ; cwde ; xor ebx, ebx ; or edx, eax ; setne bl
0x080961ed:	mov cl, byte ptr [ecx + 0x18c90] ; add bl, dh ; ret
0x0809621c:	add byte ptr [eax], al ; mov dword ptr [eax + 0x188], edx ; ret
0x08096258:	push cs ; or bh, bh ; rol byte ptr [ebx - 0x3c94ef3c], 1
0x080962f9:	cld ; lcall ptr [edx + 0x59] ; lea edx, dword ptr [eax + 1] ; mov ebx, eax
0x0809634c:	mov ebp, dword ptr [esp + 0x14] ; add esp, 0x10 ; add ebx, eax
0x08096450:	add eax, 1 ; mov dword ptr [esp + 0xc], eax ; mov ebx, eax
0x08096664:	add byte ptr [eax], al ; add al, 0x31 ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x0809669a:	nop ; nop ; nop ; nop ; nop ; nop ; push ebx ; mov ebx, eax
0x080966b4:	test eax, eax ; jne 9 ; add esp, 8 ; pop ebx ; ret
0x08096718:	push esp ; sbb edi, ebx ; inc dword ptr [ebx - 0x3ca4e73c]
0x08096769:	sar byte ptr [eax + 6], 0x83 ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x08096797:	rol dword ptr [eax], -0x23 ; or al, 8 ; mov esi, edx ; mov ebx, eax
0x08096a3c:	dec ebp ; test byte ptr [ebx + 0x3e03887d], cl ; mov ebx, eax
0x08096c51:	mov esp, dword ptr [0xc4830000] ; adc cl, ch ; ret
0x08097273:	ret ; and cl, al ; loopne 0xa ; add eax, edx ; cmp ebx, eax
0x080973e0:	push es ; mov dword ptr [ebp - 0x5c], eax ; mov eax, dword ptr [esi + 4] ; mov ebx, eax
0x0809794c:	pop es ; mov dword ptr [ebp - 0x78], eax ; mov eax, dword ptr [edi + 4] ; mov ebx, eax
0x08098311:	cli ; or edx, esi ; je 0x58 ; xor ecx, ecx ; mov ebx, eax
0x080984a0:	inc esp ; mov ch, 0xe ; or byte ptr [ebp - 0x3cc6c4fc], cl
0x0809884e:	add dword ptr [ebx + 0x730101c6], eax ; add al, 0x83 ; ret
0x0809887d:	mov eax, 1 ; shl eax, cl ; cmp ebx, eax
0x080988aa:	clc ; add ecx, 8 ; mov dword ptr [ecx - 8], esi ; cmp ebx, eax
0x08098c62:	test eax, eax ; jne 0x4e ; sub esp, 0xc ; mov ebx, eax
0x08098f7e:	dec dword ptr [edi] ; test byte ptr [edi + 1], dh ; add byte ptr [eax], al ; cmp ebx, eax
0x08099168:	test eax, eax ; js 0x48 ; sub esp, 4 ; mov ebx, eax
0x080991a0:	mov eax, esi ; add esp, 0x60 ; pop ebx ; pop esi ; pop edi ; ret
0x080991f9:	call 0xfffffb27 ; add esp, 0x1c ; ret
0x08099229:	call 0xfffffaf7 ; add esp, 0x1c ; ret
0x08099255:	call 0xfffffacb ; add esp, 0x1c ; ret
0x08099301:	cmp ebx, ecx ; jne 0xffffffe7 ; mov eax, dword ptr [ecx] ; pop ebx ; pop esi ; ret
0x0809937e:	add eax, 1 ; mov dword ptr [0x80eba08], eax ; ret
0x080993f4:	test edx, edx ; je 0xc ; mov esi, dword ptr [edx] ; jmp 0xffffffcc
0x0809941a:	or byte ptr [ebx + 0x5e5b0cc4], al ; pop edi ; pop ebp ; ret
0x08099446:	add byte ptr [ebp + 6], dh ; mov eax, dword ptr [0x80eba08] ; ret
0x0809947f:	mov ecx, dword ptr [ecx + 4] ; test ecx, ecx ; jne 0xffffffe1 ; pop ebx ; ret
0x08099481:	add al, 0x85 ; leave ; jne 0xffffffdf ; pop ebx ; ret ; ret
0x08099497:	or byte ptr [ecx + 0x80eba04], ah ; mov dword ptr [edx], eax ; ret
0x080994be:	lea edx, dword ptr [eax + edi - 0x4c0] ; mov ebx, eax
0x080994f6:	sal byte ptr [edi + edx - 0x7d], 0xc4 ; adc al, 0x5b ; pop edi ; ret
0x080994ff:	nop ; add esp, 0x14 ; xor eax, eax ; pop ebx ; pop edi ; ret
0x080995a2:	mov ebp, eax ; mov edi, dword ptr [esp + 0xc] ; lea ebx, dword ptr [ebx + eax*8]
0x080996d5:	sbb byte ptr [ebx + 0x5e5b2cc4], al ; pop edi ; pop ebp ; ret
0x080998eb:	pop esi ; cmp eax, 0xff ; cmove eax, edx ; pop edi ; ret
0x0809991e:	or byte ptr [ebx - 0x3f], dh ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; ret
0x08099949:	lea esi, dword ptr [esi] ; sub ebx, eax
0x08099956:	sal byte ptr [edi - 0x77], 0xc6 ; mov eax, dword ptr [esi] ; cmp ebx, eax
0x08099ae3:	adc byte ptr [eax], al ; add byte ptr [ecx + 0x5f5e5bd8], cl ; ret
0x08099b3c:	les edx, ptr [eax] ; adc byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x08099b7b:	les edx, ptr [eax] ; xor eax, eax ; add esp, 8 ; pop ebx ; ret
0x08099c4d:	add al, 0xff ; xor eax, 0x80e9fec ; mov ebx, eax
0x08099c6e:	push cs ; or byte ptr [ecx], al ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08099f2e:	or ecx, dword ptr [ecx + 0x4c483d8] ; pop ebx ; pop esi ; ret
0x08099f31:	add esp, 4 ; pop ebx ; pop esi ; ret ; xor eax, eax ; ret
0x08099fec:	call 0xffffec24 ; pop ecx ; pop edi ; mov ebx, eax
0x0809a032:	aam 0x8d ; hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809a216:	or al, 8 ; mov eax, dword ptr [eax] ; test eax, eax ; cmove eax, ebx
0x0809a353:	call 0xfffffb7d ; test eax, eax ; mov ebx, eax
0x0809a62d:	mov eax, 0x5bf4658d ; pop esi ; pop edi ; pop ebp ; ret
0x0809ac2a:	mov dh, 0x45 ; or al, 0x8b ; jne 0xe ; mov byte ptr [ebp - 0x3d], al
0x0809b925:	add byte ptr [eax], cl ; je 0x1f ; add esp, 8 ; pop ebx ; ret
0x0809ba44:	sbb cl, byte ptr [esp + 0x28] ; add esp, 0x4c ; ret
0x0809bb04:	les ecx, ptr [eax] ; pop ebx ; sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x0809bb38:	les ecx, ptr [eax] ; pop ebx ; pop esi ; pop edi ; neg eax ; pop ebp ; ret
0x0809bb54:	mov esi, 0xc8295bc9 ; pop esi ; pop edi ; pop ebp ; ret
0x0809bd13:	push ebp ; fmul qword ptr [ebp + 0x1e76ff43] ; mov ebx, eax
0x0809bf0a:	add byte ptr [ebp - 0x3f7cf9ec], cl ; xor byte ptr [ecx], bh ; ret
0x0809c02b:	push ebp ; fmul qword ptr [ebp + 0x3c76ff43] ; mov ebx, eax
0x0809c089:	fsub st(3), st(0) ; adc ecx, dword ptr [ebp - 0x7cffd98c] ; ret
0x0809c165:	lea edx, dword ptr [eax - 1] ; cmp edx, 0xfd ; jbe 0xb ; ret
0x0809c1a5:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5e5b14c4], al ; ret
0x0809c1a9:	les edx, ptr [ebx + ebx*2] ; pop esi ; ret ; nop ; mov ebx, eax
0x0809c202:	xlatb ; push esi ; push ebx ; mov edx, dword ptr [esp + 0xc] ; mov ebx, eax
0x0809c243:	call eax ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0809c513:	call 0xfffd168d ; add esp, 0x1c ; ret
0x0809c51b:	ret ; nop ; nop ; mov eax, dword ptr [eax + 4] ; ret
0x0809c532:	add al, 0x65 ; sub eax, dword ptr [0] ; ret
0x0809c5cb:	call 0x5aa5 ; add esp, 0x1c ; ret
0x0809c5f5:	ja 0x5c ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x0809c628:	dec dword ptr [ecx - 0x3b7cf3bd] ; sub byte ptr [ebx - 0x3d], bl
0x0809c667:	sbb al, 0x85 ; sal byte ptr [ebp + 4], cl ; add esp, 0x2c ; ret
0x0809c691:	adc byte ptr [ebx - 0x7cf3dbbc], cl ; les ebp, ptr [ebx + eax*8]
0x0809c6ce:	and al, 0xc ; add eax, dword ptr [edx + 4] ; add esp, 0x1c ; ret
0x0809c74e:	mov dword ptr [ebx + 8], eax ; add esp, 0x20 ; pop ebx ; pop esi ; ret
0x0809c78c:	mov dword ptr [ebx + 8], eax ; add esp, 0x10 ; pop ebx ; pop esi ; ret
0x0809c85a:	add esp, 0x10 ; mov eax, edx ; add esp, 0x1c ; ret
0x0809c8a3:	add byte ptr [eax], al ; add byte ptr [0xfffffffc], al ; ret
0x0809c903:	inc ebx ; sbb byte ptr [ebx - 0x3fcef73c], al ; pop ebx ; ret
0x0809c9ae:	and eax, 2 ; sub eax, 1 ; pop ebx ; pop esi ; ret
0x0809c9bc:	add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop ebx ; pop esi ; ret
0x0809cac8:	add byte ptr [ecx - 0x8e3dbbc], cl ; int1 ; mov ebx, eax
0x0809cade:	add byte ptr es:[ecx], dh ; fstp xword ptr [ecx] ; clc ; setb bl
0x0809cb56:	sub al, 0x83 ; les edi, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0809cc86:	sbb al, 0x83 ; les edi, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0809cca1:	push ds ; mov eax, dword ptr [esp + 0xc] ; sub ecx, eax ; add ebx, eax
0x0809cd63:	or byte ptr [ebx + 0x5e5b3cc4], al ; pop edi ; pop ebp ; ret
0x0809ce17:	add al, 0x97 ; dec edx ; mov eax, dword ptr [esi + edx*4] ; shld ebx, eax, cl
0x0809ce26:	shl eax, cl ; mov dword ptr [edi], eax ; pop eax ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce2e:	ret ; shl ebx, cl ; mov dword ptr [edi], ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce77:	add al, 0x97 ; inc edx ; mov eax, dword ptr [esi + edx*4] ; shrd ebx, eax, cl
0x0809ce86:	shr eax, cl ; mov dword ptr [edi], eax ; pop eax ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce8e:	ret ; shr ebx, cl ; mov dword ptr [edi], ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0809cf5a:	ror dword ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x0809cfa0:	adc byte ptr [ebx + 0x458920c4], al ; in al, 1 ; ret
0x0809cfaa:	cli ; mov dword ptr [ebp - 0x2c], ebx ; mov ebx, dword ptr [ebp + 0xc] ; add ebx, eax
0x0809cfd1:	xchg dword ptr [ebp + 0x5e5bf465], ecx ; pop edi ; pop ebp ; ret
0x0809d068:	lea ecx, dword ptr [ebx + 4] ; mov ebx, dword ptr [ebx] ; mov edx, ebx ; add ebx, eax
0x0809d1e0:	jne 0xfffffff0 ; mov eax, ebp ; pop ebx ; pop ebp ; pop esi ; pop edi ; ret
0x0809d28b:	rol byte ptr [ebx + 0x5e5b0cc4], 1 ; pop edi ; pop ebp ; ret
0x0809d35e:	sahf ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809d532:	xchg dword ptr [ecx - 0x3f7c79ec], ecx ; add dword ptr [ecx], edi ; ret
0x0809d952:	xchg dword ptr [ecx - 0x3f7c79f4], ecx ; add dword ptr [ecx], edi ; ret
0x0809daba:	inc dword ptr [ebx + 0x5d8b20c4] ; cld ; leave ; ret
0x0809dad2:	inc dword ptr [ebx + 0x5d8b10c4] ; cld ; leave ; ret
0x0809dbb7:	jne 0xffffffb1 ; sbb eax, eax ; neg eax ; pop esi ; pop edi ; ret
0x0809dbf3:	jne 0xffffffed ; mov eax, ebp ; pop ebx ; pop ebp ; pop esi ; pop edi ; ret
0x0809dc7f:	add byte ptr [eax], al ; mov dword ptr [edi], edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809dc9a:	mov eax, 2 ; pop esi ; pop edi ; pop ebp ; ret
0x0809dd8c:	pop ebp ; ret ; nop ; test edi, edi ; sete bl
0x0809dd93:	xchg eax, esp ; ret ; test edx, edx ; sete al ; test al, bl
0x0809ddb0:	add al, byte ptr [eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809ddeb:	push ss ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809de93:	in al, dx ; add esp, 0x24 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809df21:	add byte ptr [eax], al ; add byte ptr [ecx], bh ; call 0xc329f07e
0x0809dfb3:	lea eax, dword ptr [eax*4 + 0x80cb660] ; mov ebx, eax
0x0809e033:	call 0xd ; add esp, 0x1c ; ret
0x0809e098:	add byte ptr [ecx + 0xc8c4], al ; add byte ptr [ebx - 0x3d], bl
0x0809e0bc:	mov eax, dword ptr [eax + 0x38] ; test eax, eax ; js 0xc ; ret
0x0809e299:	outsb dx, byte ptr [esi] ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809e37f:	test ebx, ebx ; jne 0x11 ; add esp, 8 ; pop ebx ; ret
0x0809e39d:	lahf ; push esi ; sti ; inc dword ptr [ebx - 0x3cc6ef3c]
0x0809e3aa:	div dword ptr [esp + 0x14] ; add esp, 8 ; pop ebx ; ret
0x0809e3e7:	or byte ptr [eax - 0x7cf7f149], dh ; les ecx, ptr [ebx + eax*8]
0x0809e3f2:	lodsb al, byte ptr [esi] ; mov bh, 0xe ; or byte ptr [eax - 0x3cf7f149], dh
0x0809e446:	div bh ; add esp, 0x10 ; test eax, eax ; mov ebx, eax
0x0809e510:	add byte ptr [eax], al ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0809e623:	les edx, ptr [eax] ; add esp, 4 ; pop esi ; pop edi ; ret
0x0809e661:	rol byte ptr [ebx - 0x3b7cef3c], 1 ; or byte ptr [ebx - 0x3d], bl
0x0809e6dd:	mov dh, 0xc0 ; mov dword ptr [ebx + 4], edx ; pop ebx ; pop esi ; pop edi ; ret
0x0809e82f:	call 0xfffd18e1 ; add esp, 0x18 ; ret
0x0809e863:	std ; inc dword ptr [ebx - 0x3b7cf33c] ; or al, 0xc3
0x0809e8d1:	inc ebx ; or al, 0x89 ; adc byte ptr [ebx - 0x3ca4f73c], al
0x0809e8f1:	push ebx ; or al, 0x89 ; add al, byte ptr [ebx - 0x3ca4f73c]
0x0809e955:	add byte ptr [eax], al ; mov dword ptr [edx], eax ; add esp, 8 ; pop ebx ; ret
0x0809e9c3:	add esp, 0x1c ; movzx eax, al ; neg eax ; ret
0x0809ea91:	add esp, 0x10 ; mov eax, edx ; add esp, 0x2c ; ret
0x0809eab6:	adc byte ptr [ebp + 0x5b0574c0], al ; pop esi ; pop edi ; ret
0x0809eb58:	push es ; mov eax, ebx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0809eb78:	add byte ptr [ebx - 0x2776fb3c], al ; pop ebx ; pop esi ; ret
0x0809ecce:	loopne 5 ; sub eax, edx ; shr eax, 0x1f ; sub ebx, eax
0x0809ecff:	pop ds ; sub eax, edi ; mov edi, dword ptr [esp + 4] ; sub ebx, eax
0x0809eead:	call 0xffff0ac3 ; add esp, 0x1c ; ret
0x0809eece:	call 0xffff0aa2 ; add esp, 0x1c ; ret
0x0809ef22:	push ebp ; and ebx, ecx ; push edi ; and ebx, 1 ; add ebx, eax
0x0809efd4:	clc ; pop ds ; mov ebx, edx ; sar ebx, 3 ; sub ebx, eax
0x0809efe5:	mov eax, esi ; mov esi, edi ; shr eax, 0x1f ; sub ebx, eax
0x0809f08f:	ret 0xc483 ; adc al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x0809f127:	sar edx, 1 ; sar edi, 0x1f ; mov ebx, edx ; sub ebx, eax
0x0809f20b:	ret 0x48d ; xchg eax, edx ; lea eax, dword ptr [eax + eax*4] ; sub ebx, eax
0x0809f395:	adc al, 0x19 ; sub eax, ebp ; cmp edx, ebx ; setge bl
0x0809f5b2:	call 0xfffffb01 ; add esp, 0x1c ; ret
0x0809f5bf:	nop ; push esi ; mov esi, edx ; push ebx ; mov edx, ecx ; mov ebx, eax
0x0809f5f7:	cmp edx, 0 ; mov eax, edx ; jle 9 ; ret
0x0809f619:	jne 0xffffffe5 ; mov dword ptr gs:[0x68], eax ; ret
0x0809f68f:	sub eax, edi ; pop ebx ; sar eax, 2 ; pop esi ; pop edi ; ret
0x0809f6d1:	dec dword ptr [ecx - 0x3b7cebbd] ; or al, 0x5b ; ret
0x0809fb10:	or byte ptr [ecx + 0x160b8], 0 ; mov ebx, eax
0x0809fd43:	lea eax, dword ptr [edi*4] ; mov ebx, eax
0x080a0388:	and al, 2 ; add byte ptr [eax], al ; add eax, 1 ; cmp ebx, eax
0x080a122b:	loope 0xffffffa1 ; sti ; inc dword ptr [ebx - 0x3cfeef3c]
0x080a13bb:	inc ebp ; loopne 0xffffffbb ; push cs ; add byte ptr [eax], al ; add byte ptr [ecx], al ; ret
0x080a13d1:	mov byte ptr [eax + ebp*8], 0x38 ; sahf ; sti ; inc dword ptr [ecx] ; ret
0x080a1733:	mov eax, dword ptr [ebx + 0xc] ; test eax, eax ; je 0xb ; add ebx, eax
0x080a178f:	lodsb al, byte ptr [esi] ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a1864:	sub esp, 0xc ; test eax, eax ; je 0x4e ; mov ebx, eax
0x080a1976:	or byte ptr [eax + eax], al ; add byte ptr [eax], al ; mov eax, dword ptr [eax] ; add ebx, eax
0x080a2098:	xor al, 0x8b ; je 0x28 ; cmp byte ptr [ecx], ch ; sar dword ptr [ecx], cl ; ret
0x080a2221:	add esp, 0x20 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a223d:	lea edx, dword ptr [esi + eax*8] ; mov ecx, dword ptr [edx] ; mov eax, dword ptr [ecx] ; cmp ebx, eax
0x080a224c:	test ax, ax ; jne 0x22 ; mov eax, dword ptr [ecx] ; cmp ebx, eax
0x080a2353:	leave ; je 0x44 ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x080a297a:	mov dword ptr [ebp - 0x574], eax ; movzx eax, bl
0x080a29a9:	ror byte ptr [edi], 1 ; mov dh, 2 ; lea edi, dword ptr [eax - 0x30] ; mov ebx, eax
0x080a326e:	dec dword ptr [edi] ; test edx, ebx ; sbb eax, 0xc3890000
0x080a32b2:	scasd eax, dword ptr es:[edi] ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3c7cfeb0], cl
0x080a364a:	add dword ptr [edi], ecx ; test esp, ebx ; pop es ; add byte ptr [eax], al ; mov ebx, eax
0x080a3dfc:	mov dh, 0x7a ; dec byte ptr [ecx + 0x77cb38fb] ; ret
0x080a484f:	in al, dx ; add al, 0 ; add byte ptr [ebp - 0x3cc600b9], cl
0x080a549e:	push esi ; sar bh, cl ; dec dword ptr [ecx - 0x3c76f7b3]
0x080a5770:	cmp eax, 0xff ; jne 0xffffffc1 ; mov ecx, ebx ; mov ebx, eax
0x080a636d:	add byte ptr [eax], al ; add byte ptr [ebp - 0x7f7af040], al ; ret
0x080a6582:	cmp dl, 0xff ; inc dword ptr [ebx - 0x3c7cf714]
0x080a66cb:	mov ebx, ecx ; jmp 0xffffe9f8 ; mov ebx, eax
0x080a7172:	add dword ptr [ecx], eax ; test dword ptr [edx + edi*8 - 0x3cfe0001], esp
0x080a7b37:	add dword ptr [ecx], eax ; test dword ptr [eax + 0x1fffffa], ebx ; ret
0x080a7c84:	lea edx, dword ptr [edx + edi*8 - 1] ; ljmp ptr [ecx] ; fld dword ptr [ecx] ; ret
0x080a8074:	fmul dword ptr [ecx + 0x1c829fb] ; ret 0xc329
0x080a8421:	call 0xffff9f8f ; add esp, 0x1c ; ret
0x080a85c0:	mov eax, esi ; mov edx, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a8653:	dec dword ptr [ecx - 0x3b7cf7bd] ; sub byte ptr [ebx - 0x3d], bl
0x080a86f6:	add esp, 0xc ; movzx eax, al ; neg eax ; ret
0x080a8714:	add byte ptr [ecx - 0x3b7cf3bd], cl ; or byte ptr [ebx - 0x3d], bl
0x080a877d:	les edx, ptr [eax] ; add esp, 0x18 ; mov eax, ebx ; pop ebx ; ret
0x080a87a7:	add byte ptr [ecx - 0x3b7cefbd], cl ; adc al, 0x5b ; ret
0x080a8818:	les edx, ptr [eax] ; add esp, 0x28 ; mov eax, ebx ; pop ebx ; ret
0x080a8989:	add byte ptr [eax], al ; or cl, cl ; jne 8 ; xor eax, eax ; ret
0x080a89bc:	call 0x14 ; add esp, 0x1c ; ret
0x080a8a22:	inc dword ptr [ebx + 0x5e5b4cc4] ; pop edi ; pop ebp ; ret
0x080a8b27:	les ecx, ptr [ecx + esi - 0x40] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a8ba8:	mov eax, 0x8366080e ; add al, 0x42 ; add ebx, eax
0x080a8cd1:	adc byte ptr [ecx + 0xa8c4], al ; add byte ptr [ebx - 0x3d], bl
0x080a8ecb:	lea eax, dword ptr [ebp - 0x30] ; sub esp, 8 ; lea ecx, dword ptr [ebp - 0x3d]
0x080a8f69:	xor al, 0xfb ; inc dword ptr [ebx + 0x7d8010c4] ; ret
0x080a9077:	call 0xfffffcf9 ; add esp, 0x14 ; ret
0x080a909b:	call 0xa5 ; add esp, 0x2c ; ret
0x080a90c9:	call 0x77 ; add esp, 0x2c ; ret
0x080a90fb:	call 0x6f5 ; add esp, 0x2c ; ret
0x080a9129:	call 0x6c7 ; add esp, 0x2c ; ret
0x080a97e5:	call 0xfffff95b ; add esp, 0x2c ; ret
0x080a9df5:	call 0xfffff9fb ; add esp, 0x2c ; ret
0x080a9e17:	call 0x849 ; add esp, 0x1c ; ret
0x080a9e35:	call 0x82b ; add esp, 0x1c ; ret
0x080a9e57:	call 0x33a9 ; add esp, 0x1c ; ret
0x080a9e75:	call 0x338b ; add esp, 0x1c ; ret
0x080a9e97:	call 0x60a9 ; add esp, 0x1c ; ret
0x080a9eb5:	call 0x608b ; add esp, 0x1c ; ret
0x080a9ee6:	add byte ptr [ebp + 0x37], dh ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080a9ef9:	cmove eax, ecx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080a9f11:	add byte ptr [eax], al ; or eax, edx ; test cl, cl ; cmove eax, ebx
0x080a9f17:	cmove eax, ebx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080a9f31:	cmovne eax, ecx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080aa409:	sal byte ptr [ebp - 0x14], cl ; mov esi, dword ptr [esp + 0xc] ; add ebx, eax
0x080aa6ec:	mov esi, 0x4244f601 ; add dword ptr [eax], esp ; mov ebx, eax
0x080aa806:	add byte ptr [eax], al ; fldz ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080aa836:	add byte ptr [eax], al ; mov edi, dword ptr [esp + 0x10] ; movsx eax, bl
0x080aabc4:	sbb al, 1 ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080aabce:	jbe 2 ; mov edx, dword ptr [esp + 0x10] ; movsx eax, bl
0x080aae8f:	add byte ptr [eax], al ; pop ebx ; fchs ; pop esi ; pop edi ; pop ebp ; ret
0x080ab136:	or al, byte ptr [ebx - 0x3f7cff2f] ; add dword ptr [ecx], edi ; ret
0x080abe50:	or al, byte ptr [eax] ; add byte ptr [ecx - 0x7c01760d], cl ; ret
0x080ac16e:	jbe 2 ; xor ebx, ebx ; cmp eax, ebp ; setb bl
0x080ac2fd:	mov ebx, dword ptr [esp + 0x80] ; cmp ebx, eax
0x080ac981:	call 0xffffdcdf ; add esp, 0x1c ; ret
0x080acedd:	jmp dword ptr [esi - 0x70] ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x080ad1c3:	or byte ptr [eax + 0x63], ch ; dec esp ; or eax, 0xc322e808
0x080ad1dc:	or byte ptr [eax + 0x63], ch ; dec esp ; or eax, 0xc309e808
0x080ad78c:	cmp al, 4 ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080af095:	stc ; pop ds ; cmp dword ptr [esp + 0x38], ebx ; seta bl
0x080af6d1:	call 0xffffdb2f ; add esp, 0x1c ; ret
0x080af7d2:	leave ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080af887:	les ebp, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; fmul st(0) ; ret
0x080af8cf:	les ebp, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; fmulp st(1) ; ret
0x080b051d:	cmp al, 0x36 ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b2341:	call 0xffffdbff ; add esp, 0x1c ; ret
0x080b2350:	push edi ; push esi ; mov edi, ecx ; push ebx ; mov esi, edx ; mov ebx, eax
0x080b2390:	mov dword ptr [esi], ebx ; add esp, 0x20 ; pop ebx ; pop esi ; pop edi ; ret
0x080b2411:	push ds ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b252a:	add al, 0x24 ; fld dword ptr [esp] ; add esp, 4 ; ret
0x080b2598:	fld qword ptr [esp] ; add esp, 0xc ; pop ebx ; pop esi ; ret
0x080b25f5:	and al, 4 ; fld xword ptr [esp] ; add esp, 0x1c ; ret
0x080b262e:	jne 8 ; lea eax, dword ptr [0x80b5210] ; ret
0x080b2689:	add al, 0xab ; je 0xffffffdf ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b2696:	add byte ptr [eax], al ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x080b4d24:	test eax, eax ; add ecx, dword ptr [eax + ecx] ; sub eax, ecx ; pop ebp ; ret
0x080b4ef5:	ja 4 ; neg eax ; add esp, 4 ; pop ebp ; ret
0x080b4f00:	add esp, 4 ; pop esi ; pop edi ; pop ebp ; xor eax, eax ; ret
0x080b51ca:	cmp esi, ecx ; jne 0x16 ; pop esi ; pop ebp ; xor eax, eax ; ret
0x080b556c:	add ecx, dword ptr [eax + ecx] ; sub eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x080b557d:	add byte ptr [eax], al ; add byte ptr [esi + 0x31], bl ; rcr byte ptr [edi + 0x5d], 0xc3
0x080b5593:	add byte ptr [eax], al ; ja 6 ; neg eax ; pop edi ; pop ebp ; ret
0x080b55b5:	rol dword ptr [ecx], 0x75 ; dec ecx ; cmp ebp, 4 ; jbe 0xffffffcc
0x080b588a:	fiadd dword ptr [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret
0x080b58c6:	sal dword ptr [ecx], -0x2e ; mov eax, esi ; div ecx ; mov ebx, eax
0x080b59a8:	add byte ptr [eax], al ; add byte ptr [ebp - 0x760e762e], al ; ret
0x080b59fc:	fiadd dword ptr [ebx + 0x5e5b2cc4] ; pop edi ; pop ebp ; ret
0x080b5cb7:	and byte ptr [ebx - 0x3b7ca7be], cl ; or byte ptr [ebx - 0x3d], bl
0x080b5cbe:	pop ebx ; ret ; add esp, 8 ; xor eax, eax ; pop ebx ; ret
0x080b5cdf:	add byte ptr [ebx - 0x3b7ca3be], cl ; or byte ptr [ebx - 0x3d], bl
0x080b5cef:	add byte ptr [ebx - 0x3b7cabbe], cl ; or byte ptr [ebx - 0x3d], bl
0x080b5dd1:	mov cs, word ptr [ebp + 0x5e5bf465] ; pop edi ; pop ebp ; ret
0x080b5f4a:	loopne 0x81 ; shl eax, cl ; add ecx, 7 ; or ebx, eax
0x080b61a9:	add byte ptr [eax], al ; add byte ptr [ebp - 0x7cffd98c], cl ; ret
0x080b6283:	add byte ptr [eax], al ; add bl, dl ; loopne 0xfffffffd ; fmul dword ptr [ecx] ; ret
0x080b6582:	add al, 0xc6 ; sbb al, 0x18 ; add byte ptr [eax], al ; add al, 0xc3
0x080b6592:	mov ecx, 0x30 ; push esi ; push ebx ; mov ebx, eax
0x080b68c0:	add eax, dword ptr [eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b7786:	in al, dx ; add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x080b77e5:	mov edx, dword ptr [edx] ; pop ebx ; mov dword ptr [esi + 0x4c], edx ; pop esi ; pop edi ; ret
0x080b77f2:	inc esi ; dec esp ; add byte ptr [eax], al ; add byte ptr [eax], al ; pop esi ; pop edi ; ret
0x080b7874:	pop ds ; sub ecx, edx ; cmp dword ptr [edi + 0x10], ecx ; sete bl
0x080b789f:	pop es ; add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x080b7984:	add byte ptr [eax], al ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b799f:	sub esp, 0x2c ; mov dword ptr [esp + 0xc], ebx ; mov ebx, eax
0x080b7aa2:	dec ebx ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b7ae5:	mov dh, 0x83 ; les ebp, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x080b7b18:	push 0x5b2cc483 ; pop esi ; pop edi ; pop ebp ; ret
0x080b7b84:	cmc ; mov eax, dword ptr [eax] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080b7b8f:	add byte ptr [ebx - 0x74fbdbbc], cl ; inc eax ; dec eax ; ret
0x080b7bea:	and al, 0x18 ; mov dword ptr [eax], ecx ; add esp, 8 ; pop ebx ; ret
0x080b7bfb:	sbb byte ptr [ecx - 0x3b7c7de4], cl ; or byte ptr [ebx - 0x3d], bl
0x080b7c0f:	add byte ptr [ebx - 0x74fbdbbc], cl ; inc eax ; dec esp ; ret
0x080b7c2b:	shr eax, 0x1f ; mov dword ptr [ecx], eax ; mov eax, dword ptr [edx + 0x4c] ; ret
0x080b7c43:	or byte ptr [ebx - 0x76fbdbbc], cl ; push eax ; dec esp ; ret
0x080b7c4f:	add byte ptr [ebx - 0x74fbdbbc], cl ; inc eax ; push eax ; ret
0x080b7c5f:	add byte ptr [ebx - 0x74fbdbbc], cl ; inc eax ; pop esp ; ret
0x080b7c98:	mov eax, dword ptr [esp + 0xc] ; add esp, 0x18 ; pop ebx ; ret
0x080b7caf:	add byte ptr [ebx - 0x74fbdbbc], cl ; inc eax ; pop eax ; ret
0x080b7cbf:	add byte ptr [ebx - 0x74fbdbbc], cl ; inc eax ; push esp ; ret
0x080b7da8:	pop esi ; pop edi ; pop ebp ; ret ; lea esi, dword ptr [esi] ; ret
0x080b7e4b:	hlt ; mov esi, dword ptr [ebp - 8] ; mov edi, dword ptr [ebp - 4] ; leave ; ret
0x080b7eec:	mov edi, dword ptr [ebp - 4] ; mov ebp, dword ptr [ebp] ; mov esp, ecx ; ret
0x080b81b4:	add eax, 0x5b000000 ; pop esi ; pop edi ; pop ebp ; ret
0x080b81b8:	pop ebx ; pop esi ; pop edi ; pop ebp ; ret ; mov eax, dword ptr [esp] ; ret
0x080b81bc:	ret ; mov eax, dword ptr [esp] ; ret ; mov ecx, dword ptr [esp] ; ret
0x080b81c0:	ret ; mov ecx, dword ptr [esp] ; ret ; mov esi, dword ptr [esp] ; ret
0x080b81c4:	ret ; mov esi, dword ptr [esp] ; ret ; mov edi, dword ptr [esp] ; ret
0x080b81c8:	ret ; mov edi, dword ptr [esp] ; ret ; mov ebp, dword ptr [esp] ; ret
0x080b81f6:	mov edx, 1 ; cmova eax, edx ; ret
0x080b829f:	mov es, word ptr [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret
0x080b8346:	fld dword ptr [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret
0x080b837a:	add byte ptr [eax], al ; jne 0x26 ; add esp, 8 ; pop ebx ; ret
0x080b838d:	les ecx, ptr [eax] ; mov eax, 4 ; pop ebx ; ret
0x080b83a9:	les ecx, ptr [eax] ; mov eax, 2 ; pop ebx ; ret
0x080b83df:	and byte ptr [ebx - 0x3b7cf7be], cl ; or byte ptr [ebx - 0x3d], bl
0x080b8402:	jne 0xfffffff6 ; add esp, 8 ; xor eax, eax ; pop ebx ; ret
0x080b840f:	add byte ptr [ebx - 0x3b7cfbbe], cl ; or byte ptr [ebx - 0x3d], bl
0x080b863f:	inc edi ; ret 0xc483 ; and byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x080b8719:	mov dh, 2 ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x080b88be:	sub esp, 0x5c ; mov edx, dword ptr [esp + 0x70] ; mov ebx, eax
0x080b8afc:	add byte ptr [ebx + 0x5e5b5cc4], al ; pop edi ; pop ebp ; ret
0x080b8ea0:	ret 0xc483 ; sub al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x080b8f11:	add byte ptr [eax], al ; add byte ptr [ecx - 0x7bf0dbfc], cl ; ret
0x080b8fba:	or al, 0x83 ; les ebp, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x080b92f6:	mov edx, dword ptr [esp + 0x20] ; movzx ebp, al ; mov ebx, eax
0x080b946b:	add eax, 8 ; mov dword ptr [esp + 0x14], eax ; mov ebx, eax
0x080b980a:	add byte ptr [eax], al ; pop ebx ; pop esi ; mov dword ptr [edx + 0x14], eax ; pop edi ; ret
0x080b98aa:	add byte ptr [eax], al ; mov dword ptr [esi + 0x14], eax ; pop ebx ; pop esi ; pop edi ; ret
0x080b98cb:	push es ; mov ecx, dword ptr [eax] ; test ecx, ecx ; jne 0xd ; ret
0x080b98f7:	sal byte ptr [ebp + 6], 0x83 ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x080b99bf:	call 0xffffff61 ; add esp, 0x1c ; ret
0x080b9ae3:	xor esi, esi ; pop ebx ; mov eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x080b9c48:	clc ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b9f7b:	or byte ptr [eax], al ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080ba2c9:	les ecx, ptr [ecx + ecx*4 - 0x30] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080ba324:	push cs ; or byte ptr [ebx - 0x247aef3c], al ; jne 0xffffffcc
0x080ba386:	mov eax, ebx ; jne 0xffffffea ; add esp, 8 ; pop ebx ; ret
0x080ba3cf:	div byte ptr [ebp - 0x2a] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080ba4a1:	inc dword ptr [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret
0x080ba4ff:	push cs ; or byte ptr [ebp - 0x1b], dh ; add esp, 8 ; pop ebx ; ret
0x080ba618:	div byte ptr [ebp - 0x1d] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080ba67a:	sti ; inc dword ptr [ebx - 0x3b7cef3c] ; or al, 0xc3
0x080ba6a5:	inc edi ; in al, dx ; stc ; inc dword ptr [ebx - 0x3c0ce33c]
0x080ba6ec:	stc ; inc dword ptr [ebx - 0x3b7cef3c] ; or al, 0xc3
0x080ba7e9:	adc byte ptr [ebp + 0x5bd275f6], al ; pop esi ; pop edi ; ret
0x080baaa4:	adc byte ptr [ebp + 0x5bdf75f6], al ; pop esi ; pop edi ; ret
0x080bab4c:	stc ; inc dword ptr [ebx + 0x5e5b14c4] ; ret
0x080bac0f:	nop ; add esp, 0x14 ; xor eax, eax ; pop ebx ; pop esi ; ret
0x080badc9:	push cs ; or al, ch ; inc eax ; cmp eax, 0xc3f3fffb
0x080badfb:	pop es ; add al, byte ptr [eax] ; add esp, 8 ; pop ebx ; ret
0x080bc958:	inc ebx ; retf ; add eax, 0x5cb8308 ; or bl, al
0x080bd39d:	ret 0x806 ; cmp dl, al ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3a1:	ret 0x806 ; inc ebp ; ret ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3a5:	ret ; push es ; or byte ptr [ebp - 0x3d], al ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3ad:	ret ; push es ; or byte ptr [eax], al ; ret 0x806 ; inc ebp ; ret
0x080bd3bd:	ret 0x806 ; add dl, al ; push es ; or byte ptr [ebx], dl ; ret
0x080bd3c5:	ret ; push es ; or byte ptr [eax], al ; ret 0x806 ; or ebx, eax
0x080bd3c9:	ret 0x806 ; or ebx, eax ; push es ; or byte ptr [ebx], bh ; ret
0x080bd3cd:	ret ; push es ; or byte ptr [ebx], bh ; ret ; push es ; or byte ptr [ecx], dh ; ret
0x080bd3d1:	ret ; push es ; or byte ptr [ecx], dh ; ret ; push es ; or byte ptr [edi], ah ; ret
0x080bd3d9:	ret ; push es ; or byte ptr [0x4d0806c3], bl ; ret
0x080bd3dd:	ret ; push es ; or byte ptr [ebp - 0x3d], cl ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3e1:	ret ; push es ; or byte ptr [eax - 0x3d], bh ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3ed:	ret ; push es ; or byte ptr [eax], al ; ret 0x806 ; js 0xffffffcc
0x080bd419:	ret ; push es ; or byte ptr [0x620806c3], bl ; ret
0x080bd8c0:	scasd eax, dword ptr es:[edi] ; retf 0x806 ; mov ecx, 0xc30806ca
0x080c02c4:	rol dword ptr [eax], 0 ; add dl, al ; add byte ptr [eax], al ; add bl, al
0x080c629c:	mov ebx, 0xbf000002 ; add al, byte ptr [eax] ; add bl, al
0x080c6374:	mov bh, 3 ; add byte ptr [eax], al ; mov ebp, 0xc3000003
0x080c6790:	mov ecx, 0xbe000008 ; or byte ptr [eax], al ; add bl, al
0x080c68e4:	mov ebp, 0xc0000009 ; or dword ptr [eax], eax ; add bl, al
0x080c6ce4:	mov ebp, 0xc000000c ; or al, 0 ; add bl, al
0x080c70e4:	mov ebp, 0xc000000f ; sldt word ptr [eax] ; ret
0x080c7f18:	ret 0x24 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080c8408:	ret 0x33 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080c8f10:	ret 0x1d4 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080c96a8:	ret 0x1d5 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080cb605:	inc ebx ; jns 0x10 ; int3 ; int3 ; int3 ; or al, 0xc ; ret
0x080cba70:	ja 0xffffffe9 ; pop es ; or byte ptr [edi - 0x19], dh ; pop es ; or bl, al
0x080ce700:	add eax, 0xbd000000 ; out 0xc, al ; or bl, al
0x080cf93b:	mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x080cfc07:	pop ebp ; xchg eax, edi ; mov bh, byte ptr [edx] ; mov eax, 0xc31e1ad9
0x080cfc43:	xor dl, byte ptr [ebx + 0x71] ; cld ; out -0x6b, eax ; push es ; cld ; ret
0x080cfde7:	inc esp ; aas ; mov ch, 0x31 ; mov ah, bl ; push esi ; ret
0x080cffe8:	in eax, dx ; sti ; push edx ; cdq ; inc esp ; push ds ; mov ah, 0x13 ; ret
0x080d012e:	cli ; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp ; ret
0x080d05d2:	sahf ; int 0xe0 ; fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x080d0636:	in al, dx ; aas ; or al, 0x45 ; sub al, 0xb3 ; push edi ; cmp bl, al
0x080d0e7f:	mov eax, dword ptr [0xd11e901c] ; stc ; jnp 0xffffffc1 ; ret
0x080d1003:	xlatb ; jo 0x74 ; mov ebp, 0xfb67d10d ; ret
0x080d12c0:	fstp st(5) ; inc esi ; xor dh, byte ptr [edi - 0x3cc5744c]
0x080d228d:	movsd dword ptr es:[edi], dword ptr [esi] ; mov cl, byte ptr [0xeeb0f650] ; fcmovb st(0), st(3)
0x080d228e:	mov cl, byte ptr [0xeeb0f650] ; fcmovb st(0), st(3) ; ret
0x080d25e1:	outsd dx, dword ptr [esi] ; inc edx ; jl 0xffffff8c ; outsd dx, dword ptr [esi] ; aad 8 ; stosd dword ptr es:[edi], eax ; ret
0x080d271a:	jnp 0x18 ; mov dl, 0x9f ; sub edi, esi ; int 0x6b ; ret
0x080d27c6:	idiv byte ptr [ecx - 0x44ff150b] ; xchg dword ptr [esi - 0x3d], esi
0x080d2887:	insb byte ptr es:[edi], dx ; sub eax, 0x57251962 ; inc eax ; jno 0xffffffcc
0x080d2ce8:	xchg eax, esp ; mov ebp, 0xf62dedb2 ; clc ; and al, bl
0x080d3010:	shr byte ptr [ebp - 0x27d3396f], 0x5a ; and ebx, eax
0x080d4bd2:	int3 ; int3 ; int3 ; int3 ; int3 ; or al, 0x30 ; or al, 0xc3
0x080d4bd5:	int3 ; int3 ; or al, 0x30 ; or al, 0xc3 ; xor byte ptr [ebx + eax*8], cl
0x080d5181:	ret 0xfffc ; xchg eax, ecx ; ret 0xfffc ; adc eax, ebx
0x080d5185:	ret 0xfffc ; adc eax, ebx ; cld ; jmp dword ptr [ecx - 0x3d]
0x080d518c:	popal ; ret ; cld ; inc dword ptr [ebp - 0x3c00033c]
0x080d518d:	ret ; cld ; inc dword ptr [ebp - 0x3c00033c] ; ret
0x080d587a:	push cs ; add byte ptr [ecx], 0x48 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d5909:	dec edx ; or eax, dword ptr [edx] ; test eax, 0x41140e0a ; ret
0x080d599a:	inc eax ; dec edx ; push cs ; xor byte ptr [esi + ecx + 0x14], cl ; inc ecx ; ret
0x080d59c9:	add dl, byte ptr [ecx + 0xe] ; adc byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d5b0a:	push cs ; and byte ptr [edx], al ; dec ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5b21:	inc esp ; or eax, dword ptr [edx] ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5b62:	inc ecx ; push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [edi + 0xa], al ; ret
0x080d5bbd:	and byte ptr [esi + 0xe], cl ; adc byte ptr [ecx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d5c07:	dec eax ; push cs ; adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080d5c34:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa014503 ; ret
0x080d5c44:	add al, 4 ; inc edi ; or eax, dword ptr [ebx] ; rol byte ptr [ecx], 1 ; or al, bl
0x080d5c74:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa034903 ; ret
0x080d5c82:	lds ecx, ptr [esp + eax] ; add al, 0x41 ; or ebp, dword ptr [edx + ecx - 0x3d]
0x080d5c92:	add al, 4 ; dec ebx ; or eax, dword ptr [ebx] ; ja 8 ; or al, bl
0x080d5d0d:	inc ebp ; push cs ; push eax ; pop ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d5d24:	inc esi ; or eax, dword ptr [edx] ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5ddf:	and byte ptr [eax + 0xe], dl ; adc byte ptr [edi + 0xe], al ; or al, 0x41 ; ret
0x080d5e0c:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa010003 ; ret
0x080d5e80:	sub al, 0x41 ; push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x41 ; ret
0x080d5eec:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa02bf03 ; ret
0x080d5f46:	push cs ; xor byte ptr [edx], al ; xchg eax, esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6044:	dec esp ; push cs ; xor byte ptr [ebx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080d60cd:	dec eax ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d6128:	push cs ; and byte ptr [edx], al ; dec ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6190:	push cs ; xor byte ptr [edx], al ; pushal ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d61db:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d621a:	dec eax ; push cs ; xor byte ptr [ebx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d6230:	add al, 0x41 ; or edx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d62c5:	push cs ; or byte ptr [edx], 0x46 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6336:	dec eax ; push cs ; xor byte ptr [ecx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080d643c:	dec esp ; inc esp ; push cs ; push eax ; dec eax ; push cs ; adc al, 0x41 ; ret
0x080d64d8:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa01a603 ; ret
0x080d64e6:	lds ecx, ptr [esp + eax] ; add al, 0x46 ; or ebx, dword ptr [edx + ecx - 0x3d]
0x080d6550:	push cs ; xor byte ptr [edx], al ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6574:	inc eax ; dec eax ; push cs ; xor byte ptr [eax + 0xe], bl ; adc al, 0x45 ; ret
0x080d6626:	push cs ; and byte ptr [edx], al ; int3 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d671c:	push cs ; inc eax ; add cl, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d6733:	dec ebx ; or eax, dword ptr [edx] ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d674a:	inc ecx ; or eax, dword ptr [edx] ; cld ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d67cb:	push cs ; inc eax ; add ah, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d67e3:	or eax, dword ptr [ebx] ; cdq ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080d683b:	add eax, dword ptr [esi + 0x2058304] ; outsb dx, byte ptr [esi] ; or al, bl
0x080d6849:	lds ecx, ptr [esp + eax] ; add al, 0x46 ; or edx, dword ptr [ebp + 0xa] ; ret
0x080d689f:	add eax, dword ptr [esi + 0x2058304] ; retf ; or al, bl
0x080d68c1:	test esi, edi ; push ebp ; add byte ptr [eax], al ; add byte ptr [ebx + eax*8], al
0x080d68d8:	add dword ptr [edx + eax], 0x53 ; adc byte ptr cs:[ebp + 0xa], bl ; ret
0x080d68e4:	lds ecx, ptr [esp + eax] ; add al, 0x49 ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080d68f0:	lds ecx, ptr [esp + eax] ; add al, 0x41 ; or eax, dword ptr [edx + ecx - 0x3d]
0x080d695e:	dec eax ; push cs ; adc byte ptr [edx + 0xa], dl ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d6968:	add al, 0x43 ; or ebp, dword ptr [eax + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d69c2:	add dword ptr [0x202e9702], 0x6e ; or al, bl
0x080d69d0:	lds ecx, ptr [esp + eax] ; add al, 0x47 ; or esi, dword ptr [ebp + 0xa] ; ret
0x080d6a13:	inc esi ; push cs ; xor byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d6a68:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa020f03 ; ret
0x080d6a77:	or al, 4 ; add al, 0x45 ; or eax, dword ptr [edx] ; dec ebx ; or al, bl
0x080d6ac3:	push cs ; mov al, 1 ; push eax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6b0b:	mov al, 1 ; add cl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d6b65:	mov al, 1 ; add bl, byte ptr [edx + 0xa] ; push cs ; adc al, 0x47 ; ret
0x080d6b90:	push cs ; mov al, 1 ; dec ebp ; or cl, byte ptr [esi] ; adc al, 0x45 ; ret
0x080d6cb7:	dec edx ; push cs ; and byte ptr [edx + ecx + 0xe], ah ; or al, 0x41 ; ret
0x080d6cc5:	add al, 0x41 ; or eax, dword ptr [ebp + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d6cdc:	dec edx ; push cs ; and byte ptr [edi + 0xa], bl ; push cs ; or al, 0x41 ; ret
0x080d6cea:	add al, 0x41 ; or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x46 ; ret
0x080d6d2c:	dec eax ; push cs ; adc byte ptr [eax + 0xa], cl ; push cs ; or byte ptr [esi - 0x3d], al
0x080d6d35:	push cs ; add al, 0x41 ; or edx, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d6d9c:	push cs ; push eax ; add cl, byte ptr [eax + 0x41140e0a] ; ret
0x080d6db1:	push cs ; add al, 0x43 ; or esp, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d6de3:	inc ebx ; push cs ; adc byte ptr [ebx + 0xa], ah ; push cs ; or al, 0x41 ; ret
0x080d6e01:	dec eax ; push cs ; adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x46 ; ret
0x080d6e0f:	add al, 0x45 ; or edx, dword ptr [ecx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d6ea9:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [edx + 0xa], cl ; ret
0x080d6f41:	dec eax ; push cs ; xor byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d6ffa:	push cs ; rol byte ptr [ecx], 0x52 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d709a:	push cs ; mov al, 0xa ; add dl, byte ptr [edi - 0x3cbeebf2]
0x080d70d0:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa016e03 ; ret
0x080d713b:	inc ecx ; push cs ; xor byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; ret
0x080d7175:	inc esi ; push cs ; adc byte ptr [ebp + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7194:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx - 0x3cf5a5fe], al
0x080d719a:	pop edx ; or al, bl ; push cs ; add al, 0x45 ; or eax, dword ptr [ecx - 0x3d]
0x080d71c9:	and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d71f6:	dec eax ; push cs ; adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ebx - 0x3d], al
0x080d71ff:	push cs ; add al, 0x41 ; or ebx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d723b:	dec eax ; push cs ; and byte ptr [ecx + 0xa], dh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080d7290:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa013e03 ; ret
0x080d729e:	lds ecx, ptr [esp + eax] ; add al, 0x46 ; or eax, dword ptr [edi + 0xa] ; ret
0x080d72af:	add al, 0x46 ; or esp, dword ptr [eax + 0x2e] ; adc byte ptr [edx + ecx - 0x3d], ch
0x080d7327:	push cs ; mov al, byte ptr [0xe0a7201] ; adc al, 0x43 ; ret
0x080d736c:	mov al, byte ptr [0xa5c0201] ; push cs ; adc al, 0x41 ; ret
0x080d7397:	push cs ; mov al, byte ptr [0xe0a4d01] ; adc al, 0x43 ; ret
0x080d742c:	push cs ; add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d747b:	nop ; add dword ptr [edx], eax ; dec eax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d750d:	inc ebx ; push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [esi + 0xa], ah ; ret
0x080d7556:	push cs ; add byte ptr [ecx], 0x7c ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d75e1:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [ebx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d766d:	dec eax ; push cs ; and byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d76ae:	push cs ; xor byte ptr [edx], al ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d772a:	push cs ; xor byte ptr [edx], al ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7771:	dec eax ; push cs ; xor byte ptr [eax + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d77e8:	add al, 0x44 ; or ebp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d781a:	inc ebx ; push cs ; adc byte ptr [edx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7823:	push cs ; add al, 0x49 ; or esi, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d7840:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx - 0x3cf597fe], al
0x080d7847:	or al, bl ; push cs ; add al, 0x47 ; or edx, dword ptr [eax + 0xa] ; ret
0x080d784d:	push eax ; or al, bl ; push cs ; add al, 0x48 ; or eax, dword ptr [ecx - 0x3d]
0x080d788c:	push ebx ; push cs ; and byte ptr [ecx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d78f8:	sbb al, 0x59 ; push cs ; and byte ptr [edi + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d7928:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; ret
0x080d798b:	inc ecx ; push cs ; xor byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], cl ; ret
0x080d7999:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x44 ; or eax, dword ptr [edi - 0x3d]
0x080d79c1:	add al, byte ptr [ebp + 0xe] ; adc byte ptr [esi + ecx + 8], ah ; inc ecx ; ret
0x080d7a16:	inc ecx ; push cs ; and byte ptr [edx + 0xe], bh ; adc byte ptr [ebx + 0xa], ah ; ret
0x080d7a79:	inc ebx ; push cs ; push eax ; je 0xf ; push cs ; adc al, 0x43 ; ret
0x080d7a98:	dec ebx ; push cs ; push eax ; dec eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7af9:	push cs ; push eax ; add bh, ch ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b10:	inc edi ; or eax, dword ptr [edx] ; xlatb ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b79:	dec eax ; push cs ; adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d7bbb:	inc ecx ; push cs ; adc byte ptr [ebx + 0xa570204], al ; ret
0x080d7c45:	dec eax ; push cs ; adc byte ptr [esi + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7c8e:	and byte ptr [ebx + 0xe], cl ; adc byte ptr [ebp + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d7cc2:	push cs ; inc eax ; add dh, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d7d9a:	dec eax ; push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d7e05:	dec eax ; push cs ; and byte ptr [ebx + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080d7e76:	inc ebx ; push cs ; adc byte ptr [edx + ecx + 0xe], dh ; or byte ptr [ecx - 0x3d], al
0x080d7eab:	sbb al, 0x41 ; push cs ; and byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d7ee7:	push cs ; adc byte ptr [edx], al ; pop eax ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7ef1:	add al, 0x43 ; or ecx, dword ptr [eax + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080d7efb:	add al, 0x42 ; or esp, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f50:	dec eax ; push cs ; adc byte ptr [ecx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f7e:	inc ebx ; push cs ; adc byte ptr [edi + 0xa], ch ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f88:	add al, 0x44 ; or ecx, dword ptr [eax + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7fba:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx - 0x3cf5b3fc], al
0x080d7fd2:	inc edi ; push cs ; and byte ptr [esi + 0xe], al ; adc byte ptr [edx + ecx - 0x3d], ah
0x080d8020:	inc esi ; push cs ; adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d8071:	dec eax ; push cs ; and byte ptr [edi + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080d8086:	push cs ; add al, 0x4b ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d80e3:	dec eax ; push cs ; and byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080d8130:	push cs ; and byte ptr [esi + 0xe], al ; adc byte ptr [edx], al ; pushal ; or al, bl
0x080d8199:	dec eax ; push cs ; and byte ptr [esi + 0xa], ah ; push cs ; or al, 0x46 ; ret
0x080d81af:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ebx + 0xe], cl ; or al, 0x46 ; ret
0x080d81fa:	push cs ; or byte ptr [ebx + 0x1030302], al ; or al, bl
0x080d8200:	add dword ptr [edx], ecx ; ret ; push cs ; add al, 0x44 ; or ecx, dword ptr [edi - 0x3d]
0x080d823f:	dec edi ; push cs ; adc byte ptr [eax + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d8249:	add al, 0x48 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d829b:	inc esi ; push cs ; adc byte ptr [ebx + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080d82c2:	inc ebx ; push cs ; adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d82d7:	and byte ptr [esi + 0xe], al ; adc byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d82f4:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx - 0x3cf58dfe], al
0x080d82fa:	jb 0xc ; ret ; push cs ; add al, 0x45 ; or eax, dword ptr [esi - 0x3d]
0x080d8356:	dec eax ; push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d83bb:	push cs ; xor byte ptr [edx], al ; jbe 0xf ; push cs ; adc al, 0x41 ; ret
0x080d8473:	inc ebx ; push cs ; adc byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080d8481:	add al, 0x46 ; or edx, dword ptr [ecx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d84ee:	inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; inc eax ; or al, bl
0x080d84f8:	or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x45 ; or edi, dword ptr [esi - 0x3d]
0x080d8541:	inc ebx ; push cs ; xor byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d857d:	add byte ptr [eax], al ; add ah, al ; add byte ptr cs:[eax], al ; cmp al, 0xc3
0x080d8591:	add byte ptr [eax], al ; add al, bl ; add byte ptr cs:[eax], al ; cmp bl, al
0x080d85a5:	add byte ptr [eax], al ; add ah, ch ; add byte ptr cs:[eax], al ; xor al, 0xc3
0x080d85b9:	add byte ptr [eax], al ; add byte ptr [eax], al ; das ; add byte ptr [eax], al ; xor bl, al
0x080d85cd:	add byte ptr [eax], al ; add byte ptr [edi + ebp], dl ; add byte ptr [eax], al ; sub al, 0xc3
0x080d85e1:	add byte ptr [eax], al ; add byte ptr [eax], ch ; das ; add byte ptr [eax], al ; sub bl, al
0x080d85f5:	add byte ptr [eax], al ; add byte ptr [edi + ebp], bh ; add byte ptr [eax], al ; and al, 0xc3
0x080d8609:	add byte ptr [eax], al ; add byte ptr [eax + 0x2f], dl ; add byte ptr [eax], al ; and bl, al
0x080d861d:	add byte ptr [eax], al ; add byte ptr [edi + ebp], ah ; add byte ptr [ebx + eax*8], bl
0x080d8631:	add byte ptr [eax], al ; add byte ptr [eax + 0x2f], bh ; add byte ptr [eax], al ; sbb bl, al
0x080d8645:	add byte ptr [eax], al ; add byte ptr [edi + ebp - 0x3cec0000], cl
0x080d8659:	add byte ptr [eax], al ; add byte ptr [eax + 0x5000002f], ah ; ret
0x080d866d:	add byte ptr [eax], al ; add byte ptr [edi + ebp - 0x3c840000], dh
0x080d8681:	add byte ptr [eax], al ; add al, cl ; das ; add byte ptr [eax], al ; mov bl, al
0x080d8690:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx - 0x3cf591fe], al
0x080d8696:	outsb dx, byte ptr [esi] ; or al, bl ; push cs ; add al, 0x41 ; or ebx, dword ptr [esi - 0x3d]
0x080d86a5:	add byte ptr [eax], al ; add ah, ch ; das ; add byte ptr [eax], al ; mov ah, 0xc3
0x080d86c9:	inc ebx ; push cs ; xor byte ptr [ecx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080d8714:	push cs ; xor byte ptr [edx], al ; dec ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8755:	inc ebx ; push cs ; inc eax ; pop edx ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080d87a2:	dec eax ; push cs ; inc eax ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d87b8:	add al, 0x43 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x45 ; ret
0x080d8806:	push cs ; and byte ptr [edx], al ; or cl, byte ptr fs:[esi] ; adc al, 0x43 ; ret
0x080d881c:	add al, 0x47 ; or edx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8832:	add al, 0x42 ; or esi, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8849:	dec edx ; or eax, dword ptr [edx] ; imul ecx, dword ptr [edx], 0xc341140e
0x080d88a6:	and byte ptr [ecx + 0xe], cl ; adc byte ptr [esi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d88f4:	dec eax ; push cs ; and byte ptr [ebx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080d8945:	sbb al, 0x41 ; push cs ; and byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d8974:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx - 0x3cf595fe], al
0x080d89ad:	dec ebp ; push cs ; sbb byte ptr [edx], al ; push cs ; adc al, 0x41 ; ret
0x080d89ea:	push cs ; sbb al, 2 ; ror byte ptr [edx], 1 ; push cs ; adc al, 0x41 ; ret
0x080d8a00:	add al, 0x43 ; or eax, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d8aa9:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], dl ; ret
0x080d8b55:	push cs ; and byte ptr [edx], al ; dec ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8bb5:	inc ebx ; push cs ; xor byte ptr [edx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080d8c38:	push cs ; adc byte ptr [edx], al ; les ecx, ptr [edx] ; push cs ; or al, 0x43 ; ret
0x080d8c6f:	inc ebp ; push cs ; xor byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080d8ca1:	dec eax ; push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8cfc:	dec ecx ; push cs ; and byte ptr [edx + ecx + 0xe], dh ; adc al, 0x41 ; ret
0x080d8d12:	add al, 0x46 ; or edx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d8d53:	inc eax ; add eax, dword ptr [ecx + eax + 0x41140e0a] ; ret
0x080d8d7a:	push eax ; dec ebp ; push cs ; inc eax ; add bl, byte ptr [esi + 0xe] ; add al, 0xc3
0x080d8dca:	push cs ; xor byte ptr [edx], al ; retf 0xe0a ; adc al, 0x41 ; ret
0x080d8de0:	add al, 0x41 ; or ebp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8e23:	dec eax ; push cs ; adc byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8e3a:	dec ebp ; push cs ; adc byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8e83:	dec eax ; push cs ; push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8ec2:	dec ebp ; push cs ; push eax ; dec edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8fab:	inc eax ; add edi, dword ptr [esi] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080d8ffe:	push cs ; inc eax ; add bh, byte ptr [edi + 0x43140e0a] ; ret
0x080d90d7:	jo 5 ; mov byte ptr [0x140e0a02], al ; inc ebx ; ret
0x080d910b:	jo 5 ; mov bh, 1 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d9122:	inc ecx ; or eax, dword ptr [edx] ; fisttp dword ptr [edx] ; push cs ; adc al, 0x43 ; ret
0x080d91da:	push cs ; xor byte ptr [edx], al ; loope 0xf ; push cs ; adc al, 0x41 ; ret
0x080d91f0:	add al, 0x47 ; or eax, dword ptr [edx] ; insb byte ptr es:[edi], dx ; push cs ; adc al, 0x44 ; ret
0x080d922f:	push cs ; adc byte ptr [edx], al ; imul ecx, dword ptr [edx], 0xe ; or byte ptr [ebp - 0x3d], al
0x080d9238:	push cs ; add al, 0x4c ; or ecx, dword ptr [edi + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080d9260:	push cs ; adc byte ptr [edx], al ; mov word ptr [edx], cs ; push cs ; or al, 0x45 ; ret
0x080d926f:	dec ecx ; or eax, dword ptr [edx] ; dec edi ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d927d:	add al, 0x4f ; or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x43 ; ret
0x080d92a7:	push cs ; adc byte ptr [edx], al ; je 0xf ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d92b1:	add al, 0x47 ; or esp, dword ptr [edx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d92ba:	push cs ; add al, 0x4b ; or ebp, dword ptr [edi + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d92ee:	push cs ; xor byte ptr [edx], al ; mov ecx, dword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080d9306:	or eax, dword ptr [ebx] ; cmp byte ptr [ecx], al ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d93ac:	push ecx ; push cs ; inc eax ; jno 0xf ; push cs ; adc al, 0x41 ; ret
0x080d93c2:	add al, 0x48 ; or esp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d943f:	xor byte ptr [ebx], al ; add byte ptr [ecx], 0xa ; push cs ; adc al, 0x43 ; ret
0x080d9455:	add al, 0x41 ; or esi, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x45 ; ret
0x080d9493:	inc ebp ; push cs ; adc byte ptr [ebx + 0xa], ch ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d949c:	push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d94d1:	add al, byte ptr [ebx + 0xe] ; or al, 0x83 ; add eax, dword ptr [edx] ; pop ebp ; ret
0x080d9504:	add byte ptr [edi + 0xe], cl ; or byte ptr [ebx - 0x3c9bfdfe], al
0x080d9544:	push cs ; adc byte ptr [edx], al ; test dword ptr [edx], ecx ; push cs ; or al, 0x41 ; ret
0x080d955f:	inc ebp ; push cs ; adc byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d959f:	adc byte ptr [ebx], al ; lahf ; add dword ptr [edx], ecx ; push cs ; or al, 0x41 ; ret
0x080d95cb:	inc ecx ; push cs ; adc byte ptr [ebx + 0xab70204], al ; ret
0x080d95e4:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9602:	inc ecx ; push cs ; and byte ptr [ebp + 0xe], al ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9676:	push cs ; xor byte ptr [edx], al ; cmpsb byte ptr [esi], byte ptr es:[edi] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d96a7:	dec ebp ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080d96cc:	inc ebp ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080d9703:	dec eax ; push cs ; xor byte ptr [ebx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d976e:	push cs ; and byte ptr [edx], al ; test dword ptr [edx], 0xc341140e
0x080d97a1:	dec eax ; push cs ; and byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d9801:	inc ebx ; push cs ; xor byte ptr [eax + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080d9817:	add al, 0x45 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x44 ; ret
0x080d982d:	add al, 0x43 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d9867:	push cs ; adc byte ptr [edx], al ; mov ecx, 0x43080e0a ; ret
0x080d989a:	push cs ; and byte ptr [edx], al ; mov esp, 0x41140e0a ; ret
0x080d9a0a:	inc ebx ; push cs ; adc byte ptr [esi + 0xa], bl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d9a13:	push cs ; add al, 0x4d ; or ecx, dword ptr [esi + ecx + 8] ; inc ecx ; ret
0x080d9a3b:	inc ebx ; push cs ; adc byte ptr [eax + 0xa], dh ; push cs ; or al, 0x41 ; ret
0x080d9a93:	and byte ptr [ebx], al ; mov word ptr [ebx], es ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d9aaa:	inc ecx ; or eax, dword ptr [edx] ; lahf ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d9b02:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx - 0x3cf595fc], al
0x080d9b4e:	push cs ; inc eax ; add bh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d9bb2:	push cs ; push eax ; add bh, byte ptr [esi + 0x43140e0a] ; ret
0x080d9c54:	insb byte ptr es:[edi], dx ; inc esi ; push cs ; jo 0x59 ; push cs ; adc al, 0x41 ; ret
0x080d9d5c:	inc esp ; push cs ; mov al, 0x12 ; dec ebx ; push cs ; adc al, 0x43 ; ret
0x080d9dca:	dec eax ; push cs ; adc byte ptr [edx + ecx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d9dd3:	push cs ; add al, 0x4a ; or edi, dword ptr [ebx + 0xe] ; or byte ptr [esi - 0x3d], al
0x080d9ecf:	add ecx, dword ptr [edx - 0x7d] ; add al, 2 ; jae 0x15 ; or al, 0xc3
0x080d9f5e:	push cs ; and al, 2 ; mov ebx, 0x41140e0a ; ret
0x080d9fca:	or byte ptr [ebx], al ; in eax, dx ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080d9ff6:	loopne 0xa ; add dl, byte ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080da04d:	push eax ; push cs ; jo 0x47 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080da074:	push cs ; jo 5 ; jbe 0xf ; push cs ; adc al, 0x43 ; ret
0x080da121:	inc ecx ; push cs ; or byte ptr [ebx + 0x40e5b02], al ; ret
0x080da12a:	inc ecx ; push cs ; or byte ptr [ebx + 0x40e4602], al ; ret
0x080da13e:	add cl, byte ptr [edx + 0x43c6080e] ; push cs ; add al, 0xc3
0x080da14e:	add dh, byte ptr [eax + 0xe] ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da15e:	add bh, byte ptr [ebx + 0xe] ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da16e:	add cl, byte ptr [eax + 0x43c6080e] ; push cs ; add al, 0xc3
0x080da17e:	add bl, byte ptr [ebx + 0x41c6080e] ; push cs ; add al, 0xc3
0x080da24f:	add ecx, dword ptr [edx - 0x7d] ; add al, 2 ; ja 0x15 ; or al, 0xc3
0x080da2e7:	add dword ptr [esi], ecx ; or byte ptr [ebx + 0x40e4f02], al ; ret
0x080da2f2:	push cs ; or byte ptr [ebx + 0xea40202], al ; add al, 0xc3
0x080da5d0:	inc ecx ; push cs ; or al, 0x83 ; add ecx, dword ptr [esi + 0xe] ; or bl, al
0x080da65a:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx - 0x3c53fdfc], al
0x080da681:	push edi ; push cs ; or byte ptr [ebx + 0x40e4902], al ; ret
0x080da81f:	mov dword ptr [ecx + 0xe], 0xe41c608 ; add al, 0xc3
0x080da8a2:	or byte ptr [ebx + 0x2620302], al ; push cs ; add al, 0xc3
0x080da8ac:	push cs ; or byte ptr [ebx + 0xebc0202], al ; add al, 0xc3
0x080da8b6:	push cs ; or byte ptr [ebx + 0xeba0202], al ; add al, 0xc3
0x080da8c0:	push cs ; or byte ptr [ebx + 0xe9d0202], al ; add al, 0xc3
0x080da8c9:	inc ecx ; push cs ; or byte ptr [ebx + 0x40e6a02], al ; ret
0x080da8e6:	push cs ; or byte ptr [ebx + 0xe6a0202], al ; add al, 0xc3
0x080da8ef:	dec edx ; push cs ; or byte ptr [ebx + 0x40e4702], al ; ret
0x080da8f9:	push cs ; or byte ptr [ebx + 0xecd0202], al ; add al, 0xc3
0x080da903:	push cs ; or byte ptr [ebx + 0xe880202], al ; add al, 0xc3
0x080da90d:	push cs ; or byte ptr [ebx + 0xe9a0202], al ; add al, 0xc3
0x080da917:	push cs ; or byte ptr [ebx + 0xead0202], al ; add al, 0xc3
0x080da921:	push cs ; or byte ptr [ebx + 0xe7d0202], al ; add al, 0xc3
0x080da92b:	push cs ; or byte ptr [ebx + 0xe7c0202], al ; add al, 0xc3
0x080da935:	push cs ; or byte ptr [ebx + 0xe8a0202], al ; add al, 0xc3
0x080da949:	push cs ; or byte ptr [ebx + 0xe870202], al ; add al, 0xc3
0x080da953:	push cs ; or byte ptr [ebx + 0xe8c0202], al ; add al, 0xc3
0x080da971:	push cs ; or byte ptr [ebx + 0xe970202], al ; add al, 0xc3
0x080da97b:	push cs ; or byte ptr [ebx + 0xe9c0202], al ; add al, 0xc3
0x080da985:	push cs ; or byte ptr [ebx + 0xeaa0202], al ; add al, 0xc3
0x080da98f:	push cs ; or byte ptr [ebx + 0xebd0202], al ; add al, 0xc3
0x080da999:	push cs ; or byte ptr [ebx + 0xe8b0202], al ; add al, 0xc3
0x080da9a2:	inc ecx ; push cs ; or byte ptr [ebx + 0x40e7302], al ; ret
0x080da9ab:	inc ecx ; push cs ; or byte ptr [ebx + 0x40e6602], al ; ret
0x080dab3d:	or al, 0x83 ; add eax, dword ptr [ebx] ; int3 ; add dword ptr [esi], ecx ; or bl, al
0x080dafca:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx - 0x3cf581fc], al
0x080dafd8:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x45 ; or eax, dword ptr [ecx - 0x3d]
0x080db0b6:	push cs ; adc al, 0x83 ; add eax, 0x100ea002 ; ret
0x080db0c5:	push esp ; push cs ; adc dh, al ; add ch, byte ptr [edx + 0xe] ; or al, 0xc3
0x080db0da:	push cs ; sbb byte ptr [ebx + 0xeab0206], al ; adc al, 0xc3
0x080db0e7:	mov dword ptr [ecx + 0xe], 0xe41c60c ; or bl, al
0x080db0f1:	push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; pop esi ; push cs ; or bl, al
0x080db0f7:	push cs ; or bl, al ; add ebx, esp ; add cl, byte ptr [esi] ; add al, 0xc3
0x080db12e:	push cs ; xor byte ptr [edx], al ; out 0xa, eax ; push cs ; adc al, 0x41 ; ret
0x080db146:	or eax, dword ptr [ebx] ; add dword ptr cs:[edx], ecx ; push cs ; adc al, 0x4a ; ret
0x080db15c:	add al, 0x41 ; or esp, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080db1dd:	push eax ; push cs ; inc eax ; add dl, byte ptr [esi + ecx + 0x14] ; inc ecx ; ret
0x080db1fb:	xchg byte ptr [edi + eax*4], al ; add eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080db230:	push cs ; adc byte ptr [edx], al ; dec ecx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080db289:	inc ebx ; push cs ; inc eax ; push esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db2a0:	inc ecx ; or eax, dword ptr [edx] ; cli ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db2ee:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080db37c:	push cs ; adc byte ptr [edx], al ; inc ecx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080db3c6:	dec ebp ; push cs ; adc byte ptr [ecx + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080db3d4:	add al, 0x4a ; or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x46 ; ret
0x080db403:	add eax, dword ptr [esi + 0x2058304] ; mov bh, 0xa ; ret
0x080db44e:	push cs ; pushal ; add ch, byte ptr [esi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080db46d:	dec eax ; push cs ; pushal ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db48f:	dec edx ; push cs ; pushal ; or cl, byte ptr [0x4614] ; ret
0x080db4b3:	pushal ; add edi, dword ptr [edx + eax + 0x41140e0a] ; ret
0x080db510:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx - 0x3cf5a4fe], al
0x080db516:	pop ebx ; or al, bl ; push cs ; add al, 0x44 ; or eax, dword ptr [ecx - 0x3d]
0x080db559:	dec ebx ; push cs ; or byte ptr [ebx + 0x40e5802], al ; ret
0x080db565:	inc ecx ; push cs ; or al, 0x83 ; add ebx, dword ptr [eax + 0xe] ; or bl, al
0x080db5e2:	dec eax ; push cs ; adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080db5eb:	push cs ; add al, 0x4a ; or ecx, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080db613:	inc ebx ; push cs ; and byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080db656:	push cs ; rol byte ptr [ecx], 1 ; push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db66d:	inc esp ; or eax, dword ptr [edx] ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db68f:	push cs ; rol byte ptr [ecx], 1 ; pop esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080db82b:	inc ebx ; push cs ; adc byte ptr [ebp + 0xa], bh ; push cs ; or al, 0x43 ; ret
0x080db84b:	dec eax ; push cs ; adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x43 ; ret
0x080db8cd:	or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x42 ; or eax, dword ptr [esi - 0x3d]
0x080db90a:	push cs ; xor byte ptr [edx], al ; push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db91f:	push cs ; add al, 0x43 ; or ecx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080db95d:	inc ecx ; push cs ; or byte ptr [ebx + 0x40e5802], al ; ret
0x080dba10:	sbb al, 0x42 ; push cs ; and byte ptr [ebp + 0xe], cl ; or al, 0x41 ; ret
0x080dba46:	push cs ; sbb al, 2 ; mov dl, 0xa ; push cs ; adc al, 0x41 ; ret
0x080dbab9:	dec esp ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080dbad8:	dec eax ; push cs ; xor byte ptr [ecx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080dbaee:	add al, 0x46 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dbb2e:	inc ecx ; push cs ; and byte ptr [ebp + 0xe], al ; adc byte ptr [esi + 0xa], dl ; ret
0x080dbb3c:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x43 ; or eax, dword ptr [ebx - 0x3d]
0x080dbb6b:	add eax, dword ptr [esi + 0x2058304] ; jg 0x12 ; ret
0x080dbb7b:	add al, 4 ; inc edx ; or eax, dword ptr [ebx] ; rol dword ptr [ecx], 1 ; or al, bl
0x080dbbe9:	dec eax ; push cs ; xor byte ptr [eax + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080dbc5b:	inc edi ; push cs ; adc byte ptr [edx], al ; inc ebx ; push cs ; or al, 0x41 ; ret
0x080dbc70:	mov ah, 0x65 ; add byte ptr [eax], al ; insb byte ptr es:[edi], dx ; sub ecx, edi ; inc ebx
0x080dbc88:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa012103 ; ret
0x080dbc97:	or al, 4 ; add al, 0x43 ; or eax, dword ptr [edx] ; loop 0x12 ; ret
0x080dbd8f:	dec eax ; push cs ; adc byte ptr [esi + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dbdc0:	inc ebx ; push cs ; and byte ptr [ecx + 0xa], dh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dbdf3:	inc ecx ; push cs ; adc byte ptr [ebx + 0xc0e6004], al ; ret
0x080dbe4b:	add al, 0x66 ; push cs ; or al, 0xc6 ; inc ecx ; push cs ; or bl, al
0x080dbe7b:	ret 0xe41 ; or cl, al ; inc ecx ; push cs ; add al, 0xc3
0x080dbe9a:	inc ebx ; push cs ; adc byte ptr [edx + ecx + 0xe], ch ; or byte ptr [ecx - 0x3d], al
0x080dbecc:	add eax, 0x66200e4a ; push cs ; adc al, 0x41 ; ret
0x080dbf3f:	add eax, dword ptr [esi + 0x2058304] ; lahf ; or al, bl
0x080dbf4d:	lds ecx, ptr [esp + eax] ; add al, 0x45 ; or ecx, dword ptr [ebx + 0xa] ; ret
0x080dbfec:	push cs ; mov al, 1 ; push 0x41140e0a ; ret
0x080dc0ae:	push cs ; pushal ; add ebx, dword ptr [edx + eax] ; push cs ; adc al, 0x41 ; ret
0x080dc158:	push cs ; inc eax ; add cl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080dc19b:	push cs ; inc eax ; add ch, byte ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dc251:	inc ebp ; push cs ; push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dc287:	inc ecx ; push cs ; adc byte ptr [ebx + 0xa400204], al ; ret
0x080dc295:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x46 ; or eax, dword ptr [ecx - 0x3d]
0x080dc2f6:	loopne 5 ; add ah, byte ptr [edx + 0xa] ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dc308:	add al, 0x41 ; or edx, dword ptr [eax + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dc3d0:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa015303 ; ret
0x080dc42a:	pushal ; inc ebp ; push cs ; xor byte ptr [ebp + 0xe], ah ; adc al, 0x43 ; ret
0x080dc4b6:	sub al, 0x41 ; push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x45 ; ret
0x080dc53b:	dec eax ; push cs ; and byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080dc583:	and byte ptr [edx + 0xe], cl ; adc byte ptr [edi + 0xe], al ; or al, 0x41 ; ret
0x080dc5e8:	dec eax ; push cs ; adc byte ptr [ebp + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dc5f5:	push cs ; add al, 0x48 ; or eax, dword ptr [ebx + 0xe] ; or al, 0x41 ; ret
0x080dc650:	dec edi ; push cs ; adc byte ptr [esi + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080dc68c:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa076903 ; ret
0x080dc69b:	or al, 4 ; add al, 0x46 ; or eax, dword ptr [edx] ; dec byte ptr [edx] ; ret
0x080dc6e1:	inc ebp ; push cs ; xor byte ptr [eax + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080dc77f:	inc ecx ; push cs ; inc eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc835:	dec esp ; push cs ; and byte ptr [edx], al ; push 0xc343140e
0x080dc899:	dec eax ; push cs ; xor byte ptr [edx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080dc8d8:	inc eax ; dec eax ; push cs ; xor byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dc90b:	add eax, dword ptr [esi + 0x2058304] ; or al, bl
0x080dc947:	dec eax ; push cs ; adc byte ptr [eax + 0xa], dl ; push cs ; or al, 0x43 ; ret
0x080dc954:	push cs ; add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; or al, 0x46 ; ret
0x080dc9b2:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dc9e7:	add eax, dword ptr [esi + 0x2058304] ; dec esp ; or al, bl
0x080dca18:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa023803 ; ret
0x080dca61:	sbb al, 0x45 ; push cs ; and byte ptr [ebx + 0xb], cl ; add bl, byte ptr [ebp - 0x3d]
0x080dcaae:	push cs ; push eax ; add bh, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dcac6:	or eax, dword ptr [ebx] ; lahf ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080dcaff:	push cs ; push eax ; add al, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080dcb37:	inc ebp ; push cs ; push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dcb4d:	add al, 0x41 ; or ecx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dcbb6:	push cs ; pushal ; add dh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dcbf2:	inc ebp ; push cs ; pushal ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dcc86:	push cs ; push eax ; add bh, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dccad:	push cs ; push eax ; add cl, byte ptr [ebp + 0x41140e0a] ; ret
0x080dcce6:	push cs ; push eax ; add cl, byte ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dcd35:	dec eax ; or eax, dword ptr [edx] ; jnp 0xf ; push cs ; adc al, 0x43 ; ret
0x080dcda2:	push cs ; push eax ; add dh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dce7a:	push cs ; push eax ; add al, byte ptr [eax + 0x41140e0a] ; ret
0x080dceb2:	dec ecx ; push cs ; push eax ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dcf26:	push cs ; pushal ; add bh, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dd212:	push cs ; jo 5 ; mov byte ptr [edx], cl ; push cs ; adc al, 0x41 ; ret
0x080dd252:	inc ebp ; push cs ; jo 0x47 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dd432:	push cs ; pushal ; add bh, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080dd7cb:	pushal ; add edx, dword ptr [edx + 0x140e0a01] ; inc ecx ; ret
0x080dd7e1:	add al, 0x41 ; or edx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080dd846:	push cs ; pushal ; add bl, byte ptr [eax + 0x41140e0a] ; ret
0x080dd898:	dec eax ; push cs ; inc eax ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080dd8ad:	push cs ; add al, 0x44 ; or ebx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080dd8ec:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x4b ; or ecx, dword ptr [ecx - 0x3d]
0x080dd99d:	push cs ; jo 5 ; bound ecx, qword ptr [edx] ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dd9b9:	push edx ; push cs ; jo 0x51 ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dd9ef:	push edx ; push cs ; jo 0x52 ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dda40:	dec eax ; push cs ; and byte ptr [edi + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dda51:	push cs ; add al, 0x47 ; or ebx, dword ptr [esi + ecx + 0x10] ; inc ecx ; ret
0x080dda8a:	push cs ; pushal ; add dl, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080ddb22:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080ddb66:	inc ebx ; push cs ; adc byte ptr [eax + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080ddb79:	dec eax ; push cs ; adc byte ptr [edx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080ddbf5:	dec esi ; push cs ; xor byte ptr [edi + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080ddc0b:	add al, 0x44 ; or ebx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080ddc4e:	dec eax ; push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x45 ; ret
0x080ddcf3:	dec eax ; push cs ; xor byte ptr [edi + 0xa], cl ; push cs ; adc al, 0x43 ; ret
0x080ddd2a:	dec eax ; push cs ; xor byte ptr [ebx + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080ddd58:	dec eax ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080ddd9f:	sbb al, 0x42 ; push cs ; and byte ptr [eax + 0xe], dl ; adc byte ptr [ebp - 0x3d], al
0x080dde02:	push cs ; mov al, byte ptr [0xe0a4801] ; adc al, 0x41 ; ret
0x080dde71:	push cs ; mov al, byte ptr [0xe0a4601] ; adc al, 0x41 ; ret
0x080dde87:	add al, 0x42 ; or edx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080de016:	push cs ; sbb al, 2 ; xchg eax, edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de02a:	lds ecx, ptr [esi] ; add al, 0x48 ; or esp, dword ptr [ebx + 0xe] ; add al, 0xc3
0x080de053:	add eax, dword ptr [esi + 0x2058304] ; pop ecx ; or al, bl
0x080de061:	lds ecx, ptr [esp + eax] ; add al, 0x46 ; or ebp, dword ptr [ecx + 0xa] ; ret
0x080de0bc:	push cs ; xor byte ptr [edx], al ; popal ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de107:	add eax, dword ptr [esi + 0x2058304] ; ror byte ptr [edx], 1 ; ret
0x080de116:	or al, 4 ; add al, 0x42 ; or eax, dword ptr [edx] ; inc ebx ; or al, bl
0x080de1b7:	add al, 4 ; dec ecx ; or eax, dword ptr [ebx] ; dec ecx ; add ecx, dword ptr [edx] ; ret
0x080de219:	inc edx ; push cs ; and byte ptr [edx + 0xe], dl ; adc byte ptr [ebp + 0xa], al ; ret
0x080de24c:	add byte ptr [edi + 0xe], al ; or byte ptr [ebx - 0x3cf584fe], al
0x080de2ec:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx - 0x3cf581fe], al
0x080de2f2:	jle 0xc ; ret ; push cs ; add al, 0x41 ; or ebx, dword ptr [ecx - 0x3d]
0x080de327:	rol byte ptr [edx], 2 ; fmul qword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080de33c:	push cs ; add al, 0x44 ; or esi, dword ptr [ebx + 0xe] ; adc al, 0x41 ; ret
0x080de364:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx - 0x3cf5b2fe], al
0x080de36a:	dec ebp ; or al, bl ; push cs ; add al, 0x4a ; or edx, dword ptr [edx - 0x3d]
0x080de39a:	nop ; add dword ptr [edx], eax ; inc ecx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080de3ab:	push cs ; add al, 0x46 ; or esi, dword ptr [eax + 0xe] ; adc byte ptr [ecx - 0x3d], al
0x080de438:	rol byte ptr [edx], 1 ; add cl, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de4b0:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa013603 ; ret
0x080de4f5:	dec eax ; push cs ; adc byte ptr [ebx + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080de4fe:	push cs ; add al, 0x46 ; or ecx, dword ptr [edi + 0xe] ; or byte ptr [esi - 0x3d], al
0x080de555:	dec eax ; push cs ; and byte ptr [esi + 0xa], dh ; push cs ; adc al, 0x43 ; ret
0x080de56a:	push cs ; add al, 0x45 ; or esp, dword ptr [edi + 0xe] ; adc al, 0x46 ; ret
0x080de6df:	inc esi ; push cs ; adc byte ptr [ebx + 0xa480204], al ; ret
0x080de72b:	cmp byte ptr [ebx], al ; dec esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080de741:	add al, 0x42 ; or esp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080de785:	sub al, 0x48 ; push cs ; sbb al, 0x71 ; push cs ; or al, 0x43 ; ret
0x080de7c0:	dec eax ; dec eax ; push cs ; xor byte ptr [ebp + 0xe], dh ; or al, 0x43 ; ret
0x080de7e5:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add eax, dword ptr [edx] ; dec ecx ; ret
0x080de819:	inc ebx ; push cs ; and byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080de84d:	dec ebx ; push cs ; and byte ptr [edx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080de891:	or al, 4 ; add al, 0x4c ; or eax, dword ptr [edx] ; lodsd eax, dword ptr [esi] ; or al, bl
0x080de8c4:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa018203 ; ret
0x080de8f4:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa075e03 ; ret
0x080de923:	add eax, dword ptr [esi + 0x2058304] ; in eax, 0xa ; ret
0x080de9bc:	push cs ; loopne 0x44 ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dea01:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xa], dl ; ret
0x080dea29:	push cs ; xor byte ptr [esi + 0xe], cl ; adc byte ptr [edx], al ; dec edx ; or al, bl
0x080dea47:	inc ecx ; push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [ebp + 0xa], al ; ret
0x080dea88:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa016903 ; ret
0x080deab1:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add ebp, dword ptr [esi + 0xa] ; ret
0x080deabb:	or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x47 ; or ecx, dword ptr [edx - 0x3d]
0x080deae8:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa060903 ; ret
0x080deaf8:	add al, 4 ; dec eax ; or eax, dword ptr [ebx] ; lahf ; add dword ptr [edx], ecx ; ret
0x080deb06:	lds ecx, ptr [esp + eax] ; add al, 0x46 ; or eax, dword ptr [esi + 0xa] ; ret
0x080deb6b:	push cs ; adc byte ptr [edx], al ; js 0xf ; push cs ; or byte ptr [ecx - 0x3d], al
0x080debfa:	push cs ; rol byte ptr [edx], 0x54 ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080decf7:	rol byte ptr [edx], 2 ; mov ah, 0xa ; push cs ; adc al, 0x41 ; ret
0x080ded41:	push cs ; rol byte ptr [edx], 0x52 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080def99:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; or al, 0x41 ; ret
0x080defdb:	inc esp ; push cs ; and byte ptr [eax + 0xe], dl ; adc byte ptr [esi + 0xa], ah ; ret
0x080df032:	push cs ; sub byte ptr [edx], al ; retf ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080df047:	push cs ; add al, 0x41 ; or ecx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080df11a:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx - 0x3cb8fdfc], al
0x080df155:	inc ebx ; push cs ; and byte ptr [edi + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080df16b:	add al, 0x46 ; or ecx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080df1cd:	or al, 4 ; add al, 0x49 ; or eax, dword ptr [edx] ; mov byte ptr [edx], cl ; ret
0x080df1ff:	add eax, dword ptr [esi + 0x2058304] ; loopne 0x12 ; ret
0x080df20d:	lds ecx, ptr [esp + eax] ; add al, 0x47 ; or eax, dword ptr [edx] ; inc edx ; ret
0x080df26c:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa016203 ; ret
0x080df27a:	lds ecx, ptr [esp + eax] ; add al, 0x47 ; or edx, dword ptr [ecx + 0xa] ; ret
0x080df289:	or al, 4 ; add al, 0x44 ; or eax, dword ptr [edx] ; insd dword ptr es:[edi], dx ; or al, bl
0x080df337:	nop ; add dword ptr [edx], 0x46 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080df34d:	add al, 0x47 ; or eax, dword ptr [edx] ; dec esi ; push cs ; adc al, 0x46 ; ret
0x080df392:	add eax, dword ptr [esi + 0xe] ; adc byte ptr [ebx - 0x3cb6fdfc], al
0x080df3ea:	inc ebp ; push cs ; and byte ptr [edx + ecx + 0xe], dh ; adc al, 0x41 ; ret
0x080df40c:	dec eax ; push cs ; and byte ptr [eax + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080df442:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx - 0x3cadfdfc], al
0x080df49b:	inc ebp ; push cs ; and byte ptr [eax + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080df51f:	dec eax ; push cs ; jo 0x4c ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080df531:	add al, 0x49 ; or edi, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080df572:	add dword ptr [0x102e6f02], 0x5d ; or al, bl
0x080df580:	lds ecx, ptr [esp + eax] ; add al, 0x48 ; or edi, dword ptr [edi + 0xa] ; ret
0x080df5c7:	dec eax ; push cs ; adc byte ptr [eax + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080df5d5:	add al, 0x46 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x46 ; ret
0x080df60f:	add eax, dword ptr [esi + 0x2058304] ; jl 0x12 ; ret
0x080df620:	add al, 0x48 ; or edx, dword ptr [ebp + 0x2e] ; adc byte ptr [eax + 0xa], ch ; ret
0x080df62e:	lds ecx, ptr [esp + eax] ; add al, 0x48 ; or eax, dword ptr [esi + 0xa] ; ret
0x080df663:	add eax, dword ptr [esi + 0x2058304] ; ja 0x12 ; ret
0x080df671:	lds ecx, ptr [esp + eax] ; add al, 0x4b ; or edx, dword ptr [eax + 0xa] ; ret
0x080df684:	or eax, dword ptr [edx] ; mov eax, 0xab02102e ; or al, bl
0x080df6e5:	dec eax ; push cs ; xor byte ptr [esi + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080df70a:	dec esp ; push cs ; xor byte ptr [ecx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080df791:	inc esi ; push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x43 ; ret
0x080df7b5:	inc eax ; inc esi ; push cs ; xor byte ptr [ebp + 0xe], al ; adc al, 0x43 ; ret
0x080df801:	inc esi ; push cs ; pushal ; dec edx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080df825:	jo 0x48 ; push cs ; pushal ; inc ebp ; push cs ; adc al, 0x43 ; ret
0x080df862:	push cs ; inc eax ; add cl, byte ptr [ebp + 0x41140e0a] ; ret
0x080df948:	add al, 0x47 ; or ecx, dword ptr [ecx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080df986:	push cs ; xor byte ptr [edx], al ; push eax ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080df9ba:	push esi ; push cs ; xor byte ptr [edi + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080df9fb:	dec edi ; push cs ; adc byte ptr [edi + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfa2f:	and byte ptr [esi + 0xe], al ; adc byte ptr [ecx + 0xe], bl ; or byte ptr [ebx - 0x3d], al
0x080dfa62:	and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + ecx + 0xc], dl ; inc ecx ; ret
0x080dfab6:	dec eax ; push cs ; xor byte ptr [edx + ecx + 0xe], bl ; adc al, 0x41 ; ret
0x080dfacb:	push cs ; add al, 0x43 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080dfafa:	inc ebx ; push cs ; adc byte ptr [ecx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfb77:	inc ebx ; push cs ; adc byte ptr [esi + 0xa], dh ; push cs ; or al, 0x41 ; ret
0x080dfbaf:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], ah ; or byte ptr [ecx - 0x3d], al
0x080dfbdc:	push cs ; adc byte ptr [edx], al ; insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080dfc14:	dec eax ; push cs ; adc byte ptr [eax + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dfc21:	push cs ; add al, 0x4b ; or ecx, dword ptr [edx + 0xe] ; or al, 0x41 ; ret
0x080dfc4c:	push cs ; adc byte ptr [edx], al ; dec esp ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080dfc7b:	dec eax ; push cs ; adc byte ptr [ebp + 0xa], bh ; push cs ; or al, 0x41 ; ret
0x080dfc91:	and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xe], dl ; or al, 0x41 ; ret
0x080dfccf:	dec eax ; push cs ; xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080dfd1a:	inc esi ; push cs ; adc byte ptr [ebx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfd3e:	inc ebx ; push cs ; adc byte ptr [ecx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfd6e:	jb 0xc ; ret ; push cs ; add al, 0x45 ; or ecx, dword ptr [ecx - 0x3d]
0x080dfda5:	add al, 0x49 ; or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x41 ; ret
0x080dfdea:	inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; dec ecx ; or al, bl
0x080dfe95:	push ebx ; push cs ; and byte ptr [ecx + 0xa], bl ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dfea7:	add al, 0x45 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dfeb8:	push cs ; add al, 0x45 ; or eax, dword ptr [edi + 0xe] ; adc byte ptr [ebx - 0x3d], al
0x080dff0d:	dec esp ; push cs ; and byte ptr [esi + 0xa], dl ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dff1f:	add al, 0x44 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e000f:	inc eax ; add ebp, dword ptr [edi] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080e0128:	dec eax ; push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0168:	dec eax ; push cs ; inc eax ; or cl, byte ptr [0x4114] ; ret
0x080e0289:	or byte ptr [ebx], al ; push esi ; add cl, byte ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e029f:	add al, 0x41 ; or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e02fe:	pushal ; add eax, dword ptr [edx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e031d:	dec esp ; push cs ; pushal ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0334:	inc ecx ; or eax, dword ptr [edx] ; out dx, eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e038e:	dec esp ; push cs ; and byte ptr [ecx + 0xa], dl ; push cs ; adc al, 0x43 ; ret
0x080e03a3:	push cs ; add al, 0x45 ; or esp, dword ptr [ecx + 0xe] ; adc al, 0x43 ; ret
0x080e03f4:	push cs ; and byte ptr [edx], al ; pop edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e042f:	add dword ptr [esp + eax*2], 0xe ; or al, 0xc6 ; push cs ; or bl, al
0x080e0440:	add dword ptr [ecx + ecx*2], 0xe ; or al, 0xc6 ; push cs ; or bl, al
0x080e0460:	push cs ; adc byte ptr [ebx + 0xe7f0204], al ; or al, 0xc3
0x080e0471:	add ecx, dword ptr [esi] ; adc byte ptr [esi + 0xc0e4204], al ; ret
0x080e048b:	push cs ; adc byte ptr [esi + 0xe560204], al ; or al, 0xc3
0x080e049c:	add ecx, dword ptr [esi] ; adc byte ptr [esi + 0xc0e7504], al ; ret
0x080e04ad:	add ecx, dword ptr [esi] ; adc byte ptr [esi + 0xc0e7104], al ; ret
0x080e04be:	add ecx, dword ptr [esi] ; adc byte ptr [esi + 0xc0e7304], al ; ret
0x080e04cf:	add ecx, dword ptr [esi] ; adc byte ptr [esi + 0xc0e4d04], al ; ret
0x080e04e0:	add ecx, dword ptr [esi] ; adc byte ptr [esi + 0xc0e4a04], al ; ret
0x080e0535:	add ecx, dword ptr [esi] ; adc byte ptr [esi + 0xc0e4f04], al ; ret
0x080e06e3:	add dword ptr [edi + eax*2], 0xe ; or al, 0xc6 ; push cs ; or bl, al
0x080e06fd:	add dword ptr [ecx*2 + 0xec60c0e], 8 ; ret
0x080e0726:	push cs ; adc byte ptr [ebx + 0xe840204], al ; or al, 0xc3
0x080e073f:	add ecx, dword ptr [esi] ; adc byte ptr [esi + 0xc0e7204], al ; ret
0x080e08e6:	inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; jp 0x12 ; ret
0x080e0991:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add eax, dword ptr [edx] ; pop esp ; ret
0x080e09d6:	inc ebp ; push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e09e8:	add al, 0x4a ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e0a72:	pushal ; inc ebp ; or ebx, dword ptr [eax + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e0aa6:	inc ebp ; push cs ; push eax ; imul ecx, dword ptr [edx], 0xc341100e
0x080e0b3b:	push cs ; loopne 5 ; insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e0b51:	add al, 0x44 ; or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e0bfd:	inc ecx ; push cs ; or byte ptr [ebx + 0xa6e0202], al ; ret
0x080e0c04:	or al, bl ; push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0c0b:	or al, bl ; push cs ; add al, 0x41 ; or eax, dword ptr [esi + 0xa] ; ret
0x080e0c11:	inc esi ; or al, bl ; push cs ; add al, 0x41 ; or eax, dword ptr [esi - 0x3d]
0x080e0c88:	loopne 4 ; add dh, byte ptr [ebx + 0x43140e0a] ; ret
0x080e0d49:	inc ecx ; push cs ; or byte ptr [ebx + 0xa4c0202], al ; ret
0x080e0d50:	or al, bl ; push cs ; add al, 0x43 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0d57:	or al, bl ; push cs ; add al, 0x45 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0dd7:	sub al, 3 ; inc byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0ded:	add al, 0x43 ; or ebx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e0e28:	and byte ptr [ebp + 0xe], bl ; adc byte ptr [eax + 0xe], bl ; or al, 0x41 ; ret
0x080e0e84:	dec esi ; push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e0eb2:	push ebx ; push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080e0ef1:	inc ebx ; push cs ; and byte ptr [esi + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080e0f07:	add al, 0x43 ; or eax, dword ptr [edx] ; push ebp ; push cs ; adc al, 0x41 ; ret
0x080e0f47:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e0f94:	dec eax ; push cs ; xor byte ptr [edx + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080e0fe4:	dec esp ; push cs ; xor byte ptr [edx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080e1064:	sbb al, 0x45 ; push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ebp - 0x3d], al
0x080e10c6:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx - 0x3cf5b6fc], al
0x080e1109:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [edx], al ; pop ebx ; or al, bl
0x080e1153:	inc ebx ; push cs ; adc byte ptr [ebx + 0xa690204], al ; ret
0x080e11c0:	dec eax ; push cs ; and byte ptr [edi + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e11e7:	dec eax ; push cs ; and byte ptr [edx + 0xa], ch ; push cs ; adc byte ptr [ebx - 0x3d], al
0x080e1236:	push cs ; loopne 4 ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e1516:	push eax ; add esp, dword ptr [esi + 1] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e152b:	push cs ; add al, 0x41 ; or ecx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e158b:	push cs ; and byte ptr [edx], al ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e159d:	or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x46 ; or eax, dword ptr [edx] ; ret
0x080e163b:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], ch ; ret
0x080e169d:	inc ebx ; push cs ; jo 0x47 ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080e16aa:	push cs ; add al, 0x45 ; or ebx, dword ptr [edx + 0xe] ; or al, 0x43 ; ret
0x080e16d1:	add dl, byte ptr [ecx + 0xe] ; adc byte ptr [eax + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e16fa:	inc ebx ; push cs ; adc byte ptr [ebx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e1704:	add al, 0x48 ; or ecx, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e1733:	push ebx ; push cs ; adc byte ptr [edx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e173d:	add al, 0x48 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e1772:	push cs ; and byte ptr [edx], al ; xchg eax, ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e17aa:	sbb al, 0x42 ; push cs ; and byte ptr [ebp + 0xe], bh ; or byte ptr [ecx - 0x3d], al
0x080e17f2:	dec eax ; push cs ; xor byte ptr [edx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e1807:	push cs ; add al, 0x49 ; or edx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e18b0:	add al, 0x47 ; or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x43 ; ret
0x080e1961:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add ebp, dword ptr [edx + 0xa] ; ret
0x080e1976:	or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x4e ; or eax, dword ptr [ebx - 0x3d]
0x080e19b5:	add byte ptr [eax], al ; add byte ptr [eax + eax], bl ; add byte ptr [eax], al ; add bl, al
0x080e19c6:	add byte ptr [eax], al ; add byte ptr [edx + 9], dh ; add eax, dword ptr [edx] ; push ecx ; ret
0x080e19d5:	add byte ptr [eax], al ; add byte ptr [eax + eax], bl ; add byte ptr [eax], al ; and bl, al
0x080e19f5:	add byte ptr [eax], al ; add byte ptr [eax], bh ; add byte ptr [eax], al ; add byte ptr [eax - 0x3d], al
0x080e1a22:	dec eax ; push cs ; inc eax ; pop ebx ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080e1a31:	inc esi ; or eax, dword ptr [eax] ; and byte ptr [eax], al ; add byte ptr [eax], al ; jl 0xffffffcc
0x080e1a81:	add byte ptr [eax], al ; add byte ptr [eax], ch ; add byte ptr [eax], al ; int3 ; ret
0x080e1ac1:	dec eax ; push cs ; and byte ptr [esi + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e1ad6:	push cs ; add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080e1b05:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add eax, dword ptr [edx] ; inc ecx ; ret
0x080e1bbc:	inc ebx ; push cs ; adc al, 0x83 ; add eax, 0xc30a4e02
0x080e1bcf:	inc ecx ; lds ecx, ptr [esi] ; add al, 0x47 ; or ecx, dword ptr [ecx + 0xa] ; ret
0x080e1be2:	inc ecx ; lds ecx, ptr [esi] ; add al, 0x44 ; or esi, dword ptr [edi + 0xa] ; ret
0x080e1c27:	add al, 4 ; inc esp ; or ebp, dword ptr [eax + 0xc] ; add al, 4 ; ret
0x080e1c9f:	dec eax ; push cs ; and byte ptr [esi + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e1d48:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa01f703 ; ret
0x080e1d57:	or al, 4 ; add al, 0x48 ; or eax, dword ptr [edx] ; out 0xa, al ; ret
0x080e1d88:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa01e303 ; ret
0x080e1d97:	or al, 4 ; add al, 0x46 ; or eax, dword ptr [edx] ; push eax ; or al, bl
0x080e1dc7:	add eax, dword ptr [esi + 0x2058304] ; sti ; or al, bl
0x080e1e10:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ecx + 0xe], bl ; adc al, 0x41 ; ret
0x080e1e88:	inc eax ; dec eax ; push cs ; xor byte ptr [edi + 0xe], al ; adc al, 0x43 ; ret
0x080e1ed3:	push cs ; xor byte ptr [edx], al ; je 0xf ; push cs ; adc al, 0x41 ; ret
0x080e1f0e:	push cs ; xor byte ptr [edx], al ; les ecx, ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e2059:	dec eax ; push cs ; inc eax ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e20c2:	push edi ; push cs ; xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x46 ; ret
0x080e20d8:	add al, 0x41 ; or edx, dword ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e20f7:	dec eax ; push cs ; xor byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e219f:	push cs ; rol byte ptr [esp + ebx*2], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e21d2:	push cs ; rol byte ptr [eax + ecx*2], 1 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e2228:	push cs ; rol byte ptr [esi + eax*2], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e2436:	push cs ; inc eax ; add al, byte ptr [eax + 0x41140e0a] ; ret
0x080e249f:	push cs ; xor byte ptr [edx], al ; dec ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e24b6:	inc ecx ; or eax, dword ptr [edx] ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e250f:	jo 5 ; cmp eax, dword ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e2561:	inc ebp ; push cs ; jo 0x54 ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080e2634:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa013c03 ; ret
0x080e273d:	dec ebp ; push cs ; xor byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e2797:	inc ecx ; push cs ; adc byte ptr [ebx + 0xa770204], al ; ret
0x080e27af:	inc ecx ; push cs ; and byte ptr [ecx + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; ret
0x080e27e6:	inc ebp ; push cs ; adc byte ptr [ebp + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e285e:	dec eax ; push cs ; adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080e28c0:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa042003 ; ret
0x080e28f0:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa032f03 ; ret
0x080e2900:	add al, 4 ; dec eax ; or eax, dword ptr [ebx] ; loope 9 ; or al, bl
0x080e29fb:	inc ebp ; push cs ; and byte ptr [ebx + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e2a68:	push cs ; loopne 4 ; imul ecx, dword ptr [edx], 0xe ; or al, 0x43 ; ret
0x080e2a75:	push cs ; add al, 0x45 ; or edx, dword ptr [esi + ecx + 0xc] ; inc ebx ; ret
0x080e2aae:	cmp al, 0x5b ; push cs ; inc eax ; push ecx ; push cs ; adc al, 0x41 ; ret
0x080e2ae4:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa011403 ; ret
0x080e2b3c:	dec eax ; push cs ; jo 0x49 ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e2b4e:	add al, 0x48 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [eax - 0x3d], cl
0x080e2c10:	dec eax ; push cs ; adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x46 ; ret
0x080e2c1d:	push cs ; add al, 0x45 ; or eax, dword ptr [ebx + 0xe] ; or al, 0x43 ; ret
0x080e2c42:	inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; inc esi ; or al, bl
0x080e2c78:	dec eax ; push cs ; adc byte ptr [edi + 0xa], cl ; push cs ; or al, 0x43 ; ret
0x080e2cdd:	xor byte ptr [eax + 0xb], cl ; outsb dx, byte ptr [esi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e2d59:	push cs ; and byte ptr [edx], al ; inc edx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080e2d67:	add al, 0x42 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x43 ; ret
0x080e2dd5:	push eax ; dec eax ; or ebx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e2e58:	push cs ; push eax ; dec eax ; push cs ; inc eax ; dec edx ; push cs ; add al, 0xc3
0x080e2ef6:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx - 0x3cf597fc], al
0x080e2f04:	or byte ptr [edi - 0x39], al ; push cs ; add al, 0x45 ; or ebp, dword ptr [edx - 0x3d]
0x080e2f3d:	inc ebx ; push cs ; and byte ptr [esi + 0xa], bh ; push cs ; adc al, 0x41 ; ret
0x080e2fc6:	push cs ; mov al, byte ptr [0xe0a6420] ; adc byte ptr [ebx - 0x3d], al
0x080e2fd8:	add al, 0x45 ; or eax, dword ptr [esi + 0xa] ; push cs ; adc byte ptr [eax - 0x3d], cl
0x080e300a:	push cs ; mov al, byte ptr [0xe0a4b20] ; adc byte ptr [ecx - 0x3d], al
0x080e304f:	dec eax ; push cs ; adc byte ptr [ebp + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e30a2:	dec eax ; push cs ; adc byte ptr [edx + ecx + 0xe], dl ; or al, 0x41 ; ret
0x080e3103:	push cs ; xor byte ptr [edx], al ; or cl, byte ptr fs:[esi] ; adc al, 0x43 ; ret
0x080e317f:	inc ebp ; push cs ; adc byte ptr [edx], al ; push ebx ; push cs ; or al, 0x41 ; ret
0x080e31bf:	add eax, dword ptr [esi + 0x2058304] ; into ; or al, bl
0x080e3229:	push ebx ; push cs ; xor byte ptr [esi + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e3268:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa030903 ; ret
0x080e32aa:	dec edx ; push cs ; and byte ptr [ebx + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080e32c0:	add al, 0x45 ; or esi, dword ptr [edx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e330f:	add eax, dword ptr [esi + 0x2058304] ; dec eax ; or al, bl
0x080e334f:	dec ebp ; push cs ; adc byte ptr [edi + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e3359:	add al, 0x4c ; or ecx, dword ptr [edx + ecx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e341e:	push cs ; sbb al, 2 ; scasd eax, dword ptr es:[edi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3434:	add al, 0x44 ; or ebp, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e344a:	add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e3475:	push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e34a8:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa010903 ; ret
0x080e34b8:	add al, 4 ; dec ebx ; or eax, dword ptr [ebx] ; sbb eax, dword ptr [edx] ; or al, bl
0x080e3507:	inc ebx ; push cs ; and byte ptr [esi + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080e354f:	inc ebp ; push cs ; and byte ptr [ebp + 0xe], al ; adc byte ptr [ecx + 0xa], al ; ret
0x080e3593:	inc ebp ; push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3796:	sub al, 0x42 ; push cs ; xor byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e3834:	dec eax ; push cs ; and byte ptr [esi + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080e3841:	push cs ; add al, 0x42 ; or eax, dword ptr [ebx + 0xe] ; or al, 0x43 ; ret
0x080e387c:	inc eax ; inc ebp ; push cs ; sub al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e38b8:	xor byte ptr [ebp + 0xe], al ; sbb al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e39e2:	inc ebx ; push cs ; adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ebx - 0x3d], al
0x080e39fa:	and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xe], cl ; or byte ptr [ebx - 0x3d], al
0x080e3a49:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add esi, dword ptr [ebx + 0xa] ; ret
0x080e3a53:	or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x4a ; or eax, dword ptr [ebx - 0x3d]
0x080e3aa9:	dec eax ; push cs ; push eax ; push 0x41140e0a ; ret
0x080e3abf:	add al, 0x41 ; or ecx, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e3ad7:	or eax, dword ptr [ebx] ; adc al, byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3aee:	inc edx ; or eax, dword ptr [edx] ; xlatb ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3b4d:	push cs ; adc al, 0x69 ; push cs ; adc byte ptr [ecx + 0xe], al ; or al, 0xc3
0x080e3b5b:	push cs ; add al, 0xc7 ; inc ecx ; or eax, dword ptr [ebp + 0xe] ; or al, 0xc3
0x080e3b91:	push cs ; adc al, 0x63 ; push cs ; adc byte ptr [ecx + 0xe], al ; or al, 0xc3
0x080e3bcb:	add eax, dword ptr [esi + 0x2058304] ; mov dh, 0xa ; ret
0x080e3bda:	or al, 4 ; add al, 0x46 ; or eax, dword ptr [edx] ; outsb dx, byte ptr [esi] ; or al, bl
0x080e3c14:	add dword ptr [0x5704854a], 0xe ; adc bl, al
0x080e3c7e:	dec ebx ; push cs ; and byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e3ced:	dec eax ; push cs ; inc eax ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3e7a:	dec eax ; push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e3ee3:	dec esp ; push cs ; inc eax ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e4007:	ret ; or al, 4 ; add al, 0x46 ; or edx, dword ptr [edx + 0xa] ; ret
0x080e4060:	add eax, dword ptr [ebp + 0x74058304] ; push cs ; adc bl, al
0x080e4098:	inc ecx ; push cs ; adc al, 0x83 ; add eax, 0xc30a8002
0x080e40ab:	inc ecx ; lds ecx, ptr [esi] ; add al, 0x49 ; or ecx, dword ptr [edx + 0xa] ; ret
0x080e40be:	inc ecx ; lds ecx, ptr [esi] ; add al, 0x46 ; or esi, dword ptr [edx + ecx - 0x3d]
0x080e40fe:	push cs ; xor byte ptr [edx], al ; jge 0xf ; push cs ; adc al, 0x41 ; ret
0x080e4114:	add al, 0x43 ; or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e412a:	add al, 0x48 ; or ebp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e413f:	push cs ; add al, 0x45 ; or edx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080e417e:	push cs ; cmp byte ptr [edx], al ; imul ecx, dword ptr [edx], 0xe ; adc al, 0x41 ; ret
0x080e4196:	or eax, dword ptr [ebx] ; pop es ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e4222:	inc ecx ; push cs ; rol byte ptr [ecx], 1 ; dec ebx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4264:	add dword ptr [edx + eax], 0x50 ; and byte ptr cs:[edx + 0xa], ah ; ret
0x080e4270:	lds ecx, ptr [esp + eax] ; add al, 0x47 ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080e42a7:	add eax, 0x202e4d02 ; add bh, byte ptr [eax + 0xa] ; ret
0x080e42b5:	lds ecx, ptr [esp + eax] ; add al, 0x47 ; or esp, dword ptr [edx + 0xa] ; ret
0x080e42e2:	inc ebp ; push cs ; adc byte ptr [eax + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e42fb:	dec eax ; push cs ; adc byte ptr [ebp + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4366:	dec eax ; push cs ; and byte ptr [esi + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e444a:	and byte ptr [ebp + 0xe], al ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080e4490:	inc esi ; push cs ; adc al, 0x4b ; push cs ; adc byte ptr [edi + 0xa], al ; ret
0x080e4590:	add al, 0x47 ; or ecx, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e45a4:	add al, 0x47 ; or eax, dword ptr [esi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e45ae:	add al, 0x47 ; or eax, dword ptr [esi + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e45ce:	add al, 0x48 ; or edx, dword ptr [edx + ecx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e4635:	sub al, 0x41 ; push cs ; xor byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e46a1:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], al ; ret
0x080e4707:	dec eax ; push cs ; adc byte ptr [ecx + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080e4715:	add al, 0x48 ; or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x43 ; ret
0x080e475b:	and byte ptr [ebx], al ; lcall -0x3cba:0x140e0a02
0x080e47e2:	inc ebp ; push cs ; xor byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080e483b:	sub byte ptr [ebx], al ; sbb al, byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e4850:	push cs ; add al, 0x41 ; or edx, dword ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x080e48db:	rol byte ptr [ecx], 1 ; add ah, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080e48f1:	add al, 0x41 ; or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x48 ; ret
0x080e497d:	add al, byte ptr [ebx + 0xe] ; or al, 0x83 ; add ebx, dword ptr [ecx + 0xa] ; ret
0x080e4987:	or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x42 ; or eax, dword ptr [ecx - 0x3d]
0x080e49c6:	add eax, dword ptr [esi + ecx + 0x10] ; add dword ptr [edx + eax], 0x5a ; ret
0x080e49fd:	and byte ptr [ebp + 0xe], al ; adc al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4a24:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa0a1703 ; ret
0x080e4a76:	dec ebx ; push cs ; inc eax ; jne 0xf ; push cs ; adc al, 0x41 ; ret
0x080e4b63:	inc esi ; push cs ; xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080e4bb7:	dec esp ; push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e4c0f:	add eax, dword ptr [esi + 0x3058304] ; js 9 ; ret
0x080e4c4c:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa01dc03 ; ret
0x080e4c7b:	add eax, dword ptr [esi + 0x2058304] ; std ; or al, bl
0x080e4cbc:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa023f03 ; ret
0x080e4ccc:	add al, 4 ; inc ecx ; or eax, dword ptr [ebx] ; or byte ptr [ecx], al ; or al, bl
0x080e4cda:	lds ecx, ptr [esp + eax] ; add al, 0x41 ; or ebx, dword ptr [edi + 0xa] ; ret
0x080e4d16:	push cs ; and byte ptr [edx], al ; inc esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e4d4c:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa028d03 ; ret
0x080e4df4:	add dword ptr [0x5a04854a], 0xe ; adc bl, al
0x080e4e36:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ecx + 0xe], ah ; adc al, 0x41 ; ret
0x080e4e74:	xchg byte ptr [ebx + eax*4], al ; add eax, 0xa02b803 ; ret
0x080e4eeb:	dec eax ; push cs ; xor byte ptr [edx + ecx + 0xe], ah ; adc al, 0x41 ; ret
0x080e4f0a:	dec eax ; push cs ; xor byte ptr [ebp + 0xa], bl ; push cs ; adc al, 0x46 ; ret
0x080e4f47:	add eax, 0x202e5902 ; add al, byte ptr [ebx + 0xa] ; ret
0x080e5011:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [edi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e5043:	xor byte ptr [ebp + 0xe], al ; and byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e506b:	and byte ptr [edi + 0xe], al ; sbb al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e509f:	inc eax ; inc ebp ; push cs ; xor byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e50cf:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xa], bl ; ret
0x080e50f0:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; ret
0x080e524a:	push cs ; pushal ; add cl, byte ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e5296:	jo 0x4a ; or esp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e52ac:	add al, 0x46 ; or ebp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e5350:	push cs ; mov al, 1 ; inc esi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e53cb:	xor byte ptr [ebp + 0xe], al ; sbb al, 0x45 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e5431:	xor byte ptr [ecx + 0xe], cl ; sub byte ptr [ebx + 0xe], al ; adc byte ptr [ecx - 0x3d], al
0x080e5534:	push cs ; pushal ; add dl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e554b:	dec ecx ; or eax, dword ptr [edx] ; push ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e55d0:	push cs ; pushal ; add dl, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e55ff:	or eax, dword ptr [ebx] ; adc eax, dword ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e5743:	inc ebx ; push cs ; adc byte ptr [edi + 0xa], ah ; push cs ; or al, 0x41 ; ret
0x080e5751:	add al, 0x42 ; or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x41 ; ret
0x080e575f:	add al, 0x47 ; or edx, dword ptr [ebp + 0xa] ; push cs ; or al, 0x41 ; ret
0x080e576c:	push cs ; add al, 0x41 ; or edx, dword ptr [edi + 0xe] ; or al, 0x41 ; ret
0x080e57a2:	push cs ; inc eax ; add ch, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e585a:	push cs ; xor byte ptr [edx], al ; jmp 0x43140e12 ; ret
0x080e587f:	dec esp ; push cs ; xor byte ptr [edx + ecx + 0xe], dh ; adc al, 0x43 ; ret
0x080e58f8:	add al, byte ptr [ebx] ; push ebx ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080e5910:	or eax, dword ptr [ebx] ; mov ecx, 0x140e0a03 ; inc ecx ; ret
0x080e5927:	inc esp ; or eax, dword ptr [edx] ; pop ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e597d:	mov al, 2 ; add cl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080e5fd0:	or byte ptr [ebx], al ; arpl word ptr [ecx], ax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e5fe8:	or eax, dword ptr [ebx] ; rol dword ptr [ebx], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e6055:	ror byte ptr [eax], 1 ; add cl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080e655a:	push cs ; inc eax ; add ch, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e6580:	push eax ; push cs ; inc eax ; or cl, byte ptr [0x4114] ; ret
0x080e6597:	inc ebx ; or eax, dword ptr [edx] ; inc ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e65ad:	add al, 0x4b ; or ecx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e668b:	dec esp ; push cs ; xor byte ptr [edi + 0xa], dh ; push cs ; adc al, 0x43 ; ret
0x080e6704:	insb byte ptr es:[edi], dx ; add esp, dword ptr [ebx + 1] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e671c:	or eax, dword ptr [ebx] ; and al, byte ptr [edx + ecx] ; push cs ; adc al, 0x41 ; ret
0x080e6772:	shr byte ptr [edx + eax + 0x4c], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e69a4:	push cs ; loopne 0x6f ; dec eax ; push cs ; shr byte ptr [edx + eax - 0x3d], 1
0x080e6bf8:	inc edi ; push cs ; xor byte ptr [ecx + 0xa], bh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e6c49:	inc edi ; push cs ; inc eax ; js 0xf ; push cs ; adc al, 0x41 ; ret
0x080e6cf7:	inc ebp ; push cs ; sbb byte ptr [edx], al ; push edi ; push cs ; or al, 0x41 ; ret
0x080e6d54:	inc ecx ; push cs ; adc al, 0x83 ; add eax, 0xc30a4a02
0x080e6d66:	or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x47 ; or eax, dword ptr [ecx - 0x3d]
0x080e6f52:	push cs ; xor byte ptr [edx], al ; ja 0xf ; push cs ; adc al, 0x41 ; ret
0x080e6f92:	push cs ; inc eax ; add dh, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e6fd2:	push cs ; xor byte ptr [edx], al ; push ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e6fe8:	add al, 0x43 ; or eax, dword ptr [edx] ; int3 ; push cs ; adc al, 0x43 ; ret
0x080e7016:	dec esi ; push cs ; adc byte ptr [edi + 0xa], bl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7020:	add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e702a:	add al, 0x4a ; or edx, dword ptr [esi + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7033:	push cs ; add al, 0x49 ; or eax, dword ptr [esi + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e70c0:	push eax ; add esi, dword ptr [ecx + eax] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e70f2:	push edx ; push cs ; push eax ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7108:	add al, 0x46 ; or ebp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e7153:	rol byte ptr [edx], 1 ; add bl, byte ptr [ecx + 0x41140e0a] ; ret
0x080e71b0:	rol byte ptr [ecx], 1 ; add ah, cl ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e721b:	push cs ; add byte ptr [edx], 2 ; in eax, dx ; push cs ; adc al, 0x41 ; ret
0x080e724f:	inc ebx ; push cs ; adc byte ptr [ebx + 0xa530204], al ; ret
0x080e725d:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x43 ; or eax, dword ptr [ecx - 0x3d]
0x080e72b7:	lock add dword ptr [edx], eax ; inc eax ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e72cd:	add al, 0x45 ; or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e7376:	push cs ; lock add dword ptr [esi + 0xa], ecx ; push cs ; adc al, 0x46 ; ret
0x080e738b:	push cs ; add al, 0x45 ; or eax, dword ptr [esi + 0xe] ; adc al, 0x43 ; ret
0x080e73cb:	inc eax ; add eax, dword ptr [ecx + eax] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e73e1:	add al, 0x46 ; or edi, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e73f7:	add al, 0x41 ; or ebp, dword ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e742a:	add ecx, dword ptr [esi + 0xe] ; adc byte ptr [edx + 0xe], bh ; or al, 0x41 ; ret
0x080e7467:	push cs ; adc byte ptr [edx], al ; inc edx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e7470:	push cs ; add al, 0x46 ; or ecx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e74ff:	dec eax ; push cs ; and byte ptr [ebx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e755b:	loopne 4 ; add dh, byte ptr [edi + 0x43140e0a] ; ret
0x080e7570:	push cs ; add al, 0x41 ; or eax, dword ptr [esi + 0xe] ; adc al, 0x43 ; ret
0x080e75c7:	ret ; or al, 4 ; add al, 0x45 ; or ecx, dword ptr [edi + 0xa] ; ret
0x080e76d8:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x41 ; or ecx, dword ptr [ecx - 0x3d]
0x080e77a7:	dec ecx ; push cs ; xor byte ptr [ebx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e77fc:	inc eax ; dec esp ; push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x41 ; ret
0x080e782a:	dec esi ; push cs ; adc byte ptr [edx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7834:	add al, 0x46 ; or eax, dword ptr [edi + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e783e:	add al, 0x4b ; or ecx, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e7847:	push cs ; add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080e786a:	dec esi ; push cs ; adc byte ptr [edi + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7874:	add al, 0x49 ; or edx, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e787d:	push cs ; add al, 0x46 ; or eax, dword ptr [esi + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e793b:	sub al, 0x50 ; push cs ; xor byte ptr [edi + 0xe], ah ; adc byte ptr [ecx - 0x3d], al
0x080e7976:	dec esp ; push cs ; and byte ptr [eax + 0xa], bl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e7992:	push ebp ; push cs ; and byte ptr [edx + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e79dd:	push esi ; push cs ; push eax ; jl 0xf ; push cs ; adc al, 0x43 ; ret
0x080e79f2:	push cs ; add al, 0x48 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080e7a33:	jo 5 ; aas ; add cl, byte ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e7a5f:	push edi ; push cs ; jo 0x53 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e7ac0:	cmp al, 0x48 ; push cs ; inc eax ; push cs ; adc al, 0x41 ; ret
0x080e7b08:	push cs ; inc eax ; add al, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e7b1d:	push cs ; add al, 0x46 ; or ebx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e7b62:	push eax ; pop eax ; push cs ; inc eax ; js 0x14 ; adc al, 0x41 ; ret
0x080e7ba2:	push cs ; pushal ; add al, byte ptr [edx + 0x41140e0a] ; ret
0x080e7bed:	inc ebp ; push cs ; pushal ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7c54:	inc ebx ; push cs ; and byte ptr [edi + 0xe], bl ; adc byte ptr [ecx + 0xa], al ; ret
0x080e7c62:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x43 ; or ecx, dword ptr [ebp - 0x3d]
0x080e7c9c:	inc ecx ; push cs ; and byte ptr [edi + 0xe], bl ; adc byte ptr [ecx + 0xa], al ; ret
0x080e7caa:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x43 ; or edx, dword ptr [eax - 0x3d]
0x080e7cef:	dec esi ; push cs ; adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080e7d02:	sbb al, 0x42 ; push cs ; and byte ptr [eax + 0xe], cl ; or al, 0x45 ; ret
0x080e7d46:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x44 ; or edx, dword ptr [eax - 0x3d]
0x080e7da7:	sbb al, 0x44 ; push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e7dec:	dec eax ; push cs ; and byte ptr [edi + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080e7e02:	add al, 0x44 ; or ebx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e7e56:	and byte ptr [eax + 0xe], dl ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080e7ea5:	push esp ; push cs ; push eax ; dec eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7fa9:	dec ebp ; push cs ; pushal ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7fbf:	add al, 0x48 ; or ecx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e8090:	inc ebp ; push cs ; pushal ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x08048416:	imul ecx, edx, 0xa ; mov edx, esi ; sub edx, ebx ; add ebx, ecx
0x08049a2e:	ror byte ptr [ecx + 0x428bc845], 0xc ; mov ebx, ecx
0x0804a6fd:	add byte ptr [eax], al ; mov eax, 0 ; mov ebx, ecx
0x0804b078:	jmp 0x5f ; mov ebx, dword ptr [edi] ; mov eax, dword ptr [edi - 4] ; bswap ebx
0x0804b471:	test esi, esi ; mov ebx, dword ptr [eax + 4] ; je 9 ; bswap ebx
0x0804bc05:	jne 0x76 ; jp 0xffffff84 ; cli ; js 0x16 ; test cl, bl
0x0804d6cf:	nop ; push ebp ; push edi ; mov edi, edx ; push esi ; push ebx ; mov ebx, ecx
0x08050772:	add byte ptr [edi], cl ; test byte ptr [edi + 0x29000000], bl ; retf
0x0805081c:	inc esp ; and al, 8 ; add byte ptr [eax], al ; add byte ptr [eax], al ; sub ebx, ecx
0x08051d51:	jle 0xffffff8d ; dec esi ; add al, 0x8b ; pop esi ; or byte ptr [ecx], ch ; retf
0x08051d93:	add al, 0x8b ; pop esi ; or byte ptr [ebx - 0x34d6ef3c], al
0x08051dbc:	and al, 0x1c ; mov ebp, eax ; add esp, 0x10 ; add ebx, ecx
0x0805278f:	add al, byte ptr [eax] ; add byte ptr [eax - 0x7bf09d06], al ; retf
0x08052ece:	add byte ptr [eax], al ; mov ecx, dword ptr [edx + 8] ; mov edx, dword ptr [edx] ; cmp ebx, ecx
0x080531bc:	mov ecx, dword ptr [ebp + 0x34] ; test ecx, ecx ; je 0x25 ; cmp ebx, ecx
0x08053a6b:	mov ebx, dword ptr [esi + 8] ; cmp ecx, ebx ; jae 0x34 ; sub ebx, ecx
0x080550c9:	push esi ; push ebx ; mov ebp, 0xff ; mov ebx, ecx
0x080550d7:	add al, 0x8b ; jo 0 ; shr ebx, 3 ; xor ebx, ecx
0x08055126:	int1 ; cmove ecx, edi ; mov byte ptr [eax + ebx], cl ; sub ebx, ecx
0x080555bb:	pop esp ; xor dword ptr [ebx], eax ; neg ecx ; add ebx, edx ; and ebx, ecx
0x080559d0:	movsd dword ptr es:[edi], dword ptr [esi] ; push cs ; or byte ptr [ecx], al ; fild qword ptr [ecx] ; jmp 0xffffff8b ; retf
0x08055fa4:	test al, bh ; add al, 0 ; add byte ptr [ecx], bh ; ret ; jne 0xffffffd4
0x08056a98:	mov ch, 0xe ; or byte ptr [ecx], ch ; jmp 7 ; ret 0xcb83
0x08056ba5:	dec esi ; xor byte ptr [ecx], al ; fiadd dword ptr [ebx - 0x347cef15]
0x0805732d:	lea eax, dword ptr [ebp + 0x30] ; mov dword ptr [esp + 8], eax ; mov ebx, ecx
0x08057353:	shr edi, 9 ; mov dword ptr [esp + 0x3c], ebx ; mov ebx, ecx
0x08058bef:	or al, ch ; sbb ebx, dword ptr [edi + 1] ; add al, ch ; push esi ; retf
0x0805af45:	add al, 0xf ; adc dword ptr [esi], 1 ; add byte ptr [eax], al ; mov ebx, ecx
0x0805af8e:	add al, 0xf ; or ebp, 0 ; add byte ptr [eax], al ; mov ebx, ecx
0x0805afd3:	add al, 0xf ; or dword ptr [eax - 0x77000000], 0xffffffcb
0x0805b00c:	add edi, ecx ; lea eax, dword ptr [eax + 4] ; jae 0x56 ; mov ebx, ecx
0x0805ca30:	movq qword ptr [edx - 0x45], mm0 ; movdqa xmmword ptr [edx - 0x35], xmm0
0x0805d0aa:	movq mm3, qword ptr [eax + edi + 0x20] ; movdqa xmm1, xmm3
0x0805d0d8:	inc esp ; pop es ; add dword ptr [edi - 1], ebx ; and al, 0x8d ; xor bl, cl
0x0805d218:	inc esp ; pop es ; add bl, byte ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805d358:	inc esp ; pop es ; add ebx, dword ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805d5d8:	inc esp ; pop es ; add eax, 0x8d24ff5f ; xor bl, cl
0x0805d998:	inc esp ; pop es ; or byte ptr [edi - 1], bl ; and al, 0x8d ; xor bl, cl
0x0805dad8:	inc esp ; pop es ; or dword ptr [edi - 1], ebx ; and al, 0x8d ; xor bl, cl
0x0805dc18:	inc esp ; pop es ; or bl, byte ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805dd58:	inc esp ; pop es ; or ebx, dword ptr [edi - 1] ; and al, 0x8d ; xor bl, cl
0x0805dfd8:	inc esp ; pop es ; or eax, 0x8d24ff5f ; xor bl, cl
0x0805e258:	inc esp ; pop es ; maxps xmm7, xmm7 ; and al, 0x8d ; xor bl, cl
0x080604fb:	out dx, eax ; sar byte ptr [ecx + 0x10], 0x83 ; retf
0x080615bb:	nop ; nop ; nop ; nop ; nop ; pcmpeqb xmm1, xmm3
0x080631ba:	mov esp, 0x27 ; add byte ptr [ebx - 0x77], dl ; retf
0x0806321a:	ret 0x2c73 ; add eax, ecx ; add edx, ecx ; sub ebx, ecx
0x080634dc:	add byte ptr [ebx - 0x3d], bl ; nop ; movdqu xmm1, xmmword ptr [eax - 0x35]
0x080634e1:	movq mm1, qword ptr [eax - 0x35] ; movdqu xmm2, xmmword ptr [edx - 0x35]
0x08063f6b:	palignr xmm2, xmm1, 1 ; movaps xmm1, xmm3
0x08063f9b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x1f] ; movaps xmm1, xmm3
0x080640ab:	palignr xmm2, xmm1, 2 ; movaps xmm1, xmm3
0x080640db:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x1e] ; movaps xmm1, xmm3
0x080641eb:	palignr xmm2, xmm1, 3 ; movaps xmm1, xmm3
0x0806421b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x1d] ; movaps xmm1, xmm3
0x0806432b:	palignr xmm2, xmm1, 4 ; movaps xmm1, xmm3
0x0806435b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x1c] ; movaps xmm1, xmm3
0x0806445b:	palignr xmm2, xmm1, 5 ; movaps xmm1, xmm3
0x0806448b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x1b] ; movaps xmm1, xmm3
0x0806458b:	palignr xmm2, xmm1, 6 ; movaps xmm1, xmm3
0x080645bb:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x1a] ; movaps xmm1, xmm3
0x080646bb:	palignr xmm2, xmm1, 7 ; movaps xmm1, xmm3
0x080646eb:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x19] ; movaps xmm1, xmm3
0x080647eb:	palignr xmm2, xmm1, 8 ; movaps xmm1, xmm3
0x0806481b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x18] ; movaps xmm1, xmm3
0x0806491b:	palignr xmm2, xmm1, 9 ; movaps xmm1, xmm3
0x0806494b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x17] ; movaps xmm1, xmm3
0x08064a4b:	palignr xmm2, xmm1, 0xa ; movaps xmm1, xmm3
0x08064a7b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x16] ; movaps xmm1, xmm3
0x08064b7b:	palignr xmm2, xmm1, 0xb ; movaps xmm1, xmm3
0x08064bab:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x15] ; movaps xmm1, xmm3
0x08064cab:	palignr xmm2, xmm1, 0xc ; movaps xmm1, xmm3
0x08064cdb:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x14] ; movaps xmm1, xmm3
0x08064ddb:	palignr xmm2, xmm1, 0xd ; movaps xmm1, xmm3
0x08064e0b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x13] ; movaps xmm1, xmm3
0x08064f0b:	palignr xmm2, xmm1, 0xe ; movaps xmm1, xmm3
0x08064f3b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x12] ; movaps xmm1, xmm3
0x0806503b:	palignr xmm2, xmm1, 0xf ; movaps xmm1, xmm3
0x0806506b:	sub dword ptr [edx], edx ; movaps xmm2, xmmword ptr [ecx + 0x11] ; movaps xmm1, xmm3
0x08066dfe:	pcmpeqb mm0, qword ptr [ebx] ; pmovmskb eax, xmm0 ; sub ebx, ecx
0x0806af7b:	or byte ptr [esi + 0xf], ah ; jmp 0xffffffe4 ; pcmpeqb xmm1, xmm3
0x0806b983:	iretd ; lea ecx, dword ptr [edx + 0x10] ; and ecx, 0xfffffff0 ; mov ebx, ecx
0x0806b98b:	retf ; sub ebx, edx ; add eax, ebx ; mov ebx, esi ; sub ebx, ecx
0x0806b9dc:	xor byte ptr [ebx - 0x147cbf3f], al ; add dword ptr [ebp - 0x35], esi
0x0806c261:	jmp 0xffffffa1 ; nop ; lea esi, dword ptr [esi] ; mov ebx, ecx
0x0806d2d2:	mov ecx, dword ptr [esp + 0xd4] ; je 0xffffffd4
0x0806dd69:	ret ; mov edi, ebx ; mov ebx, ebp ; mov ecx, edi ; cmp bl, cl
0x0806eae1:	push ebx ; push esi ; mov edx, 2 ; mov ebx, ecx
0x0806ed61:	ret 0x7503 ; sbb ecx, dword ptr [ebx - 0x34c6fb86]
0x0807034d:	aaa ; test ecx, ecx ; je 0xffffffd3 ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x08070380:	dec esp ; and al, 0x14 ; jmp 0xffffffa0 ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x0807038b:	jb 0xffffff95 ; mov esi, dword ptr [edx + 8] ; test esi, esi ; jne 0xffffffd4
0x08070391:	div byte ptr [ebp - 0x35] ; cmp ebp, ebx ; jne 0xffffff8f ; jmp 0xffffffd4
0x080703f8:	add byte ptr [eax], al ; sub edx, dword ptr [eax] ; sub ecx, 1 ; mov ebx, ecx
0x08070544:	add byte ptr [eax + 0x57], ch ; jecxz 0x10 ; or al, ch ; add ebx, ecx
0x0807094c:	add dword ptr [edi], ecx ; test byte ptr [ebp - 0x76ffffff], cl ; retf
0x08071dc0:	mov dword ptr [ebp - 0x30], esi ; movsx esi, byte ptr [ebx + 1] ; mov ebx, ecx
0x08072a70:	shl ecx, 2 ; lea edx, dword ptr [ebp + ecx] ; add ebx, ecx
0x08072ea4:	push es ; add edx, 4 ; add esi, 4 ; cmp ebx, ecx
0x08072ec9:	add dword ptr [ebx - 0x3d7cff00], eax ; add al, 0x39 ; retf
0x080739df:	add byte ptr [ecx], bh ; inc esp ; and al, 0x5c ; mov dword ptr [ebx], edx ; mov ebx, ecx
0x08074bc9:	rol dword ptr [ebx - 0x1e7c0720], 7 ; sub ebx, ecx
0x08075886:	jmp 0xfffff696 ; mov eax, esi ; mov ebx, ecx
0x0807594e:	ret ; add dword ptr [ebx - 0x11f6c01b], eax ; cmp ebx, ecx
0x08075c2b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; mov dword ptr [ebx], edx ; mov ebx, ecx
0x0807695e:	add byte ptr [eax], al ; movzx eax, ax ; mov dword ptr [ebx], eax ; mov ebx, ecx
0x080779e1:	mov ebp, esp ; push edi ; push esi ; push ebx ; mov esi, edx ; mov ebx, ecx
0x08078731:	or byte ptr [ecx], bh ; sal dword ptr [ebx - 0x7f], cl ; cli ; add ebx, ecx
0x0807875e:	or byte ptr [ecx], bh ; sal byte ptr [ecx - 0x7f], 1 ; cli ; add ebx, ecx
0x080789be:	dec dword ptr [ebx - 0x7ee76384] ; inc dword ptr [ecx] ; retf
0x08078cea:	jmp 0xffffff6e ; mov eax, edx ; jmp 0xffffffd4
0x08078d11:	mov ebp, esp ; push edi ; push esi ; push ebx ; mov esi, eax ; mov ebx, ecx
0x08078d2e:	add byte ptr [eax], al ; add byte ptr [ebx + 0x16808ec], al ; retf
0x08079309:	add esp, dword ptr [eax] ; test eax, eax ; cmove ebx, esi ; cmp ebx, ecx
0x08079c0a:	pop edi ; pop ebp ; ret ; mov eax, ebx ; sub esi, edx ; mov ebx, ecx
0x0807aa0d:	mov byte ptr [edx], cl ; lea ecx, dword ptr [eax + esi] ; sub edx, edi ; cmp ebx, ecx
0x0807bb3d:	js 0x1b ; test bl, bl ; je 0x43 ; movsx ecx, bl
0x0807c7a0:	add byte ptr [ebx - 0x4537b], cl ; inc dword ptr [ecx] ; retf
0x0807c93f:	or byte ptr [eax - 4], ch ; mov eax, 0xa6e8080c ; retf
0x0807cd92:	add byte ptr [ebx - 0x4576b], cl ; inc dword ptr [ecx] ; retf
0x0807d297:	ror dword ptr [edi], -0x71 ; loopne 6 ; add byte ptr [eax], al ; add ebx, ecx
0x0807d433:	dec edx ; mov eax, dword ptr [ebp - 0x43c] ; add ebx, ecx
0x0807dbbf:	ror dword ptr [edi], -0x79 ; mov eax, 0x1fffff8 ; retf
0x080812cf:	ror byte ptr [edi], 0x84 ; mov edx, 0xe9fffffc ; retf
0x08081ae8:	call 0x83188b09 ; ret 0x3901 ; retf
0x08081b33:	mov ebx, dword ptr [eax] ; cmp dword ptr [ebp - 0x7c], ebx ; je 0xe ; mov ebx, ecx
0x08081e6f:	cli ; sub esp, 4 ; lea eax, dword ptr [esi + ecx*4] ; add ebx, ecx
0x08082412:	push ebp ; nop ; lea ebx, dword ptr [edx + ebx - 1] ; cmove ecx, ebx
0x0808308f:	add esp, 0x20 ; mov edx, eax ; mov eax, ebx ; cmp ebx, ecx
0x08083554:	pop dword ptr [eax] ; add byte ptr [eax], al ; sub ecx, 1 ; sub ebx, ecx
0x08084096:	mov edi, 0xfffffff0 ; movsx ecx, bl
0x080840dd:	cmp dword ptr [esp + ebx*2 + 0x65], esi ; mov esi, dword ptr [edi] ; movsx ecx, bl
0x0808411b:	pop esp ; and al, 0x33 ; mov edx, dword ptr gs:[eax] ; movsx ecx, bl
0x080857ba:	mov ebp, 0xfffffb84 ; add byte ptr [edi], cl ; test cl, bl
0x08085ff8:	add byte ptr [ebx + 0x488b1058], cl ; adc al, 0x39 ; retf
0x08086fa0:	add eax, 0xcbed4be ; or byte ptr [edi], cl ; mov cs, ebx
0x0808b82f:	add byte ptr [ebx + 0x408b5843], cl ; and bl, ch ; retf
0x0808ba76:	pop eax ; mov ecx, dword ptr [ebp] ; mov ebx, dword ptr [ebp + 4] ; sub ebx, ecx
0x0808e170:	adc al, 0x8b ; add byte ptr [ebp - 0x3ef58b40], al ; retf
0x0808ecb3:	push ebx ; mov ebx, 0x18 ; cmova ecx, ebx
0x0808fb43:	add eax, dword ptr [eax] ; add byte ptr [ebx + 0x306808ec], al ; retf
0x0808fb75:	add eax, dword ptr [eax] ; add byte ptr [eax - 0x4b45ffc8], al ; retf
0x08090447:	or byte ptr [eax - 0x14], ch ; add dword ptr [eax], eax ; add byte ptr [eax + 0x18], ch ; retf
0x08090d2e:	or byte ptr [eax + 0x20], ch ; add eax, dword ptr [eax] ; add byte ptr [eax + 0x18], ch ; retf
0x08090d3d:	or al, ch ; lodsd eax, dword ptr [esi] ; xchg ebx, edi ; ljmp ptr [eax - 0x70] ; retf
0x08090d47:	or byte ptr [eax + 0x27], ch ; add eax, dword ptr [eax] ; add byte ptr [eax + 0x18], ch ; retf
0x08090d56:	or al, ch ; xchg eax, esp ; xchg ebx, edi ; ljmp ptr [eax - 0x70] ; retf
0x08090d60:	or byte ptr [eax - 0x3e], ch ; add al, byte ptr [eax] ; add byte ptr [eax + 0x18], ch ; retf
0x08091250:	mov dword ptr [ebx + 0xc], eax ; mov edx, esi ; xor eax, eax ; jmp 0xffffffd4
0x08091c01:	or byte ptr [eax - 0x60], ch ; add dword ptr [eax], eax ; add byte ptr [eax - 0x1c], ch ; retf
0x08091dc8:	stc ; jae 0xce ; mov ebx, ecx
0x08093275:	or byte ptr [eax + 0x44], ch ; add eax, 0xe4680000 ; retf
0x080935e0:	or byte ptr [eax - 0x15], ch ; add eax, dword ptr [eax] ; add byte ptr [eax - 0x1c], ch ; retf
0x08093ad6:	or byte ptr [eax + 0x7b], ch ; add dword ptr [eax], eax ; add byte ptr [eax - 0x1c], ch ; retf
0x08093b4b:	ror byte ptr [ecx + 0x2444c7c3], 8 ; xor ebx, ecx
0x08094238:	or byte ptr [eax - 0x31], ch ; add al, byte ptr [eax] ; add byte ptr [eax - 0x1c], ch ; retf
0x080942dc:	test byte ptr [edi + 0x195], 1 ; jne 0xffffffd4
0x080949cf:	or byte ptr [eax - 0x80], ch ; or byte ptr [eax], al ; add byte ptr [eax - 0x1c], ch ; retf
0x08094a12:	or byte ptr [eax + 0x7f], ch ; or byte ptr [eax], al ; add byte ptr [eax - 0x1c], ch ; retf
0x080952cb:	pop esp ; and al, 0x38 ; mov dword ptr [esp + 0x30], ebp ; mov ebx, ecx
0x08095b12:	mov ecx, dword ptr [ebp - 0x64] ; xor ebx, eax ; xor ecx, edx ; or ebx, ecx
0x080966fb:	push ecx ; push dword ptr [eax + 0x22c] ; sub ebx, ecx
0x08096e2a:	dec edx ; add al, 3 ; cmp cl, byte ptr [ebx - 0x3476f7ab]
0x080983f3:	add esi, eax ; lea eax, dword ptr [esi + 0xc] ; mov ebx, eax ; sub ebx, ecx
0x080984e4:	les edx, ptr [eax] ; shl edx, cl ; test dword ptr [ebp - 0x20], edx ; jne 0xffffffd4
0x08098d1f:	nop ; push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov ebx, ecx
0x080992fa:	xchg eax, ecx ; cmp dword ptr [edx], eax ; jb 0x16 ; mov ebx, edx ; cmp ebx, ecx
0x08099b1c:	ror byte ptr [ecx + 0x244c8bc3], 0xc ; je 0xffffffd4
0x0809a309:	in al, dx ; or al, 0x68 ; call 0xe8080ce9 ; retf
0x0809bb18:	cmp cl, 9 ; jbe 0x29 ; mov ecx, edi ; cmp bl, cl
0x0809bc73:	jns 0xffffffcd ; lea ebx, dword ptr [edi + 1] ; cmp esi, ebx ; jge 0xffffffd4
0x0809cc71:	and al, 8 ; cmp eax, 0xff ; jne 0xffffff8f ; mov ebx, ecx
0x0809d0e4:	add ecx, ebx ; mov dword ptr [ebp - 0x28], eax ; add eax, ebx ; mov ebx, ecx
0x0809d16c:	dec ebp ; in al, 1 ; dec ebp ; loopne 0xffffff8f ; ret 0xcb01
0x0809ecdb:	push ecx ; imul ecx ; mov dword ptr [esp + 8], ebx ; mov ebx, ecx
0x0809ef08:	add dword ptr [ecx], eax ; retf ; cmp esi, ebx ; je 0x46 ; mov ebx, ecx
0x0809ef1c:	in al, dx ; or byte ptr [ecx], al ; fmul dword ptr [ecx - 0x34deaa0d]
0x0809ef63:	add esp, 0x10 ; jmp 0xffffff8e ; mov esi, ebx ; mov ebx, ecx
0x0809f135:	shl edx, 2 ; sub ecx, edx ; mov ebp, ecx ; mov ebx, ecx
0x0809f39a:	fimul dword ptr [edi] ; popfd ; ret ; shr ecx, 0x1f ; cmp bl, cl
0x0809fbd7:	add byte ptr [eax], 0 ; add byte ptr [eax], al ; xor edi, edi ; mov ebx, ecx
0x080a0331:	lock add byte ptr [eax], al ; add byte ptr [ebp - 0x347af025], al
0x080a1113:	mov edi, edx ; jne 0x28 ; mov dword ptr [ebp + 0xc], ebx ; mov ebx, ecx
0x080a1784:	mov dword ptr [edx], esi ; mov edx, dword ptr [eax + 0x10] ; test edx, edx ; jne 0xffffffd4
0x080a2101:	or al, 0x8b ; xor eax, 0x80eb7dc ; mov ebx, ecx
0x080a2827:	movzx eax, byte ptr [edi + 2] ; lea ecx, dword ptr [edi + 2] ; mov ebx, ecx
0x080a6410:	dec esp ; mov ebx, 0x1ff83fc ; cmove ecx, ebx
0x080a790a:	xor ecx, ecx ; mov dword ptr [ebp + 8], esi ; mov esi, ebx ; mov ebx, ecx
0x080a7c74:	cld ; lea ecx, dword ptr [ebp - 0x438] ; sub ebx, ecx
0x080a7da8:	ror dword ptr [ecx - 0x55f6b], -1 ; mov ebx, ecx
0x080a8d75:	push ebx ; mov esi, eax ; mov eax, ecx ; mov edi, edx ; mov ebx, ecx
0x080a8fce:	jbe 2 ; push edi ; push esi ; xor esi, esi ; push ebx ; mov ebx, ecx
0x080a9454:	jbe 0x198 ; imul ecx, ebx
0x080aa3a4:	inc eax ; add dword ptr [eax], eax ; add byte ptr [ebx - 0x348af607], al
0x080abbf2:	dec esp ; and al, 8 ; mov eax, dword ptr [esp + 0x20] ; mov ebx, ecx
0x080abe3f:	add byte ptr [ecx + 0x245c89da], cl ; jl 0xffffff91 ; retf
0x080ac922:	or byte ptr [eax + 0x1a], ch ; dec ebp ; or eax, 0xcbc3e808
0x080ac95c:	or byte ptr [eax + 0x5c], ch ; dec ebp ; or eax, 0xcb89e808
0x080af025:	jle 0x375 ; lea edi, dword ptr [eax - 0x35]
0x080b1b7e:	add byte ptr [eax], al ; add byte ptr [ecx - 0x16d7dbbc], cl ; retf
0x080b254b:	and byte ptr [ebx - 0x74e7db8c], cl ; push es ; mov ebx, ecx
0x080b258b:	inc dword ptr [ecx + 0xfffffe1] ; add byte ptr [ecx], cl ; retf
0x080b5b29:	lea edi, dword ptr [edi] ; sub ebx, ecx
0x080b714a:	mov eax, esi ; jmp 0xfffffa06 ; cmp ebx, ecx
0x080b7159:	mov dh, 0xdb ; jmp 0xfffff9f7 ; cmp ebx, ecx
0x080b7168:	mov dh, 0xdb ; jmp 0xfffff9e8 ; xor ebx, ecx
0x080b718c:	mov eax, esi ; jmp 0xfffff9c4 ; add ebx, ecx
0x080b7195:	mov eax, esi ; jmp 0xfffff9bb ; or ebx, ecx
0x080b71b7:	mov ebx, edx ; jmp 0xfffff999 ; sub ebx, ecx
0x080b71ce:	mov eax, esi ; jmp 0xfffff982 ; and ebx, ecx
0x080b71d7:	mov eax, esi ; jmp 0xfffff979 ; cmp ebx, ecx
0x080b71e6:	mov dh, 0xdb ; jmp 0xfffff96a ; cmp ebx, ecx
0x080b71f5:	mov dh, 0xdb ; jmp 0xfffff95b ; cmp ebx, ecx
0x080b7204:	mov dh, 0xdb ; jmp 0xfffff94c ; cmp ebx, ecx
0x080b7bd2:	sti ; add al, 0x8b ; add al, 0x82 ; je 0x16 ; mov ebx, ecx
0x080b88fd:	wait ; js 0x12 ; add byte ptr [eax], al ; xor esi, edi ; xor ebx, ecx
0x080b8fef:	add byte ptr [ebp + 0x57], dl ; mov edi, eax ; push esi ; push ebx ; mov ebx, ecx
0x080ba434:	adc byte ptr [ebp - 0x57c00b0], cl ; std ; ja 0xffffffd4
0x080ba795:	add al, 0xb5 ; mov al, byte ptr [0x3d080eae] ; add ebx, ecx
0x080ba9ac:	inc edi ; add eax, 0x80eaef8 ; add ebx, ecx
0x080bc955:	retf ; add eax, 0x5cb4308
0x080bc959:	retf ; add eax, 0x5cb8308 ; or bl, al ; retf
0x080bc95d:	retf ; add eax, 0x5cbc308 ; or bl, dh ; retf
0x080bc995:	retf ; add eax, 0x5cb3e08 ; or byte ptr [esi - 0x35], bh
0x080bc999:	retf ; add eax, 0x5cb7e08
0x080bc99d:	retf ; add eax, 0x5cbbe08 ; or dh, ch ; retf
0x080bc9d5:	retf ; add eax, 0x5cb3908 ; or byte ptr [ecx - 0x35], bh
0x080bc9d9:	retf ; add eax, 0x5cb7908
0x080bc9dd:	retf ; add eax, 0x5cbb908 ; or cl, ch ; retf
0x080bca15:	retf ; add eax, 0x5cb3408
0x080bca19:	retf ; add eax, 0x5cb7408
0x080bca1d:	retf ; add eax, 0x5cbb408 ; or ah, ah ; retf
0x080bca59:	retf ; add eax, 0x5cb6f08
0x080bca5d:	retf ; add eax, 0x5cbaf08 ; or bh, bl ; retf
0x080bca91:	retf 0x805 ; cli ; retf 0x805 ; sub cl, bl
0x080bca99:	retf ; add eax, 0x5cb6a08
0x080bca9d:	retf ; add eax, 0x5cbaa08 ; or dl, bl ; retf
0x080bcad5:	retf 0x805 ; and eax, 0x650805cb ; retf
0x080bcad9:	retf ; add eax, 0x5cb6508
0x080bcadd:	retf ; add eax, 0x5cba508 ; or ch, dl ; retf
0x080bcb19:	retf ; add eax, 0x5cb6008
0x080bcb1d:	retf ; add eax, 0x5cba008 ; or al, dl ; retf
0x080bd8dd:	iretd ; push es ; or bh, bh ; retf 0x806 ; or ebx, ecx
0x080bd8e1:	retf 0x806 ; or ebx, ecx ; push es ; or byte ptr [ebx], dl ; retf
0x080bd8e9:	retf ; push es ; or byte ptr [0x270806cb], bl ; retf
0x080bd8ed:	retf ; push es ; or byte ptr [edi], ah ; retf ; push es ; or byte ptr [ecx], dh ; retf
0x080bd8f1:	retf ; push es ; or byte ptr [ecx], dh ; retf ; push es ; or byte ptr [ebx], bh ; retf
0x080bd8f5:	retf ; push es ; or byte ptr [ebx], bh ; retf ; push es ; or byte ptr [ebp - 0x35], al
0x080bd8f9:	retf ; push es ; or byte ptr [ebp - 0x35], al ; push es ; or byte ptr [edi - 0x35], cl
0x080bd8fd:	retf ; push es ; or byte ptr [edi - 0x35], cl ; push es ; or byte ptr [ecx - 0x35], bl
0x080bd901:	retf ; push es ; or byte ptr [ecx - 0x35], bl ; push es ; or byte ptr [ebx - 0x35], ah
0x080bd905:	retf ; push es ; or byte ptr [ebx - 0x35], ah ; push es ; or byte ptr [ebp - 0x35], ch
0x080bd909:	retf ; push es ; or byte ptr [ebp - 0x35], ch ; push es ; or byte ptr [edi - 0x35], dh
0x080bd911:	retf ; push es ; or byte ptr [ecx - 0x74f7f935], al ; retf
0x080bd915:	retf ; push es ; or byte ptr [ebx - 0x6af7f935], cl ; retf
0x080bd919:	retf ; push es ; or byte ptr [ebp - 0x60f7f935], dl ; retf
0x080bd91d:	retf ; push es ; or byte ptr [edi - 0x56f7f935], bl ; retf
0x080bd921:	retf ; push es ; or byte ptr [ecx - 0x4cf7f935], ch ; retf
0x080bd925:	retf ; push es ; or byte ptr [ebx - 0x42f7f935], dh ; retf
0x080bd92d:	retf ; push es ; or byte ptr [ecx - 0x31], dh ; push es ; or cl, dl ; retf
0x080bd931:	iretd ; push es ; or cl, dl ; retf ; push es ; or bl, bl ; retf
0x080bd935:	retf ; push es ; or bl, bl ; retf ; push es ; or ch, ah ; retf
0x080bd939:	retf ; push es ; or ch, ah ; retf ; push es ; or bh, ch ; retf
0x080bd93d:	retf ; push es ; or bh, ch ; retf ; push es ; or cl, bh ; retf
0x080bd990:	mov bh, 0xcc ; push es ; or cl, al ; int3 ; push es ; or bl, cl
0x080bda11:	int 6 ; or byte ptr [edi - 0x38f7f934], cl ; retf
0x080bdb60:	sbb eax, 0x90806cd ; int 6 ; or bl, cl
0x080bf9d9:	add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [ecx], al ; retf
0x080bfa51:	add byte ptr [eax], al ; add byte ptr [edi], dh ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080bfa55:	fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf ; or al, 8 ; dec esp ; retf
0x080bfaa5:	mov ah, 0xc ; or byte ptr [edi], dh ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080c02e4:	leave ; add byte ptr [eax], al ; add dl, cl ; add byte ptr [eax], al ; add bl, cl
0x080c6098:	lds eax, ptr [eax] ; add byte ptr [eax], al ; enter 0, 0 ; retf
0x080c62a4:	ret ; add al, byte ptr [eax] ; add bh, al ; add al, byte ptr [eax] ; add bl, cl
0x080c66bc:	rol dword ptr [edi], 0 ; add ch, al ; pop es ; add byte ptr [eax], al ; retf
0x080c6a44:	lds ecx, ptr [edx] ; add byte ptr [eax], al ; enter 0xa, 0 ; retf
0x080c6e44:	lds ecx, ptr [0xdc80000] ; add byte ptr [eax], al ; retf
0x080c7244:	lds edx, ptr [eax] ; add byte ptr [eax], al ; enter 0x10, 0 ; retf
0x080c75c0:	retf 1 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c7600:	enter 2, 0 ; add byte ptr [eax], al ; add byte ptr [eax], al ; retf
0x080c7f58:	retf 0x24 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c8448:	retf 0x33 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c8f48:	retf 0x1d4 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c96e8:	retf 0x1d5 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080cb539:	add ecx, dword ptr [eax + ecx] ; ror byte ptr [ecx], 0xc ; or byte ptr [ecx], al ; retf
0x080cb53d:	or dword ptr [eax + ecx], ecx ; add ebx, ecx ; or al, 8 ; add ebx, ecx
0x080cb541:	retf ; or al, 8 ; add ebx, ecx ; or al, 8 ; add ebx, ecx
0x080cba11:	mov byte ptr [edi], 8 ; into ; pop es ; or al, al ; retf
0x080cbf98:	add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; retf
0x080cbf9c:	add byte ptr [eax], al ; add byte ptr [eax], al ; retf ; jle 0xf ; or bl, cl
0x080cbfa0:	retf ; jle 0xb ; or bl, cl ; jle 0xf ; or bl, cl
0x080cbfc8:	retf ; jle 0xb ; or byte ptr [ebx + 0x7a], bh ; or byte ptr [eax], cl ; retf
0x080cbfcc:	jnp 0x7c ; or byte ptr [eax], cl ; retf ; jle 0xf ; or bl, cl
0x080cc004:	mov al, byte ptr [0x1a08088a] ; or dword ptr [eax], 8 ; retf
0x080cc008:	sbb al, byte ptr [ebx + 0x7ecb0808] ; or byte ptr [eax], cl ; retf
0x080cc0c4:	retf ; jle 0xb ; or byte ptr [eax], dh ; mov dword ptr [eax], ecx ; or bl, cl
0x080cc0c8:	xor byte ptr [ecx + 0x7ecb0808], cl ; or byte ptr [eax], cl ; retf
0x080cc0e4:	sbb dword ptr [esi - 0x7998f7f8], eax ; or byte ptr [eax], cl ; retf
0x080cc0e8:	xchg byte ptr [bx + si], cl ; or bl, cl ; jle 0xf ; or bl, cl
0x080cc0fc:	and cl, byte ptr [edi + 0x7ecb0808] ; or byte ptr [eax], cl ; retf
0x080cc18c:	mov esi, 0x7b08087a ; jp 0xf ; or bl, cl
0x080ce719:	add bh, bh ; add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [ecx], al ; retf
0x080cf019:	in eax, dx ; or al, 8 ; in al, -0x4c ; or al, 8 ; add ebx, ecx
0x080cf059:	insd dword ptr es:[edi], dx ; and eax, 0x662574 ; add byte ptr [ecx], al ; retf
0x080cffc2:	test al, 0xa7 ; inc ebx ; mov bx, 0xf32d ; retf
0x080d0027:	cmp al, 0x66 ; movsb byte ptr es:[edi], byte ptr [esi] ; sub eax, 0xea4ca798 ; retf
0x080d041f:	sub al, 1 ; xchg eax, edi ; add byte ptr [edi - 0x34b4067e], al
0x080d0468:	push esi ; xchg eax, ebp ; jge 0xffffffdd ; dec ebp ; push eax ; xor byte ptr [ecx], ah ; retf
0x080d04d6:	cmpsb byte ptr [esi], byte ptr es:[edi] ; jne 0xffffffc4 ; mov ecx, 0x5b92ac50 ; retf
0x080d05c0:	lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x080d0703:	inc ebx ; mov gs, ebp ; lodsb al, byte ptr [esi] ; xchg eax, edi ; jo 0x6d ; salc ; retf
0x080d0fa8:	wait ; pop eax ; pop edx ; xor dword ptr [edx - 0x3e], ecx ; dec ecx ; sbb ecx, ebx
0x080d12fb:	push eax ; mov bh, 0x4c ; out dx, eax ; push ecx ; test al, 0xf2 ; dec ebp ; retf
0x080d1daf:	or dword ptr [ebp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [esi] ; sbb edi, ebp ; retf
0x080d1e78:	jl 0xffffff92 ; push ss ; out dx, al ; out 0x78, al ; jnp 0x62 ; retf
0x080d1e9d:	pop edx ; je 0xffffffc7 ; ret 0xacfc ; loop 0xffffffcf ; retf
0x080d1fa9:	jecxz 0xffffffbb ; add dword ptr [edx - 0x36a5831f], esp ; retf
0x080d201e:	sub dword ptr [ebx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x080d2178:	xchg eax, ebp ; xor byte ptr [esi - 0x73e34314], ch ; retf
0x080d21e7:	and byte ptr [esi + 0x78476c17], ah ; pushal ; retf
0x080d23e1:	insb byte ptr es:[edi], dx ; add al, 0xe0 ; ja 0x26 ; dec eax ; scasb al, byte ptr es:[edi] ; adc ebx, ecx
0x080d28b7:	imul ebp, dword ptr [edi + 0x71], 0xb1da5aa0 ; aas ; retf
0x080d28d6:	sub dword ptr [esi], 0x76 ; retf ; mov ds, word ptr [edx + edx - 0x71] ; retf
0x080d4c11:	dec ecx ; xchg eax, edx ; and al, 0x49 ; xchg eax, edx ; and al, 9 ; or bl, cl
0x080d51f5:	mov esi, 0xc41efffc ; cld ; inc dword ptr [eax - 0x35]
0x080d5219:	int 0xfc ; inc dword ptr [eax - 0x33] ; cld ; inc dword ptr [eax - 0x35]
0x080d521d:	int 0xfc ; inc dword ptr [eax - 0x35] ; cld ; inc dword ptr [eax - 0x35]
0x080d5225:	retf ; cld ; dec dword ptr [eax - 0x77000335] ; retf
0x080d8b91:	add byte ptr [eax], al ; add al, bl ; xor al, 0 ; add byte ptr [eax], cl ; retf
0x080d8c1d:	add byte ptr [eax], al ; add byte ptr [ebp + esi], ah ; add byte ptr [ebx + ecx*8], ch
0x080d8c55:	add byte ptr [eax], al ; add byte ptr [ebp + esi - 0x341c0000], bl
0x080dca00:	inc esp ; jae 3 ; add byte ptr [edx + ebx*2], bh ; stc ; dec ebx
0x080dd480:	or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x4a ; or eax, dword ptr [ebx] ; retf
0x080ddb05:	add byte ptr [eax], al ; add byte ptr [esp + eax*4], cl ; add ah, dh ; retf
0x080ddb31:	add byte ptr [eax], al ; add byte ptr [eax - 0x7c], bh ; add byte ptr [eax], al ; clc ; retf
0x080de5c5:	add byte ptr [eax], al ; add byte ptr [edi + ecx*4], cl ; add byte ptr [eax], al ; add al, 0xcb
0x080de5d9:	add byte ptr [eax], al ; add byte ptr [eax], ah ; pop dword ptr [eax] ; add byte ptr [eax], dl ; retf
0x080de601:	add byte ptr [eax], al ; add byte ptr [eax - 0x71], cl ; add byte ptr [eax], al ; sbb bl, cl
0x080de629:	add byte ptr [eax], al ; add byte ptr [eax - 0x71], dh ; add byte ptr [eax], al ; and bl, cl
0x080decdd:	push cs ; loopne 5 ; dec edi ; push cs ; rol byte ptr [edx], 2 ; retf
0x080df02d:	push cs ; adc al, 0x83 ; add eax, 0x2280e43 ; retf
0x080e0351:	add byte ptr [eax], al ; add byte ptr [eax + 0x180000ac], bl ; retf
0x080e03bd:	add byte ptr [eax], al ; add byte ptr [ebp*4 - 0x34840000], al
0x080e0411:	add al, byte ptr [eax] ; add byte ptr [eax - 0x53], bl ; add byte ptr [eax], al ; fmul st(3)
0x080e4d31:	add byte ptr [eax], al ; add byte ptr [eax - 0xa], bh ; add byte ptr [eax], al ; mov bl, cl
0x0806261f:	ljmp -0x7af1:0xffff ; syscall
0x080b75ca:	cmp eax, 0xa7480cd ; cmp ax, 0x50f
0x080bb823:	add eax, 0x52c1008 ; or byte ptr [eax], dh ; syscall
0x080d2659:	mov dword ptr [ecx], esi ; fdiv st(2) ; scasd eax, dword ptr es:[edi] ; daa ; push esp ; syscall
0x0806c767:	push cs ; or byte ptr [eax + 1], bh ; int 0x80
0x0807a4b0:	nop ; pop eax ; mov eax, 0x77 ; int 0x80
0x080b75c4:	dec dword ptr [edi] ; mov bh, 0x40 ; add eax, 0x80cd3d66
0x080d2475:	add byte ptr [esi - 0x19], bh ; inc edi ; fstp xword ptr [edi] ; imul ecx, ebp, -0x80
0x080481c1:	call 0xf7fb7e3f ; add esp, 8 ; pop ebx ; ret
0x080483c2:	les ebx, ptr [eax + 0x5e5b0000] ; pop edi ; pop ebp ; ret
0x0804842b:	or edx, 0xffffffff ; jmp 0xffffffcc ; mov eax, edx ; pop ebx ; pop esi ; ret
0x08048478:	jmp 0xffffffcf ; mov dword ptr [eax], ebx ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; ret
0x080484c8:	add byte ptr [eax], al ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080485c7:	push cs ; or byte ptr [ebx + 0x5e5b2cc4], al ; pop edi ; pop ebp ; ret
0x08048791:	push cs ; or bh, bh ; rol byte ptr [ebx - 0xc36ef3c], 1 ; ret
0x080487cb:	push cs ; or bh, bh ; rol byte ptr [ebx - 0xc36ef3c], cl ; ret
0x0804880a:	mov byte ptr [0x80eaf80], 1 ; leave ; ret
0x08048896:	add byte ptr [ebx + 0x5d5904c4], al ; lea esp, dword ptr [ecx - 4] ; ret
0x08048bb5:	and eax, 0xf ; mov dword ptr [edx], eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08048c19:	stc ; arpl word ptr [ecx + 0x4d], ax ; inc esp ; sete al ; test al, bl
0x08048f79:	je 0xa ; add esp, 0x6c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080490b1:	inc esp ; cmp bh, bh ; div edi ; imul eax, edi ; mov ebx, eax
0x080492bc:	add byte ptr [eax], al ; mov dword ptr [0x80ea068], eax ; xor eax, eax ; ret
0x08049377:	jne 0xffffffe9 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080493fd:	mov eax, 0x80cd3cd ; cmovne esi, ebx ; mov ebx, eax
0x08049484:	add al, byte ptr [eax] ; add esp, 0x20 ; cmp eax, 0xff ; mov ebx, eax
0x0804953c:	sub al, 0xc3 ; nop ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08049593:	add esp, 0xc ; mov eax, ecx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080495f2:	or al, 0x31 ; leave ; pop ebx ; mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x08049618:	call 0xffffff28 ; cmp edi, 0xa ; mov ebx, eax
0x0804975c:	add al, 0x2b ; inc ebx ; add al, 0x83 ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x08049856:	fadd dword ptr [ecx] ; fnstcw word ptr [ecx] ; sti ; cmovb eax, ecx ; mov ebx, eax
0x08049eaf:	mov eax, 0x50f0e083 ; mov dword ptr [ebp - 0x44], eax ; mov ebx, eax
0x0804a04a:	in eax, dx ; add byte ptr [eax], al ; add esp, 0x10 ; test eax, eax ; mov ebx, eax
0x0804a21b:	mov dword ptr [ebp - 0x34], eax ; call 0x30125 ; mov ebx, eax
0x0804a2b7:	inc ebp ; mov al, 0xf ; test byte ptr [ebx - 0x76fffffd], bl ; ret
0x0804a395:	call 0x2ffab ; add esp, 0x10 ; mov ebx, eax
0x0804a4ec:	lea esp, dword ptr [ebp - 0xc] ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804a613:	mov dword ptr [ebp - 0x34], eax ; call 0x2fd2d ; mov ebx, eax
0x0804a7c6:	fsub dword ptr [0x80808080] ; je 0xfffffff2 ; mov ebx, eax
0x0804a7d4:	jmp 0x12 ; test eax, 0x8080 ; cmove eax, ebx
0x0804a800:	in eax, 0 ; add byte ptr [ebx - 0x3f7aef3c], al ; mov ebx, eax
0x0804a8ff:	call 0xffffedb1 ; add esp, 0xc ; mov ebx, eax
0x0804a92e:	call dword ptr [eax - 0x3076a8ab] ; push esi ; push ebx ; mov ebx, eax
0x0804aae1:	add byte ptr [ebx + 0x548b30c4], al ; and al, 0xc ; mov ebx, eax
0x0804ab9e:	nop ; nop ; push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x0804aca0:	add al, byte ptr [eax] ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ad28:	call 0x25918 ; cmp eax, 0xff ; mov ebx, eax
0x0804b2f2:	mov ebx, dword ptr [ebp - 0x94] ; bswap eax ; add ebx, eax
0x0804b301:	xchg eax, ebp ; rol byte ptr [eax + eax*8 - 0xce988c], 0x83 ; ret
0x0804bcc5:	cli ; js 0x77 ; sbb eax, 0xf58fa80 ; test eax, ebx
0x0804bff3:	xor al, ch ; ret 0xffff ; add esp, 0x1c ; ret
0x0804c2cb:	les edx, ptr [eax] ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804c43b:	lea esp, dword ptr [ebp - 0xc] ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804c56a:	add esp, 0x1c ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804c6b1:	in al, dx ; or al, 0x57 ; call 0xeb5f ; sub ebx, eax
0x0804c7a4:	lds eax, ptr [ecx] ; push esi ; call 0xea6c ; sub ebx, eax
0x0804c834:	mov byte ptr [ecx], 0x57 ; call 0xe9dc ; sub ebx, eax
0x0804c894:	mov byte ptr [ecx], 0x57 ; call 0xe97c ; sub ebx, eax
0x0804c985:	mov eax, ebp ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804c9b6:	test byte ptr [0x83ffffff], ah ; in al, dx ; or al, 0x83 ; ret
0x0804cbd9:	add esp, 0xc ; mov eax, ebp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804cc80:	cli ; je 0x180 ; mov ebx, eax
0x0804cce3:	cmp dl, 0x2e ; jne 0xfffffff5 ; cmp dl, 0x2e ; mov ebx, eax
0x0804cdcf:	inc esp ; rol dword ptr [ebx + 0x5e5b1cc4], 0x5f ; pop ebp ; ret
0x0804ce0c:	call 0xffffb3f4 ; add esp, 0x10 ; mov ebx, eax
0x0804ce3d:	jmp 0xffffff6a ; or esi, 2 ; mov ebx, eax
0x0804ce5d:	nop ; nop ; test eax, eax ; je 0x2b ; push ebx ; mov ebx, eax
0x0804ce80:	insb byte ptr es:[edi], dx ; les eax, ptr [eax] ; add byte ptr [ebx - 0xca4e73c], al ; ret
0x0804ceae:	add byte ptr [eax], al ; push ebp ; push edi ; mov ebp, edx ; push esi ; push ebx ; mov ebx, eax
0x0804cf16:	jne 0xfffffff3 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804cf32:	xor eax, eax ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804d05c:	lea esi, dword ptr [edi + esi - 4] ; lea eax, dword ptr [edx + eax - 2] ; cmp ebx, eax
0x0804d161:	add dword ptr [eax], eax ; add byte ptr [eax], al ; lea eax, dword ptr [esp + 0x30] ; cmp ebx, eax
0x0804d17c:	add al, 0 ; add byte ptr [ecx + 0x5f5e5bf0], cl ; pop ebp ; ret
0x0804d78a:	add byte ptr [eax], al ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804d7cf:	ror byte ptr [edi], 1 ; mov dh, 0x11 ; test dl, dl ; jne 0xffffffe8 ; ret
0x0804d80c:	mov dword ptr [edx + 0x14], ecx ; mov dword ptr [edx + 0xc], ebp ; mov dword ptr [edx + 0x18], eax ; ret
0x0804dbcd:	add byte ptr [eax], al ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804de50:	add eax, 4 ; mov dword ptr [eax - 4], edx ; add edx, edi ; cmp ebx, eax
0x0804ded7:	xor edx, edx ; sub esp, 4 ; div dword ptr [ebp + 0x10] ; mov ebx, eax
0x0804df5e:	les esp, ptr [eax] ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804e0ea:	add esp, 0x1c ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804e152:	sbb al, 0x31 ; fisttp dword ptr [ecx + 0x5f5e5bd8] ; pop ebp ; ret
0x0804e31d:	test eax, eax ; je 0x87 ; mov ebx, eax
0x0804e393:	mov dl, 0 ; add byte ptr [ebx - 0x3f7aef3c], al ; mov ebx, eax
0x0804e404:	add al, 0 ; add byte ptr [eax], al ; xor eax, eax ; add esp, 0xc ; ret
0x0804e4b8:	sub al, 0xe8 ; adc al, byte ptr [eax] ; add byte ptr [eax], al ; add esp, 0x2c ; ret
0x0804e5ec:	xor eax, eax ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804e650:	add esp, 0x2c ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804e756:	mov eax, 0xffffffff ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ea24:	and al, 0x44 ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ebc2:	and al, 0x40 ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ec02:	sbb al, 0xe8 ; mov eax, 0x8300001c ; les ebx, ptr [ebx + eax*8]
0x0804ed8e:	lea esp, dword ptr [ebp - 0xc] ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804ef1e:	adc dword ptr [ebp - 0x2f76079b], ecx ; pop ebx ; pop esi ; pop ebp ; ret
0x0804ef56:	add byte ptr [ebp - 0x2f76079b], cl ; pop ebx ; pop esi ; pop ebp ; ret
0x0804f007:	add byte ptr [eax], al ; lea edx, dword ptr [eax + 0x98] ; mov ebx, eax
0x0804f064:	or byte ptr [ebp + 9], dh ; add esp, 8 ; mov eax, ebx ; pop ebx ; ret
0x0804f092:	mov ch, 0xb ; or byte ptr [ebx - 0x2776f73c], al ; pop ebx ; ret
0x0804f09a:	pop ebx ; ret ; lea esi, dword ptr [esi] ; xor ebx, ebx ; jmp 0xffffffcd
0x0804f25e:	nop ; nop ; push ebp ; push edi ; mov ebp, edx ; push esi ; push ebx ; mov ebx, eax
0x0804f512:	mov eax, dword ptr [eax] ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804f8c0:	add byte ptr [eax], al ; add byte ptr [ecx + 0x5f5e5bd8], cl ; pop ebp ; ret
0x0804f955:	push dword ptr [esp + 8] ; push ebp ; call dword ptr [eax + 0x40] ; mov ebx, eax
0x0804f96b:	add byte ptr [eax], al ; mov esi, dword ptr [ebp + 0x1c] ; mov ecx, dword ptr [ebp + 0x58] ; mov ebx, eax
0x0804f9a8:	les ebx, ptr [eax + eax + 0x5e5b0000] ; pop edi ; pop ebp ; ret
0x0804f9ee:	add byte ptr [eax], al ; mov eax, dword ptr [ebp + 0x4c] ; mov edx, dword ptr [ebp + 0x50] ; mov ebx, eax
0x0804fa73:	add al, 0x21 ; clc ; mov edx, edi ; mov edi, dword ptr [ebp + 0x20] ; mov ebx, eax
0x0804faf9:	add esp, 0x10 ; mov edi, dword ptr [esp + 0x14] ; cdq ; mov ebx, eax
0x0804fb73:	and al, 0x89 ; push ebp ; push eax ; mov edx, dword ptr [esp + 4] ; mov ebx, eax
0x0804fba8:	mov edi, dword ptr [esp + 4] ; sar ebx, 2 ; imul eax, ebx
0x0804fbc7:	and al, 4 ; mov eax, dword ptr [ebp + 0x4c] ; mov edx, dword ptr [ebp + 0x50] ; mov ebx, eax
0x0804fc89:	sbb edi, edx ; mov eax, dword ptr [ebp + 0x4c] ; mov edx, dword ptr [ebp + 0x50] ; mov ebx, eax
0x0804fd78:	and al, 4 ; add esp, 0x9c ; mov ebx, eax
0x0804fd7f:	add byte ptr [ecx + 0x5bd889c3], cl ; pop esi ; pop edi ; pop ebp ; ret
0x0804ff00:	push 0 ; push 0 ; push ebp ; call dword ptr [eax + 0x40] ; mov ebx, eax
0x0805017e:	pop esi ; ret ; mov eax, dword ptr [eax] ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x080501b6:	add byte ptr es:[ebx + 0x14c48302], cl ; pop ebx ; pop esi ; ret
0x08050226:	add esp, 8 ; mov eax, 0xffffffff ; pop ebx ; ret
0x08050384:	dec edx ; adc al, 0x83 ; les edi, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x080503b0:	add esp, 0x3c ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080504ba:	mov eax, dword ptr [esp + 0x14] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080507f1:	sub eax, ebx ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08050808:	call 0x3adb8 ; add esp, 0x10 ; sub ebx, eax
0x080508e6:	dec eax ; add byte ptr [eax], al ; add byte ptr [eax], al ; sub esp, 0xc ; mov ebx, eax
0x0805094c:	fld dword ptr [edx] ; add byte ptr [ebx - 0x3f7aef3c], al ; mov ebx, eax
0x08050992:	les ebp, ptr [eax + eax + 0x5e5b0000] ; pop edi ; pop ebp ; ret
0x080509a8:	add byte ptr [ebx - 0x3f7aef3c], al ; mov dword ptr [esi], eax ; je 0xffffffcd
0x08050b78:	cmp eax, 0xfc ; je 0xfffffff8 ; mov ecx, dword ptr [ebp + 8] ; mov ebx, eax
0x08050b84:	jne 0x3c ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08050cd1:	or edi, edx ; mov eax, ebx ; mov dword ptr [esi], edi ; pop ebx ; pop esi ; pop edi ; ret
0x08050d0a:	mov esp, 0x27 ; add byte ptr [ecx], dh ; shr bl, 0xc3
0x08050d46:	inc ebx ; dec esp ; mov dword ptr [ebx + 0x50], edx ; add esp, 8 ; pop ebx ; ret
0x08050d72:	or byte ptr [0xfffff000], bh ; ja 0xe ; pop ebx ; ret
0x08050dbf:	mov dword ptr [ebx + 8], eax ; mov eax, ebx ; add esp, 8 ; pop ebx ; ret
0x08050e16:	mov dword ptr [ebx + 8], eax ; add esp, 8 ; mov eax, ebx ; pop ebx ; ret
0x08050e32:	add al, ah ; mov ch, 0xb ; or byte ptr [ebx - 0x3ca4f73c], al
0x08050e3d:	je 0x28 ; add byte ptr [edi + 0x56], dl ; mov edi, edx ; push ebx ; mov ebx, eax
0x08050e9f:	sbb byte ptr [ecx + 0x10c483f0], cl ; pop ebx ; pop esi ; pop edi ; ret
0x08051071:	mov dh, 0 ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051081:	mov dh, 2 ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051288:	add byte ptr [eax], al ; add byte ptr [ecx + 0x5f5e5bf8], cl ; pop ebp ; ret
0x0805152d:	add byte ptr [ecx - 0x776a439], cl ; pop esi ; pop edi ; pop ebp ; ret
0x08051668:	jmp 0xffffff26 ; lea esi, dword ptr [esi] ; cmp ebx, eax
0x080517dc:	nop ; nop ; nop ; nop ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08051876:	add esp, 0x7c ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051a48:	add al, 0x89 ; inc ebx ; or byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x08051a7c:	add byte ptr [eax], al ; add byte ptr [eax], al ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x08051ad2:	or ecx, dword ptr [eax] ; add esp, 0x6c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051c5f:	add ebp, eax ; mov ebx, 0x830001b3 ; les ebx, ptr [ebx + eax*8]
0x08051cf7:	pop esi ; push eax ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051d69:	sub eax, edi ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08051ed6:	add esp, 0x1c ; pop ebx ; pop esi ; sub eax, ebp ; pop edi ; pop ebp ; ret
0x0805208b:	mov eax, esi ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080520bb:	sbb edx, edi ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805211e:	jae 0x12 ; movzx eax, byte ptr [eax] ; add esp, 8 ; pop ebx ; ret
0x08052190:	or byte ptr [0xfffff000], bh ; ja 0x28 ; pop ebx ; ret
0x0805222e:	sub eax, edi ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08052448:	add byte ptr [ebx - 0xf76ef3c], al ; pop ebx ; pop esi ; pop edi ; ret
0x08052473:	call 0x1abdd ; add esp, 0x10 ; mov ebx, eax
0x080524c5:	je 0x28 ; add al, ch ; jae 0xffffffe7 ; add dword ptr [eax], eax ; mov ebx, eax
0x08052533:	or al, 0x65 ; mov dword ptr [esi], edi ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x08052572:	movzx eax, al ; neg eax ; add esp, 8 ; pop ebx ; ret
0x08052750:	xor eax, eax ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08052882:	js 0xffffffd6 ; mov ebx, edi ; cmp bl, 2 ; setbe bl
0x08052a20:	add esp, 0x3c ; pop ebx ; mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x08052a5e:	add byte ptr [eax], al ; or esi, 0x80 ; mov ebx, eax
0x08052a6e:	jbe 2 ; and edi, 0x1000 ; mov ebx, eax
0x08052b02:	and al, 0x18 ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08052c63:	pop esp ; mov eax, esi ; movzx eax, al ; pop ebx ; pop esi ; pop edi ; ret
0x080530d2:	mov ah, 0xe ; or al, ch ; mov edx, 0xc3f30001
0x080530e1:	push edi ; push esi ; push ebx ; mov esi, 0 ; mov ebx, eax
0x0805325b:	les edx, ptr [eax] ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08053318:	pop es ; jmp 0xfffffdc8 ; nop ; ret
0x0805348a:	add esp, 0x10 ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0805351e:	enter 0x4f0f, -0x3f ; test edx, edx ; jne 0xfffffffa ; ret
0x0805354c:	mov dword ptr [eax + 0x24], ecx ; mov dword ptr [eax + 0xc], edx ; mov dword ptr [eax + 4], edx ; ret
0x0805357e:	pop eax ; or al, 0x89 ; dec eax ; and al, 0x89 ; push eax ; add al, 0x5b ; ret
0x080535c0:	adc byte ptr [ecx - 0x7c3fceed], cl ; les ecx, ptr [eax] ; pop ebx ; ret
0x0805363f:	sub byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3ca4e73c], al
0x0805371f:	jbe 0xffffffa4 ; movzx eax, byte ptr [eax] ; add esp, 8 ; pop ebx ; ret
0x08053824:	push ebx ; add al, 0xf ; mov dh, 0 ; add esp, 8 ; pop ebx ; ret
0x0805387b:	or eax, 1 ; mov dword ptr [ebx], eax ; add esp, 8 ; pop ebx ; ret
0x08053888:	and eax, 0xfffffffe ; mov dword ptr [ebx], eax ; add esp, 8 ; pop ebx ; ret
0x080538b8:	dec ebx ; sbb al, 0x85 ; leave ; je 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x08053902:	sbb al, 0x89 ; jnp 0x24 ; mov dword ptr [ebx], eax ; pop ebx ; pop esi ; pop edi ; ret
0x0805392c:	les edx, ptr [eax] ; jmp 0xffffffd1 ; mov eax, 0xffffffff ; ret
0x08053a1c:	add esp, 0xc ; pop ebx ; sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08053a30:	add esp, 0xc ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08053a8a:	adc al, 1 ; mov byte ptr [edi + eax], dl ; add eax, 1 ; cmp ebx, eax
0x08053ab8:	add esp, 0xc ; pop ebx ; pop esi ; sub eax, ebp ; pop edi ; pop ebp ; ret
0x08053b58:	inc ebx ; or al, 0 ; add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x08053bb9:	and al, 0x2c ; push eax ; call dword ptr [edx + 0x24] ; add esp, 0x2c ; ret
0x08053c0a:	les edx, ptr [eax + edi*4] ; add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; pop esi ; ret
0x08053d7b:	add bh, al ; inc eax ; or byte ptr [eax], al ; add byte ptr [eax], al ; add bl, dh ; ret
0x08053e8b:	add bh, al ; inc eax ; pop esp ; add byte ptr [eax], al ; add byte ptr [eax], al ; pop ebx ; ret
0x08053e9e:	inc edi ; inc eax ; pop esp ; add byte ptr [eax], al ; add byte ptr [eax], al ; pop ebx ; ret
0x08053ea9:	lea esi, dword ptr [esi] ; xor eax, eax ; ret
0x08053f07:	test byte ptr [ebx], 0x80 ; jne 0x11 ; add esp, 8 ; pop ebx ; ret
0x08053f95:	add eax, dword ptr [ebx - 0x3b7c10dd] ; add al, 0x5b ; pop esi ; ret
0x08053fc8:	inc eax ; inc dword ptr [ebx - 0x3b7c10dd] ; or byte ptr [ebx - 0x3d], bl
0x08053fea:	cmp eax, 0xff ; jne 0xffffffe0 ; add esp, 8 ; pop ebx ; ret
0x0805402a:	jne 0xfffffff6 ; mov eax, dword ptr [esp + 8] ; add eax, ebx ; pop ebx ; ret
0x08054035:	je 0x28 ; add byte ptr [ecx], ch ; rol byte ptr [ebx - 0x3ca4fe18], 1
0x08054201:	add esp, 0x2c ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080543a2:	and al, 0xc ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805454e:	add byte ptr [eax], al ; cmp edx, 0x200 ; jne 0xffffffcd
0x08054619:	push es ; mov dword ptr [ebx + 0x30], esi ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0805466c:	mov edx, eax ; mov eax, dword ptr [edx] ; test eax, eax ; jne 0xfffffffc ; ret
0x08054685:	push esp ; and al, 8 ; mov eax, dword ptr [eax + 8] ; sub eax, dword ptr [edx + 8] ; ret
0x080546a5:	or ch, byte ptr [ebx] ; push eax ; or al, 0x8b ; inc ecx ; or byte ptr [ecx], ch ; rol bl, 1
0x080546af:	nop ; sub edx, dword ptr [eax + 8] ; mov eax, dword ptr [ecx + 8] ; sub eax, edx ; ret
0x080546b5:	or byte ptr [ecx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x080546fa:	add edx, ecx ; mov dword ptr [eax + 4], edx ; xor eax, eax ; pop ebx ; pop esi ; ret
0x0805473e:	jbe 2 ; mov eax, 0xffffffff ; pop ebx ; pop esi ; ret
0x080547a3:	dec dword ptr [ecx + 0x5f880446] ; dec dword ptr [edi] ; mov dh, 0xc3
0x080547ab:	mov dh, 0xc3 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080548cc:	lea esi, dword ptr [esi] ; mov eax, 0xffffffff ; ret
0x080548dc:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 0xffffffff ; ret
0x080548e9:	lea edi, dword ptr [edi] ; xor eax, eax ; ret
0x08054908:	add byte ptr [ebp + 0x27bc], cl ; add byte ptr [eax], al ; ret
0x0805491c:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, dword ptr [0x80ea080] ; ret
0x0805493e:	add byte ptr [eax], al ; mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x34] ; ret
0x0805494b:	add byte ptr es:[eax], al ; add byte ptr [eax], al ; mov eax, dword ptr [esp + 4] ; ret
0x08054999:	push cs ; or byte ptr [ebx + 0xeb4c005], al ; or byte ptr [ecx], al ; ret
0x080549da:	mov ah, 0xe ; or al, ch ; mov eax, dword ptr cs:[0xc3f30001]
0x08054a05:	add eax, 0x80eb4c4 ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x08054a36:	add al, 0x39 ; fidiv dword ptr [ebx + 0x1d] ; movzx eax, byte ptr [edx] ; pop ebx ; ret
0x08054a55:	add byte ptr [eax], al ; add byte ptr [eax - 1], bh ; pop ebx ; ret
0x08054a7b:	neg eax ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08054b9b:	imul ecx, dword ptr [eax], -0x7d ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08054cd4:	mov eax, ebx ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08054ce2:	sub al, 0x31 ; fisttp dword ptr [ecx + 0x5f5e5bd8] ; pop ebp ; ret
0x08054db8:	add esp, 0xc ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08054dd5:	adc byte ptr [ecx + 0x5b0cc483], bl ; pop esi ; pop edi ; pop ebp ; ret
0x08054e85:	or al, 0x83 ; les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; cdq ; pop ebp ; ret
0x08054fd6:	add byte ptr [eax], al ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08055058:	inc edx ; or byte ptr [edi], cl ; inc ebx ; inc edx ; or byte ptr [ebx], ch ; inc edx ; or al, 0xc3
0x0805509b:	or edx, 2 ; or edx, 1 ; mov dword ptr [eax + 4], edx ; ret
0x080550b6:	add byte ptr [eax], al ; pop ebx ; or edx, 1 ; mov dword ptr [eax + 4], edx ; ret
0x0805513a:	adc byte ptr [ebx + 0x5e5b04c4], al ; pop edi ; pop ebp ; ret
0x08055224:	add esp, 8 ; pop ebx ; mov eax, ebp ; pop esi ; pop edi ; pop ebp ; ret
0x08055232:	add esp, 8 ; mov eax, ebp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805543b:	add dword ptr [eax], eax ; add esp, 0x20 ; cmp eax, 0xff ; mov ebx, eax
0x08055471:	or byte ptr [ecx - 0x2776f38d], cl ; pop ebx ; pop esi ; pop edi ; ret
0x080555fe:	rol dword ptr [0x80ea504], 0x29 ; sti ; add ebx, eax
0x08055605:	sti ; add ebx, eax ; mov eax, dword ptr [0x80ea508] ; cmp ebx, eax
0x0805561b:	mov eax, ecx ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080556aa:	jae 6 ; and esi, 0xfffffff8 ; lea ebx, dword ptr [esi - 0x11] ; cmp ebx, eax
0x080556b4:	jbe 0x10 ; mov edi, dword ptr [0x80eaa08] ; sub ebx, eax
0x08055814:	mov dword ptr [ebx], edx ; add esp, 4 ; mov eax, edx ; pop ebx ; pop esi ; ret
0x0805583a:	call 0xffff2b92 ; nop ; push esi ; push ebx ; mov ebx, eax
0x0805586b:	mov eax, dword ptr [eax] ; add byte ptr [eax], al ; add esp, 0x24 ; pop ebx ; pop esi ; ret
0x080558d3:	inc dword ptr [ebx - 0x3b7cdf3c] ; and al, 0x5b ; pop esi ; ret
0x0805599a:	or al, 0x8d ; inc esp ; add eax, 0x60c8d10 ; add ebx, eax
0x080559e1:	pop esi ; add al, 0x83 ; les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08055aff:	or byte ptr [ecx - 0x74f3dbbc], cl ; inc ebp ; add al, 0x89 ; ret
0x08055b17:	add dword ptr [ebp + 0x46], esi ; mov eax, dword ptr [ebp] ; sub ebp, eax ; add ebx, eax
0x08055d2f:	dec dword ptr [ecx - 0x7cf7dbbc] ; loopne 0 ; mov ebx, eax
0x08055dbb:	push 0x1c688b08 ; add dword ptr [eax + 4], ebx ; mov ebx, eax
0x08055ddc:	je 0xa ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08055e0a:	inc edi ; and al, 0x83 ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08055e3c:	clc ; and ecx, 2 ; je 0x64 ; mov edx, dword ptr [eax] ; mov ebx, eax
0x08055e76:	add byte ptr [ebx - 0x3b7cef3c], al ; add al, 0x5b ; pop esi ; ret
0x08055e96:	inc dword ptr [ebx - 0x3b7cef3c] ; add al, 0x5b ; pop esi ; ret
0x08055fa1:	cmp edx, eax ; je 0x4cf ; cmp ebx, eax
0x08055fc5:	les edx, ptr [eax] ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08055fe2:	add byte ptr [eax], al ; mov eax, dword ptr [ebp + 0x30] ; lea edi, dword ptr [ebx + esi] ; cmp ebx, eax
0x0805603a:	test byte ptr [ebx + 4], 1 ; jne 0x76 ; mov eax, dword ptr [ebx] ; sub ebx, eax
0x0805619b:	lea ebx, dword ptr [ecx - 8] ; add eax, ebx ; and eax, 7 ; sub ebx, eax
0x08056270:	pop ecx ; clc ; lea eax, dword ptr [edi + ebx] ; and eax, 7 ; sub ebx, eax
0x08056324:	add dword ptr [eax], eax ; mov eax, dword ptr [ebp + 0x30] ; lea edi, dword ptr [ebx + esi] ; cmp ebx, eax
0x08056ac6:	add eax, dword ptr [eax] ; add byte ptr [ecx], ch ; clc ; lea edx, dword ptr [ecx + edi] ; mov ebx, eax
0x08056af4:	add esp, 0x2c ; mov eax, ecx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08056b4b:	and al, 4 ; lea ebx, dword ptr [eax + edi + 3] ; neg eax ; and ebx, eax
0x08056cb3:	or byte ptr [ecx], al ; sti ; mov eax, dword ptr [0x80ea508] ; cmp ebx, eax
0x08056d1b:	add eax, edx ; and eax, ebx ; test eax, eax ; mov edx, eax ; mov ebx, eax
0x08056dfe:	sub al, 0x31 ; leave ; pop ebx ; mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x080570be:	add eax, dword ptr [esp + 0xc] ; and eax, dword ptr [esp + 0x14] ; mov ebx, eax
0x08057268:	add eax, esi ; cmpxchg dword ptr [edi + 8], ebx ; cmp esi, eax ; mov ebx, eax
0x08057293:	cmp eax, ebx ; je 0x1f2 ; mov ebx, eax
0x0805744f:	adc byte ptr [ebp - 0x74cf7aa4], cl ; inc ebx ; or byte ptr [ecx], bh ; ret
0x080574a6:	add esp, 0x5c ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080574cb:	xor byte ptr [ecx - 0x74efdb84], cl ; inc ebx ; or byte ptr [ecx], bh ; ret
0x0805750f:	add byte ptr [eax], al ; mov edx, dword ptr [eax + 0x14] ; mov dword ptr [esi + 0x10], eax ; mov ebx, eax
0x080578b5:	je 0x44 ; mov edx, dword ptr [0x80eb51c] ; mov ebx, eax
0x08057c42:	ror byte ptr [ebx], 8 ; jmp 0xfffffca3 ; cmp ebx, eax
0x08057c9a:	push edi ; add ecx, 0xb ; push esi ; push ebx ; mov edi, ecx ; mov ebx, eax
0x08057e02:	les ebx, ptr [ecx*4 + 0x5e5b0843] ; pop edi ; pop ebp ; ret
0x08057e15:	mov dword ptr gs:[eax], 0xc ; xor eax, eax ; ret
0x08057ef9:	add byte ptr [eax], al ; add byte ptr [ebx - 0x3fcef73c], al ; pop ebx ; ret
0x0805801a:	add byte ptr [eax], al ; add esp, 4 ; xor eax, eax ; pop ebx ; pop esi ; ret
0x0805802e:	mov dword ptr [eax], 0xc ; jmp 0xffffffee ; mov ebx, eax
0x080580b0:	call 0x16a60 ; add esp, 8 ; pop ebx ; ret
0x080581c1:	inc ebx ; or byte ptr [ebx + 0x5e5b1cc4], al ; pop edi ; pop ebp ; ret
0x08058305:	add esp, 0x1c ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080587dd:	add al, 0 ; add byte ptr [ecx + 0x80eb4f8], ah ; cmp ebx, eax
0x080587e9:	cmp edx, eax ; je 0x16a ; mov ebx, eax
0x080587f6:	jbe 2 ; mov ebx, dword ptr [ebx + 0x440] ; cmp ebx, eax
0x080588a6:	test ecx, ecx ; jne 0x28a ; cmp ebx, eax
0x08058bba:	and bl, byte ptr [edi + 1] ; add byte ptr [eax + 0x80ea520], bh ; ret
0x08058bc1:	push cs ; or bl, al ; lea esi, dword ptr [esi] ; xor eax, eax ; ret
0x08058bf9:	inc dword ptr [ebp - 0x7cfa8b40] ; les ecx, ptr [eax] ; pop ebx ; ret
0x08058c49:	add eax, 0x80ea4d0 ; adc byte ptr [edi + 5], bh ; or bl, al
0x08058cc3:	and byte ptr [ebp - 0x288af7f2], ah ; pop ebx ; pop esi ; ret
0x08058d1c:	mov ch, 0xe ; or al, ch ; in al, dx ; pop ebp ; add dword ptr [eax], eax ; ret
0x08058da5:	adc byte ptr [ebp + 0x80e], dh ; add byte ptr [eax], al ; ret
0x08058dd1:	add eax, 0x80eb500 ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x08058e63:	jne 0x79 ; mov eax, edx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08058ec9:	rol byte ptr [ebx - 0x3b7cef3c], 1 ; add al, 0x5b ; pop esi ; ret
0x080590da:	add dword ptr [eax], eax ; mov eax, esi ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080591ad:	push ss ; add dword ptr [eax], eax ; add byte ptr [ecx + 0x5f5e5bd0], cl ; ret
0x08059285:	push eax ; call edx ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x080592db:	ret 0x80b ; call 0xffffc0b5 ; mov ebx, eax
0x0805936f:	push ecx ; call eax ; add esp, 0x10 ; add esp, 0xc ; ret
0x080594e9:	fst dword ptr [ebp - 0x46] ; fdivr qword ptr [edx + 0x4be8080b] ; ret
0x08059641:	je 0x17 ; xor edx, edx ; mov eax, esi ; div ecx ; cmp ebx, eax
0x0805967c:	add al, ch ; into ; sar bh, 0xff ; test eax, eax ; mov ebx, eax
0x0805986e:	les edx, ptr [eax] ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08059962:	inc ebp ; ret 0xc483 ; sbb al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x08059974:	loopne 0xfffffffa ; pop ebx ; sub eax, 8 ; pop esi ; pop edi ; pop ebp ; ret
0x08059980:	add esp, 0x1c ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08059b17:	dec edi ; add dword ptr [eax], eax ; add esp, 8 ; mov eax, edx ; pop ebx ; ret
0x08059da3:	test dword ptr [ebx - 0x7c000002], ebx ; in al, dx ; add al, 0x83 ; ret
0x0805a3be:	xor eax, eax ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805a528:	or al, 0 ; add byte ptr [eax], al ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; ret
0x0805a5c0:	and al, 0x1c ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805a9cc:	jo 0x3e ; add esp, 0x5c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805ab82:	mov eax, dword ptr [edx + 4] ; mov edx, dword ptr [edx + 8] ; add edi, eax ; cmp ebx, eax
0x0805aca3:	test byte ptr [eax], cl ; add dword ptr [eax], eax ; add byte ptr [ebx - 0x3c76cfb9], cl
0x0805ad4a:	or dword ptr [eax], eax ; add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x0805adfd:	test bl, 3 ; je 0x13 ; add esp, 8 ; pop ebx ; ret
0x0805ae48:	add esp, 8 ; mov eax, 0x16 ; pop ebx ; ret
0x0805ae68:	test edx, edx ; je 0x10 ; mov eax, 0x16 ; ret
0x0805ae91:	cmp eax, 0xff ; cmove eax, edx ; add esp, 0x1c ; ret
0x0805aec1:	add byte ptr [esi + eax - 0x73], dh ; add eax, 0x8067940 ; ret
0x0805b058:	sti ; add byte ptr [ecx + eax + 0x40], dh ; pop ebp ; pop ebx ; pop esi ; pop edi ; ret
0x0805b0bd:	add byte ptr [ebp + 6], dh ; lea eax, dword ptr [0x80616f0] ; ret
0x0805b0dd:	or dword ptr [ecx + 0x42], eax ; test al, al ; jne 0xfffffffb ; xor eax, eax ; ret
0x0805b0eb:	add byte ptr [ecx - 1], bh ; cmovb eax, ecx ; ret
0x0805b12d:	add byte ptr [esi + eax - 0x73], dh ; add eax, 0x8063c80 ; ret
0x0805b1c1:	mov byte ptr [edi], ah ; mov eax, dword ptr [esp + 0x10] ; pop ebx ; pop esi ; pop edi ; ret
0x0805b2c1:	stc ; add byte ptr [ecx + eax + 0x40], dh ; sub eax, dword ptr [esp + 4] ; ret
0x0805b399:	mov eax, edi ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805b722:	les ecx, ptr [esp + eax] ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x0805b7e5:	add al, 0 ; add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x0805b842:	add esi, 1 ; cmp dl, al ; sete al ; and ebx, eax
0x0805b8c5:	les edx, ptr [eax] ; add esp, 0x5c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805b978:	add esp, 0x5c ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0805ba46:	or al, 0x8d ; sub al, 8 ; add ebp, dword ptr [esp + 0x10] ; cmp ebx, eax
0x0805bb75:	mov dword ptr [esp + 0x14], eax ; mov eax, dword ptr [esp + 0x20] ; cmp ebx, eax
0x0805bc75:	add byte ptr [esi + ecx - 0x73], dh ; add eax, 0x8067e30 ; ret
0x0805bc7c:	push es ; or bl, al ; lea eax, dword ptr [0x805bc90] ; ret
0x0805bc83:	add eax, 0x58dc308 ; mov al, byte ptr [0xc3080683]
0x0805be21:	add byte ptr [eax], al ; inc dword ptr [eax] ; je 7 ; inc eax ; pop edi ; pop esi ; ret
0x0805be51:	add byte ptr [esi + eax - 0x73], dh ; add eax, 0x80630f0 ; ret
0x0805be73:	mov dh, 8 ; cmp cl, byte ptr [edx] ; jne 0xa ; xor eax, eax ; pop ebx ; ret
0x0805be7a:	rcr byte ptr [ebx - 0x3d], 0x19
0x0805be8f:	add al, byte ptr [eax] ; add al, ch ; leave ; enter -2, -0x7f ; ret
0x0805bf0d:	test dword ptr [0x5e000002], eax ; xor eax, eax ; pop ebx ; ret
0x0805bf81:	test dword ptr [ebp + 0x5e000001], esp ; xor eax, eax ; pop ebx ; ret
0x0805c08c:	test dword ptr [edx + 0x5e000000], ebx ; xor eax, eax ; pop ebx ; ret
0x0805c129:	cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; pop esi ; pop ebx ; ret
0x0805c17f:	add byte ptr [esi + eax - 0x73], dh ; add eax, 0x805ec80 ; ret
0x0805c1b3:	rep movsd dword ptr es:[edi], dword ptr [esi] ; mov esi, edx ; mov eax, dword ptr [esp + 8] ; pop edi ; ret
0x0805c1de:	movsd dword ptr es:[edi], dword ptr [esi] ; mov esi, edx ; mov eax, dword ptr [esp + 8] ; cld ; pop edi ; ret
0x0805c211:	add byte ptr [esi + eax - 0x73], dh ; add eax, 0x805fd40 ; ret
0x0805c259:	mov ecx, edx ; rep stosb byte ptr es:[edi], al ; mov eax, dword ptr [esp + 8] ; pop edi ; ret
0x0805c288:	jae 4 ; movsw word ptr es:[edi], word ptr [esi] ; rep movsd dword ptr es:[edi], dword ptr [esi] ; xchg eax, edi ; mov esi, edx ; ret
0x0805c2cd:	add byte ptr [esi + eax - 0x73], dh ; add eax, 0x80654d0 ; ret
0x0805c365:	mov dword ptr [ecx], 0xf8892788 ; pop ebx ; pop esi ; pop edi ; ret
0x0805c39d:	add byte ptr [ebp + 6], dh ; lea eax, dword ptr [0x806b180] ; ret
0x0805c3fc:	pop eax ; mov edi, eax ; mov esi, edx ; mov eax, dword ptr [esp + 4] ; ret
0x0805c435:	add byte ptr [esi + ecx - 0x73], dh ; add eax, 0x80686f0 ; ret
0x0805c43c:	push es ; or bl, al ; lea eax, dword ptr [0x805c450] ; ret
0x0805c443:	add eax, 0x58dc308
0x0805c50c:	rol dword ptr [eax], 0 ; inc dword ptr [eax] ; je 8 ; inc eax ; pop edi ; ret
0x0805c675:	leave ; je 8 ; cmp cl, dl ; je 8 ; inc eax ; pop edi ; ret
0x0805c6c0:	inc edx ; clc ; mov dword ptr [edx - 4], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805c6e3:	inc edx ; sti ; mov byte ptr [edx - 1], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805c704:	cli ; mov word ptr [edx - 2], ax ; mov eax, dword ptr [esp + 4] ; ret
0x0805c727:	inc edx ; std ; mov byte ptr [edx - 1], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805c94e:	movdqa xmmword ptr [edx - 0x10], xmm0 ; mov eax, dword ptr [esp + 4] ; ret
0x0805c981:	inc edx ; out dx, eax ; mov byte ptr [edx - 1], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805c9b2:	out dx, al ; mov word ptr [edx - 2], ax ; mov eax, dword ptr [esp + 4] ; ret
0x0805ca11:	inc edx ; in al, dx ; mov dword ptr [edx - 4], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805cae3:	movq qword ptr [edx - 8], xmm0 ; mov eax, dword ptr [esp + 4] ; ret
0x0805cb47:	mul byte ptr [esi - 0x77] ; inc edx ; dec byte ptr [ebx - 0x3cfbdbbc]
0x0805cbc6:	inc edx ; hlt ; mov dword ptr [edx - 4], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805cbdf:	movdqa xmmword ptr [edx - 0x4d], xmm0 ; movdqa xmmword ptr [edx - 0x3d], xmm0
0x0805e2c3:	dec eax ; cld ; mov dword ptr [edx - 4], ecx ; mov eax, dword ptr [esp + 4] ; ret
0x0805e317:	dec edx ; sti ; mov dword ptr [edx - 4], eax ; mov eax, dword ptr [esp + 4] ; ret
0x0805e36a:	dec eax ; dec dword ptr [eax + 0x448bff4a] ; and al, 4 ; ret
0x0805e492:	dec edx ; std ; mov byte ptr [edx - 1], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805e931:	add al, 0x8b ; or byte ptr [ecx + 0x24448b0a], cl ; add al, 0xc3
0x0805e96b:	add byte ptr [esi + 0xf], ah ; salc ; add cl, byte ptr [ebx - 0x3cfbdbbc]
0x0805e9b8:	movzx ecx, byte ptr [eax] ; mov byte ptr [edx], cl ; mov eax, dword ptr [esp + 4] ; ret
0x0805ea49:	mov bh, 8 ; mov word ptr [edx], cx ; mov eax, dword ptr [esp + 4] ; ret
0x0805eae0:	movzx eax, byte ptr [eax] ; mov byte ptr [edx], al ; mov eax, dword ptr [esp + 4] ; ret
0x0805fa98:	push es ; mov byte ptr [edi], al ; pop esi ; pop edi ; mov eax, dword ptr [esp + 4] ; ret
0x0805ff0c:	je 4 ; mov byte ptr [edi], al ; pop edi ; mov eax, dword ptr [esp + 4] ; ret
0x0806059a:	lea esi, dword ptr [esi] ; pcmpeqb xmm0, xmm3
0x0806157a:	mov esp, 0x27 ; add byte ptr [esi + 0xf], ah ; je 0xffffffcd
0x08061621:	mov dh, 0x48 ; pop es ; movzx eax, byte ptr [edx + 7] ; sub eax, ecx ; ret
0x0806162f:	add byte ptr [edi], cl ; mov dh, 8 ; movzx eax, byte ptr [edx] ; sub eax, ecx ; ret
0x08061681:	mov dh, 0x48 ; add eax, 0x542b60f ; sub eax, ecx ; ret
0x08061691:	mov dh, 0x48 ; push es ; movzx eax, byte ptr [edx + 6] ; sub eax, ecx ; ret
0x080616e0:	mov eax, 1 ; ja 9 ; neg eax ; ret
0x080616e3:	add byte ptr [eax], al ; ja 6 ; neg eax ; ret ; xor eax, eax ; ret
0x080619ff:	sal byte ptr [edi - 0x7d], 0xef ; add dword ptr [ecx], esi ; idiv byte ptr [eax] ; ret
0x08061a28:	out 0xf, eax ; mov dh, 0xfb ; sub eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x08062b85:	movzx edx, byte ptr [esi - 9] ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062b94:	movzx edx, byte ptr [esi - 0x10] ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062ba4:	movzx edx, byte ptr [esi - 0xf] ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bb4:	movzx edx, byte ptr [esi - 0xe] ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bc4:	movzx edx, byte ptr [esi - 0xd] ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bd4:	movzx edx, byte ptr [esi - 0xc] ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062be4:	movzx edx, byte ptr [esi - 0xb] ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062bf4:	movzx edx, byte ptr [esi - 0xa] ; sub eax, edx ; pop edi ; pop esi ; pop ebx ; ret
0x08062e97:	add byte ptr [eax], al ; jne 0x229 ; pop ebx ; ret
0x08062f54:	add byte ptr [eax], al ; jne 0x18c ; pop ebx ; ret
0x0806300f:	add byte ptr [eax], al ; jne 0xd1 ; pop ebx ; ret
0x0806318a:	lea esi, dword ptr [esi] ; pop ebx ; xor eax, eax ; ret
0x080631a1:	push cs ; movzx eax, byte ptr [eax] ; movzx edx, byte ptr [edx] ; sub eax, edx ; ret
0x080631a9:	rol bl, 1 ; nop ; lea esi, dword ptr [esi] ; xor eax, eax ; ret
0x08063285:	add byte ptr [eax], al ; jne 0x9cb ; pop ebx ; ret
0x0806330e:	add byte ptr [eax], al ; jne 0x958 ; pop ebx ; ret
0x080633a9:	add byte ptr [eax], al ; jne 0x8bd ; pop ebx ; ret
0x08063457:	add byte ptr [eax], al ; jne 0x80f ; pop ebx ; ret
0x080634d5:	add byte ptr [eax], al ; jne 0x77b ; pop ebx ; ret
0x08063552:	add byte ptr [eax], al ; jne 0x714 ; pop ebx ; ret
0x080635dd:	add byte ptr [eax], al ; jne 0x689 ; pop ebx ; ret
0x0806367b:	add byte ptr [eax], al ; jne 0x5eb ; pop ebx ; ret
0x08063703:	add byte ptr [eax], al ; jne 0x54d ; pop ebx ; ret
0x08063790:	add byte ptr [eax], al ; jne 0x4d6 ; pop ebx ; ret
0x0806382b:	add byte ptr [eax], al ; jne 0x43b ; pop ebx ; ret
0x080638d9:	add byte ptr [eax], al ; jne 0x38d ; pop ebx ; ret
0x08063971:	add byte ptr [eax], al ; jne 0x2df ; pop ebx ; ret
0x0806397b:	nop ; lea esi, dword ptr [esi] ; movdqu xmm1, xmmword ptr [eax - 0x3d]
0x08063980:	movdqu xmm1, xmmword ptr [eax - 0x3d] ; movdqu xmm2, xmmword ptr [edx - 0x3d]
0x08063a0e:	add byte ptr [eax], al ; jne 0x258 ; pop ebx ; ret
0x08063ab9:	add byte ptr [eax], al ; jne 0x1ad ; pop ebx ; ret
0x08063b77:	add byte ptr [eax], al ; jne 0xef ; pop ebx ; ret
0x08063c03:	fnstcw word ptr [eax] ; jne 0x4d ; pop ebx ; ret
0x08063c37:	fnstcw word ptr [eax] ; jne 0x19 ; pop ebx ; ret
0x08063e16:	xor dword ptr [eax], edx ; movaps xmmword ptr [edx + esi], xmm2 ; pcmpeqb xmm0, xmm3
0x08063eda:	pcmpeqb mm3, mm0 ; lea ecx, dword ptr [ecx + 0x40] ; pmovmskb eax, xmm3
0x0806517e:	add byte ptr [eax], al ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edi ; pop edi ; ret
0x080651b2:	adc al, byte ptr [ecx] ; movlpd qword ptr [edx], xmm0 ; mov eax, edi ; pop edi ; ret
0x080651f8:	movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 8], eax ; mov eax, edi ; pop edi ; ret
0x08065232:	outsd dx, dword ptr [esi] ; add ebx, esi ; movq qword ptr [edx], mm0 ; mov eax, edi ; pop edi ; ret
0x0806523e:	add byte ptr es:[edx - 0x76fd77ff], cl ; clc ; pop edi ; ret
0x08065250:	mov ax, word ptr [ecx] ; mov word ptr [edx], ax ; mov eax, edi ; pop edi ; ret
0x08065266:	mov al, byte ptr [ecx + 2] ; mov byte ptr [edx + 2], al ; mov eax, edi ; pop edi ; ret
0x08065274:	mov al, byte ptr [ecx + 4] ; mov byte ptr [edx + 4], al ; mov eax, edi ; pop edi ; ret
0x08065286:	inc ecx ; add al, 0x66 ; mov dword ptr [edx + 4], eax ; mov eax, edi ; pop edi ; ret
0x08065294:	mov eax, dword ptr [ecx + 3] ; mov dword ptr [edx + 3], eax ; mov eax, edi ; pop edi ; ret
0x080652a8:	movlps qword ptr [edx], xmm0 ; mov byte ptr [edx + 8], al ; mov eax, edi ; pop edi ; ret
0x080652ca:	adc eax, dword ptr [edx] ; mov word ptr [edx + 8], ax ; mov eax, edi ; pop edi ; ret
0x080652e8:	movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 7], eax ; mov eax, edi ; pop edi ; ret
0x0806530c:	add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 5] ; mov eax, edi ; pop edi ; ret
0x0806532c:	add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 6] ; mov eax, edi ; pop edi ; ret
0x0806534c:	add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 7] ; mov eax, edi ; pop edi ; ret
0x0806535d:	add byte ptr [eax], al ; add byte ptr [edx - 0x76fd77ff], cl ; rol bl, 1
0x0806538d:	rol bl, 1 ; nop ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edx ; ret
0x080653a3:	add cl, byte ptr [edx + 0x42880441] ; add al, 0x89 ; rol bl, 1
0x080653b5:	mov eax, dword ptr [ecx + 4] ; mov word ptr [edx + 4], ax ; mov eax, edx ; ret
0x080653d1:	movlps xmm0, qword ptr [ecx] ; movlpd qword ptr [edx], xmm0 ; mov eax, edx ; ret
0x080653e7:	movlpd qword ptr [edx], xmm0 ; mov byte ptr [edx + 8], al ; mov eax, edx ; ret
0x08065409:	movlps qword ptr [edx], xmm0 ; mov word ptr [edx + 8], ax ; mov eax, edx ; ret
0x08065427:	movlpd qword ptr [edx], xmm0 ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x08065447:	movlpd qword ptr [edx], xmm0 ; mov dword ptr [edx + 8], eax ; mov eax, edx ; ret
0x0806546b:	adc eax, dword ptr [edx] ; movlpd qword ptr [edx + 5], xmm1 ; mov eax, edx ; ret
0x0806548b:	adc eax, dword ptr [edx] ; movlpd qword ptr [edx + 6], xmm1 ; mov eax, edx ; ret
0x080654ab:	adc eax, dword ptr [edx] ; movlpd qword ptr [edx + 7], xmm1 ; mov eax, edx ; ret
0x080654c1:	movq mm0, qword ptr [ecx] ; movdqu xmmword ptr [edx], xmm0 ; mov eax, edx ; ret
0x080669cf:	add byte ptr [ebx - 0x72fd76ff], cl ; inc edx ; add ebx, dword ptr [edi - 0x3d]
0x08066a03:	add dword ptr [esi + 0xf], esp ; adc eax, dword ptr [edx] ; lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x08066a49:	adc eax, dword ptr [edx] ; mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 0xb] ; pop edi ; ret
0x08066a83:	add ebx, esi ; movq qword ptr [edx], mm0 ; lea eax, dword ptr [edx + 0xf] ; pop edi ; ret
0x08066a8e:	jbe 2 ; mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; pop edi ; ret
0x08066aa1:	mov eax, dword ptr [ecx] ; mov word ptr [edx], ax ; lea eax, dword ptr [edx + 1] ; pop edi ; ret
0x08066ab7:	inc ecx ; add cl, byte ptr [eax + 0x428d0242] ; add bl, byte ptr [edi - 0x3d]
0x08066ad5:	inc ecx ; add al, 0x88 ; inc edx ; add al, 0x8d ; inc edx ; add al, 0x5f ; ret
0x08066ae7:	add al, 0x66 ; mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 5] ; pop edi ; ret
0x08066b05:	inc ecx ; add ecx, dword ptr [ecx + 0x428d0342] ; push es ; pop edi ; ret
0x08066b19:	adc eax, dword ptr [edx] ; mov byte ptr [edx + 8], al ; lea eax, dword ptr [edx + 8] ; pop edi ; ret
0x08066b3b:	add ah, byte ptr [esi - 0x77] ; inc edx ; or byte ptr [ebp - 0x3ca0f6be], cl
0x08066b59:	adc eax, dword ptr [edx] ; mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; pop edi ; ret
0x08066b7d:	movlpd qword ptr [edx + 5], xmm1 ; lea eax, dword ptr [edx + 0xc] ; pop edi ; ret
0x08066b9d:	movlpd qword ptr [edx + 6], xmm1 ; lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x08066bbd:	movlpd qword ptr [edx + 7], xmm1 ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08066bcd:	add byte ptr [eax], al ; add byte ptr [edx - 0x72fd77ff], cl ; add al, bl
0x08066be0:	mov ax, word ptr [ecx] ; mov word ptr [edx], ax ; lea eax, dword ptr [edx + 1] ; ret
0x08066bf6:	mov al, byte ptr [ecx + 2] ; mov byte ptr [edx + 2], al ; lea eax, dword ptr [edx + 2] ; ret
0x08066bfe:	add al, bl ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; ret
0x08066c14:	mov al, byte ptr [ecx + 4] ; mov byte ptr [edx + 4], al ; lea eax, dword ptr [edx + 4] ; ret
0x08066c26:	inc ecx ; add al, 0x66 ; mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 5] ; ret
0x08066c34:	mov eax, dword ptr [ecx + 3] ; mov dword ptr [edx + 3], eax ; lea eax, dword ptr [edx + 6] ; ret
0x08066c42:	adc al, byte ptr [ecx] ; movlpd qword ptr [edx], xmm0 ; lea eax, dword ptr [edx + 7] ; ret
0x08066c58:	movlps qword ptr [edx], xmm0 ; mov byte ptr [edx + 8], al ; lea eax, dword ptr [edx + 8] ; ret
0x08066c7a:	adc eax, dword ptr [edx] ; mov word ptr [edx + 8], ax ; lea eax, dword ptr [edx + 9] ; ret
0x08066c98:	movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; ret
0x08066cb8:	movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 0xb] ; ret
0x08066cdc:	add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 5] ; lea eax, dword ptr [edx + 0xc] ; ret
0x08066cfc:	add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 6] ; lea eax, dword ptr [edx + 0xd] ; ret
0x08066d1c:	add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 7] ; lea eax, dword ptr [edx + 0xe] ; ret
0x08066d32:	outsd dx, dword ptr [esi] ; add ebx, esi ; movq qword ptr [edx], mm0 ; lea eax, dword ptr [edx + 0xf] ; ret
0x08066e43:	adc bl, dh ; movq qword ptr [edx + ebx], mm2 ; pcmpeqb xmm0, xmm3
0x08066f07:	fcmovu st(0), st(2) ; pcmpeqb xmm3, xmm0 ; pmovmskb eax, xmm3
0x08066f45:	fcmovu st(0), st(7) ; pminub xmm3, xmm2 ; pcmpeqb xmm0, xmm3
0x08066ff5:	mov eax, dword ptr [ecx + 4] ; mov dword ptr [edx + 4], eax ; mov eax, edi ; pop edi ; ret
0x0806704b:	or byte ptr [esi + 0xf], ah ; adc eax, dword ptr [edx + 8] ; mov eax, edi ; pop edi ; ret
0x0806705e:	add byte ptr [eax], al ; mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; mov eax, edi ; pop edi ; ret
0x0806708e:	pop edi ; ret ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edi ; pop edi ; ret
0x080670da:	mov al, byte ptr [ecx + 8] ; mov byte ptr [edx + 8], al ; mov eax, edi ; pop edi ; ret
0x0806711a:	mov eax, dword ptr [ecx + 7] ; mov dword ptr [edx + 7], eax ; mov eax, edi ; pop edi ; ret
0x0806713a:	mov eax, dword ptr [ecx + 8] ; mov dword ptr [edx + 8], eax ; mov eax, edi ; pop edi ; ret
0x0806715c:	add eax, 0x42130f66 ; add eax, 0xc35ff889
0x0806717c:	push es ; movlpd qword ptr [edx + 6], xmm0 ; mov eax, edi ; pop edi ; ret
0x0806719c:	pop es ; movlpd qword ptr [edx + 7], xmm0 ; mov eax, edi ; pop edi ; ret
0x08067223:	add cl, byte ptr [ebx + 0x42890441] ; add al, 0x89 ; rol bl, 1
0x08067239:	add al, 0x8a ; inc ecx ; or byte ptr [eax - 0x2f76f7be], cl ; ret
0x0806725b:	mov eax, dword ptr [ecx + 8] ; mov word ptr [edx + 8], ax ; mov eax, edx ; ret
0x08067279:	add al, 0x8b ; inc ecx ; pop es ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x08067299:	add al, 0x8b ; inc ecx ; or byte ptr [ecx - 0x2f76f7be], cl ; ret
0x080672db:	inc ecx ; push es ; movlpd qword ptr [edx + 6], xmm0 ; mov eax, edx ; ret
0x080672fb:	inc ecx ; pop es ; movlpd qword ptr [edx + 7], xmm0 ; mov eax, edx ; ret
0x0806731b:	inc ecx ; or byte ptr [esi + 0xf], ah ; adc eax, dword ptr [edx + 8] ; mov eax, edx ; ret
0x080675e6:	inc ecx ; add al, 0x89 ; inc edx ; add al, 0x8d ; inc edx ; pop es ; pop edi ; ret
0x0806763c:	movlpd qword ptr [edx + 8], xmm0 ; lea eax, dword ptr [edx + 0xf] ; pop edi ; ret
0x0806764e:	add byte ptr [eax], al ; mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; pop edi ; ret
0x0806768f:	nop ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; pop edi ; ret
0x080676eb:	inc ecx ; or byte ptr [eax + 0x428d0842], cl ; or byte ptr [edi - 0x3d], bl
0x0806770d:	or byte ptr [esi - 0x77], ah ; inc edx ; or byte ptr [ebp - 0x3ca0f6be], cl
0x0806772b:	inc ecx ; pop es ; mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; pop edi ; ret
0x0806774b:	inc ecx ; or byte ptr [ecx + 0x428d0842], cl ; or ebx, dword ptr [edi - 0x3d]
0x0806776d:	movlpd qword ptr [edx + 5], xmm0 ; lea eax, dword ptr [edx + 0xc] ; pop edi ; ret
0x0806778d:	movlpd qword ptr [edx + 6], xmm0 ; lea eax, dword ptr [edx + 0xd] ; pop edi ; ret
0x080677ad:	movlpd qword ptr [edx + 7], xmm0 ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x08067834:	mov eax, dword ptr [ecx + 4] ; mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 7] ; ret
0x0806784a:	mov al, byte ptr [ecx + 8] ; mov byte ptr [edx + 8], al ; lea eax, dword ptr [edx + 8] ; ret
0x0806788a:	mov eax, dword ptr [ecx + 7] ; mov dword ptr [edx + 7], eax ; lea eax, dword ptr [edx + 0xa] ; ret
0x080678aa:	mov eax, dword ptr [ecx + 8] ; mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 0xb] ; ret
0x080678cc:	add eax, 0x42130f66 ; add eax, 0xc30c428d
0x080678ec:	push es ; movlpd qword ptr [edx + 6], xmm0 ; lea eax, dword ptr [edx + 0xd] ; ret
0x0806790c:	pop es ; movlpd qword ptr [edx + 7], xmm0 ; lea eax, dword ptr [edx + 0xe] ; ret
0x0806792c:	or byte ptr [esi + 0xf], ah ; adc eax, dword ptr [edx + 8] ; lea eax, dword ptr [edx + 0xf] ; ret
0x08067a98:	test dword ptr [ebx + 2], esi ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x08067ade:	test dword ptr [0x8d000002], ebp ; inc edi ; add ebx, dword ptr [edi - 0x3d]
0x08067b3b:	test edx, eax ; add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0f0b9], cl
0x08067b81:	test dword ptr [edx - 0x72ffffff], ecx ; inc edi ; or ebx, dword ptr [edi - 0x3d]
0x08067bc7:	test eax, esp ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f8b9], cl
0x08067c1a:	test esp, ecx ; add byte ptr [eax], al ; add byte ptr [ebp - 0x3ca0f0b9], cl
0x08067c2a:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edi] ; pop edi ; ret
0x08067c3b:	mov edi, 0 ; lea eax, dword ptr [edi + 1] ; pop edi ; ret
0x08067c4b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 2] ; pop edi ; ret
0x08067c5b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 3] ; pop edi ; ret
0x08067c6b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 4] ; pop edi ; ret
0x08067c7b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x08067c8b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x08067c9b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x08067cab:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x08067cbb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x08067ccb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xb] ; pop edi ; ret
0x08067cdb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xc] ; pop edi ; ret
0x08067ceb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x08067cfb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xe] ; pop edi ; ret
0x08067d70:	lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; add byte ptr [ecx], al ; clc ; add eax, ecx ; pop edi ; ret
0x08067e11:	enter 0xc77, -0x7d ; out dx, eax ; adc byte ptr [ecx], al ; clc ; pop edi ; ret
0x08067e1a:	ret ; nop ; lea esi, dword ptr [esi] ; xor eax, eax ; pop edi ; ret
0x08067efd:	pcmpeqb mm3, mm1 ; lea ecx, dword ptr [ecx + 0x10] ; pmovmskb eax, xmm3
0x08067ffe:	pop edi ; and byte ptr [esi + 0xf], ah ; je 0xffffffdf ; pmovmskb eax, xmm3
0x08068040:	test dword ptr [ebx], ebx ; add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0fcb9], cl
0x08068063:	test dword ptr [eax], ebp ; add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0f8b9], cl
0x0806808d:	test dword ptr [esi], ebp ; add dword ptr [eax], eax ; add byte ptr [ebp - 0x3ca0f4b9], cl
0x080680b6:	test dword ptr [0x8d000001], esi ; inc edi ; maxps xmm0, xmm3
0x08068132:	jne 0xce ; xor eax, eax ; pop edi ; ret
0x0806813a:	pop edi ; ret ; lea esi, dword ptr [esi] ; mov eax, edi ; pop edi ; ret
0x08068296:	xor ch, 0 ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xb] ; pop edi ; ret
0x080682bf:	or ah, 0 ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xf] ; pop edi ; ret
0x080682ca:	mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, edi ; pop edi ; ret
0x08068310:	sub edx, 6 ; jb 0x80 ; lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x08068320:	sub edx, 7 ; jb 0x70 ; lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x08068330:	sub edx, 9 ; jb 0x60 ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x08068340:	sub edx, 0xa ; jb 0x50 ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x08068350:	sub edx, 0xb ; jb 0x40 ; lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x08068360:	sub edx, 0xd ; jb 0x30 ; lea eax, dword ptr [edi + 0xc] ; pop edi ; ret
0x08068370:	sub edx, 0xe ; jb 0x20 ; lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x08068380:	sub edx, 0xf ; jb 0x10 ; lea eax, dword ptr [edi + 0xe] ; pop edi ; ret
0x080683d9:	bsf ecx, ecx ; sub edx, ecx ; jbe 0x37 ; add eax, ecx ; ret
0x08068511:	pop edi ; xor byte ptr [esi + 0xf], ah ; je 0xffffffdf ; pmovmskb eax, xmm3
0x08068596:	fldenv dword ptr [esi + 0xf] ; je 0x54 ; xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x080685ab:	ror dword ptr [edi], -0x44 ; ror byte ptr [ebp + 0x5f300744], 0xc3
0x0806861a:	jne 0xb6 ; xor eax, eax ; pop edi ; ret
0x08068650:	xlatb ; rol dword ptr [ebp + 0x315a75c0], -0x40 ; pop edi ; ret
0x0806866d:	add byte ptr [eax], al ; add byte ptr [edi], cl ; mov esp, 0x5ff801c0 ; ret
0x0806867f:	add byte ptr [edi], cl ; mov esp, 0x38448dc0 ; adc byte ptr [edi - 0x3d], bl
0x0806868f:	add byte ptr [edi], cl ; mov esp, 0x38448dc0 ; and byte ptr [edi - 0x3d], bl
0x080686a1:	mov esp, 0x76c229c0 ; cmp dword ptr [ecx], eax ; clc ; pop edi ; ret
0x080686b6:	sub edx, eax ; jbe 0x2a ; lea eax, dword ptr [edi + eax + 0x10] ; pop edi ; ret
0x080686c6:	sub edx, eax ; jbe 0x1a ; lea eax, dword ptr [edi + eax + 0x20] ; pop edi ; ret
0x080686d6:	sub edx, eax ; jbe 0xa ; lea eax, dword ptr [edi + eax + 0x30] ; pop edi ; ret
0x080686da:	lea eax, dword ptr [edi + eax + 0x30] ; pop edi ; ret ; xor eax, eax ; pop edi ; ret
0x08068875:	pop edx ; and byte ptr [esi + 0xf], ah ; je 0xffffffdf ; pmovmskb eax, xmm3
0x080688bf:	jne 0xa1 ; lea eax, dword ptr [edx + 3] ; ret
0x080688e2:	jne 0xae ; lea eax, dword ptr [edx + 7] ; ret
0x0806890c:	jne 0xb4 ; lea eax, dword ptr [edx + 0xb] ; ret
0x08068935:	jne 0xbb ; lea eax, dword ptr [edx + 0xf] ; ret
0x08068939:	add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xf] ; ret ; nop ; mov eax, edx ; ret
0x0806895a:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 2] ; ret
0x0806896a:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 4] ; ret
0x0806897a:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 5] ; ret
0x0806898a:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 6] ; ret
0x0806899a:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 8] ; ret
0x080689aa:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 9] ; ret
0x080689ba:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 0xa] ; ret
0x080689ca:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 0xc] ; ret
0x080689da:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 0xd] ; ret
0x080689ea:	lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 0xe] ; ret
0x08068a3d:	test ecx, ecx ; je 0x13 ; bsf ecx, ecx ; add eax, ecx ; ret
0x08068a88:	je 0x18 ; bsf eax, eax ; add eax, edx ; add eax, ecx ; ret
0x08068b4f:	pop edx ; xor byte ptr [esi + 0xf], ah ; je 0xffffffdf ; pmovmskb eax, xmm3
0x08068bc5:	fldenv dword ptr [esi + 0xf] ; je 0x4f ; xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x08068bde:	ret ; nop ; bsf eax, eax ; lea eax, dword ptr [eax + edx - 0x10] ; ret
0x08068bec:	add byte ptr [eax], al ; add byte ptr [eax], al ; bsf eax, eax ; add eax, edx ; ret
0x08068bfe:	add byte ptr [eax], al ; bsf eax, eax ; lea eax, dword ptr [eax + edx + 0x10] ; ret
0x08068c0e:	add byte ptr [eax], al ; bsf eax, eax ; lea eax, dword ptr [eax + edx + 0x20] ; ret
0x08068c6a:	sub dword ptr [ebx], 4 ; mov bl, 0x74 ; loopne 0x62 ; pop esi ; pop edi ; ret
0x08068c74:	lea esi, dword ptr [esi] ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; ret
0x0806afe0:	lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; add dh, dh ; shl dword ptr [eax], 0xf ; test eax, ebx
0x0806b005:	mov eax, dword ptr [eax*4 + 0x80c03c0] ; sub eax, ecx ; ret
0x0806b153:	add byte ptr [eax], al ; ja 6 ; neg eax ; add esp, 4 ; ret
0x0806b156:	add dh, bh ; fadd dword ptr [ebx + 0x31c304c4]
0x0806b47a:	or byte ptr [ecx], ch ; enter 0x5f5e, -0x3d ; xor eax, eax ; pop edi ; ret
0x0806b491:	add dword ptr [eax], eax ; add byte ptr [eax], al ; ja 8 ; neg eax ; pop edi ; ret
0x0806ba6d:	cmp eax, 0x89000003 ; rcr byte ptr [edi + 0x5e], 1 ; pop ebx ; ret
0x0806bda8:	or ah, bh ; mov dword ptr [edx + ecx - 4], ebx ; mov eax, edx ; pop ebx ; ret
0x0806beec:	add al, 0 ; add byte ptr [eax], al ; cpuid ; mov ebp, ebx ; mov ebx, eax
0x0806bf99:	xchg eax, esp ; inc esp ; and al, 0xc ; cmp edx, 1 ; sete bl
0x0806bfea:	add byte ptr [eax], al ; lea eax, dword ptr [ebx + 1] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806c014:	inc ecx ; add al, 0x83 ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0806c189:	sub al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret ; nop ; xor eax, eax ; ret
0x0806c1fe:	jbe 2 ; xor eax, eax ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806c284:	add byte ptr [eax], al ; add byte ptr [eax], al ; and ch, 0xf0 ; cmovne eax, ebx
0x0806c3bd:	je 0x1b ; cmp edx, 2 ; je 0x13 ; xor eax, eax ; ret
0x0806c46f:	pop ebp ; push edi ; add byte ptr [eax], al ; xor eax, eax ; add esp, 0x1c ; ret
0x0806c484:	mov dword ptr [eax], edx ; mov eax, dword ptr [esp + 0xc] ; add esp, 0x1c ; ret
0x0806c48c:	sbb al, 0xc3 ; nop ; xor eax, eax ; add esp, 0x1c ; ret
0x0806c49e:	add byte ptr [eax], al ; push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x0806c67a:	mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; push esi ; push ebx ; mov ebx, eax
0x0806c6c1:	add dword ptr [eax + 8], 1 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806c72d:	test edx, edx ; je 0x23 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806c741:	les eax, ptr [eax + edi*4] ; add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; pop esi ; ret
0x0806c7c5:	call 0xfffeea4b ; mov ecx, dword ptr [ebp - 0x80] ; mov ebx, eax
0x0806c837:	mov dword ptr [edi], esi ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806c985:	add eax, dword ptr [eax] ; pop ebx ; sub eax, 1 ; pop esi ; pop edi ; pop ebp ; ret
0x0806c99a:	les edx, ptr [eax] ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806c9cf:	cli ; add byte ptr [eax], al ; or byte ptr [eax], al ; cmovae eax, ecx ; jmp 0xffffffcd
0x0806c9e3:	mov eax, 0x31069 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806cf98:	call 0x36a8 ; cmp eax, 0xff ; mov ebx, eax
0x0806cfe5:	dec dword ptr [edi] ; inc esp ; inc esp ; and al, 0x18 ; add esp, 0x2c ; ret
0x0806d003:	or byte ptr [0xfffff000], bh ; ja 0xd ; pop ebx ; ret
0x0806d1d0:	call 0x3470 ; add esp, 8 ; pop ebx ; ret
0x0806d264:	add bl, ch ; cmpsb byte ptr [esi], byte ptr es:[edi] ; call 0x33dc ; mov ebx, eax
0x0806d2c3:	les edi, ptr [eax + eax + 0x5e5b0000] ; pop edi ; pop ebp ; ret
0x0806d35f:	add byte ptr [eax], al ; add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x0806d909:	cmp al, 0x74 ; push esi ; mov eax, dword ptr [esp + 0x3c] ; push edi ; sub ebx, eax
0x0806da60:	js 0xffffffba ; add esp, 4 ; mov eax, ebx ; pop ebx ; pop esi ; ret
0x0806da6c:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, esi ; neg eax ; cmp ebx, eax
0x0806da81:	or byte ptr [edx - 0x3f7af7f2], ch ; je 0xa ; ret
0x0806dac5:	add byte ptr [edi], cl ; dec ecx ; inc esp ; and al, 0x18 ; add esp, 0x2c ; ret
0x0806db74:	ja 0x11 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806dc30:	push edi ; push esi ; mov esi, edx ; push ebx ; mov edx, dword ptr [eax + 4] ; mov ebx, eax
0x0806dc80:	push ebx ; call esi ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0806dcaa:	mov esp, 0x27 ; add byte ptr [esi + 0x53], dl ; mov ebx, eax
0x0806dcde:	push cs ; mov dh, 0xfe ; inc dword ptr [ebx + 0x5e5b14c4] ; ret
0x0806dd59:	aaa ; mov edi, dword ptr [esp + 0x20] ; test ebx, ebx ; setg bl
0x0806dd60:	setg bl ; mov ebp, ebx ; test edi, edi ; setg bl
0x0806dda4:	mov dword ptr [edi], eax ; add esp, 8 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806df21:	mov eax, ebx ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806df59:	mov dword ptr [eax], edi ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806dfa2:	adc byte ptr [ebp - 0x72e68b40], al ; push ebx ; add al, 0x83 ; ret
0x0806dfb4:	test ebx, ebx ; jne 0xffffffe4 ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; ret
0x0806dfbc:	pop edi ; ret ; nop ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0806e0cb:	sub byte ptr [ebp - 0x74ffd98c], cl ; inc ebp ; in al, -0x7d ; ret
0x0806e3b8:	test byte ptr [ebp + 0x27bc], 0 ; add bl, dh ; ret
0x0806e3e0:	dec dword ptr [ebp + 0x26b4] ; add byte ptr [eax], al ; ret
0x0806e434:	mov eax, edi ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806e5b9:	cmp ebx, 1 ; ja 0xfffffff7 ; mov eax, esi ; imul eax, ebx
0x0806e5d5:	stc ; add dword ptr [ebp - 9], esi ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0806e5e8:	dec eax ; push 0 ; call 0x206a8 ; mov ebx, eax
0x0806e5f5:	mov eax, dword ptr [0x80eb528] ; add esp, 0x10 ; cmp ebx, eax
0x0806e704:	push cs ; or byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x0806e8c0:	add byte ptr [ebx - 0x3f7aef3c], al ; je 0x86 ; mov ebx, eax
0x0806e996:	add byte ptr fs:[eax], al ; add byte ptr [ebp - 0x3dbbf040], al ; ret
0x0806e9d0:	mov al, byte ptr [0x83080ea9] ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x0806ea26:	push esp ; and al, 0xc ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0806eacc:	xor eax, eax ; cmp edx, dword ptr [esp + 4] ; setae al ; ret
0x0806eb02:	xchg dword ptr [ebx], eax ; test eax, eax ; jne 0xfffffff3 ; pop esi ; pop ebx ; pop edx ; ret
0x0806eb0b:	ret ; lea esi, dword ptr [esi] ; push ebx ; push ecx ; push edx ; mov ebx, eax
0x0806eb2a:	call dword ptr [0x80ea9f0] ; pop edx ; pop ecx ; pop ebx ; ret
0x0806eb59:	mov cl, 0xd ; test byte ptr [eax], al ; add byte ptr [eax], al ; cmp edx, eax ; mov ebx, eax
0x0806eb68:	cmp ecx, 0xa ; je 0x1c ; add esp, 8 ; pop ebx ; ret
0x0806ebe4:	adc eax, dword ptr [ebx + 0x5e5b0cc4] ; pop edi ; pop ebp ; ret
0x0806ecb9:	xor eax, eax ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806ed21:	mov edx, dword ptr [edx + eax*4 - 4] ; test edx, edx ; je 0x7f ; cmp ebx, eax
0x0806ed72:	jg 0xffffffde ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0806ed88:	xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret ; nop ; cmp ebx, eax
0x0806f057:	push ebx ; mov esi, eax ; mov ecx, 5 ; mov ebx, eax
0x0806f098:	inc dword ptr [ebx - 0x1d14ef3c] ; nop ; ret
0x0806f34e:	or byte ptr [ebx + 0x5e5b4cc4], al ; pop edi ; pop ebp ; ret
0x0806f548:	add al, ch ; xchg eax, edx ; insd dword ptr es:[edi], dx ; add al, byte ptr [eax] ; test eax, eax ; mov ebx, eax
0x0806f928:	call 0xfffde768 ; test eax, eax ; cmove eax, ebx
0x0806f947:	call 0xfffde749 ; test eax, eax ; cmove eax, ebx
0x0806f966:	call 0xfffde72a ; test eax, eax ; cmove eax, ebx
0x0806facd:	in eax, -3 ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x0806fb6f:	jne 0xffffffe9 ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08070431:	ficomp word ptr [ebx - 0x48] ; add dword ptr [eax], eax ; add byte ptr [eax], al ; pop esi ; pop edi ; ret
0x08070450:	mov eax, dword ptr [0x80ebcc8] ; test eax, eax ; je 0x10 ; ret
0x08070461:	sub esp, 8 ; call 0x20eff ; mov ebx, eax
0x08070468:	add byte ptr [ecx + 0xee0e8c3], cl ; add al, byte ptr [eax] ; cmp ebx, eax
0x0807047a:	adc eax, 0x80e9fcc ; add esp, 8 ; pop ebx ; ret
0x08070485:	je 0x28 ; add al, ch ; push cs ; add al, byte ptr [eax] ; mov ebx, eax
0x0807048e:	ret ; call 0x20ee2 ; xor edx, edx ; cmp ebx, eax
0x08070512:	add esp, 0x1d0 ; pop ebx ; pop esi ; pop edi ; ret
0x0807052d:	stc ; shl ecx, 3 ; pop ebx ; shl eax, cl ; pop esi ; pop edi ; ret
0x08070647:	fsub dword ptr [ebp - 0x77] ; add bh, byte ptr [eax - 1] ; ret
0x08070af7:	add byte ptr [eax], al ; push ebp ; push edi ; mov edi, edx ; push esi ; push ebx ; mov ebx, eax
0x08070d74:	dec dword ptr [ebp - 0x3b7cff8a] ; add al, 0x5b ; pop esi ; ret
0x08070d7c:	pop esi ; ret ; nop ; mov eax, dword ptr [0x80ebcd4] ; ret
0x08070d8c:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, dword ptr [0x80ebcdc] ; ret
0x08070de5:	add byte ptr [eax], al ; add byte ptr [eax], al ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08071293:	mov dword ptr [esi + 8], ecx ; mov esi, dword ptr [esi + 0x18] ; test esi, esi ; jne 0xffffffcd
0x080713c3:	rol byte ptr [eax], 0 ; add byte ptr [eax], al ; mov esi, dword ptr [ebp - 0x3c] ; add ebx, eax
0x0807151c:	js 0 ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x080715d0:	mov eax, ebx ; add esi, 1 ; add ebx, 0x3c
0x080717bf:	mov ebx, dword ptr [ebp - 0x30] ; jbe 0x1c ; imul eax, esi, 0x3c ; add ebx, eax
0x0807186c:	lea esi, dword ptr [esi] ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x080718ad:	and al, 4 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0807190a:	mov eax, dword ptr [eax] ; mov eax, dword ptr [eax + 4] ; test eax, eax ; cmove eax, ebx
0x08071c9e:	mov dword ptr [ebx], edi ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08071f34:	jbe 0 ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x08072058:	jne 0xffffffe7 ; add esp, 4 ; xor eax, eax ; pop ebx ; pop esi ; ret
0x08072097:	inc dword ptr [ebx - 0x3f7aef3c] ; je 0x4b ; mov ebx, eax
0x08072527:	test dword ptr [ecx], eax ; add byte ptr [ebx - 0x3f7aef3c], al ; mov ebx, eax
0x0807267b:	mov dword ptr [eax], ecx ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080728b9:	ljmp 0x3046:0x895b080b ; pop esi ; pop edi ; ret
0x08072af4:	inc esp ; adc dword ptr [ebx + ecx*4], eax ; pop es ; add edx, 1 ; cmp ebx, eax
0x08072b0f:	mov dword ptr [ecx], edx ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08072b9f:	add esp, 0x3c ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08072be7:	les esi, ptr [eax] ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08072c1a:	jmp 0xd ; or al, ch ; into ; push 0xc389fffd
0x08072cd8:	je 0x10 ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08072d15:	les esi, ptr [eax] ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08072e70:	mov eax, dword ptr [esp + 0x6c] ; sub ebx, esi ; sub eax, edx ; cmp ebx, eax
0x08072e73:	insb byte ptr es:[edi], dx ; sub ebx, esi ; sub eax, edx ; cmp ebx, eax ; cmovle eax, ebx
0x08072f74:	inc esp ; push ss ; add al, 0x8b ; add dword ptr [ebx - 0x3cc6fe3e], eax
0x080732df:	add esp, 0x3c ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080734d8:	je 0x10 ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08073912:	and al, 4 ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08073a1d:	mov dword ptr [esp + 4], 6 ; jne 0xffffffcd
0x08073bef:	je 0x11 ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08073ca0:	mov dword ptr [esp + 0x1c], ecx ; mov dword ptr [esp + 0x3c], eax ; mov ebx, eax
0x08073fa5:	rol byte ptr [ecx], 0x83 ; rol dword ptr [ecx], -0x78 ; push ecx ; add edi, dword ptr [ecx] ; ret
0x0807431f:	je 0xa ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08074653:	add byte ptr [eax], al ; mov eax, dword ptr [ebp] ; cmp eax, 0x7f ; jbe 0xffffffcd
0x08074d6a:	je 0xe ; add esp, 0x5c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08074da5:	les esi, ptr [eax] ; add esp, 0x5c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08074ed0:	inc esp ; and al, 0x74 ; mov ecx, edi ; mov eax, dword ptr [eax + 0x14] ; mov ebx, eax
0x08074fc6:	and edx, 0xffffffc0 ; cmp dl, 0x80 ; jne 0x12 ; mov ebx, eax
0x08075f1e:	add cl, byte ptr [ecx - 0x7ce3dbbc] ; loopne 0xf ; mov ebx, eax
0x0807604e:	je 0x12 ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08077664:	add byte ptr [eax], al ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0807767f:	mov eax, 6 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08077871:	mov dword ptr [ecx], edx ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080779d0:	mov dword ptr [edi], edx ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08077a9c:	push ebx ; sbb byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x08077ab3:	mov eax, 1 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08077abc:	ret ; lea esi, dword ptr [esi] ; mov eax, dword ptr [0x80eb5c0] ; ret
0x08077baf:	fnstenv dword ptr [edx + 0xe] ; add esp, 0x60 ; pop ebx ; pop esi ; pop edi ; ret
0x08077bef:	pushal ; mov eax, 0xffffffff ; pop ebx ; pop esi ; pop edi ; ret
0x08077c00:	call 0xffff8a40 ; cmp eax, 0xff ; mov ebx, eax
0x08077cd8:	push edi ; push edi ; push esi ; mov esi, edx ; push ebx ; mov edi, ecx ; mov ebx, eax
0x08077d00:	pop es ; xor eax, eax ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x08077d26:	or al, 0x89 ; pop ss ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x08077d2c:	pop ebx ; pop esi ; pop edi ; ret ; mov eax, 0xffffffff ; ret
0x08077eb5:	add byte ptr [edi], cl ; mov bh, 0 ; mov esi, edx ; add eax, edx ; mov ebx, eax
0x0807810e:	call 0xfffe11e2 ; add esp, 0x1c ; ret
0x0807814c:	cmp eax, 3 ; je 0x14 ; add esp, 8 ; pop ebx ; ret
0x08078199:	or byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3ca4f73c], al
0x08078309:	inc dword ptr [ebx - 0x3f7aef3c] ; mov esi, eax ; mov ebx, eax
0x080784b9:	add esp, 0x1c ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08078567:	add esp, 0x1c ; pop ebx ; mov eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x08078640:	les ecx, ptr [eax + eax + 0x5e5b0000] ; pop edi ; pop ebp ; ret
0x08078903:	stc ; cld ; inc dword ptr [ebx - 0x3f7aef3c] ; jne 0xffffffcd
0x08078982:	je 0x285 ; mov esi, ebx ; mov ebx, eax
0x08078bd6:	or eax, 0xf8a1a775 ; scasb al, byte ptr es:[edi] ; push cs ; or byte ptr [ecx], bh ; ret
0x08078c67:	add byte ptr [eax - 0x41f0a007], al ; int1 ; sete bl
0x08078c6f:	xchg eax, esp ; ret ; cmp cl, 0x3a ; mov edi, ebx ; sete bl
0x08078cbf:	add byte ptr [eax], al ; add esp, 8 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08078cf9:	lea eax, dword ptr [edx + 1] ; mov byte ptr [edx], 0x2f ; mov byte ptr [eax], 0 ; ret
0x080792c8:	jmp 0x4e8 ; lea esi, dword ptr [esi] ; ret
0x0807932c:	in al, dx ; or al, 0x83 ; rcr dword ptr [ecx + ecx*4], -0x2a ; push ecx ; mov ebx, eax
0x080795b5:	inc esi ; or byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x080795bd:	pop ebp ; ret ; nop ; call 0xffff7083 ; mov ebx, eax
0x080796a8:	add esp, 0x10 ; cmp eax, 0xfffff000 ; mov ebx, eax
0x080797a9:	add byte ptr [eax], al ; jmp 0xfffffddb ; push ebx ; mov ebx, eax
0x080797e1:	call 0xfffdfb0f ; add esp, 0x18 ; pop ebx ; ret
0x08079833:	add al, 0x8b ; push esp ; and al, 8 ; mov eax, dword ptr [eax] ; sub eax, dword ptr [edx] ; ret
0x080798ae:	or dword ptr [eax], 0xffffff8d ; hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080799ab:	add edi, dword ptr [ebp - 0x1b8] ; mov ecx, ebx ; mov ebx, eax
0x08079ba9:	dec esi ; add al, 0xf ; adc dword ptr [edi - 0x7cfffffe], -0x3d
0x08079dc7:	mov byte ptr [ebx + 0x42], ch ; and al, 0x6c ; add eax, dword ptr [edx + 0x20] ; cmp ebx, eax
0x08079dca:	and al, 0x6c ; add eax, dword ptr [edx + 0x20] ; cmp ebx, eax ; cmovge eax, ebx
0x08079fca:	call dword ptr [eax + 0x26748d] ; mov eax, dword ptr [edi] ; cmp ebx, eax
0x0807a03a:	in eax, dx ; std ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x0807a309:	mov dword ptr [0x80eaedc], edx ; je 0xf ; pop ebx ; ret
0x0807a347:	and al, 4 ; mov eax, dword ptr gs:[eax] ; mov eax, dword ptr [eax + edx*4 + 0x40] ; ret
0x0807a3ca:	xor byte ptr [0x200], al ; mov dword ptr gs:[edx], eax ; ret
0x0807a437:	or al, 0xf ; scasb al, byte ptr es:[edi] ; push esp ; and al, 0xc ; add esp, 0x14 ; ret
0x0807a46a:	add byte ptr [eax], al ; call dword ptr [0x80ea9f0] ; mov ebx, eax
0x0807a486:	or byte ptr [0xfffff000], bh ; ja 0x22 ; pop ebx ; ret
0x0807a5a3:	les ebp, ptr [ecx + eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0807a661:	push dword ptr [edi + 0x34] ; sub esp, -0x80 ; pop ebx ; pop esi ; pop edi ; ret
0x0807a899:	les edi, ptr [ecx + eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0807aa4d:	pop eax ; add dword ptr [eax], eax ; add byte ptr [ebx + 0x108245c], cl ; ret
0x0807ac1e:	add byte ptr [eax], al ; xor edi, edi ; mov eax, edi ; mov edi, ebx ; mov ebx, eax
0x0807ac28:	jmp 0xa ; lea esi, dword ptr [esi] ; mov ebx, eax
0x0807ac8a:	add dword ptr [eax], eax ; add byte ptr [ecx + 0x80eb524], ah ; cmp ebx, eax
0x0807b0d9:	jmp 0xfffd2fb7 ; nop ; xor eax, eax ; ret
0x0807b679:	mov byte ptr [ebx], dl ; jne 0xffffffef ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0807b6e1:	mov byte ptr [ebx], al ; jne 0xffffffe7 ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0807b79d:	je 0x28 ; add byte ptr [ecx], dh ; rol byte ptr [ebx - 0x3c7cfe17], cl
0x0807b7c0:	mov eax, dword ptr [esp + 4] ; movsx eax, byte ptr [eax + 5] ; cmp ebx, eax
0x0807b7c8:	cmp ebx, eax ; jge 0x102 ; sub ebx, eax
0x0807b815:	mov eax, edx ; and eax, 1 ; shl eax, 2 ; or ebx, eax
0x0807b845:	add esp, 0x24 ; mov eax, ecx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0807b95e:	add esi, edx ; add esp, 0x10 ; mov eax, esi ; pop ebx ; pop esi ; ret
0x0807b9c6:	add esi, edx ; add esp, 0x24 ; mov eax, esi ; pop ebx ; pop esi ; ret
0x0807b9fb:	mov dh, 0xc0 ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0807bba2:	in eax, 0x57 ; push esi ; push ebx ; mov esi, edx ; mov edi, ecx ; mov ebx, eax
0x0807bcdf:	call 0xfffdf531 ; add esp, 0x10 ; sub ebx, eax
0x0807bd73:	call 0xfffdf49d ; add esp, 0x10 ; sub ebx, eax
0x0807be46:	call 0xdc5a ; mov ecx, dword ptr [esi + 0x18] ; add ebx, eax
0x0807c35e:	cmp eax, edx ; ja 0x1120 ; add ebx, eax
0x0807c3bf:	je 0x13 ; add byte ptr [eax], al ; add dword ptr [ebp + 0x14], 1 ; add ebx, eax
0x0807c524:	inc ebp ; adc byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret
0x0807e49b:	add byte ptr [eax], al ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080804cb:	dec dword ptr [ecx + 0xb02484] ; add byte ptr [eax], al ; mov ebx, eax
0x080805dc:	and byte ptr [eax], al ; add byte ptr [ecx + 0x5f5e5bf0], cl ; pop ebp ; ret
0x0808065b:	add al, 0x66 ; je 0xe5 ; mov ebx, eax
0x0808069b:	adc byte ptr [ecx - 0xf766efc], cl ; pop ebx ; pop esi ; pop edi ; ret
0x08080709:	add dword ptr [eax], eax ; add byte ptr [eax], al ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x08080735:	les edx, ptr [eax] ; mov dword ptr [ebx], eax ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; ret
0x08080770:	push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08080891:	call 0xfffda97f ; add esp, 0x10 ; sub ebx, eax
0x0808090e:	call 0xfffda902 ; add esp, 0x10 ; sub ebx, eax
0x080809c8:	int1 ; cmp eax, esi ; ja 0xffffffe8 ; mov eax, ebx ; pop ebx ; pop esi ; ret
0x080809da:	add dword ptr [ecx], esi ; sal bh, cl ; test byte ptr [ecx], 0xd8 ; pop ebx ; pop esi ; ret
0x08080cc4:	mov eax, esi ; sub eax, dword ptr [ebp - 0x98] ; mov ebx, eax
0x08080fff:	add eax, esi ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08081920:	push dword ptr [ebp - 0x80] ; call 0xfffd98f0 ; mov ebx, eax
0x08081b49:	cld ; mov edx, dword ptr [ebp - 0x90] ; cmove eax, ebx
0x08081bc9:	jge 0xfffff98f ; sub eax, edx ; mov ebx, eax
0x08081cdc:	mov eax, esi ; sub eax, 1 ; mov dword ptr [ebp - 0x74], eax ; mov ebx, eax
0x08081d23:	test eax, eax ; mov dword ptr [ebp - 0x8c], eax ; mov ebx, eax
0x08082608:	mov ch, 0 ; add byte ptr [eax], al ; add byte ptr [ecx - 0x3cd66f83], cl
0x08082985:	rol bh, 0x45 ; mov word ptr [eax], es ; add byte ptr [eax], al ; add cl, ch ; ret
0x08082c74:	mov esi, 0xd089fffe ; add esp, 8 ; pop ebx ; ret
0x08082d20:	add dword ptr [eax + 0x247c8901], ebp ; or byte ptr [edi], cl ; test eax, ebx
0x08082ddc:	inc ebp ; clc ; fxam ; fnstsw ax ; fstp st(0) ; mov ebx, eax
0x08082f60:	pop es ; mov esi, 0x5c89080c ; and al, 0xc ; mov ebx, eax
0x080831d1:	inc esp ; and al, 0x10 ; xor ecx, ecx ; add eax, 1 ; cmp ebx, eax
0x0808323f:	shr edx, 3 ; lea eax, dword ptr [edx + edx*4] ; add eax, eax ; sub ebx, eax
0x08083d69:	les edx, ptr [eax] ; cmp eax, 0xff ; sete al ; jmp 0xffffffcd
0x08083fb1:	cmp eax, esi ; jne 0xfffff039 ; add ebx, eax
0x080843e7:	and eax, 0x5bfffea7 ; mov eax, edx ; pop esi ; pop edi ; ret
0x08084403:	add byte ptr [eax - 1], bh ; pop ebx ; pop esi ; pop edi ; ret
0x080844be:	add byte ptr [eax], al ; mov ebx, dword ptr [ecx] ; test ebx, ebx ; je 0x1f ; cmp ebx, eax
0x0808451d:	xor eax, eax ; add esp, 0x14 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080845fd:	xor eax, eax ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080846f2:	sbb al, 0xe8 ; or byte ptr [edi + edi*8 + 0x1cc483ff], bl ; ret
0x08084710:	push edi ; pop eax ; mov eax, dword ptr [edx + 0xc] ; mov ebx, dword ptr [edx + 0x10] ; sub ebx, eax
0x08084731:	mov eax, esi ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808477a:	pop eax ; lea ebp, dword ptr [eax*4] ; sub ebx, eax
0x08084942:	push ebp ; fmul qword ptr [ebx - 0x157c2bab] ; add al, 0x39 ; ret
0x0808497a:	mov dword ptr [edx], ecx ; sub eax, 4 ; sub edx, 4 ; cmp ebx, eax
0x08084990:	lea esp, dword ptr [ebp - 0xc] ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080849a9:	inc esp ; std ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x08084a76:	call 0x562a ; mov ecx, dword ptr [esi + 0x18] ; add ebx, eax
0x08084c27:	call dword ptr [eax - 0x5f] ; xchg eax, esp ; mov ebp, 0x8353080e ; ret
0x080852eb:	mov ecx, eax ; lea eax, dword ptr [ebp - 0x420] ; cmp ebx, eax
0x08085322:	inc dword ptr [ebx - 0x45b7b] ; inc dword ptr [ecx] ; cmp ebx, eax
0x08085730:	dec dword ptr [edx] ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3c76fbbf], cl
0x08085796:	mov eax, dword ptr [ebp - 0x4c0] ; mov ebx, edx ; or ebx, eax
0x080859f0:	call dword ptr [edx - 1] ; push eax ; sbb al, 0x83 ; les edx, ptr [eax] ; cmp ebx, eax
0x08085a00:	mov eax, 0x7fffffff ; sub eax, dword ptr [ebp + 0x10] ; cmp ebx, eax
0x08085c60:	jmp dword ptr [eax] ; mov eax, dword ptr [ebp - 0x478] ; mov ebx, eax
0x08085dfc:	call 0xfffc23e4 ; add esp, 0x10 ; mov ebx, eax
0x08085e67:	add byte ptr [eax], al ; add esp, 0x10 ; cmp eax, 0xff ; mov ebx, eax
0x08085f09:	push esi ; push ecx ; call dword ptr [eax + 0x1c] ; add esp, 0x10 ; cmp ebx, eax
0x08085f59:	call 0x5027 ; add esp, 0x10 ; cmp ebx, eax
0x080860a7:	call 0x85a9 ; add esp, 0x10 ; mov ebx, eax
0x08086123:	push esi ; push edx ; call dword ptr [eax + 0x1c] ; add esp, 0x10 ; cmp ebx, eax
0x080862bd:	add byte ptr [eax], al ; mov eax, dword ptr [ebp - 0x478] ; mov ebx, eax
0x080863e4:	call 0xfffc1e2c ; add esp, 0x10 ; mov ebx, eax
0x08086b82:	mov edx, dword ptr [ebp - 0x45c] ; test edx, edx ; mov ebx, eax
0x08087217:	call 0xfffd3ff9 ; add esp, 0x10 ; mov ebx, eax
0x080876e4:	add byte ptr [ebx - 0x77cef3c], al ; add dword ptr [edi], ecx ; test eax, ebx
0x08087add:	xchg ecx, ebp ; add eax, dword ptr [eax] ; add byte ptr [edi], cl ; mov dh, 0x80 ; add bl, al
0x08088140:	sbb al, 0x12 ; add byte ptr [eax], al ; push edx ; push edx ; push 0x2b ; jmp 0xffffffcd
0x0808820b:	xchg eax, ecx ; adc al, byte ptr [eax] ; add byte ptr [eax + 0x50], dl ; push 0x2b ; jmp 0xffffffcd
0x08088540:	xchg dword ptr [esi + 0xffffff9], eax ; mov dh, 0x80 ; add bl, al
0x08088911:	xchg dword ptr [ebp + 0xffffff5], esi ; mov dh, 0x80 ; add bl, al
0x08088e09:	xchg dword ptr [ebp + 0xffffff0], edi ; mov dh, 0x80 ; add bl, al
0x08089860:	push ebp ; push edi ; mov edi, ecx ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x080899a8:	add dword ptr [eax], 0x5bf88900 ; pop esi ; pop edi ; pop ebp ; ret
0x08089a33:	pop es ; lea eax, dword ptr [edx] ; call 0xfffe50dd ; ret
0x08089cd1:	add esp, 0xc ; pop ebx ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x08089cf8:	mov eax, edi ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808a08e:	jbe 2 ; mov dword ptr [eax], ebx ; mov eax, ecx ; pop ebx ; pop esi ; pop edi ; ret
0x0808a6c5:	inc dword ptr [ebx - 0x3f7aef3c] ; je 0x63 ; add ebx, eax
0x0808a6de:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5e5b60c4], al ; pop edi ; ret
0x0808a74c:	add esp, 0x10 ; test eax, eax ; mov dword ptr gs:[ebx], edi ; jne 0xffffffcd
0x0808a7ef:	lea esp, dword ptr [ebp - 0xc] ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808a8b1:	inc dword ptr [ebx - 0x3f7aef3c] ; je 0x27 ; add ebx, eax
0x0808a8c9:	add dword ptr [eax], eax ; add byte ptr [eax], al ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0808a97f:	sal byte ptr [ecx], 1 ; sal bh, cl ; neg byte ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret
0x0808aaec:	lea esp, dword ptr [ebp - 0xc] ; pop ebx ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x0808ab4b:	add byte ptr [eax], al ; mov eax, dword ptr [esi + 4] ; mov ebx, dword ptr [esi + 8] ; sub ebx, eax
0x0808abe2:	inc esi ; add al, 0x8b ; pop esi ; or byte ptr [ecx - 0x3cd61fbb], cl
0x0808ac03:	les edx, ptr [eax] ; test eax, eax ; mov ecx, eax ; je 0xf ; mov ebx, eax
0x0808ac12:	mov eax, 0x7fffffff ; sub eax, dword ptr [ebp - 0x1c] ; cmp ebx, eax
0x0808adf4:	and al, 0x34 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808ae3d:	push esi ; add al, 0x83 ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0808afea:	add esp, 0x4c ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808b171:	jmp 0xffffff29 ; mov eax, dword ptr [ecx + 0x28] ; mov ebx, eax
0x0808b17a:	ret ; mov dword ptr [esp + 0x1c], eax ; mov eax, dword ptr [ecx + 0x20] ; sub ebx, eax
0x0808b220:	je 0x26 ; adc bh, bh ; je 0x2a ; and byte ptr [eax - 0x18], dl ; ret
0x0808b28e:	or byte ptr [ecx + 0x8508910], cl ; mov dword ptr [eax + 0x20], ecx ; ret
0x0808b2c0:	mov dword ptr [eax], edx ; mov dword ptr [eax + 8], ebx ; mov dword ptr [eax + 0x20], ecx ; pop ebx ; ret
0x0808b300:	enter -0x76f8, 0x43 ; cmp al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x0808b311:	loopne 0xfffffff9 ; mov dword ptr [ebx + 0x3c], eax ; add esp, 8 ; pop ebx ; ret
0x0808b568:	or cl, byte ptr [ebx + 0x8c48310] ; mov eax, edx ; pop ebx ; ret
0x0808b694:	add esp, 0x1c ; pop ebx ; pop esi ; sub eax, edi ; pop edi ; pop ebp ; ret
0x0808b6bd:	sbb byte ptr [ebp - 0x7cf18b2e], al ; les ecx, ptr [eax] ; pop ebx ; ret
0x0808b739:	adc byte ptr [eax + 1], bh ; add esp, 0xc ; ret
0x0808b747:	add byte ptr [eax - 1], bh ; add esp, 0xc ; ret
0x0808b794:	mov dword ptr [ebx], ecx ; xor eax, eax ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0808b81f:	and al, 0 ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3ca4e73c], al
0x0808b943:	mov dword ptr [eax], ecx ; mov eax, dword ptr [edx] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0808bb6f:	je 5 ; and dword ptr [ebx], 0xffffffef ; add esp, 8 ; pop ebx ; ret
0x0808bc0a:	jb 0xfffffff6 ; mov eax, dword ptr [esp + 8] ; add eax, ebx ; pop ebx ; ret
0x0808bc18:	sub eax, edx ; sar eax, 2 ; sub eax, 1 ; pop ebx ; ret
0x0808bcba:	or byte ptr [ebx - 0x53ef7bf], cl ; add ch, byte ptr [ecx] ; rol bl, 1
0x0808bcca:	add al, 0x8b ; inc ecx ; or cl, al ; cli ; add ch, byte ptr [ecx] ; rol bl, 1
0x0808bcd0:	add ch, byte ptr [ecx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0808bd23:	lea edx, dword ptr [ecx + edx*4] ; mov dword ptr [eax], edx ; xor eax, eax ; pop ebx ; pop esi ; ret
0x0808bd7e:	add byte ptr [eax], al ; mov eax, 0xffffffff ; pop ebx ; pop esi ; ret
0x0808bdce:	mov ecx, dword ptr [edx + 0x24] ; cmp ecx, dword ptr [edx + 0x28] ; cmove eax, ecx ; ret
0x0808be01:	inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x24] ; mov eax, dword ptr [eax + 0x28] ; ret
0x0808be9a:	adc byte ptr [eax + 2], bh ; pop ebx ; pop esi ; pop edi ; ret
0x0808beaa:	adc byte ptr [eax + 1], bh ; pop ebx ; pop esi ; pop edi ; ret
0x0808bebb:	fadd qword ptr [ebx - 0x3fceef3c] ; pop ebx ; pop esi ; pop edi ; ret
0x0808bf63:	fld qword ptr [ebx - 0x3fceef3c] ; pop ebx ; pop esi ; pop edi ; ret
0x0808c1e3:	add esp, 0x2c ; mov eax, ebp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808c2eb:	and al, 0x1c ; push esi ; call 0xfffbbef5 ; mov ebx, eax
0x0808c36f:	les edx, ptr [eax] ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808c3b4:	call 0xfffef27c ; add esp, 0xc ; mov ebx, eax
0x0808c432:	call 0xfffef1fe ; add esp, 0xc ; mov ebx, eax
0x0808c48f:	add al, 0x74 ; push es ; lea eax, dword ptr [0x808d810] ; ret
0x0808c4c1:	add byte ptr [esi + eax - 0x73], dh ; add eax, 0x808cff0 ; ret
0x0808c67f:	cmp dh, cl ; jne 7 ; lea eax, dword ptr [esi + 3] ; pop esi ; pop edi ; ret
0x0808c941:	cmp byte ptr [edx], bl ; jne 0x8f ; mov ebx, eax
0x0808cc31:	add esi, eax ; add edx, eax ; add esi, dword ptr [esp + 0x14] ; cmp ebx, eax
0x0808ccdd:	xor eax, eax ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808cda6:	dec esp ; xor bh, bh ; jne 0x7a ; add eax, 1 ; cmp ebx, eax
0x0808cded:	add esp, 0x4c ; pop ebx ; pop esi ; add eax, edx ; pop edi ; pop ebp ; ret
0x0808cf0a:	add esp, 0xc ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808d052:	jne 0x432 ; push esi ; push ebx ; mov ebx, eax
0x0808d0b2:	jne 0x3ce ; push esi ; push ebx ; mov ebx, eax
0x0808d13c:	add dword ptr [eax], eax ; add byte ptr [eax - 0x3fcea1a5], dl ; pop edi ; ret
0x0808d150:	pmovmskb ecx, xmm2 ; test ecx, ecx ; jne 0x20 ; mov ebx, eax
0x0808d32e:	test dword ptr [ebp], edi ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x0808d353:	test dword ptr [eax - 0x73000000], ecx ; inc edi ; hlt ; pop edi ; ret
0x0808d37d:	test dword ptr [esi - 0x73000000], ecx ; inc edi ; clc ; pop edi ; ret
0x0808d3a6:	test dword ptr [ebp - 0x73000000], edx ; inc edi ; cld ; pop edi ; ret
0x0808d3ab:	lea eax, dword ptr [edi - 4] ; pop edi ; ret ; lea eax, dword ptr [edi - 0xf] ; pop edi ; ret
0x0808d3bb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xe] ; pop edi ; ret
0x0808d3cb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xd] ; pop edi ; ret
0x0808d3db:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xb] ; pop edi ; ret
0x0808d3eb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xa] ; pop edi ; ret
0x0808d3fb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 9] ; pop edi ; ret
0x0808d40b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 7] ; pop edi ; ret
0x0808d41b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 6] ; pop edi ; ret
0x0808d42b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 5] ; pop edi ; ret
0x0808d43b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 3] ; pop edi ; ret
0x0808d44b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 2] ; pop edi ; ret
0x0808d45b:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 1] ; pop edi ; ret
0x0808d4ad:	jne 0xfffffe63 ; xor eax, eax ; pop edi ; ret
0x0808d4e0:	jne 0xfffffe30 ; xor eax, eax ; pop edi ; ret
0x0808d517:	jne 0xfffffdf9 ; xor eax, eax ; pop edi ; ret
0x0808d550:	jne 0xfffffdc0 ; xor eax, eax ; pop edi ; ret
0x0808d563:	jne 0xfffffdad ; xor eax, eax ; pop edi ; ret
0x0808d573:	jne 0xfffffd9d ; xor eax, eax ; pop edi ; ret
0x0808d583:	jne 0xfffffd8d ; xor eax, eax ; pop edi ; ret
0x0808d593:	jne 0xfffffd7d ; xor eax, eax ; pop edi ; ret
0x0808d5a3:	jne 0xfffffd6d ; xor eax, eax ; pop edi ; ret
0x0808d5b3:	jne 0xfffffd5d ; xor eax, eax ; pop edi ; ret
0x0808d5c5:	jne 0xfffffd4b ; xor eax, eax ; pop edi ; ret
0x0808d5d5:	jne 0xfffffd3b ; xor eax, eax ; pop edi ; ret
0x0808d5e5:	jne 0xfffffd2b ; xor eax, eax ; pop edi ; ret
0x0808d5f5:	jne 0xfffffd1b ; xor eax, eax ; pop edi ; ret
0x0808d605:	jne 0xfffffd0b ; xor eax, eax ; pop edi ; ret
0x0808d615:	jne 0xfffffcfb ; xor eax, eax ; pop edi ; ret
0x0808d692:	add dword ptr [eax], eax ; add byte ptr [edi], cl ; mov ebp, 0x5ff801c0 ; ret
0x0808d69e:	add byte ptr es:[ebp + 0x56dc75d2], al ; push ebx ; mov ebx, eax
0x0808d714:	add byte ptr [eax], al ; add byte ptr [edi], cl ; mov ebp, 0x5ff801c0 ; ret
0x0808d71e:	nop ; test edx, edx ; jne 0xffffffe2 ; push esi ; push ebx ; mov ebx, eax
0x0808d7a6:	ret ; add eax, esi ; pop ebx ; pop esi ; sub eax, 0x10 ; pop edi ; ret
0x0808d7e3:	bsr eax, eax ; add eax, edi ; sub eax, 0x10 ; pop edi ; ret
0x0808d7ea:	adc byte ptr [edi - 0x3d], bl ; lea esi, dword ptr [esi] ; xor eax, eax ; pop edi ; ret
0x0808d7fc:	add byte ptr [eax], al ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; xor eax, eax ; ret
0x0808daf0:	test eax, eax ; add eax, dword ptr [eax] ; add byte ptr [ebx - 0x3ca0fc40], al
0x0808db16:	test dword ptr [esi - 0x7cfffffd], ebp ; rol byte ptr [edi], 0x5f ; ret
0x0808db3d:	test dword ptr [ebx - 0x7cfffffd], ebx ; ror byte ptr [ebx], 0x5f ; ret
0x0808db66:	test dword ptr [esi - 0x7cfffffd], eax ; ror byte ptr [edi], 0x5f ; ret
0x0808dbce:	test edx, edx ; jne 0x12 ; mov eax, dword ptr [esp + 0xc] ; pop edi ; ret
0x0808dc76:	and ch, 0 ; add byte ptr [eax], al ; lea eax, dword ptr [eax + 0xb] ; pop edi ; ret
0x0808dce0:	sub edi, 6 ; jb 0x80 ; lea eax, dword ptr [eax + 5] ; pop edi ; ret
0x0808dcf0:	sub edi, 7 ; jb 0x70 ; lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x0808dd00:	sub edi, 9 ; jb 0x60 ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x0808dd10:	sub edi, 0xa ; jb 0x50 ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x0808dd20:	sub edi, 0xb ; jb 0x40 ; lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x0808dd30:	sub edi, 0xd ; jb 0x30 ; lea eax, dword ptr [eax + 0xc] ; pop edi ; ret
0x0808dd40:	sub edi, 0xe ; jb 0x20 ; lea eax, dword ptr [eax + 0xd] ; pop edi ; ret
0x0808dd50:	sub edi, 0xf ; jb 0x10 ; lea eax, dword ptr [eax + 0xe] ; pop edi ; ret
0x0808dd5c:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, dword ptr [esp + 0xc] ; pop edi ; ret
0x0808ddba:	add byte ptr [eax], al ; add byte ptr [eax + 4], bh ; pop edi ; ret
0x0808de13:	add byte ptr [eax], al ; add byte ptr [eax + 8], bh ; pop edi ; ret
0x0808de63:	add byte ptr [eax], al ; add byte ptr [eax + 0xc], bh ; pop edi ; ret
0x0808de97:	add byte ptr [esp + ebx*2 - 0x48], dh ; adc byte ptr [eax], al ; add byte ptr [eax], al ; pop edi ; ret
0x0808deab:	nop ; nop ; nop ; nop ; nop ; add eax, 1 ; pop edi ; ret
0x0808deb0:	add eax, 1 ; pop edi ; ret ; add eax, 2 ; pop edi ; ret
0x0808deb5:	add eax, 2 ; pop edi ; ret ; add eax, 3 ; pop edi ; ret
0x0808deba:	add eax, 3 ; pop edi ; ret ; add eax, 4 ; pop edi ; ret
0x0808debf:	add eax, 4 ; pop edi ; ret ; add eax, 5 ; pop edi ; ret
0x0808dec4:	add eax, 5 ; pop edi ; ret ; add eax, 6 ; pop edi ; ret
0x0808dec9:	add eax, 6 ; pop edi ; ret ; add eax, 7 ; pop edi ; ret
0x0808dece:	add eax, 7 ; pop edi ; ret ; add eax, 8 ; pop edi ; ret
0x0808ded3:	add eax, 8 ; pop edi ; ret ; add eax, 9 ; pop edi ; ret
0x0808ded8:	add eax, 9 ; pop edi ; ret ; add eax, 0xa ; pop edi ; ret
0x0808dedd:	add eax, 0xa ; pop edi ; ret ; add eax, 0xb ; pop edi ; ret
0x0808dee2:	add eax, 0xb ; pop edi ; ret ; add eax, 0xc ; pop edi ; ret
0x0808dee7:	add eax, 0xc ; pop edi ; ret ; add eax, 0xd ; pop edi ; ret
0x0808deec:	add eax, 0xd ; pop edi ; ret ; add eax, 0xe ; pop edi ; ret
0x0808def1:	add eax, 0xe ; pop edi ; ret ; add eax, 0xf ; pop edi ; ret
0x0808df74:	cmp eax, esi ; cmova eax, esi ; sub eax, ebx ; pop ebx ; pop esi ; ret
0x0808df80:	cmp esi, eax ; cmovbe eax, esi ; sub eax, ebx ; pop ebx ; pop esi ; ret
0x0808dfff:	add al, 0x74 ; push es ; lea eax, dword ptr [0x808ea20] ; ret
0x0808e086:	dec edx ; add al, 0x75 ; add ecx, dword ptr [ecx + 0x5e5b084a] ; ret
0x0808e0fd:	add esp, 0x10 ; add esp, 0x30 ; pop ebx ; pop esi ; pop edi ; ret
0x0808e112:	xor byte ptr [eax - 1], bh ; pop ebx ; pop esi ; pop edi ; ret
0x0808e2d7:	inc eax ; mov eax, 0xffffffff ; pop ebx ; pop esi ; pop edi ; ret
0x0808e4bb:	add dword ptr [eax], eax ; add byte ptr [ecx + 0x5f5e5bf8], cl ; pop ebp ; ret
0x0808e6b6:	add al, 0x93 ; test eax, eax ; jne 0xffffffca ; mov eax, edx ; pop ebx ; ret
0x0808e6ba:	jne 0xffffffc6 ; mov eax, edx ; pop ebx ; ret ; xor eax, eax ; pop ebx ; ret
0x0808e6c1:	rcr byte ptr [ebx - 0x3d], 0xb8 ; add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; ret
0x0808e6c8:	add byte ptr [ebx - 0x3d], bl ; mov eax, 2 ; pop ebx ; ret
0x0808e6f5:	cmp edx, ecx ; je 8 ; test edx, edx ; jne 0xfffffffb ; ret
0x0808e8b3:	add dword ptr [eax], eax ; add byte ptr [ecx + 0x5f5e5bd8], cl ; pop ebp ; ret
0x0808eb57:	je 0x19 ; mov cl, dl ; and cl, 0xf ; je 0x29 ; ret
0x0808eb71:	cmc ; and ch, 0xf ; je 0x1f ; add eax, 2 ; ret
0x0808eb7a:	ret ; nop ; lea esi, dword ptr [esi] ; add eax, 1 ; ret
0x0808eb8a:	lea edi, dword ptr [edi] ; add eax, 3 ; ret
0x0808ebac:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 1 ; ret
0x0808ebbc:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 2 ; ret
0x0808ebcc:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 3 ; ret
0x0808ebdc:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 4 ; ret
0x0808ebec:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 5 ; ret
0x0808ebfc:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 6 ; ret
0x0808ec0c:	add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 7 ; ret
0x0808ec64:	or al, 0x8d ; inc edx ; add eax, dword ptr [ebp + 0x5bd475db] ; ret
0x0808ec6a:	jne 0xffffffd6 ; pop ebx ; ret ; nop ; mov eax, ebx ; pop ebx ; ret
0x0808ec72:	pop ebx ; ret ; lea esi, dword ptr [esi] ; mov eax, edx ; pop ebx ; ret
0x0808ec76:	add byte ptr es:[ecx + 0x31c35bd0], cl
0x0808ec7d:	rcr byte ptr [ebx - 0x3d], 0xb8 ; add al, byte ptr [eax] ; add byte ptr [eax], al ; pop ebx ; ret
0x0808ec84:	add byte ptr [ebx - 0x3d], bl ; mov eax, 1 ; pop ebx ; ret
0x0808ec98:	and al, 8 ; call dword ptr [0x80ea9f0] ; pop ebx ; ret
0x0808ecc3:	adc byte ptr [esi], cl ; add byte ptr [eax], al ; cmp eax, 0x3b ; cmova eax, ebx
0x0808ecd2:	cmova edx, ebx ; imul edx, edx, 0x3c ; pop ebx ; add eax, edx ; ret
0x0808ed83:	sub edx, edi ; imul eax, edx, 0x190 ; cmp ebx, eax
0x0808eee4:	imul ebx, dword ptr [eax], 0x5b18c483 ; pop esi ; pop edi ; pop ebp ; ret
0x0808ef4a:	sar eax, 5 ; sub eax, esi ; imul eax, eax, 0x64 ; cmp ebx, eax
0x0808ef73:	sub edx, esi ; imul eax, edx, 0x190 ; cmp ebx, eax
0x0808efc9:	call 0xfffcc247 ; mov dword ptr [esp], esi ; mov ebx, eax
0x0808eff2:	cmp al, 0xbd ; push cs ; or byte ptr [ebx + 0x5e5b04c4], al ; ret
0x0808f087:	mov dword ptr [ebx], edx ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808f09a:	popfd ; cld ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x0808f0cb:	add esp, 0x1c ; mov eax, ebp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808f185:	pop ebx ; mov eax, 1 ; pop esi ; pop edi ; pop ebp ; ret
0x0808f221:	mov dword ptr [edi], ebx ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808f2ab:	in al, dx ; sbb al, 0x8b ; add byte ptr [eax - 0x6bf0d3c8], al ; ret
0x0808f2ad:	mov eax, dword ptr [eax] ; cmp byte ptr [eax], 0x2c ; sete bl ; add ebx, eax
0x0808f3b5:	mov dword ptr [edi], ebp ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0808f5a6:	call 0xfffff9ea ; add esp, 8 ; pop edi ; ret
0x0808f68b:	je 0xd ; test eax, eax ; jne 0xd ; pop ebx ; pop esi ; pop edi ; ret
0x0808f850:	jmp dword ptr [ecx + 0x80ebd3c] ; add esp, 0xc ; ret
0x0808f8c7:	mov dword ptr [ebx + 0x28], edx ; mov dword ptr [ebx + 0x24], eax ; pop ebx ; pop esi ; pop edi ; ret
0x0808fa43:	add ecx, dword ptr [ecx + 0x10c483d8] ; pop ebx ; pop esi ; pop edi ; ret
0x0808fa8f:	add byte ptr [ebx - 0x3fceef3c], al ; pop ebx ; pop esi ; pop edi ; ret
0x0808fbf3:	hlt ; sti ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x080904b6:	add byte ptr [eax], al ; add byte ptr [ebx + 1], bh ; test eax, ebx
0x0809066e:	add byte ptr es:[ebx - 0x397cfe3e], al ; add al, 0x83 ; ret
0x08090989:	jne 0xffffffef ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08090d7f:	nop ; test dl, dl ; push edi ; mov edi, edx ; push esi ; push ebx ; mov ebx, eax
0x08090e8e:	nop ; nop ; test eax, eax ; js 0x72 ; push esi ; push ebx ; mov ebx, eax
0x08090ed2:	inc dword ptr [ebx - 0x3b7cf33c] ; pop ebx ; pop esi ; ret
0x08090ef5:	push cs ; or byte ptr [ebx - 0x3fce9b3c], al ; pop ebx ; pop esi ; ret
0x08090f10:	cmp byte ptr [edx], 0 ; je 0x30 ; push ebx ; mov ecx, edx ; mov ebx, eax
0x08090f45:	mov dword ptr gs:[eax], 2 ; xor eax, eax ; ret
0x08091133:	call 0xfffdd9dd ; add esp, 0x18 ; pop ebx ; ret
0x0809113e:	nop ; nop ; push ebp ; push edi ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x08091312:	add byte ptr [eax], al ; add esp, 0x64 ; xor eax, eax ; pop ebx ; pop esi ; ret
0x08091352:	add byte ptr [eax], al ; add bh, bh ; adc eax, 0x80ea9f0 ; ret
0x08091403:	dec dword ptr [ebp + 0x31002674] ; rcr byte ptr [ebx + 0x5e], 0xc3
0x080914e3:	sete al ; add esp, 0x5c ; movzx eax, al ; ret
0x08091579:	or al, 0 ; add esp, 0x34 ; mov eax, ebx ; pop ebx ; pop esi ; ret
0x080915a8:	and al, 8 ; call dword ptr [0x80ea9f0] ; cmp ebx, eax
0x080915b3:	mov byte ptr [edi + 0x777080e], dh ; xor eax, eax ; pop ebx ; ret
0x08091698:	mov ch, 0x24 ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080916c8:	and al, 0xc ; test edx, edx ; je 0x3a ; mov ecx, dword ptr [edx] ; mov ebx, eax
0x080916f2:	sbb dword ptr [ebp - 0x74f48b37], eax ; pop edx ; adc byte ptr [ecx], ah ; ret
0x080916fb:	ret ; lea edx, dword ptr [edx + ebx*4] ; add eax, dword ptr [edx + ecx] ; pop ebx ; pop esi ; ret
0x08091733:	test eax, eax ; je 0x16d ; mov ebx, eax
0x08091910:	fadd dword ptr [ebp + 0x5b5875ed] ; pop esi ; pop edi ; pop ebp ; ret
0x08091923:	rol byte ptr [ecx + ecx*8 + 0x5e5be374], 0x5f ; pop ebp ; ret
0x08091963:	sal byte ptr [ebp - 0x5b], 0x5b ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x08091a7a:	dec ebp ; fmul qword ptr [edi] ; test byte ptr [esi - 0x7d000000], ch ; ret
0x08091b57:	add byte ptr [ebx - 0x3f7afbbd], cl ; je 0x29 ; mov ebx, eax
0x08091b71:	jne 0xffffffe7 ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091bc2:	jnp 6 ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091d0c:	add eax, dword ptr [eax] ; add byte ptr [ebx], al ; push es ; cmp eax, 0x33 ; mov ebx, eax
0x08091e97:	inc ebp ; loopne 0xffffff90 ; hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08091f22:	add byte ptr [edx - 1], dl ; jne 0xffffffe5 ; and eax, 0xfffffff0 ; mov ebx, eax
0x08092258:	cli ; dec dword ptr [edi] ; test dword ptr [edx - 0x7d000000], ebp ; ret
0x08092349:	mov eax, edx ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809255f:	call 0xfffc9d11 ; add esp, 0x10 ; cmp ebx, eax
0x080927db:	mov eax, ebx ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809280c:	pushal ; add al, 0 ; add byte ptr [ebx - 0x7af0fe08], al ; ret
0x080928b0:	loopne 4 ; mov dword ptr [ebp - 0x80], eax ; mov eax, dword ptr [ebp - 0x7c] ; add ebx, eax
0x08092c3d:	jge 0xffffff82 ; lea eax, dword ptr [edx + edx*2] ; lea eax, dword ptr [edi + eax*8] ; cmp ebx, eax
0x08092d02:	call 0xfffda3be ; add esp, 0x10 ; cmp ebx, eax
0x0809364c:	add al, byte ptr [eax] ; add byte ptr [eax], al ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x080936c7:	mov cl, 0x83 ; les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0809388b:	and al, 0x38 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08093b44:	jbe 0xfffffffe ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x08093e6e:	test ebx, ebp ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3c76f314], al
0x08093f6d:	je 0x28 ; add byte ptr [edi], cl ; mov dh, 0x44 ; and al, 0xf ; cmp bl, al
0x08093f90:	ret 0xf01 ; mov dh, 0x19 ; movzx eax, byte ptr [edx] ; cmp bl, al
0x0809496a:	add al, 0x81 ; lcall ptr [ebx + edx*8 + 0xc] ; or byte ptr [edi], cl ; test al, bl
0x08094ad6:	add dword ptr [esi], eax ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080950bb:	nop ; lea esi, dword ptr [esi] ; mov eax, dword ptr [esi + 0x18] ; mov ebx, eax
0x080954e1:	je 0x26 ; adc al, 0x89 ; or byte ptr [ecx - 0x3c7cf390], cl
0x080957b2:	add edx, 1 ; shl ecx, 5 ; add ebx, ecx ; add ebx, eax
0x08095b0d:	add byte ptr [eax], al ; mov ebx, dword ptr [ebp - 0x68] ; mov ecx, dword ptr [ebp - 0x64] ; xor ebx, eax
0x08095b24:	xor eax, dword ptr [ebp - 0x68] ; xor ebx, ebx ; or edx, eax ; setne bl
0x08095b50:	add byte ptr [ebx + 0x458bfffb], al ; or byte ptr [edi], cl ; test eax, ebx
0x08095dbf:	enter -0x2c43, 0xc ; or byte ptr [ecx - 0x3c7c53a3], cl
0x080961ec:	adc al, 0x8a ; mov dword ptr [eax + 0x18c], edx ; ret
0x0809621b:	add dword ptr [eax], eax ; add byte ptr [ecx + 0x18890], cl ; add bl, al
0x080962f8:	dec edi ; cld ; lcall ptr [edx + 0x59] ; lea edx, dword ptr [eax + 1] ; mov ebx, eax
0x0809634b:	dec dword ptr [ebx - 0x7cebdb94] ; les edx, ptr [eax] ; add ebx, eax
0x0809644f:	leave ; add eax, 1 ; mov dword ptr [esp + 0xc], eax ; mov ebx, eax
0x0809646b:	mov dh, 0 ; add byte ptr [eax], al ; add byte ptr [ebx - 0x3c7cf714], al
0x08096663:	add dword ptr [eax], eax ; add byte ptr [ecx + esi], al ; rcr byte ptr [ebx + 0x5e], 0x5f ; ret
0x08096679:	or byte ptr [ebx - 0x3fceef3c], al ; pop ebx ; pop esi ; pop edi ; ret
0x08096699:	nop ; nop ; nop ; nop ; nop ; nop ; nop ; push ebx ; mov ebx, eax
0x080966b3:	inc dword ptr [ebp - 0x7cfa8a40] ; les ecx, ptr [eax] ; pop ebx ; ret
0x08096717:	call 0xfffb1b59 ; add esp, 0x18 ; pop ebx ; ret
0x08096768:	test eax, eax ; js 0xa ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08096796:	add ecx, 0x80cdd00 ; mov esi, edx ; mov ebx, eax
0x08096a3b:	mov ecx, dword ptr [ebp - 0x7c] ; mov edi, dword ptr [ebp - 0x78] ; add edi, dword ptr [esi] ; mov ebx, eax
0x08097272:	add ebx, 0x20 ; shl eax, 5 ; add eax, edx ; cmp ebx, eax
0x080973df:	add eax, dword ptr [esi] ; mov dword ptr [ebp - 0x5c], eax ; mov eax, dword ptr [esi + 4] ; mov ebx, eax
0x0809794b:	add eax, dword ptr [edi] ; mov dword ptr [ebp - 0x78], eax ; mov eax, dword ptr [edi + 4] ; mov ebx, eax
0x08098310:	mov edx, edi ; or edx, esi ; je 0x59 ; xor ecx, ecx ; mov ebx, eax
0x0809849f:	add eax, 0x80eb544 ; lea eax, dword ptr [ebx + edi] ; cmp ebx, eax
0x0809887c:	adc byte ptr [eax + 1], bh ; shl eax, cl ; cmp ebx, eax
0x08098894:	jno 0xfffffff2 ; add ecx, 8 ; mov dword ptr [ecx - 8], esi ; cmp ebx, eax
0x080988a9:	jno 0xfffffffa ; add ecx, 8 ; mov dword ptr [ecx - 8], esi ; cmp ebx, eax
0x0809890f:	add al, 0xfc ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x08098c61:	adc byte ptr [ebp - 0x7cb58a40], al ; in al, dx ; or al, 0x89 ; ret
0x08098cf4:	and al, 0x14 ; mov dword ptr [eax], 0 ; mov ebx, eax
0x08099167:	adc byte ptr [ebp - 0x7cbb8740], al ; in al, dx ; add al, 0x89 ; ret
0x0809919f:	adc byte ptr [ecx + 0x60c483f0], cl ; pop ebx ; pop esi ; pop edi ; ret
0x080992ae:	add byte ptr es:[ebx - 0x3fcefb3c], al ; pop ebx ; pop esi ; ret
0x08099300:	sar dword ptr [ecx], cl ; retf ; jne 0xffffffe8 ; mov eax, dword ptr [ecx] ; pop ebx ; pop esi ; ret
0x080993f3:	add ebx, esi ; test edx, edx ; je 0xd ; mov esi, dword ptr [edx] ; jmp 0xffffffcd
0x08099419:	push cs ; or byte ptr [ebx + 0x5e5b0cc4], al ; pop edi ; pop ebp ; ret
0x08099445:	or byte ptr [eax], al ; jne 0xa ; mov eax, dword ptr [0x80eba08] ; ret
0x0809947e:	int1 ; mov ecx, dword ptr [ecx + 4] ; test ecx, ecx ; jne 0xffffffe2 ; pop ebx ; ret
0x08099480:	dec ecx ; add al, 0x85 ; leave ; jne 0xffffffe0 ; pop ebx ; ret ; ret
0x08099496:	mov dword ptr [eax], ecx ; mov eax, dword ptr [0x80eba04] ; mov dword ptr [edx], eax ; ret
0x080994bd:	inc edx ; lea edx, dword ptr [eax + edi - 0x4c0] ; mov ebx, eax
0x080994f5:	test eax, eax ; je 0x1b ; add esp, 0x14 ; pop ebx ; pop edi ; ret
0x080994fe:	ret ; nop ; add esp, 0x14 ; xor eax, eax ; pop ebx ; pop edi ; ret
0x080995a1:	or byte ptr [ecx + 0x247c8bc5], cl ; or al, 0x8d ; sbb al, 0xc3
0x080996d4:	and al, 0x18 ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080998ea:	pop ebx ; pop esi ; cmp eax, 0xff ; cmove eax, edx ; pop edi ; ret
0x0809991d:	int1 ; or byte ptr [ebx - 0x3f], dh ; pop ebx ; xor eax, eax ; pop esi ; pop edi ; ret
0x08099948:	adc cl, byte ptr [ebp + 0x26b4] ; add byte ptr [eax], al ; sub ebx, eax
0x08099955:	test eax, eax ; je 0x2b ; mov esi, eax ; mov eax, dword ptr [esi] ; cmp ebx, eax
0x08099970:	inc edx ; or byte ptr [ebx + 0x5e5b0cc4], al ; pop edi ; pop ebp ; ret
0x08099ae2:	adc byte ptr [eax], dl ; add byte ptr [eax], al ; mov eax, ebx ; pop ebx ; pop esi ; pop edi ; ret
0x08099b3b:	add esp, 0x1010 ; pop ebx ; pop esi ; pop edi ; ret
0x08099b7a:	add esp, 0x10 ; xor eax, eax ; add esp, 8 ; pop ebx ; ret
0x08099c4c:	in al, dx ; add al, 0xff ; xor eax, 0x80e9fec ; mov ebx, eax
0x08099c6d:	test eax, 0x8301080e ; les eax, ptr [ebx + ebx*2] ; pop esi ; ret
0x08099f2d:	jne 0xd ; mov eax, ebx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x08099f30:	fadd dword ptr [ebx + 0x5e5b04c4] ; ret ; xor eax, eax ; ret
0x0809a031:	inc ebp ; aam 0x8d ; hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809a215:	int3 ; or al, 8 ; mov eax, dword ptr [eax] ; test eax, eax ; cmove eax, ebx
0x0809ac29:	movzx eax, byte ptr [ebp + 0xc] ; mov esi, dword ptr [ebp + 8] ; mov byte ptr [ebp - 0x3d], al
0x0809b924:	add byte ptr [eax], al ; or byte ptr [ebx + ebx - 0x7d], dh ; les ecx, ptr [eax] ; pop ebx ; ret
0x0809ba43:	nop dword ptr [esp + 0x28] ; add esp, 0x4c ; ret
0x0809bb03:	add esp, 8 ; pop ebx ; sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x0809bb37:	add esp, 8 ; pop ebx ; pop esi ; pop edi ; neg eax ; pop ebp ; ret
0x0809bb53:	movsx ecx, cl ; pop ebx ; sub eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
0x0809bd12:	cmp dword ptr [ebp - 0x24], edx ; lea eax, dword ptr [ebx - 1] ; jbe 0x26 ; mov ebx, eax
0x0809bee1:	or ebp, dword ptr [eax - 0x80] ; out 0xc, al ; or byte ptr [eax - 0x18], dl ; arpl bx, ax
0x0809bf09:	add byte ptr [eax], al ; lea edx, dword ptr [esi + eax] ; add eax, 0x30 ; cmp ebx, eax
0x0809bf57:	mov edi, eax ; js 0xfffffd25 ; mov ebx, eax
0x0809c02a:	cmp dword ptr [ebp - 0x24], edx ; lea eax, dword ptr [ebx - 1] ; jbe 0x44 ; mov ebx, eax
0x0809c164:	or byte ptr [ebp - 0x57c00b0], cl ; std ; jbe 0xc ; ret
0x0809c1a4:	add dword ptr [eax], eax ; add byte ptr [eax], al ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x0809c1a8:	add esp, 0x14 ; pop ebx ; pop esi ; ret ; nop ; mov ebx, eax
0x0809c201:	mov edi, edx ; push esi ; push ebx ; mov edx, dword ptr [esp + 0xc] ; mov ebx, eax
0x0809c242:	or bh, bh ; rol byte ptr [ebx + 0x5e5b10c4], 1 ; pop edi ; ret
0x0809c25e:	enter 0x5590, 0x57 ; push esi ; push ebx ; mov esi, edx ; mov ebx, eax
0x0809c4b9:	sub eax, ecx ; cmp edx, eax ; je 0xf ; add esp, 0xc ; ret
0x0809c4ee:	or bh, bh ; rol byte ptr [ebx - 0x3b7cef3c], 1 ; or al, 0xc3
0x0809c512:	push edx ; call 0xfffd168e ; add esp, 0x1c ; ret
0x0809c51a:	sbb al, 0xc3 ; nop ; nop ; mov eax, dword ptr [eax + 4] ; ret
0x0809c531:	inc eax ; add al, 0x65 ; sub eax, dword ptr [0] ; ret
0x0809c5ca:	sbb al, ch ; mov al, byte ptr [0x8300005a] ; les ebx, ptr [ebx + eax*8]
0x0809c5f4:	call 0x5a7c ; add esp, 0x1c ; ret
0x0809c666:	and al, 0x1c ; test edx, edx ; jne 0xa ; add esp, 0x2c ; ret
0x0809c690:	les edx, ptr [eax] ; mov eax, dword ptr [esp + 0xc] ; add esp, 0x2c ; ret
0x0809c6cd:	push esp ; and al, 0xc ; add eax, dword ptr [edx + 4] ; add esp, 0x1c ; ret
0x0809c6e4:	lea esi, dword ptr [esi] ; xor eax, eax ; add esp, 0x1c ; ret
0x0809c74d:	dec dword ptr [ecx - 0x3b7cf7bd] ; and byte ptr [ebx + 0x5e], bl ; ret
0x0809c78b:	dec dword ptr [ecx - 0x3b7cf7bd] ; adc byte ptr [ebx + 0x5e], bl ; ret
0x0809c859:	sbb al, 0x83 ; les edx, ptr [eax] ; mov eax, edx ; add esp, 0x1c ; ret
0x0809c888:	mov dword ptr [eax], 0x80eaf24 ; add esp, 0xc ; ret
0x0809c8a2:	add byte ptr [eax], al ; add byte ptr [eax], al ; add eax, 0xfffffffc ; ret
0x0809c902:	mov dword ptr [ebx + 0x18], eax ; add esp, 8 ; xor eax, eax ; pop ebx ; ret
0x0809c9ad:	rol byte ptr [ebx - 0x177cfd20], 1 ; pop ebx ; pop esi ; ret
0x0809c9bb:	daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop ebx ; pop esi ; ret
0x0809cac7:	mov eax, dword ptr [eax] ; mov dword ptr [esp + 0x1c], eax ; div ecx ; mov ebx, eax
0x0809cadd:	je 0x28 ; add byte ptr [ecx], dh ; fstp xword ptr [ecx] ; clc ; setb bl
0x0809cb55:	and al, 0x2c ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809cb67:	and al, 0x64 ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809cc85:	and al, 0x1c ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809cca0:	jae 0x20 ; mov eax, dword ptr [esp + 0xc] ; sub ecx, eax ; add ebx, eax
0x0809cd62:	and al, 8 ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809ce16:	mov dword ptr [edi + edx*4], eax ; dec edx ; mov eax, dword ptr [esi + edx*4] ; shld ebx, eax, cl
0x0809ce25:	ljmp 0x5b58:0x789e0d3 ; pop esi ; pop edi ; ret
0x0809ce2d:	pop edi ; ret ; shl ebx, cl ; mov dword ptr [edi], ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0809ce76:	mov dword ptr [edi + edx*4], eax ; inc edx ; mov eax, dword ptr [esi + edx*4] ; shrd ebx, eax, cl
0x0809ce85:	ljmp 0x5b58:0x789e8d3 ; pop esi ; pop edi ; ret
0x0809ce8d:	pop edi ; ret ; shr ebx, cl ; mov dword ptr [edi], ebx ; pop ebx ; pop esi ; pop edi ; ret
0x0809cf59:	jne 0xffffffd5 ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809cf9f:	push ebp ; adc byte ptr [ebx + 0x458920c4], al ; in al, 1 ; ret
0x0809cfa9:	sub edx, edi ; mov dword ptr [ebp - 0x2c], ebx ; mov ebx, dword ptr [ebp + 0xc] ; add ebx, eax
0x0809cfd0:	add al, 0x87 ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809d067:	salc ; lea ecx, dword ptr [ebx + 4] ; mov ebx, dword ptr [ebx] ; mov edx, ebx ; add ebx, eax
0x0809d1df:	inc ecx ; jne 0xfffffff1 ; mov eax, ebp ; pop ebx ; pop ebp ; pop esi ; pop edi ; ret
0x0809d28a:	jne 0xffffffd2 ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809d35d:	add al, 0x9e ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809d531:	adc al, 0x87 ; mov dword ptr [esi + eax*4], edx ; add eax, 1 ; cmp ebx, eax
0x0809d6e3:	adc byte ptr [ebx - 0x7cf3dbac], cl ; mov byte ptr [ecx], 0x83 ; ret
0x0809d716:	add byte ptr es:[ebx + 0x5e5b1cc4], al ; pop edi ; pop ebp ; ret
0x0809d881:	sub al, 0x81 ; mov dword ptr [edx + eax*4], ebp ; add eax, 1 ; cmp ebx, eax
0x0809d951:	or al, 0x87 ; mov dword ptr [esi + eax*4], ecx ; add eax, 1 ; cmp ebx, eax
0x0809dbb6:	dec ecx ; jne 0xffffffb2 ; sbb eax, eax ; neg eax ; pop esi ; pop edi ; ret
0x0809dbf2:	inc ecx ; jne 0xffffffee ; mov eax, ebp ; pop ebx ; pop ebp ; pop esi ; pop edi ; ret
0x0809dc7e:	add byte ptr [eax], al ; add byte ptr [ecx + 0x5f5e5b17], cl ; pop ebp ; ret
0x0809dc99:	pop ebx ; mov eax, 2 ; pop esi ; pop edi ; pop ebp ; ret
0x0809dd8b:	pop edi ; pop ebp ; ret ; nop ; test edi, edi ; sete bl
0x0809dd92:	sete bl ; test edx, edx ; sete al ; test al, bl
0x0809ddaf:	mov eax, 2 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809ddea:	mov dword ptr [esi], edx ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809de92:	jne 0xffffffee ; add esp, 0x24 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809dedd:	add byte ptr [eax], al ; add byte ptr [ecx], dh ; rol byte ptr [ebx - 0x3c7cfb17], cl
0x0809df20:	xor byte ptr [eax], al ; add byte ptr [eax], al ; cmp eax, ebp ; jne 0xfffffff8 ; sub ebx, eax
0x0809dfb2:	inc eax ; lea eax, dword ptr [eax*4 + 0x80cb660] ; mov ebx, eax
0x0809e032:	sbb al, 0xe8 ; or byte ptr [eax], al ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x0809e097:	add byte ptr [eax], al ; add esp, 0xc8 ; pop ebx ; ret
0x0809e0bb:	or al, 0x8b ; inc eax ; cmp byte ptr [ebp - 0xcfa8740], al ; ret
0x0809e0d0:	or dword ptr [eax], eax ; add byte ptr [eax], al ; mov eax, 0xffffffff ; ret
0x0809e150:	jge 0xd089f86b ; pop ebx ; pop esi ; pop ebp ; ret
0x0809e186:	dec dword ptr [ebp - 0x2f76079b] ; pop ebx ; pop esi ; pop ebp ; ret
0x0809e298:	jne 0x70 ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0809e37e:	sbb byte ptr [ebp - 0x7cf28a25], al ; les ecx, ptr [eax] ; pop ebx ; ret
0x0809e39c:	call 0xfffb56a4 ; add esp, 0x10 ; cmp ebx, eax
0x0809e3a9:	sal bh, cl ; je 0x28 ; adc al, 0x83 ; les ecx, ptr [eax] ; pop ebx ; ret
0x0809e3e6:	push cs ; or byte ptr [eax - 0x7cf7f149], dh ; les ecx, ptr [ebx + eax*8]
0x0809e3f1:	add eax, 0x80eb7ac ; mov al, 0xb7 ; push cs ; or bl, al
0x0809e487:	inc esp ; and al, 0xc ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x0809e50f:	add byte ptr [eax], al ; add byte ptr [ebx + 0x5e5b10c4], al ; pop edi ; ret
0x0809e622:	add esp, 0x10 ; add esp, 4 ; pop esi ; pop edi ; ret
0x0809e660:	call eax ; add esp, 0x10 ; add esp, 8 ; pop ebx ; ret
0x0809e6dc:	movzx eax, al ; mov dword ptr [ebx + 4], edx ; pop ebx ; pop esi ; pop edi ; ret
0x0809e779:	scasb al, byte ptr es:[edi] ; sti ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x0809e808:	mov dword ptr [eax], 0x80eaf40 ; add esp, 0xc ; ret
0x0809e862:	sbb ch, bh ; inc dword ptr [ebx - 0x3b7cf33c] ; or al, 0xc3
0x0809e8d0:	mov eax, dword ptr [ebx + 0xc] ; mov dword ptr [eax], edx ; add esp, 8 ; pop ebx ; ret
0x0809e8f0:	mov edx, dword ptr [ebx + 0xc] ; mov dword ptr [edx], eax ; add esp, 8 ; pop ebx ; ret
0x0809e937:	cli ; inc dword ptr [ebx - 0x3b7cef3c] ; or byte ptr [ebx - 0x3d], bl
0x0809e954:	add al, byte ptr [eax] ; add byte ptr [ecx + 0x8c48302], cl ; pop ebx ; ret
0x0809e9c2:	rol byte ptr [ebx - 0x49f0e33c], 0xc0 ; neg eax ; ret
0x0809ea90:	sub byte ptr [ebx - 0x2f76ef3c], al ; add esp, 0x2c ; ret
0x0809eab5:	les edx, ptr [eax] ; test eax, eax ; je 0xb ; pop ebx ; pop esi ; pop edi ; ret
0x0809eb57:	mov dword ptr [esi], eax ; mov eax, ebx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x0809eb77:	add byte ptr [eax], al ; add esp, 4 ; mov eax, ebx ; pop ebx ; pop esi ; ret
0x0809eccd:	and eax, 3 ; sub eax, edx ; shr eax, 0x1f ; sub ebx, eax
0x0809ecfe:	out dx, eax ; pop ds ; sub eax, edi ; mov edi, dword ptr [esp + 4] ; sub ebx, eax
0x0809eeac:	sbb al, 0xe8 ; mov esi, 0x83ffff0a ; les ebx, ptr [ebx + eax*8]
0x0809efd3:	sar eax, 0x1f ; mov ebx, edx ; sar ebx, 3 ; sub ebx, eax
0x0809f08e:	dec esp ; ret 0xc483 ; adc al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x0809f0a9:	dec edi ; ret 0xc483 ; adc al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x0809f126:	not ecx ; cli ; sar edi, 0x1f ; mov ebx, edx ; sub ebx, eax
0x0809f20a:	sub edx, eax ; lea eax, dword ptr [edx + edx*4] ; lea eax, dword ptr [eax + eax*4] ; sub ebx, eax
0x0809f394:	lea edx, dword ptr [ecx + ebx] ; sub eax, ebp ; cmp edx, ebx ; setge bl
0x0809f5be:	nop ; nop ; push esi ; mov esi, edx ; push ebx ; mov edx, ecx ; mov ebx, eax
0x0809f5d5:	cmp eax, 0xfffff000 ; ja 0xb ; pop ebx ; pop esi ; ret
0x0809f5f6:	add byte ptr [ebx - 0x2f76ff06], al ; jle 0xa ; ret
0x0809f618:	sal byte ptr [ebp - 0x1d], cl ; mov dword ptr gs:[0x68], eax ; ret
0x0809fa25:	xchg eax, ebx ; sti ; inc dword ptr [ebx - 0x3f7aef3c] ; mov ebx, eax
0x0809fb0f:	push ebp ; or byte ptr [ecx + 0x160b8], 0 ; mov ebx, eax
0x0809fd42:	add dword ptr [ebp + 0xbd04], ecx ; add byte ptr [eax], al ; mov ebx, eax
0x080a034f:	call 0xfffff2e1 ; cmp eax, dword ptr [ebp - 0x68] ; mov ebx, eax
0x080a0387:	test dword ptr [edx + eax], esp ; add byte ptr [eax], al ; add eax, 1 ; cmp ebx, eax
0x080a061c:	test bh, bh ; call dword ptr [eax + 0x53565755] ; mov ebx, eax
0x080a070e:	inc ebp ; add byte ptr [ebx + 0x5e5b2cc4], al ; pop edi ; pop ebp ; ret
0x080a0a5e:	jne 0xffffffea ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a122a:	call 0xfffb9fe6 ; add esp, 0x10 ; add ebx, eax
0x080a13ba:	mov dword ptr [ebp - 0x20], eax ; mov eax, 0xe ; add ebx, eax
0x080a13d0:	add esi, 4 ; call 0xfffb9e40 ; add ebx, eax
0x080a1682:	jne 0xa ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a1732:	les ecx, ptr [ebx - 0x3f7af3bd] ; je 0xc ; add ebx, eax
0x080a178e:	inc ebp ; lodsb al, byte ptr [esi] ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a1863:	push ebx ; sub esp, 0xc ; test eax, eax ; je 0x4f ; mov ebx, eax
0x080a1975:	push cs ; or byte ptr [eax + eax], al ; add byte ptr [eax], al ; mov eax, dword ptr [eax] ; add ebx, eax
0x080a198f:	mov dword ptr [ebp - 0x258], eax ; sub eax, ebx ; mov ebx, eax
0x080a2097:	and al, 0x34 ; mov esi, dword ptr [esp + 0x38] ; sub ebx, edx ; cmp ebx, eax
0x080a2220:	or byte ptr [ebx + 0x5e5b20c4], al ; pop edi ; pop ebp ; ret
0x080a223c:	or byte ptr [ebp + 0xa8bc614], cl ; mov eax, dword ptr [ecx] ; cmp ebx, eax
0x080a224b:	add al, 0x66 ; test eax, eax ; jne 0x23 ; mov eax, dword ptr [ecx] ; cmp ebx, eax
0x080a2352:	test ecx, ecx ; je 0x45 ; push ebp ; push edi ; push esi ; push ebx ; mov ebx, eax
0x080a2979:	ror dword ptr [ecx - 0x5737b], -1 ; movzx eax, bl
0x080a29a8:	dec eax ; ror byte ptr [edi], 1 ; mov dh, 2 ; lea edi, dword ptr [eax - 0x30] ; mov ebx, eax
0x080a3150:	add byte ptr [eax], al ; mov eax, dword ptr [ebp - 0x588] ; mov ebx, eax
0x080a3649:	test al, 1 ; jne 0x7eb ; mov ebx, eax
0x080a3dfb:	movzx edi, byte ptr [edx - 2] ; mov ebx, edi ; cmp bl, cl ; ja 0xffffffcd
0x080a484e:	test ebp, esp ; add al, 0 ; add byte ptr [ebp - 0x3cc600b9], cl
0x080a49da:	mov dword ptr [ebp - 0x59c], ebx ; mov edi, edx ; mov ebx, eax
0x080a549d:	jmp 0xffffd25b ; mov dword ptr [ebp + 8], ecx ; mov ebx, eax
0x080a576f:	adc byte ptr [ebx - 0x438a0008], al ; mov ecx, ebx ; mov ebx, eax
0x080a708e:	add byte ptr [eax], al ; add cl, ch ; bound esi, qword ptr [esi - 0x3c7c0001]
0x080a7171:	rol byte ptr [ecx], 1 ; test dword ptr [edx + edi*8 - 0x3cfe0001], esp
0x080a7b36:	rol byte ptr [ecx], 1 ; test dword ptr [eax + 0x1fffffa], ebx ; ret
0x080a7c83:	mov ecx, dword ptr [ebp - 0x5ac] ; sub ecx, ebx ; add ebx, eax
0x080a8073:	mov eax, ebx ; mov ebx, edi ; sub eax, ecx ; add edx, eax ; sub ebx, eax
0x080a8420:	sbb al, 0xe8 ; mov bl, byte ptr [edi - 0x3b7c0001] ; sbb al, 0xc3
0x080a85bf:	hlt ; mov eax, esi ; mov edx, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a86c5:	sbb byte ptr [ebx - 0x2f76ef3c], al ; add esp, 0x1c ; ret
0x080a86f5:	rol byte ptr [ebx - 0x49f0f33c], 0xc0 ; neg eax ; ret
0x080a8713:	add byte ptr [eax], al ; mov dword ptr [ebx + 0xc], eax ; add esp, 8 ; pop ebx ; ret
0x080a877c:	add esp, 0x10 ; add esp, 0x18 ; mov eax, ebx ; pop ebx ; ret
0x080a87a6:	add byte ptr [eax], al ; mov dword ptr [ebx + 0x10], eax ; add esp, 0x14 ; pop ebx ; ret
0x080a8817:	add esp, 0x10 ; add esp, 0x28 ; mov eax, ebx ; pop ebx ; ret
0x080a88c3:	add al, 0xb8 ; add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; ret
0x080a8988:	add dword ptr [eax], eax ; add byte ptr [eax], cl ; leave ; jne 9 ; xor eax, eax ; ret
0x080a8b26:	add esp, 0x4c ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080a8ba7:	enter 0xeb8, 8 ; add word ptr [edx + eax*2], 1 ; ret
0x080a8cd0:	les edx, ptr [eax] ; add esp, 0xa8 ; pop ebx ; ret
0x080a8d2c:	nop ; nop ; nop ; mov eax, dword ptr [0x80ebc9c] ; ret
0x080a8d62:	retf -2 ; mov dword ptr [ebx], eax ; add esp, 0x14 ; pop ebx ; ret
0x080a8f68:	inc esp ; xor al, 0xfb ; inc dword ptr [ebx + 0x7d8010c4] ; ret
0x080a909a:	sub al, 0xe8 ; mov al, byte ptr [0x83000000] ; les ebp, ptr [ebx + eax*8]
0x080a90c8:	sub al, 0xe8 ; jb 4 ; add byte ptr [eax], al ; add esp, 0x2c ; ret
0x080a9e74:	sbb al, 0xe8 ; xchg byte ptr [ebx], dh ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x080a9e96:	sbb al, 0xe8 ; movsb byte ptr es:[edi], byte ptr [esi] ; pushal ; add byte ptr [eax], al ; add esp, 0x1c ; ret
0x080a9ee5:	add byte ptr [eax], al ; jne 0x3b ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080a9ef8:	add byte ptr [edi], cl ; inc esp ; rol dword ptr [ebx + 0x5e5b04c4], -0x3d
0x080a9f16:	leave ; cmove eax, ebx ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080a9f30:	add byte ptr [edi], cl ; inc ebp ; rol dword ptr [ebx + 0x5e5b04c4], -0x3d
0x080aa408:	test dl, dl ; jne 0xfffffff0 ; mov esi, dword ptr [esp + 0xc] ; add ebx, eax
0x080aa6eb:	movsx eax, byte ptr [ecx] ; test byte ptr [edx + eax*2 + 1], 0x20 ; mov ebx, eax
0x080aa805:	add dword ptr [eax], eax ; add cl, bl ; out dx, al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080aabc3:	les ebx, ptr [ecx + eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080aabcd:	lea esi, dword ptr [esi] ; mov edx, dword ptr [esp + 0x10] ; movsx eax, bl
0x080aae8e:	add dword ptr [eax], eax ; add byte ptr [ebx - 0x27], bl ; loopne 0x65 ; pop edi ; pop ebp ; ret
0x080ab135:	cli ; or al, byte ptr [ebx - 0x3f7cff2f] ; add dword ptr [ecx], edi ; ret
0x080ac16d:	lea esi, dword ptr [esi] ; xor ebx, ebx ; cmp eax, ebp ; setb bl
0x080ac2fc:	add byte ptr [ebx + 0x80249c], cl ; add byte ptr [eax], al ; cmp ebx, eax
0x080ad1c2:	or eax, 0x4c636808 ; or eax, 0xc322e808
0x080ad1db:	or eax, 0x4c636808 ; or eax, 0xc309e808
0x080ad3b5:	add al, 0 ; add cl, bl ; out dx, al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080ad78b:	les edi, ptr [esp + eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080ada5e:	add al, 0 ; add byte ptr [ebx - 0x27], bl ; loopne 0x65 ; pop edi ; pop ebp ; ret
0x080af094:	sar ecx, 0x1f ; cmp dword ptr [esp + 0x38], ebx ; seta bl
0x080af7d1:	fmulp st(1) ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080af886:	add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; fmul st(0) ; ret
0x080af8ce:	add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; fmulp st(1) ; ret
0x080b00f5:	add byte ptr ss:[eax], al ; fldz ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b051c:	les edi, ptr [esi + esi] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b077e:	add byte ptr ss:[eax], al ; pop ebx ; fchs ; pop esi ; pop edi ; pop ebp ; ret
0x080b234f:	nop ; push edi ; push esi ; mov edi, ecx ; push ebx ; mov esi, edx ; mov ebx, eax
0x080b238f:	add cl, byte ptr [ecx + 0x20c4831e] ; pop ebx ; pop esi ; pop edi ; ret
0x080b2410:	mov dword ptr [esi], ebx ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b245f:	lodsb al, byte ptr [esi] ; push edi ; push esi ; mov edi, ecx ; push ebx ; mov esi, edx ; mov ebx, eax
0x080b2529:	mov dword ptr [esp], eax ; fld dword ptr [esp] ; add esp, 4 ; ret
0x080b2568:	and al, 0x81 ; loope 3 ; dec dword ptr [edi] ; and byte ptr [esi - 0x7f], 0xc3
0x080b2597:	add al, 0xdd ; add al, 0x24 ; add esp, 0xc ; pop ebx ; pop esi ; ret
0x080b25f4:	inc esp ; and al, 4 ; fld xword ptr [esp] ; add esp, 0x1c ; ret
0x080b262d:	add byte ptr [ebp + 6], dh ; lea eax, dword ptr [0x80b5210] ; ret
0x080b2688:	sub eax, dword ptr [ebx + ebp*4] ; je 0xffffffe0 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b2695:	add byte ptr [eax], al ; add byte ptr [ebx + 0x31], bl ; rcr byte ptr [esi + 0x5f], 0x5d ; ret
0x080b2b80:	add byte ptr [ebx + 0xf6610c1], al ; outsd dx, dword ptr [esi] ; fsub st(1), st(0) ; ret
0x080b4ef4:	add byte ptr [edi + 2], dh ; neg eax ; add esp, 4 ; pop ebp ; ret
0x080b4eff:	nop ; add esp, 4 ; pop esi ; pop edi ; pop ebp ; xor eax, eax ; ret
0x080b51c9:	or byte ptr [ecx], bh ; into ; jne 0x17 ; pop esi ; pop ebp ; xor eax, eax ; ret
0x080b556b:	rol byte ptr [ebx], 0xc ; or byte ptr [ecx], ch ; enter 0x5f5e, 0x5d ; ret
0x080b557c:	add byte ptr [eax], al ; add byte ptr [eax], al ; pop esi ; xor eax, eax ; pop edi ; pop ebp ; ret
0x080b5592:	add byte ptr [eax], al ; add byte ptr [edi + 2], dh ; neg eax ; pop edi ; pop ebp ; ret
0x080b55b4:	add ecx, 1 ; jne 0x4e ; cmp ebp, 4 ; jbe 0xffffffcd
0x080b5889:	neg edx ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b58c5:	mov ecx, eax ; xor edx, edx ; mov eax, esi ; div ecx ; mov ebx, eax
0x080b59a7:	mov ch, 0 ; add byte ptr [eax], al ; test edx, edx ; mov ecx, esi ; mov ebx, eax
0x080b59fb:	neg edx ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b5cb6:	jne 0x22 ; mov eax, dword ptr [edx + 0x58] ; add esp, 8 ; pop ebx ; ret
0x080b5cbd:	or byte ptr [ebx - 0x3d], bl ; add esp, 8 ; xor eax, eax ; pop ebx ; ret
0x080b5cde:	jbe 2 ; mov eax, dword ptr [edx + 0x5c] ; add esp, 8 ; pop ebx ; ret
0x080b5cee:	add byte ptr [eax], al ; mov eax, dword ptr [edx + 0x54] ; add esp, 8 ; pop ebx ; ret
0x080b5dd0:	jb 0xffffff90 ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b5f49:	and eax, 0x7f ; shl eax, cl ; add ecx, 7 ; or ebx, eax
0x080b6282:	add dword ptr [eax], eax ; add byte ptr [eax], al ; shl eax, cl ; neg eax ; or ebx, eax
0x080b6581:	add byte ptr [esi + eax*8], al ; sbb al, 0x18 ; add byte ptr [eax], al ; add al, 0xc3
0x080b6591:	push edi ; mov ecx, 0x30 ; push esi ; push ebx ; mov ebx, eax
0x080b68bf:	mov eax, 3 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b6972:	retf -0xf ; dec dword ptr [ebx - 0x76e7dbb4] ; ret
0x080b77e4:	int1 ; mov edx, dword ptr [edx] ; pop ebx ; mov dword ptr [esi + 0x4c], edx ; pop esi ; pop edi ; ret
0x080b77f1:	mov dword ptr [esi + 0x4c], 0 ; pop esi ; pop edi ; ret
0x080b7873:	ljmp 0x104f:0x39d1291f ; sete bl
0x080b789e:	mov eax, 7 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b7983:	add byte ptr [eax], al ; add byte ptr [ecx + 0x5f5e5bd0], cl ; pop ebp ; ret
0x080b799e:	add byte ptr [ebx + 0x5c892cec], al ; and al, 0xc ; mov ebx, eax
0x080b7aa1:	je 0x4d ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b7ae4:	je 0xffffffb8 ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b7b17:	inc edx ; push 0x5b2cc483 ; pop esi ; pop edi ; pop ebp ; ret
0x080b7b83:	jne 0xfffffff7 ; mov eax, dword ptr [eax] ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080b7b8e:	jbe 2 ; mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x48] ; ret
0x080b7be9:	dec esp ; and al, 0x18 ; mov dword ptr [eax], ecx ; add esp, 8 ; pop ebx ; ret
0x080b7bfa:	and al, 0x18 ; mov dword ptr [edx + eax*4], ebx ; add esp, 8 ; pop ebx ; ret
0x080b7c0e:	add byte ptr [eax], al ; mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x4c] ; ret
0x080b7c2a:	pushal ; shr eax, 0x1f ; mov dword ptr [ecx], eax ; mov eax, dword ptr [edx + 0x4c] ; ret
0x080b7c42:	and al, 8 ; mov eax, dword ptr [esp + 4] ; mov dword ptr [eax + 0x4c], edx ; ret
0x080b7c4e:	add byte ptr es:[ebx - 0x74fbdbbc], cl ; inc eax ; push eax ; ret
0x080b7c5e:	add byte ptr [eax], al ; mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x5c] ; ret
0x080b7c97:	adc byte ptr [ebx - 0x7cf3dbbc], cl ; les ebx, ptr [eax] ; pop ebx ; ret
0x080b7cae:	add byte ptr es:[ebx - 0x74fbdbbc], cl ; inc eax ; pop eax ; ret
0x080b7cbe:	add byte ptr [eax], al ; mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x54] ; ret
0x080b7da2:	add dword ptr [eax], eax ; add byte ptr [ecx], dh ; rcr byte ptr [ebx + 0x5e], 0x5f ; pop ebp ; ret
0x080b7da7:	pop ebx ; pop esi ; pop edi ; pop ebp ; ret ; lea esi, dword ptr [esi] ; ret
0x080b7e4a:	pop ebp ; hlt ; mov esi, dword ptr [ebp - 8] ; mov edi, dword ptr [ebp - 4] ; leave ; ret
0x080b7eeb:	clc ; mov edi, dword ptr [ebp - 4] ; mov ebp, dword ptr [ebp] ; mov esp, ecx ; ret
0x080b8133:	add edi, edi ; rol byte ptr [ebx - 0x3b7cef3c], 1 ; or al, 0xc3
0x080b81b3:	mov eax, 5 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b81b7:	add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret ; mov eax, dword ptr [esp] ; ret
0x080b81bb:	pop ebp ; ret ; mov eax, dword ptr [esp] ; ret ; mov ecx, dword ptr [esp] ; ret
0x080b81bf:	and al, 0xc3 ; mov ecx, dword ptr [esp] ; ret ; mov esi, dword ptr [esp] ; ret
0x080b81c3:	and al, 0xc3 ; mov esi, dword ptr [esp] ; ret ; mov edi, dword ptr [esp] ; ret
0x080b81c7:	and al, 0xc3 ; mov edi, dword ptr [esp] ; ret ; mov ebp, dword ptr [esp] ; ret
0x080b81f5:	or byte ptr [edx + 1], bh ; cmova eax, edx ; ret
0x080b829e:	jmp 0xffffff90 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b8345:	jne 0xffffffdb ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b8379:	add byte ptr [eax], al ; add byte ptr [ebp + 0x22], dh ; add esp, 8 ; pop ebx ; ret
0x080b838c:	add esp, 8 ; mov eax, 4 ; pop ebx ; ret
0x080b83a8:	add esp, 8 ; mov eax, 2 ; pop ebx ; ret
0x080b83de:	jne 0x22 ; mov eax, dword ptr [edx + 8] ; add esp, 8 ; pop ebx ; ret
0x080b8401:	push eax ; jne 0xfffffff7 ; add esp, 8 ; xor eax, eax ; pop ebx ; ret
0x080b840e:	add byte ptr es:[ebx - 0x3b7cfbbe], cl ; or byte ptr [ebx - 0x3d], bl
0x080b863e:	cmova eax, edx ; add esp, 0x20 ; pop ebx ; pop esi ; pop edi ; ret
0x080b8685:	or dh, byte ptr [ecx] ; rol byte ptr [ebx + 0x5e5b10c4], 0x5f ; ret
0x080b8718:	movzx eax, byte ptr [edx] ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x080b88bd:	add byte ptr [ebx + 0x548b5cec], al ; and al, 0x70 ; mov ebx, eax
0x080b8afb:	add byte ptr [eax], al ; add esp, 0x5c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b8e9f:	inc edi ; ret 0xc483 ; sub al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x080b8fb9:	and al, 0xc ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b92f5:	dec dword ptr [ebx + 0xf202454] ; mov dh, 0xe8 ; mov ebx, eax
0x080b946a:	add byte ptr [ebx + 0x448908c0], al ; and al, 0x14 ; mov ebx, eax
0x080b950d:	mov edx, esi ; mov edi, ebx ; mov dword ptr [esp + 0xc], ebx ; mov ebx, eax
0x080b97f4:	push 0xc483f7f4 ; adc byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x080b9809:	sbb dword ptr [eax], eax ; add byte ptr [ebx + 0x5e], bl ; mov dword ptr [edx + 0x14], eax ; pop edi ; ret
0x080b98a9:	sbb dword ptr [eax], eax ; add byte ptr [ecx + 0x5e5b1446], cl ; pop edi ; ret
0x080b98ca:	je 8 ; mov ecx, dword ptr [eax] ; test ecx, ecx ; jne 0xe ; ret
0x080b98f6:	test eax, eax ; jne 0xa ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080b99f2:	call 0xffffff2e ; add esp, 0x18 ; pop ebx ; ret
0x080b9b58:	stc ; inc dword ptr [ebx - 0x3b7cef3c] ; or byte ptr [ebx - 0x3d], bl
0x080b9c47:	mov eax, edi ; add esp, 0x3c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b9f7a:	mov eax, 8 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080b9fed:	call 0xfffffe03 ; add esp, 0x10 ; mov ebx, eax
0x080ba2c8:	add esp, 0x4c ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080ba385:	fisttp dword ptr [ecx - 0x7c198a28] ; les ecx, ptr [eax] ; pop ebx ; ret
0x080ba3ce:	test esi, esi ; jne 0xffffffda ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080ba4a0:	stc ; inc dword ptr [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret
0x080ba4fe:	mov ah, 0xe ; or byte ptr [ebp - 0x1b], dh ; add esp, 8 ; pop ebx ; ret
0x080ba617:	test esi, esi ; jne 0xffffffe7 ; add esp, 4 ; pop ebx ; pop esi ; ret
0x080ba6a4:	call 0xfff9ec4c ; add esp, 0x1c ; ret
0x080ba6d1:	xor al, 0xfb ; inc dword ptr [ebx - 0x3b7cef3c] ; or al, 0xc3
0x080ba6eb:	in al, dx ; stc ; inc dword ptr [ebx - 0x3b7cef3c] ; or al, 0xc3
0x080ba7e8:	les edx, ptr [eax] ; test esi, esi ; jne 0xffffffd8 ; pop ebx ; pop esi ; pop edi ; ret
0x080baaa3:	les edx, ptr [eax] ; test esi, esi ; jne 0xffffffe5 ; pop ebx ; pop esi ; pop edi ; ret
0x080bab4b:	out -7, eax ; inc dword ptr [ebx + 0x5e5b14c4] ; ret
0x080bac05:	add byte ptr [eax], al ; add byte ptr [eax], al ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x080bac0e:	ret ; nop ; add esp, 0x14 ; xor eax, eax ; pop ebx ; pop esi ; ret
0x080badc8:	mov ch, 0xe ; or al, ch ; inc eax ; cmp eax, 0xc3f3fffb
0x080badfa:	ret ; pop es ; add al, byte ptr [eax] ; add esp, 8 ; pop ebx ; ret
0x080bc957:	or byte ptr [ebx - 0x35], al ; add eax, 0x5cb8308 ; or bl, al
0x080bd39c:	and dl, al ; push es ; or byte ptr [eax], bh ; ret 0x806 ; inc ebp ; ret
0x080bd3a0:	cmp dl, al ; push es ; or byte ptr [ebp - 0x3d], al ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3a4:	inc ebp ; ret ; push es ; or byte ptr [ebp - 0x3d], al ; push es ; or byte ptr [ebp - 0x3d], al
0x080bd3ac:	inc ebp ; ret ; push es ; or byte ptr [eax], al ; ret 0x806 ; inc ebp ; ret
0x080bd3bc:	inc edx ; push es ; or byte ptr [eax], al ; ret 0x806 ; adc eax, ebx
0x080bd3c4:	adc eax, ebx ; push es ; or byte ptr [eax], al ; ret 0x806 ; or ebx, eax
0x080bd3c8:	add dl, al ; push es ; or byte ptr [ecx], cl ; ret ; push es ; or byte ptr [ebx], bh ; ret
0x080bd3cc:	or ebx, eax ; push es ; or byte ptr [ebx], bh ; ret ; push es ; or byte ptr [ecx], dh ; ret
0x080bd3d0:	cmp eax, ebx ; push es ; or byte ptr [ecx], dh ; ret ; push es ; or byte ptr [edi], ah ; ret
0x080bd3d8:	daa ; ret ; push es ; or byte ptr [0x4d0806c3], bl ; ret
0x080bd3dc:	sbb eax, 0x4d0806c3 ; ret ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3e0:	dec ebp ; ret ; push es ; or byte ptr [eax - 0x3d], bh ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3e4:	js 0xffffffc5 ; push es ; or byte ptr [eax - 0x3d], bh ; push es ; or byte ptr [eax - 0x3d], bh
0x080bd3ec:	js 0xffffffc5 ; push es ; or byte ptr [eax], al ; ret 0x806 ; js 0xffffffcd
0x080bd418:	daa ; ret ; push es ; or byte ptr [0x620806c3], bl ; ret
0x080bd8bf:	or byte ptr [edi - 0x46f7f936], ch ; retf 0x806 ; ret
0x080c02c3:	add cl, al ; add byte ptr [eax], al ; add dl, al ; add byte ptr [eax], al ; add bl, al
0x080c629b:	add byte ptr [ebx - 0x40fffffe], bh ; add al, byte ptr [eax] ; add bl, al
0x080c6373:	add byte ptr [edi - 0x42fffffd], dh ; add eax, dword ptr [eax] ; add bl, al
0x080c678f:	add byte ptr [ecx - 0x41fffff8], bh ; or byte ptr [eax], al ; add bl, al
0x080c68e3:	add byte ptr [ebp - 0x3ffffff7], bh ; or dword ptr [eax], eax ; add bl, al
0x080c6ce3:	add byte ptr [ebp - 0x3ffffff4], bh ; or al, 0 ; add bl, al
0x080c70e3:	add byte ptr [ebp - 0x3ffffff1], bh ; sldt word ptr [eax] ; ret
0x080c7f17:	add dl, al ; and al, 0 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080c8407:	add dl, al ; xor eax, dword ptr [eax] ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080c8f0f:	add dl, al ; aam 1 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080c96a7:	add dl, al ; aad 1 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, al
0x080cb604:	pop esi ; inc ebx ; jns 0x11 ; int3 ; int3 ; int3 ; or al, 0xc ; ret
0x080cba6f:	or byte ptr [edi - 0x19], dh ; pop es ; or byte ptr [edi - 0x19], dh ; pop es ; or bl, al
0x080cbbef:	or dh, al ; out 7, al ; or byte ptr [eax], dl ; out 7, eax ; or bl, al
0x080ce6ff:	add byte ptr [0xbd000000], al ; out 0xc, al ; or bl, al
0x080cf93a:	mov edx, 0xbebdbcbb ; mov edi, 0xc3c2c1c0
0x080cfc06:	xchg eax, esi ; pop ebp ; xchg eax, edi ; mov bh, byte ptr [edx] ; mov eax, 0xc31e1ad9
0x080cfc42:	pushfd ; xor dl, byte ptr [ebx + 0x71] ; cld ; out -0x6b, eax ; push es ; cld ; ret
0x080cfde6:	pop ecx ; inc esp ; aas ; mov ch, 0x31 ; mov ah, bl ; push esi ; ret
0x080cffe7:	pop edx ; in eax, dx ; sti ; push edx ; cdq ; inc esp ; push ds ; mov ah, 0x13 ; ret
0x080d012d:	pop ds ; cli ; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp ; ret
0x080d05d1:	lea ebx, dword ptr [esi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x080d0635:	mov ch, 0xec ; aas ; or al, 0x45 ; sub al, 0xb3 ; push edi ; cmp bl, al
0x080d0e7e:	cli ; mov eax, dword ptr [0xd11e901c] ; stc ; jnp 0xffffffc2 ; ret
0x080d1002:	jae 0xffffffd9 ; jo 0x75 ; mov ebp, 0xfb67d10d ; ret
0x080d1163:	fstp st(5) ; dec ch ; fnsave dword ptr [ebp + eax*8 + 0x34] ; fadd st(3)
0x080d12bf:	movsb byte ptr es:[edi], byte ptr [esi] ; fstp st(5) ; inc esi ; xor dh, byte ptr [edi - 0x3cc5744c]
0x080d228c:	test dword ptr [ebp - 0x9aff276], esp ; mov al, 0xee ; fcmovb st(0), st(3)
0x080d228d:	movsd dword ptr es:[edi], dword ptr [esi] ; mov cl, byte ptr [0xeeb0f650] ; fcmovb st(0), st(3) ; ret
0x080d25e0:	popfd ; outsd dx, dword ptr [esi] ; inc edx ; jl 0xffffff8d ; outsd dx, dword ptr [esi] ; aad 8 ; stosd dword ptr es:[edi], eax ; ret
0x080d2719:	push esi ; jnp 0x19 ; mov dl, 0x9f ; sub edi, esi ; int 0x6b ; ret
0x080d2886:	scasd eax, dword ptr es:[edi] ; insb byte ptr es:[edi], dx ; sub eax, 0x57251962 ; inc eax ; jno 0xffffffcd
0x080d2ce7:	cmp edx, dword ptr [ebp + edi*4 - 0x9d2124e] ; clc ; and al, bl
0x080d300f:	int3 ; shr byte ptr [ebp - 0x27d3396f], 0x5a ; and ebx, eax
0x080d4bd1:	int3 ; int3 ; int3 ; int3 ; int3 ; int3 ; or al, 0x30 ; or al, 0xc3
0x080d4bd4:	int3 ; int3 ; int3 ; or al, 0x30 ; or al, 0xc3 ; xor byte ptr [ebx + eax*8], cl
0x080d5184:	xchg eax, ecx ; ret 0xfffc ; adc eax, ebx ; cld ; jmp dword ptr [ecx - 0x3d]
0x080d518b:	jmp dword ptr [ecx - 0x3d] ; cld ; inc dword ptr [ebp - 0x3c00033c]
0x080d518c:	popal ; ret ; cld ; inc dword ptr [ebp - 0x3c00033c] ; ret
0x080d5879:	dec eax ; push cs ; add byte ptr [ecx], 0x48 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d5908:	push eax ; dec edx ; or eax, dword ptr [edx] ; test eax, 0x41140e0a ; ret
0x080d5999:	push cs ; inc eax ; dec edx ; push cs ; xor byte ptr [esi + ecx + 0x14], cl ; inc ecx ; ret
0x080d59c8:	add dword ptr [edx], 0x51 ; push cs ; adc byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d5b09:	inc edi ; push cs ; and byte ptr [edx], al ; dec ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5b20:	add al, 0x44 ; or eax, dword ptr [edx] ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5b61:	sbb al, 0x41 ; push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [edi + 0xa], al ; ret
0x080d5bbc:	push cs ; and byte ptr [esi + 0xe], cl ; adc byte ptr [ecx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d5c06:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080d5c33:	add eax, dword ptr [esi + 0x3058304] ; inc ebp ; add dword ptr [edx], ecx ; ret
0x080d5c43:	or al, 4 ; add al, 0x47 ; or eax, dword ptr [ebx] ; rol byte ptr [ecx], 1 ; or al, bl
0x080d5c73:	add eax, dword ptr [esi + 0x3058304] ; dec ecx ; add ecx, dword ptr [edx] ; ret
0x080d5c81:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x41 ; or ebp, dword ptr [edx + ecx - 0x3d]
0x080d5c91:	or al, 4 ; add al, 0x4b ; or eax, dword ptr [ebx] ; ja 9 ; or al, bl
0x080d5d0c:	pushal ; inc ebp ; push cs ; push eax ; pop ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d5d23:	add al, 0x46 ; or eax, dword ptr [edx] ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d5dde:	push cs ; and byte ptr [eax + 0xe], dl ; adc byte ptr [edi + 0xe], al ; or al, 0x41 ; ret
0x080d5e0b:	add eax, dword ptr [esi + 0x3058304] ; add byte ptr [ecx], al ; or al, bl
0x080d5e7f:	push cs ; sub al, 0x41 ; push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x41 ; ret
0x080d5f45:	dec eax ; push cs ; xor byte ptr [edx], al ; xchg eax, esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6043:	pushal ; dec esp ; push cs ; xor byte ptr [ebx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080d60cc:	inc eax ; dec eax ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d6127:	dec eax ; push cs ; and byte ptr [edx], al ; dec ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d618f:	dec eax ; push cs ; xor byte ptr [edx], al ; pushal ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d61da:	push cs ; sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d6219:	inc eax ; dec eax ; push cs ; xor byte ptr [ebx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d622f:	push cs ; add al, 0x41 ; or edx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d62c4:	dec eax ; push cs ; or byte ptr [edx], 0x46 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6335:	inc eax ; dec eax ; push cs ; xor byte ptr [ecx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080d643b:	push cs ; dec esp ; inc esp ; push cs ; push eax ; dec eax ; push cs ; adc al, 0x41 ; ret
0x080d64d7:	add eax, dword ptr [esi + 0x3058304] ; cmpsb byte ptr [esi], byte ptr es:[edi] ; add dword ptr [edx], ecx ; ret
0x080d64e5:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x46 ; or ebx, dword ptr [edx + ecx - 0x3d]
0x080d654f:	dec esi ; push cs ; xor byte ptr [edx], al ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6573:	push cs ; inc eax ; dec eax ; push cs ; xor byte ptr [eax + 0xe], bl ; adc al, 0x45 ; ret
0x080d6625:	dec eax ; push cs ; and byte ptr [edx], al ; int3 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d671b:	dec eax ; push cs ; inc eax ; add cl, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d6732:	add al, 0x4b ; or eax, dword ptr [edx] ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6749:	add al, 0x41 ; or eax, dword ptr [edx] ; cld ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d67ca:	dec eax ; push cs ; inc eax ; add ah, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d67e2:	inc ecx ; or eax, dword ptr [ebx] ; cdq ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080d683a:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a6e02
0x080d6848:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x46 ; or edx, dword ptr [ebp + 0xa] ; ret
0x080d689e:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30acb02
0x080d68d7:	add eax, dword ptr [ebx + 0x2e530204] ; adc byte ptr [ebp + 0xa], bl ; ret
0x080d68e3:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x49 ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080d68ef:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x41 ; or eax, dword ptr [edx + ecx - 0x3d]
0x080d695d:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edx + 0xa], dl ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d6967:	push cs ; add al, 0x43 ; or ebp, dword ptr [eax + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d69c1:	add al, 0x83 ; add eax, 0x202e9702 ; outsb dx, byte ptr [esi] ; or al, bl
0x080d69cf:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x47 ; or esi, dword ptr [ebp + 0xa] ; ret
0x080d6a12:	inc eax ; inc esi ; push cs ; xor byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d6a67:	add eax, dword ptr [esi + 0x3058304] ; lar ecx, word ptr [edx] ; ret
0x080d6a76:	lds ecx, ptr [esp + eax] ; add al, 0x45 ; or eax, dword ptr [edx] ; dec ebx ; or al, bl
0x080d6ac2:	dec eax ; push cs ; mov al, 1 ; push eax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d6b0a:	push cs ; mov al, 1 ; add cl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d6b64:	push cs ; mov al, 1 ; add bl, byte ptr [edx + 0xa] ; push cs ; adc al, 0x47 ; ret
0x080d6b8f:	inc esi ; push cs ; mov al, 1 ; dec ebp ; or cl, byte ptr [esi] ; adc al, 0x45 ; ret
0x080d6cb6:	inc eax ; dec edx ; push cs ; and byte ptr [edx + ecx + 0xe], ah ; or al, 0x41 ; ret
0x080d6cc4:	push cs ; add al, 0x41 ; or eax, dword ptr [ebp + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d6cdb:	xor byte ptr [edx + 0xe], cl ; and byte ptr [edi + 0xa], bl ; push cs ; or al, 0x41 ; ret
0x080d6ce9:	push cs ; add al, 0x41 ; or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x46 ; ret
0x080d6d2b:	and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xa], cl ; push cs ; or byte ptr [esi - 0x3d], al
0x080d6d34:	ret ; push cs ; add al, 0x41 ; or edx, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d6d9b:	dec eax ; push cs ; push eax ; add cl, byte ptr [eax + 0x41140e0a] ; ret
0x080d6db0:	lds ecx, ptr [esi] ; add al, 0x43 ; or esp, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d6de2:	add eax, dword ptr [ebx + 0xe] ; adc byte ptr [ebx + 0xa], ah ; push cs ; or al, 0x41 ; ret
0x080d6e00:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x46 ; ret
0x080d6e0e:	push cs ; add al, 0x45 ; or edx, dword ptr [ecx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d6ea8:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [edx + 0xa], cl ; ret
0x080d6eb7:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x45 ; or esp, dword ptr [eax + 0xa] ; ret
0x080d6f40:	inc eax ; dec eax ; push cs ; xor byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d6ff9:	dec eax ; push cs ; rol byte ptr [ecx], 0x52 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7099:	pop ebp ; push cs ; mov al, 0xa ; add dl, byte ptr [edi - 0x3cbeebf2]
0x080d70cf:	add eax, dword ptr [esi + 0x3058304] ; outsb dx, byte ptr [esi] ; add dword ptr [edx], ecx ; ret
0x080d713a:	sub al, 0x41 ; push cs ; xor byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; ret
0x080d7174:	and byte ptr [esi + 0xe], al ; adc byte ptr [ebp + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7193:	add byte ptr [eax], al ; inc ecx ; push cs ; or byte ptr [ebx - 0x3cf5a5fe], al
0x080d7199:	add bl, byte ptr [edx + 0xa] ; ret ; push cs ; add al, 0x45 ; or eax, dword ptr [ecx - 0x3d]
0x080d71c8:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d71f5:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ebx - 0x3d], al
0x080d71fe:	ret ; push cs ; add al, 0x41 ; or ebx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d723a:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ecx + 0xa], dh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080d728f:	add eax, dword ptr [esi + 0x3058304] ; add dword ptr ds:[edx], ecx ; ret
0x080d729d:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x46 ; or eax, dword ptr [edi + 0xa] ; ret
0x080d72ae:	add al, 4 ; inc esi ; or esp, dword ptr [eax + 0x2e] ; adc byte ptr [edx + ecx - 0x3d], ch
0x080d7326:	dec eax ; push cs ; mov al, byte ptr [0xe0a7201] ; adc al, 0x43 ; ret
0x080d736b:	push cs ; mov al, byte ptr [0xa5c0201] ; push cs ; adc al, 0x41 ; ret
0x080d7396:	inc esi ; push cs ; mov al, byte ptr [0xe0a4d01] ; adc al, 0x43 ; ret
0x080d7422:	and byte ptr [esi + ecx + 0x10], ah ; dec edx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d742b:	ret ; push cs ; add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d747a:	push cs ; nop ; add dword ptr [edx], eax ; dec eax ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d750c:	sbb al, 0x43 ; push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [esi + 0xa], ah ; ret
0x080d7555:	inc esi ; push cs ; add byte ptr [ecx], 0x7c ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d75e0:	add dword ptr [edx], 0x43 ; push cs ; adc byte ptr [ebx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d766c:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ecx + 0xa], ch ; push cs ; adc al, 0x41 ; ret
0x080d76ad:	inc ebx ; push cs ; xor byte ptr [edx], al ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7729:	inc esi ; push cs ; xor byte ptr [edx], al ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7770:	inc eax ; dec eax ; push cs ; xor byte ptr [eax + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d77d1:	dec edx ; push cs ; xor byte ptr [edx], al ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d77e7:	push cs ; add al, 0x44 ; or ebp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d7819:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [edx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7822:	ret ; push cs ; add al, 0x49 ; or esi, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080d783f:	add byte ptr [eax], al ; inc ecx ; push cs ; or byte ptr [ebx - 0x3cf597fe], al
0x080d7846:	push 0x40ec30a ; inc edi ; or edx, dword ptr [eax + 0xa] ; ret
0x080d784c:	or edx, dword ptr [eax + 0xa] ; ret ; push cs ; add al, 0x48 ; or eax, dword ptr [ecx - 0x3d]
0x080d788b:	xor byte ptr [ebx + 0xe], dl ; and byte ptr [ecx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d78f7:	push cs ; sbb al, 0x59 ; push cs ; and byte ptr [edi + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d7927:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; ret
0x080d798a:	sub al, 0x41 ; push cs ; xor byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], cl ; ret
0x080d7998:	push cs ; or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x44 ; or eax, dword ptr [edi - 0x3d]
0x080d79c0:	add dword ptr [edx], 0x45 ; push cs ; adc byte ptr [esi + ecx + 8], ah ; inc ecx ; ret
0x080d7a15:	sbb al, 0x41 ; push cs ; and byte ptr [edx + 0xe], bh ; adc byte ptr [ebx + 0xa], ah ; ret
0x080d7a78:	add eax, 0x74500e43 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d7a97:	pushal ; dec ebx ; push cs ; push eax ; dec eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7af8:	dec eax ; push cs ; push eax ; add bh, ch ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b0f:	add al, 0x47 ; or eax, dword ptr [edx] ; xlatb ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d7b78:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d7bba:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx + 0xa570204], al ; ret
0x080d7c44:	and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7c8d:	push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [ebp + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d7cc1:	inc ebp ; push cs ; inc eax ; add dh, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d7d99:	inc eax ; dec eax ; push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d7e04:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ebx + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080d7e75:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [edx + ecx + 0xe], dh ; or byte ptr [ecx - 0x3d], al
0x080d7eaa:	push cs ; sbb al, 0x41 ; push cs ; and byte ptr [ebp + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d7ee6:	inc ebx ; push cs ; adc byte ptr [edx], al ; pop eax ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080d7ef0:	push cs ; add al, 0x43 ; or ecx, dword ptr [eax + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080d7efa:	push cs ; add al, 0x42 ; or esp, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f4f:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f7d:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [edi + 0xa], ch ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7f87:	push cs ; add al, 0x44 ; or ecx, dword ptr [eax + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d7fb9:	xchg byte ptr [ebx], al ; inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf5b3fc], al
0x080d7fd1:	sbb al, 0x47 ; push cs ; and byte ptr [esi + 0xe], al ; adc byte ptr [edx + ecx - 0x3d], ah
0x080d801f:	and byte ptr [esi + 0xe], al ; adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d8070:	xor byte ptr [eax + 0xe], cl ; and byte ptr [edi + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080d8085:	lds ecx, ptr [esi] ; add al, 0x4b ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d80e2:	xor byte ptr [eax + 0xe], cl ; and byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080d812f:	inc edi ; push cs ; and byte ptr [esi + 0xe], al ; adc byte ptr [edx], al ; pushal ; or al, bl
0x080d8198:	xor byte ptr [eax + 0xe], cl ; and byte ptr [esi + 0xa], ah ; push cs ; or al, 0x46 ; ret
0x080d81ae:	push cs ; xor byte ptr [eax + 0xe], cl ; and byte ptr [ebx + 0xe], cl ; or al, 0x46 ; ret
0x080d81f9:	inc ecx ; push cs ; or byte ptr [ebx + 0x1030302], al ; or al, bl
0x080d81ff:	add eax, dword ptr [ecx] ; or al, bl ; push cs ; add al, 0x44 ; or ecx, dword ptr [edi - 0x3d]
0x080d823e:	and byte ptr [edi + 0xe], cl ; adc byte ptr [eax + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d8248:	push cs ; add al, 0x48 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d829a:	and byte ptr [esi + 0xe], al ; adc byte ptr [ebx + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080d82c1:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080d82d6:	push cs ; and byte ptr [esi + 0xe], al ; adc byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d82f3:	add byte ptr [eax], al ; inc ecx ; push cs ; or byte ptr [ebx - 0x3cf58dfe], al
0x080d82f9:	add dh, byte ptr [edx + 0xa] ; ret ; push cs ; add al, 0x45 ; or eax, dword ptr [esi - 0x3d]
0x080d8355:	push eax ; dec eax ; push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d83ba:	dec eax ; push cs ; xor byte ptr [edx], al ; jbe 0x10 ; push cs ; adc al, 0x41 ; ret
0x080d8472:	add eax, dword ptr [ebx + 0xe] ; adc byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080d8480:	push cs ; add al, 0x46 ; or edx, dword ptr [ecx + 0xa] ; push cs ; or al, 0x41 ; ret
0x080d84ed:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add eax, dword ptr [edx] ; inc eax ; or al, bl
0x080d84f7:	push cs ; or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x45 ; or edi, dword ptr [esi - 0x3d]
0x080d8540:	add eax, 0x69300e43 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d857c:	adc byte ptr [eax], al ; add byte ptr [eax], al ; les ebp, ptr [esi] ; add byte ptr [eax], al ; cmp al, 0xc3
0x080d8590:	adc byte ptr [eax], al ; add byte ptr [eax], al ; fsubr dword ptr [esi] ; add byte ptr [eax], al ; cmp bl, al
0x080d85a4:	adc byte ptr [eax], al ; add byte ptr [eax], al ; in al, dx ; add byte ptr cs:[eax], al ; xor al, 0xc3
0x080d85b8:	adc byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [edi], ch ; add byte ptr [eax], al ; xor bl, al
0x080d85cc:	adc byte ptr [eax], al ; add byte ptr [eax], al ; adc al, 0x2f ; add byte ptr [eax], al ; sub al, 0xc3
0x080d85e0:	adc byte ptr [eax], al ; add byte ptr [eax], al ; sub byte ptr [edi], ch ; add byte ptr [eax], al ; sub bl, al
0x080d85f4:	adc byte ptr [eax], al ; add byte ptr [eax], al ; cmp al, 0x2f ; add byte ptr [eax], al ; and al, 0xc3
0x080d8608:	adc byte ptr [eax], al ; add byte ptr [eax], al ; push eax ; das ; add byte ptr [eax], al ; and bl, al
0x080d861c:	adc byte ptr [eax], al ; add byte ptr [eax], al ; das ; add byte ptr [eax], al ; sbb al, 0xc3
0x080d8630:	adc byte ptr [eax], al ; add byte ptr [eax], al ; js 0x35 ; add byte ptr [eax], al ; sbb bl, al
0x080d8644:	adc byte ptr [eax], al ; add byte ptr [eax], al ; mov word ptr [edi], gs ; add byte ptr [eax], al ; adc al, 0xc3
0x080d8658:	adc byte ptr [eax], al ; add byte ptr [eax], al ; mov al, byte ptr [0x5000002f] ; ret
0x080d866c:	adc byte ptr [eax], al ; add byte ptr [eax], al ; mov ah, 0x2f ; add byte ptr [eax], al ; jl 0xffffffcd
0x080d8680:	and byte ptr [eax], al ; add byte ptr [eax], al ; enter 0x2f, 0 ; mov bl, al
0x080d868f:	add byte ptr [eax], al ; inc ecx ; push cs ; or byte ptr [ebx - 0x3cf591fe], al
0x080d8695:	add ch, byte ptr [esi + 0xa] ; ret ; push cs ; add al, 0x41 ; or ebx, dword ptr [esi - 0x3d]
0x080d86a4:	mov byte ptr [eax], al ; add byte ptr [eax], al ; in al, dx ; das ; add byte ptr [eax], al ; mov ah, 0xc3
0x080d86c8:	add eax, 0x59300e43 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8713:	push esp ; push cs ; xor byte ptr [edx], al ; dec ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8754:	add eax, 0x5a400e43 ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080d87a1:	push eax ; dec eax ; push cs ; inc eax ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d87b7:	push cs ; add al, 0x43 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x45 ; ret
0x080d8805:	inc ebx ; push cs ; and byte ptr [edx], al ; or cl, byte ptr fs:[esi] ; adc al, 0x43 ; ret
0x080d881b:	push cs ; add al, 0x47 ; or edx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8831:	push cs ; add al, 0x42 ; or esi, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8848:	add al, 0x4a ; or eax, dword ptr [edx] ; imul ecx, dword ptr [edx], 0xc341140e
0x080d88a5:	push cs ; and byte ptr [ecx + 0xe], cl ; adc byte ptr [esi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080d88f3:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ebx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080d8944:	push cs ; sbb al, 0x41 ; push cs ; and byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d8973:	add byte ptr [eax], al ; inc ecx ; push cs ; or byte ptr [ebx - 0x3cf595fe], al
0x080d89ac:	add eax, 0x2180e4d ; push cs ; adc al, 0x41 ; ret
0x080d89e9:	inc ebx ; push cs ; sbb al, 2 ; ror byte ptr [edx], 1 ; push cs ; adc al, 0x41 ; ret
0x080d89ff:	push cs ; add al, 0x43 ; or eax, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d8aa8:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], dl ; ret
0x080d8b54:	dec eax ; push cs ; and byte ptr [edx], al ; dec ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8bb4:	add eax, 0x62300e43 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8c37:	inc ebx ; push cs ; adc byte ptr [edx], al ; les ecx, ptr [edx] ; push cs ; or al, 0x43 ; ret
0x080d8c6e:	add eax, dword ptr [ebp + 0xe] ; xor byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080d8ca0:	push eax ; dec eax ; push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8cfb:	xor byte ptr [ecx + 0xe], cl ; and byte ptr [edx + ecx + 0xe], dh ; adc al, 0x41 ; ret
0x080d8d11:	push cs ; add al, 0x46 ; or edx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d8d52:	push cs ; inc eax ; add eax, dword ptr [ecx + eax + 0x41140e0a] ; ret
0x080d8d79:	push cs ; push eax ; dec ebp ; push cs ; inc eax ; add bl, byte ptr [esi + 0xe] ; add al, 0xc3
0x080d8dc9:	inc ebx ; push cs ; xor byte ptr [edx], al ; retf 0xe0a ; adc al, 0x41 ; ret
0x080d8ddf:	push cs ; add al, 0x41 ; or ebp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d8e22:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8e39:	and byte ptr [ebp + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d8e82:	pushal ; dec eax ; push cs ; push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8ec1:	pushal ; dec ebp ; push cs ; push eax ; dec edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d8faa:	push cs ; inc eax ; add edi, dword ptr [esi] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080d8ffd:	push ecx ; push cs ; inc eax ; add bh, byte ptr [edi + 0x43140e0a] ; ret
0x080d90d6:	push cs ; jo 6 ; mov byte ptr [0x140e0a02], al ; inc ebx ; ret
0x080d910a:	push cs ; jo 6 ; mov bh, 1 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d9121:	add al, 0x41 ; or eax, dword ptr [edx] ; fisttp dword ptr [edx] ; push cs ; adc al, 0x43 ; ret
0x080d91d9:	dec esp ; push cs ; xor byte ptr [edx], al ; loope 0x10 ; push cs ; adc al, 0x41 ; ret
0x080d91ef:	push cs ; add al, 0x47 ; or eax, dword ptr [edx] ; insb byte ptr es:[edi], dx ; push cs ; adc al, 0x44 ; ret
0x080d922e:	inc ebx ; push cs ; adc byte ptr [edx], al ; imul ecx, dword ptr [edx], 0xe ; or byte ptr [ebp - 0x3d], al
0x080d9237:	ret ; push cs ; add al, 0x4c ; or ecx, dword ptr [edi + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080d925f:	inc ebx ; push cs ; adc byte ptr [edx], al ; mov word ptr [edx], cs ; push cs ; or al, 0x45 ; ret
0x080d926e:	add al, 0x49 ; or eax, dword ptr [edx] ; dec edi ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080d927c:	push cs ; add al, 0x4f ; or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x43 ; ret
0x080d92a6:	inc ebx ; push cs ; adc byte ptr [edx], al ; je 0x10 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d92b0:	push cs ; add al, 0x47 ; or esp, dword ptr [edx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080d92b9:	ret ; push cs ; add al, 0x4b ; or ebp, dword ptr [edi + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d92ed:	inc edi ; push cs ; xor byte ptr [edx], al ; mov ecx, dword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080d9305:	inc esi ; or eax, dword ptr [ebx] ; cmp byte ptr [ecx], al ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d93ab:	push eax ; push ecx ; push cs ; inc eax ; jno 0x10 ; push cs ; adc al, 0x41 ; ret
0x080d93c1:	push cs ; add al, 0x48 ; or esp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d943e:	push cs ; xor byte ptr [ebx], al ; add byte ptr [ecx], 0xa ; push cs ; adc al, 0x43 ; ret
0x080d9454:	push cs ; add al, 0x41 ; or esi, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x45 ; ret
0x080d9492:	add al, byte ptr [ebp + 0xe] ; adc byte ptr [ebx + 0xa], ch ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d949b:	ret ; push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [eax - 0x3d], cl
0x080d94d0:	xchg byte ptr [edx], al ; inc ebx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; pop ebp ; ret
0x080d9503:	add byte ptr [eax], al ; dec edi ; push cs ; or byte ptr [ebx - 0x3c9bfdfe], al
0x080d9543:	inc ebx ; push cs ; adc byte ptr [edx], al ; test dword ptr [edx], ecx ; push cs ; or al, 0x41 ; ret
0x080d955e:	and byte ptr [ebp + 0xe], al ; adc byte ptr [ebx + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080d959e:	push cs ; adc byte ptr [ebx], al ; lahf ; add dword ptr [edx], ecx ; push cs ; or al, 0x41 ; ret
0x080d95ca:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx + 0xab70204], al ; ret
0x080d95e3:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9601:	sbb al, 0x41 ; push cs ; and byte ptr [ebp + 0xe], al ; adc byte ptr [ecx + 0xa], al ; ret
0x080d9675:	inc ebx ; push cs ; xor byte ptr [edx], al ; cmpsb byte ptr [esi], byte ptr es:[edi] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080d96a6:	inc eax ; dec ebp ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080d96cb:	inc eax ; inc ebp ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080d9702:	inc eax ; dec eax ; push cs ; xor byte ptr [ebx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080d976d:	inc ebx ; push cs ; and byte ptr [edx], al ; test dword ptr [edx], 0xc341140e
0x080d97a0:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080d9800:	add eax, 0x70300e43 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d9816:	push cs ; add al, 0x45 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x44 ; ret
0x080d982c:	push cs ; add al, 0x43 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080d9866:	inc ebx ; push cs ; adc byte ptr [edx], al ; mov ecx, 0x43080e0a ; ret
0x080d9899:	inc ebx ; push cs ; and byte ptr [edx], al ; mov esp, 0x41140e0a ; ret
0x080d9a09:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [esi + 0xa], bl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080d9a12:	ret ; push cs ; add al, 0x4d ; or ecx, dword ptr [esi + ecx + 8] ; inc ecx ; ret
0x080d9a3a:	add eax, dword ptr [ebx + 0xe] ; adc byte ptr [eax + 0xa], dh ; push cs ; or al, 0x41 ; ret
0x080d9a92:	push cs ; and byte ptr [ebx], al ; mov word ptr [ebx], es ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080d9aa9:	add al, 0x41 ; or eax, dword ptr [edx] ; lahf ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080d9b01:	xchg byte ptr [ebx], al ; inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf595fc], al
0x080d9b10:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x4c ; or ecx, dword ptr [edi + 0xa] ; ret
0x080d9b4d:	inc ebx ; push cs ; inc eax ; add bh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080d9bb1:	inc ebx ; push cs ; push eax ; add bh, byte ptr [esi + 0x43140e0a] ; ret
0x080d9c53:	push cs ; insb byte ptr es:[edi], dx ; inc esi ; push cs ; jo 0x5a ; push cs ; adc al, 0x41 ; ret
0x080d9d5b:	adc al, byte ptr [esi + ecx - 0x50] ; adc cl, byte ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080d9dc9:	add cl, byte ptr [eax + 0xe] ; adc byte ptr [edx + ecx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080d9dd2:	ret ; push cs ; add al, 0x4a ; or edi, dword ptr [ebx + 0xe] ; or byte ptr [esi - 0x3d], al
0x080d9ece:	xchg byte ptr [ebx], al ; dec edx ; add dword ptr [edx + eax], 0x73 ; push cs ; or al, 0xc3
0x080d9f5d:	dec edx ; push cs ; and al, 2 ; mov ebx, 0x41140e0a ; ret
0x080d9fc9:	loopne 0xa ; add ebp, ebp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080d9ff5:	push cs ; loopne 0xb ; add dl, byte ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080da04c:	add dword ptr [eax + 0xe], edx ; jo 0x48 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080da073:	dec eax ; push cs ; jo 6 ; jbe 0x10 ; push cs ; adc al, 0x43 ; ret
0x080da120:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx + 0x40e5b02], al ; ret
0x080da129:	ret ; inc ecx ; push cs ; or byte ptr [ebx + 0x40e4602], al ; ret
0x080da13d:	add eax, dword ptr [edx] ; mov cl, byte ptr [esi] ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da14d:	add al, byte ptr [edx] ; jo 0x12 ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da15d:	add al, byte ptr [edx] ; jnp 0x12 ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da16d:	add al, byte ptr [edx] ; mov byte ptr [esi], cl ; or dh, al ; inc ebx ; push cs ; add al, 0xc3
0x080da17d:	add al, byte ptr [edx] ; wait ; push cs ; or dh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da24e:	xchg byte ptr [ebx], al ; dec edx ; add dword ptr [edx + eax], 0x77 ; push cs ; or al, 0xc3
0x080da2e6:	adc dword ptr [ecx], eax ; push cs ; or byte ptr [ebx + 0x40e4f02], al ; ret
0x080da2f1:	fisttp dword ptr [esi] ; or byte ptr [ebx + 0xea40202], al ; add al, 0xc3
0x080da5cf:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add ecx, dword ptr [esi + 0xe] ; or bl, al
0x080da60e:	or al, 0xc6 ; inc ecx ; push cs ; or bh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da659:	xchg byte ptr [ebx], al ; inc ecx ; push cs ; adc byte ptr [ebx - 0x3c53fdfc], al
0x080da680:	add byte ptr [edi + 0xe], dl ; or byte ptr [ebx + 0x40e4902], al ; ret
0x080da81e:	or al, 0xc7 ; inc ecx ; push cs ; or dh, al ; inc ecx ; push cs ; add al, 0xc3
0x080da8a1:	push cs ; or byte ptr [ebx + 0x2620302], al ; push cs ; add al, 0xc3
0x080da8ab:	inc ecx ; push cs ; or byte ptr [ebx + 0xebc0202], al ; add al, 0xc3
0x080da8b5:	inc ecx ; push cs ; or byte ptr [ebx + 0xeba0202], al ; add al, 0xc3
0x080da8bf:	inc ecx ; push cs ; or byte ptr [ebx + 0xe9d0202], al ; add al, 0xc3
0x080da8c8:	ret ; inc ecx ; push cs ; or byte ptr [ebx + 0x40e6a02], al ; ret
0x080da8ee:	ret ; dec edx ; push cs ; or byte ptr [ebx + 0x40e4702], al ; ret
0x080da8f8:	jo 0x10 ; or byte ptr [ebx + 0xecd0202], al ; add al, 0xc3
0x080da902:	inc ecx ; push cs ; or byte ptr [ebx + 0xe880202], al ; add al, 0xc3
0x080da90c:	inc ecx ; push cs ; or byte ptr [ebx + 0xe9a0202], al ; add al, 0xc3
0x080da916:	inc ecx ; push cs ; or byte ptr [ebx + 0xead0202], al ; add al, 0xc3
0x080da920:	inc ecx ; push cs ; or byte ptr [ebx + 0xe7d0202], al ; add al, 0xc3
0x080da92a:	inc ecx ; push cs ; or byte ptr [ebx + 0xe7c0202], al ; add al, 0xc3
0x080da934:	inc ecx ; push cs ; or byte ptr [ebx + 0xe8a0202], al ; add al, 0xc3
0x080da948:	inc ecx ; push cs ; or byte ptr [ebx + 0xe870202], al ; add al, 0xc3
0x080da952:	inc ecx ; push cs ; or byte ptr [ebx + 0xe8c0202], al ; add al, 0xc3
0x080da970:	inc ecx ; push cs ; or byte ptr [ebx + 0xe970202], al ; add al, 0xc3
0x080da97a:	inc ecx ; push cs ; or byte ptr [ebx + 0xe9c0202], al ; add al, 0xc3
0x080da984:	inc ecx ; push cs ; or byte ptr [ebx + 0xeaa0202], al ; add al, 0xc3
0x080da98e:	inc ecx ; push cs ; or byte ptr [ebx + 0xebd0202], al ; add al, 0xc3
0x080da998:	inc ecx ; push cs ; or byte ptr [ebx + 0xe8b0202], al ; add al, 0xc3
0x080da9a1:	ret ; inc ecx ; push cs ; or byte ptr [ebx + 0x40e7302], al ; ret
0x080da9aa:	ret ; inc ecx ; push cs ; or byte ptr [ebx + 0x40e6602], al ; ret
0x080dab3c:	push cs ; or al, 0x83 ; add eax, dword ptr [ebx] ; int3 ; add dword ptr [esi], ecx ; or bl, al
0x080dafc9:	xchg byte ptr [ebx], al ; inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf581fc], al
0x080dafd7:	push cs ; or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x45 ; or eax, dword ptr [ecx - 0x3d]
0x080db0b5:	inc ecx ; push cs ; adc al, 0x83 ; add eax, 0x100ea002 ; ret
0x080db0c4:	add eax, 0xc6100e54 ; add ch, byte ptr [edx + 0xe] ; or al, 0xc3
0x080db0d9:	inc ecx ; push cs ; sbb byte ptr [ebx + 0xeab0206], al ; adc al, 0xc3
0x080db0e6:	adc bh, al ; inc ecx ; push cs ; or al, 0xc6 ; inc ecx ; push cs ; or bl, al
0x080db0f0:	inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; pop esi ; push cs ; or bl, al
0x080db0f6:	pop esi ; push cs ; or bl, al ; add ebx, esp ; add cl, byte ptr [esi] ; add al, 0xc3
0x080db12d:	inc ebx ; push cs ; xor byte ptr [edx], al ; out 0xa, eax ; push cs ; adc al, 0x41 ; ret
0x080db145:	inc esi ; or eax, dword ptr [ebx] ; add dword ptr cs:[edx], ecx ; push cs ; adc al, 0x4a ; ret
0x080db15b:	push cs ; add al, 0x41 ; or esp, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080db1dc:	push eax ; push eax ; push cs ; inc eax ; add dl, byte ptr [esi + ecx + 0x14] ; inc ecx ; ret
0x080db1fa:	add al, byte ptr [esi + 0x43038704] ; push cs ; adc al, 0x43 ; ret
0x080db22f:	dec edx ; push cs ; adc byte ptr [edx], al ; dec ecx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080db288:	add eax, 0x56400e43 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db29f:	add al, 0x41 ; or eax, dword ptr [edx] ; cli ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db2ed:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080db37b:	inc ebp ; push cs ; adc byte ptr [edx], al ; inc ecx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080db3c5:	and byte ptr [ebp + 0xe], cl ; adc byte ptr [ecx + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080db3d3:	push cs ; add al, 0x4a ; or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x46 ; ret
0x080db402:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ab702
0x080db44d:	push eax ; push cs ; pushal ; add ch, byte ptr [esi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080db46c:	jo 0x4a ; push cs ; pushal ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db48e:	jo 0x4c ; push cs ; pushal ; or cl, byte ptr [0x4614] ; ret
0x080db4b2:	push cs ; pushal ; add edi, dword ptr [edx + eax + 0x41140e0a] ; ret
0x080db50f:	add byte ptr [eax], al ; inc ecx ; push cs ; or byte ptr [ebx - 0x3cf5a4fe], al
0x080db515:	add bl, byte ptr [ebx + 0xa] ; ret ; push cs ; add al, 0x44 ; or eax, dword ptr [ecx - 0x3d]
0x080db558:	add byte ptr [ebx + 0xe], cl ; or byte ptr [ebx + 0x40e5802], al ; ret
0x080db564:	or byte ptr [ecx + 0xe], al ; or al, 0x83 ; add ebx, dword ptr [eax + 0xe] ; or bl, al
0x080db5e1:	add cl, byte ptr [eax + 0xe] ; adc byte ptr [edx + ecx + 0xe], bl ; or byte ptr [ecx - 0x3d], al
0x080db5ea:	ret ; push cs ; add al, 0x4a ; or ecx, dword ptr [eax + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080db612:	add eax, dword ptr [ebx + 0xe] ; and byte ptr [ebx + 0xa], ch ; push cs ; or al, 0x41 ; ret
0x080db655:	dec esp ; push cs ; rol byte ptr [ecx], 1 ; push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db66c:	add al, 0x44 ; or eax, dword ptr [edx] ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db68e:	dec eax ; push cs ; rol byte ptr [ecx], 1 ; pop esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080db82a:	add eax, dword ptr [ebx + 0xe] ; adc byte ptr [ebp + 0xa], bh ; push cs ; or al, 0x43 ; ret
0x080db84a:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x43 ; ret
0x080db8cc:	push cs ; or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x42 ; or eax, dword ptr [esi - 0x3d]
0x080db909:	inc ebx ; push cs ; xor byte ptr [edx], al ; push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080db91e:	lds ecx, ptr [esi] ; add al, 0x43 ; or ecx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080db95c:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx + 0x40e5802], al ; ret
0x080dba0f:	push cs ; sbb al, 0x42 ; push cs ; and byte ptr [ebp + 0xe], cl ; or al, 0x41 ; ret
0x080dba45:	inc ebx ; push cs ; sbb al, 2 ; mov dl, 0xa ; push cs ; adc al, 0x41 ; ret
0x080dbab8:	inc eax ; dec esp ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080dbad7:	inc eax ; dec eax ; push cs ; xor byte ptr [ecx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080dbaed:	push cs ; add al, 0x46 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dbb2d:	sbb al, 0x41 ; push cs ; and byte ptr [ebp + 0xe], al ; adc byte ptr [esi + 0xa], dl ; ret
0x080dbb3b:	push cs ; or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x43 ; or eax, dword ptr [ebx - 0x3d]
0x080dbb6a:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a7f02
0x080dbb7a:	or al, 4 ; add al, 0x42 ; or eax, dword ptr [ebx] ; rol dword ptr [ecx], 1 ; or al, bl
0x080dbbe8:	inc eax ; dec eax ; push cs ; xor byte ptr [eax + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080dbc5a:	add eax, dword ptr [edi + 0xe] ; adc byte ptr [edx], al ; inc ebx ; push cs ; or al, 0x41 ; ret
0x080dbc6f:	add byte ptr [ebp + 0x296c0000], dh ; stc ; inc ebx
0x080dbc87:	add eax, dword ptr [esi + 0x3058304] ; and dword ptr [ecx], eax ; or al, bl
0x080dbc96:	lds ecx, ptr [esp + eax] ; add al, 0x43 ; or eax, dword ptr [edx] ; loop 0x13 ; ret
0x080dbd8e:	and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dbdbf:	add al, 0x43 ; push cs ; and byte ptr [ecx + 0xa], dh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dbdf2:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx + 0xc0e6004], al ; ret
0x080dbe4a:	xchg byte ptr [esi], al ; push cs ; or al, 0xc6 ; inc ecx ; push cs ; or bl, al
0x080dbe7a:	or al, 0xc2 ; inc ecx ; push cs ; or cl, al ; inc ecx ; push cs ; add al, 0xc3
0x080dbe99:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [edx + ecx + 0xe], ch ; or byte ptr [ecx - 0x3d], al
0x080dbecb:	add dword ptr [0x66200e4a], 0xe ; adc al, 0x41 ; ret
0x080dbf3e:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a9f02
0x080dbf4c:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x45 ; or ecx, dword ptr [ebx + 0xa] ; ret
0x080dbfeb:	inc ebx ; push cs ; mov al, 1 ; push 0x41140e0a ; ret
0x080dc0ad:	inc ebx ; push cs ; pushal ; add ebx, dword ptr [edx + eax] ; push cs ; adc al, 0x41 ; ret
0x080dc157:	dec eax ; push cs ; inc eax ; add cl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080dc19a:	dec eax ; push cs ; inc eax ; add ch, byte ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dc250:	pushal ; inc ebp ; push cs ; push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dc286:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx + 0xa400204], al ; ret
0x080dc294:	push cs ; or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x46 ; or eax, dword ptr [ecx - 0x3d]
0x080dc2f5:	push cs ; loopne 6 ; add ah, byte ptr [edx + 0xa] ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dc307:	push cs ; add al, 0x41 ; or edx, dword ptr [eax + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dc3cf:	add eax, dword ptr [esi + 0x3058304] ; push ebx ; add dword ptr [edx], ecx ; ret
0x080dc429:	push cs ; pushal ; inc ebp ; push cs ; xor byte ptr [ebp + 0xe], ah ; adc al, 0x43 ; ret
0x080dc4b5:	push cs ; sub al, 0x41 ; push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x45 ; ret
0x080dc53a:	xor byte ptr [eax + 0xe], cl ; and byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080dc582:	push cs ; and byte ptr [edx + 0xe], cl ; adc byte ptr [edi + 0xe], al ; or al, 0x41 ; ret
0x080dc5e7:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dc64f:	and byte ptr [edi + 0xe], cl ; adc byte ptr [esi + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080dc69a:	lds ecx, ptr [esp + eax] ; add al, 0x46 ; or eax, dword ptr [edx] ; dec byte ptr [edx] ; ret
0x080dc6e0:	inc eax ; inc ebp ; push cs ; xor byte ptr [eax + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080dc77e:	inc esp ; inc ecx ; push cs ; inc eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc7f4:	inc esp ; push cs ; inc eax ; push edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dc834:	add eax, 0x2200e4c ; push 0xc343140e
0x080dc898:	inc eax ; dec eax ; push cs ; xor byte ptr [edx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080dc8d7:	push cs ; inc eax ; dec eax ; push cs ; xor byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dc90a:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a6502
0x080dc946:	and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xa], dl ; push cs ; or al, 0x43 ; ret
0x080dc9b1:	push cs ; xor byte ptr [eax + 0xe], cl ; and byte ptr [ebx + 0xe], al ; adc al, 0x41 ; ret
0x080dc9e6:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a4c02
0x080dca17:	add eax, dword ptr [esi + 0x3058304] ; cmp byte ptr [edx], al ; or al, bl
0x080dca60:	push cs ; sbb al, 0x45 ; push cs ; and byte ptr [ebx + 0xb], cl ; add bl, byte ptr [ebp - 0x3d]
0x080dcaad:	inc ebx ; push cs ; push eax ; add bh, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dcac5:	inc ecx ; or eax, dword ptr [ebx] ; lahf ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080dcafe:	inc ebp ; push cs ; push eax ; add al, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080dcb36:	add dword ptr [ebp + 0xe], eax ; push eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dcb4c:	push cs ; add al, 0x41 ; or ecx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dcbb5:	inc ebx ; push cs ; pushal ; add dh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dcbf1:	add dword ptr [ebp + 0xe], eax ; pushal ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dcc85:	inc ebx ; push cs ; push eax ; add bh, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dccac:	dec eax ; push cs ; push eax ; add cl, byte ptr [ebp + 0x41140e0a] ; ret
0x080dcce5:	inc ebp ; push cs ; push eax ; add cl, byte ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080dcd34:	add al, 0x48 ; or eax, dword ptr [edx] ; jnp 0x10 ; push cs ; adc al, 0x43 ; ret
0x080dcda1:	inc ebx ; push cs ; push eax ; add dh, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dce79:	inc ebx ; push cs ; push eax ; add al, byte ptr [eax + 0x41140e0a] ; ret
0x080dceb1:	add dword ptr [ecx + 0xe], ecx ; push eax ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dcf25:	inc ebx ; push cs ; pushal ; add bh, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080dd211:	inc ebx ; push cs ; jo 6 ; mov byte ptr [edx], cl ; push cs ; adc al, 0x41 ; ret
0x080dd251:	add dword ptr [ebp + 0xe], eax ; jo 0x48 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080dd431:	inc ebx ; push cs ; pushal ; add bh, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080dd7ca:	push cs ; pushal ; add edx, dword ptr [edx + 0x140e0a01] ; inc ecx ; ret
0x080dd7e0:	push cs ; add al, 0x41 ; or edx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080dd845:	inc edi ; push cs ; pushal ; add bl, byte ptr [eax + 0x41140e0a] ; ret
0x080dd897:	push eax ; dec eax ; push cs ; inc eax ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080dd8ac:	lds ecx, ptr [esi] ; add al, 0x44 ; or ebx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080dd8de:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30abc02
0x080dd8eb:	mov dword ptr [ecx - 0x3b], 0x4b04040c ; or ecx, dword ptr [ecx - 0x3d]
0x080dd99c:	dec eax ; push cs ; jo 6 ; bound ecx, qword ptr [edx] ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dd9b8:	add dword ptr [edx + 0xe], edx ; jo 0x52 ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dd9ee:	add dword ptr [edx + 0xe], edx ; jo 0x53 ; or cl, byte ptr [esi] ; adc byte ptr [esi - 0x3d], al
0x080dda3f:	xor byte ptr [eax + 0xe], cl ; and byte ptr [edi + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080dda89:	dec eax ; push cs ; pushal ; add dl, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080ddb21:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080ddb65:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [eax + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080ddb78:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080ddbf4:	inc eax ; dec esi ; push cs ; xor byte ptr [edi + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080ddc0a:	push cs ; add al, 0x44 ; or ebx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080ddc4d:	inc eax ; dec eax ; push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x45 ; ret
0x080ddcf2:	inc eax ; dec eax ; push cs ; xor byte ptr [edi + 0xa], cl ; push cs ; adc al, 0x43 ; ret
0x080ddd29:	inc eax ; dec eax ; push cs ; xor byte ptr [ebx + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080ddd57:	inc eax ; dec eax ; push cs ; xor byte ptr [ebp + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080ddd9e:	push cs ; sbb al, 0x42 ; push cs ; and byte ptr [eax + 0xe], dl ; adc byte ptr [ebp - 0x3d], al
0x080dde01:	dec esp ; push cs ; mov al, byte ptr [0xe0a4801] ; adc al, 0x41 ; ret
0x080dde70:	dec esp ; push cs ; mov al, byte ptr [0xe0a4601] ; adc al, 0x41 ; ret
0x080dde86:	push cs ; add al, 0x42 ; or edx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080de015:	inc ebx ; push cs ; sbb al, 2 ; xchg eax, edx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de029:	inc ecx ; lds ecx, ptr [esi] ; add al, 0x48 ; or esp, dword ptr [ebx + 0xe] ; add al, 0xc3
0x080de052:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a5902
0x080de060:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x46 ; or ebp, dword ptr [ecx + 0xa] ; ret
0x080de0bb:	dec esp ; push cs ; xor byte ptr [edx], al ; popal ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de106:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ad002
0x080de115:	lds ecx, ptr [esp + eax] ; add al, 0x42 ; or eax, dword ptr [edx] ; inc ebx ; or al, bl
0x080de1a6:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a6802
0x080de1b6:	or al, 4 ; add al, 0x49 ; or eax, dword ptr [ebx] ; dec ecx ; add ecx, dword ptr [edx] ; ret
0x080de218:	sbb al, 0x42 ; push cs ; and byte ptr [edx + 0xe], dl ; adc byte ptr [ebp + 0xa], al ; ret
0x080de24b:	add byte ptr [eax], al ; inc edi ; push cs ; or byte ptr [ebx - 0x3cf584fe], al
0x080de2eb:	add byte ptr [eax], al ; inc ecx ; push cs ; or byte ptr [ebx - 0x3cf581fe], al
0x080de2f1:	add bh, byte ptr [esi + 0xa] ; ret ; push cs ; add al, 0x41 ; or ebx, dword ptr [ecx - 0x3d]
0x080de326:	push cs ; rol byte ptr [edx], 2 ; fmul qword ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080de33b:	lds ecx, ptr [esi] ; add al, 0x44 ; or esi, dword ptr [ebx + 0xe] ; adc al, 0x41 ; ret
0x080de363:	add byte ptr [eax], al ; inc ecx ; push cs ; or byte ptr [ebx - 0x3cf5b2fe], al
0x080de369:	add cl, byte ptr [ebp + 0xa] ; ret ; push cs ; add al, 0x4a ; or edx, dword ptr [edx - 0x3d]
0x080de399:	push cs ; nop ; add dword ptr [edx], eax ; inc ecx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080de437:	push cs ; rol byte ptr [edx], 1 ; add cl, bh ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de4af:	add eax, dword ptr [esi + 0x3058304] ; add dword ptr ss:[edx], ecx ; ret
0x080de4f4:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080de4fd:	ret ; push cs ; add al, 0x46 ; or ecx, dword ptr [edi + 0xe] ; or byte ptr [esi - 0x3d], al
0x080de554:	xor byte ptr [eax + 0xe], cl ; and byte ptr [esi + 0xa], dh ; push cs ; adc al, 0x43 ; ret
0x080de569:	lds ecx, ptr [esi] ; add al, 0x45 ; or esp, dword ptr [edi + 0xe] ; adc al, 0x46 ; ret
0x080de6de:	add eax, dword ptr [esi + 0xe] ; adc byte ptr [ebx + 0xa480204], al ; ret
0x080de6ed:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x46 ; or eax, dword ptr [edx] ; pushal ; ret
0x080de72a:	push cs ; cmp byte ptr [ebx], al ; dec esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080de740:	push cs ; add al, 0x42 ; or esp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080de784:	push cs ; sub al, 0x48 ; push cs ; sbb al, 0x71 ; push cs ; or al, 0x43 ; ret
0x080de7bf:	push cs ; dec eax ; dec eax ; push cs ; xor byte ptr [ebp + 0xe], dh ; or al, 0x43 ; ret
0x080de7e4:	xchg byte ptr [edx], al ; inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; dec ecx ; ret
0x080de818:	add eax, 0x69200e43 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080de84c:	xor byte ptr [ebx + 0xe], cl ; and byte ptr [edx + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080de890:	lds ecx, ptr [esp + eax] ; add al, 0x4c ; or eax, dword ptr [edx] ; lodsd eax, dword ptr [esi] ; or al, bl
0x080de8f3:	add eax, dword ptr [esi + 0x3058304] ; pop esi ; pop es ; or al, bl
0x080de922:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ae502
0x080de9bb:	dec eax ; push cs ; loopne 0x45 ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080dea00:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xa], dl ; ret
0x080dea28:	inc ebx ; push cs ; xor byte ptr [esi + 0xe], cl ; adc byte ptr [edx], al ; dec edx ; or al, bl
0x080dea46:	sbb al, 0x41 ; push cs ; and byte ptr [ebx + 0xe], cl ; adc byte ptr [ebp + 0xa], al ; ret
0x080dea55:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x42 ; or ebx, dword ptr [ecx + 0xa] ; ret
0x080deab0:	xchg byte ptr [edx], al ; inc ecx ; push cs ; or al, 0x83 ; add ebp, dword ptr [esi + 0xa] ; ret
0x080deaba:	push cs ; or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x47 ; or ecx, dword ptr [edx - 0x3d]
0x080deae7:	add eax, dword ptr [esi + 0x3058304] ; or dword ptr [esi], eax ; or al, bl
0x080deaf7:	or al, 4 ; add al, 0x48 ; or eax, dword ptr [ebx] ; lahf ; add dword ptr [edx], ecx ; ret
0x080deb05:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x46 ; or eax, dword ptr [esi + 0xa] ; ret
0x080deb6a:	inc ebx ; push cs ; adc byte ptr [edx], al ; js 0x10 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080debf9:	dec eax ; push cs ; rol byte ptr [edx], 0x54 ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080decf6:	push cs ; rol byte ptr [edx], 2 ; mov ah, 0xa ; push cs ; adc al, 0x41 ; ret
0x080ded40:	dec eax ; push cs ; rol byte ptr [edx], 0x52 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080def98:	push cs ; sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; or al, 0x41 ; ret
0x080defda:	sbb al, 0x44 ; push cs ; and byte ptr [eax + 0xe], dl ; adc byte ptr [esi + 0xa], ah ; ret
0x080defe9:	or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x48 ; or edx, dword ptr [edx + 0xa] ; ret
0x080df031:	inc ebx ; push cs ; sub byte ptr [edx], al ; retf ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080df046:	lds ecx, ptr [esi] ; add al, 0x41 ; or ecx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080df085:	inc ebx ; push cs ; and al, 2 ; mov ebx, 0x41140e0a ; ret
0x080df119:	xchg byte ptr [ebx], al ; inc ecx ; push cs ; adc byte ptr [ebx - 0x3cb8fdfc], al
0x080df154:	add eax, 0x6f200e43 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080df16a:	push cs ; add al, 0x46 ; or ecx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080df1cc:	lds ecx, ptr [esp + eax] ; add al, 0x49 ; or eax, dword ptr [edx] ; mov byte ptr [edx], cl ; ret
0x080df1fe:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ae002
0x080df20c:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x47 ; or eax, dword ptr [edx] ; inc edx ; ret
0x080df26b:	add eax, dword ptr [esi + 0x3058304] ; bound eax, qword ptr [ecx] ; or al, bl
0x080df279:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x47 ; or edx, dword ptr [ecx + 0xa] ; ret
0x080df288:	lds ecx, ptr [esp + eax] ; add al, 0x44 ; or eax, dword ptr [edx] ; insd dword ptr es:[edi], dx ; or al, bl
0x080df336:	push cs ; nop ; add dword ptr [edx], 0x46 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080df34c:	push cs ; add al, 0x47 ; or eax, dword ptr [edx] ; dec esi ; push cs ; adc al, 0x46 ; ret
0x080df391:	xchg byte ptr [ebx], al ; inc esi ; push cs ; adc byte ptr [ebx - 0x3cb6fdfc], al
0x080df3e9:	xor byte ptr [ebp + 0xe], al ; and byte ptr [edx + ecx + 0xe], dh ; adc al, 0x41 ; ret
0x080df40b:	xor byte ptr [eax + 0xe], cl ; and byte ptr [eax + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080df441:	xchg byte ptr [ebx], al ; inc ecx ; push cs ; adc byte ptr [ebx - 0x3cadfdfc], al
0x080df49a:	xor byte ptr [ebp + 0xe], al ; and byte ptr [eax + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080df51e:	add dword ptr [eax + 0xe], ecx ; jo 0x4d ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080df530:	push cs ; add al, 0x49 ; or edi, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080df571:	add al, 0x83 ; add eax, 0x102e6f02 ; pop ebp ; or al, bl
0x080df57f:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x48 ; or edi, dword ptr [edi + 0xa] ; ret
0x080df5c6:	and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080df5d4:	push cs ; add al, 0x46 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x46 ; ret
0x080df60e:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a7c02
0x080df61f:	add al, 4 ; dec eax ; or edx, dword ptr [ebp + 0x2e] ; adc byte ptr [eax + 0xa], ch ; ret
0x080df62d:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x48 ; or eax, dword ptr [esi + 0xa] ; ret
0x080df662:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a7702
0x080df670:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x4b ; or edx, dword ptr [eax + 0xa] ; ret
0x080df683:	inc ebp ; or eax, dword ptr [edx] ; mov eax, 0xab02102e ; or al, bl
0x080df6e4:	inc eax ; dec eax ; push cs ; xor byte ptr [esi + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080df709:	inc eax ; dec esp ; push cs ; xor byte ptr [ecx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080df790:	inc eax ; inc esi ; push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x43 ; ret
0x080df7b4:	push cs ; inc eax ; inc esi ; push cs ; xor byte ptr [ebp + 0xe], al ; adc al, 0x43 ; ret
0x080df800:	jo 0x48 ; push cs ; pushal ; dec edx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080df824:	push cs ; jo 0x49 ; push cs ; pushal ; inc ebp ; push cs ; adc al, 0x43 ; ret
0x080df861:	inc ebp ; push cs ; inc eax ; add cl, byte ptr [ebp + 0x41140e0a] ; ret
0x080df947:	push cs ; add al, 0x47 ; or ecx, dword ptr [ecx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080df985:	inc ebx ; push cs ; xor byte ptr [edx], al ; push eax ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080df9b9:	inc eax ; push esi ; push cs ; xor byte ptr [edi + 0xa], bl ; push cs ; adc al, 0x41 ; ret
0x080df9fa:	and byte ptr [edi + 0xe], cl ; adc byte ptr [edi + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfa2e:	push cs ; and byte ptr [esi + 0xe], al ; adc byte ptr [ecx + 0xe], bl ; or byte ptr [ebx - 0x3d], al
0x080dfa61:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + ecx + 0xc], dl ; inc ecx ; ret
0x080dfab5:	inc eax ; dec eax ; push cs ; xor byte ptr [edx + ecx + 0xe], bl ; adc al, 0x41 ; ret
0x080dfaca:	lds ecx, ptr [esi] ; add al, 0x43 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080dfaf9:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [ecx + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfb76:	add eax, dword ptr [ebx + 0xe] ; adc byte ptr [esi + 0xa], dh ; push cs ; or al, 0x41 ; ret
0x080dfbae:	push cs ; sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], ah ; or byte ptr [ecx - 0x3d], al
0x080dfbdb:	inc ebx ; push cs ; adc byte ptr [edx], al ; insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080dfc13:	and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080dfc4b:	inc ebx ; push cs ; adc byte ptr [edx], al ; dec esp ; or cl, byte ptr [esi] ; or al, 0x46 ; ret
0x080dfc7a:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], bh ; push cs ; or al, 0x41 ; ret
0x080dfc90:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xe], dl ; or al, 0x41 ; ret
0x080dfcce:	inc eax ; dec eax ; push cs ; xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080dfd19:	and byte ptr [esi + 0xe], al ; adc byte ptr [ebx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfd3d:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [ecx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080dfd6d:	add dh, byte ptr [edx + 0xa] ; ret ; push cs ; add al, 0x45 ; or ecx, dword ptr [ecx - 0x3d]
0x080dfda4:	push cs ; add al, 0x49 ; or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x41 ; ret
0x080dfde9:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add eax, dword ptr [edx] ; dec ecx ; or al, bl
0x080dfdf4:	or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x44 ; or eax, dword ptr [edx] ; push esi ; ret
0x080dfe94:	push eax ; push ebx ; push cs ; and byte ptr [ecx + 0xa], bl ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dfea6:	push cs ; add al, 0x45 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dff0c:	push eax ; dec esp ; push cs ; and byte ptr [esi + 0xa], dl ; push cs ; adc byte ptr [esi - 0x3d], al
0x080dff1e:	push cs ; add al, 0x44 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e000e:	push cs ; inc eax ; add ebp, dword ptr [edi] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080e0127:	push eax ; dec eax ; push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0167:	push eax ; dec eax ; push cs ; inc eax ; or cl, byte ptr [0x4114] ; ret
0x080e0288:	loopne 0xa ; add edx, dword ptr [esi + 2] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e029e:	push cs ; add al, 0x41 ; or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e02fd:	push cs ; pushal ; add eax, dword ptr [edx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e031c:	jo 0x4e ; push cs ; pushal ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0333:	add al, 0x41 ; or eax, dword ptr [edx] ; out dx, eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e038d:	xor byte ptr [esi + ecx + 0x20], cl ; push ecx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e03a2:	lds ecx, ptr [esi] ; add al, 0x45 ; or esp, dword ptr [ecx + 0xe] ; adc al, 0x43 ; ret
0x080e03f3:	dec eax ; push cs ; and byte ptr [edx], al ; pop edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e045f:	inc ecx ; push cs ; adc byte ptr [ebx + 0xe7f0204], al ; or al, 0xc3
0x080e0470:	add dword ptr [ebx], 0xe ; adc byte ptr [esi + 0xc0e4204], al ; ret
0x080e048a:	add ecx, dword ptr [esi] ; adc byte ptr [esi + 0xe560204], al ; or al, 0xc3
0x080e049b:	add dword ptr [ebx], 0xe ; adc byte ptr [esi + 0xc0e7504], al ; ret
0x080e04ac:	add dword ptr [ebx], 0xe ; adc byte ptr [esi + 0xc0e7104], al ; ret
0x080e04bd:	add dword ptr [ebx], 0xe ; adc byte ptr [esi + 0xc0e7304], al ; ret
0x080e04ce:	add dword ptr [ebx], 0xe ; adc byte ptr [esi + 0xc0e4d04], al ; ret
0x080e04df:	add dword ptr [ebx], 0xe ; adc byte ptr [esi + 0xc0e4a04], al ; ret
0x080e0534:	add dword ptr [ebx], 0xe ; adc byte ptr [esi + 0xc0e4f04], al ; ret
0x080e0725:	inc ecx ; push cs ; adc byte ptr [ebx + 0xe840204], al ; or al, 0xc3
0x080e073e:	add dword ptr [ebx], 0xe ; adc byte ptr [esi + 0xc0e7204], al ; ret
0x080e08e5:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add eax, dword ptr [edx] ; jp 0x13 ; ret
0x080e08f0:	or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x43 ; or ecx, dword ptr [eax + 0xa] ; ret
0x080e0990:	xchg byte ptr [edx], al ; inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; pop esp ; ret
0x080e09d5:	push eax ; inc ebp ; push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e09e7:	push cs ; add al, 0x4a ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e0a71:	push cs ; pushal ; inc ebp ; or ebx, dword ptr [eax + 0xa] ; push cs ; adc byte ptr [esi - 0x3d], al
0x080e0aa5:	add dword ptr [ebp + 0xe], eax ; push eax ; imul ecx, dword ptr [edx], 0xc341100e
0x080e0b3a:	dec ecx ; push cs ; loopne 6 ; insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e0b50:	push cs ; add al, 0x44 ; or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e0bfc:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx + 0xa6e0202], al ; ret
0x080e0c03:	outsb dx, byte ptr [esi] ; or al, bl ; push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0c0a:	inc ebx ; or al, bl ; push cs ; add al, 0x41 ; or eax, dword ptr [esi + 0xa] ; ret
0x080e0c10:	or eax, dword ptr [esi + 0xa] ; ret ; push cs ; add al, 0x41 ; or eax, dword ptr [esi - 0x3d]
0x080e0c87:	push cs ; loopne 5 ; add dh, byte ptr [ebx + 0x43140e0a] ; ret
0x080e0d48:	add byte ptr [ecx + 0xe], al ; or byte ptr [ebx + 0xa4c0202], al ; ret
0x080e0d4f:	dec esp ; or al, bl ; push cs ; add al, 0x43 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0d56:	inc ebx ; or al, bl ; push cs ; add al, 0x45 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0d5d:	inc ebx ; or al, bl ; push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; ret
0x080e0da2:	add byte ptr [eax], al ; add byte ptr [esi + ecx + 8], al ; add dword ptr [edx], 0x65 ; ret
0x080e0dd6:	push cs ; sub al, 3 ; inc byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e0dec:	push cs ; add al, 0x43 ; or ebx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e0e27:	push cs ; and byte ptr [ebp + 0xe], bl ; adc byte ptr [eax + 0xe], bl ; or al, 0x41 ; ret
0x080e0e83:	inc eax ; dec esi ; push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e0eb1:	inc eax ; push ebx ; push cs ; xor byte ptr [ebx + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080e0ef0:	add eax, 0x7e200e43 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e0f06:	push cs ; add al, 0x43 ; or eax, dword ptr [edx] ; push ebp ; push cs ; adc al, 0x41 ; ret
0x080e0f46:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e0f93:	push eax ; dec eax ; push cs ; xor byte ptr [edx + 0xa], dh ; push cs ; adc al, 0x41 ; ret
0x080e0fe3:	inc eax ; dec esp ; push cs ; xor byte ptr [edx + 0xa], ah ; push cs ; adc al, 0x41 ; ret
0x080e1063:	push cs ; sbb al, 0x45 ; push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ebp - 0x3d], al
0x080e10c5:	xchg byte ptr [ebx], al ; inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf5b6fc], al
0x080e1108:	inc ecx ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [edx], al ; pop ebx ; or al, bl
0x080e1152:	add eax, dword ptr [ebx + 0xe] ; adc byte ptr [ebx + 0xa690204], al ; ret
0x080e11bf:	xor byte ptr [eax + 0xe], cl ; and byte ptr [edi + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e11e6:	inc eax ; dec eax ; push cs ; and byte ptr [edx + 0xa], ch ; push cs ; adc byte ptr [ebx - 0x3d], al
0x080e1235:	push edx ; push cs ; loopne 5 ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e1515:	push cs ; push eax ; add esp, dword ptr [esi + 1] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e152a:	lds ecx, ptr [esi] ; add al, 0x41 ; or ecx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e158a:	dec eax ; push cs ; and byte ptr [edx], al ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e159c:	push cs ; or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x46 ; or eax, dword ptr [edx] ; ret
0x080e163a:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], ch ; ret
0x080e169c:	jl 0x45 ; push cs ; jo 0x48 ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080e16d0:	add dword ptr [edx], 0x51 ; push cs ; adc byte ptr [eax + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e16f9:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [ebx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e1703:	push cs ; add al, 0x48 ; or ecx, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e1732:	and byte ptr [ebx + 0xe], dl ; adc byte ptr [edx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e173c:	push cs ; add al, 0x48 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e1771:	dec eax ; push cs ; and byte ptr [edx], al ; xchg eax, ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e17a9:	push cs ; sbb al, 0x42 ; push cs ; and byte ptr [ebp + 0xe], bh ; or byte ptr [ecx - 0x3d], al
0x080e17f1:	inc eax ; dec eax ; push cs ; xor byte ptr [edx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e1806:	lds ecx, ptr [esi] ; add al, 0x49 ; or edx, dword ptr [ebp + 0xe] ; adc al, 0x41 ; ret
0x080e18af:	push cs ; add al, 0x47 ; or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x43 ; ret
0x080e1960:	xchg byte ptr [edx], al ; inc ecx ; push cs ; or al, 0x83 ; add ebp, dword ptr [edx + 0xa] ; ret
0x080e196b:	or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x4b ; or eax, dword ptr [ecx + 0xa] ; ret
0x080e1975:	push cs ; or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x4e ; or eax, dword ptr [ebx - 0x3d]
0x080e19b4:	add byte ptr [eax], al ; add byte ptr [eax], al ; sbb al, 0 ; add byte ptr [eax], al ; add bl, al
0x080e19c5:	add byte ptr [eax], al ; add byte ptr [eax], al ; jb 0xf ; add eax, dword ptr [edx] ; push ecx ; ret
0x080e19d4:	add al, 0 ; add byte ptr [eax], al ; sbb al, 0 ; add byte ptr [eax], al ; and bl, al
0x080e19f4:	add al, 0 ; add byte ptr [eax], al ; cmp byte ptr [eax], al ; add byte ptr [eax], al ; inc eax ; ret
0x080e1a21:	push eax ; dec eax ; push cs ; inc eax ; pop ebx ; or cl, byte ptr [esi] ; or al, 0x43 ; ret
0x080e1a30:	add al, 0x46 ; or eax, dword ptr [eax] ; and byte ptr [eax], al ; add byte ptr [eax], al ; jl 0xffffffcd
0x080e1a80:	add al, 0 ; add byte ptr [eax], al ; push 0xcc000000 ; ret
0x080e1ac0:	xor byte ptr [eax + 0xe], cl ; and byte ptr [esi + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e1ad5:	lds ecx, ptr [esi] ; add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080e1b04:	xchg byte ptr [edx], al ; inc ecx ; push cs ; or al, 0x83 ; add eax, dword ptr [edx] ; inc ecx ; ret
0x080e1bbb:	add al, 0x43 ; push cs ; adc al, 0x83 ; add eax, 0xc30a4e02
0x080e1bce:	or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x47 ; or ecx, dword ptr [ecx + 0xa] ; ret
0x080e1be1:	or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x44 ; or esi, dword ptr [edi + 0xa] ; ret
0x080e1c26:	or al, 4 ; add al, 0x44 ; or ebp, dword ptr [eax + 0xc] ; add al, 4 ; ret
0x080e1c9e:	xor byte ptr [eax + 0xe], cl ; and byte ptr [esi + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e1d56:	lds ecx, ptr [esp + eax] ; add al, 0x48 ; or eax, dword ptr [edx] ; out 0xa, al ; ret
0x080e1d87:	add eax, dword ptr [esi + 0x3058304] ; jecxz 9 ; or al, bl
0x080e1d96:	lds ecx, ptr [esp + eax] ; add al, 0x46 ; or eax, dword ptr [edx] ; push eax ; or al, bl
0x080e1dc6:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30afb02
0x080e1e0f:	push cs ; xor byte ptr [eax + 0xe], cl ; and byte ptr [ecx + 0xe], bl ; adc al, 0x41 ; ret
0x080e1e87:	push cs ; inc eax ; dec eax ; push cs ; xor byte ptr [edi + 0xe], al ; adc al, 0x43 ; ret
0x080e1ed2:	inc ebx ; push cs ; xor byte ptr [edx], al ; je 0x10 ; push cs ; adc al, 0x41 ; ret
0x080e1f0d:	dec esi ; push cs ; xor byte ptr [edx], al ; les ecx, ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e2058:	push eax ; dec eax ; push cs ; inc eax ; push ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e20c1:	inc eax ; push edi ; push cs ; xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x46 ; ret
0x080e20d7:	push cs ; add al, 0x41 ; or edx, dword ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e20f6:	inc eax ; dec eax ; push cs ; xor byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e219e:	dec eax ; push cs ; rol byte ptr [esp + ebx*2], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e21d1:	dec eax ; push cs ; rol byte ptr [eax + ecx*2], 1 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e2227:	dec eax ; push cs ; rol byte ptr [esi + eax*2], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e2435:	inc ebp ; push cs ; inc eax ; add al, byte ptr [eax + 0x41140e0a] ; ret
0x080e249e:	dec eax ; push cs ; xor byte ptr [edx], al ; dec ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e24b5:	add al, 0x41 ; or eax, dword ptr [edx] ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e250e:	push cs ; jo 6 ; cmp eax, dword ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e2560:	add dword ptr [ebp + 0xe], eax ; jo 0x55 ; or cl, byte ptr [esi] ; adc al, 0x48 ; ret
0x080e2633:	add eax, dword ptr [esi + 0x3058304] ; cmp al, 1 ; or al, bl
0x080e273c:	inc eax ; dec ebp ; push cs ; xor byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e2796:	add eax, dword ptr [ecx + 0xe] ; adc byte ptr [ebx + 0xa770204], al ; ret
0x080e27ae:	sbb al, 0x41 ; push cs ; and byte ptr [ecx + 0xe], cl ; adc byte ptr [ebx + 0xa], al ; ret
0x080e27e5:	add al, byte ptr [ebp + 0xe] ; adc byte ptr [ebp + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e285d:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x41 ; ret
0x080e28bf:	add eax, dword ptr [esi + 0x3058304] ; and byte ptr [edx + ecx], al ; ret
0x080e28ef:	add eax, dword ptr [esi + 0x3058304] ; das ; add ecx, dword ptr [edx] ; ret
0x080e28ff:	or al, 4 ; add al, 0x48 ; or eax, dword ptr [ebx] ; loope 0xa ; or al, bl
0x080e29fa:	xor byte ptr [ebp + 0xe], al ; and byte ptr [ebx + 0xa], al ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e2a67:	dec edx ; push cs ; loopne 5 ; imul ecx, dword ptr [edx], 0xe ; or al, 0x43 ; ret
0x080e2aad:	push cs ; cmp al, 0x5b ; push cs ; inc eax ; push ecx ; push cs ; adc al, 0x41 ; ret
0x080e2ae3:	add eax, dword ptr [esi + 0x3058304] ; adc al, 1 ; or al, bl
0x080e2b3b:	add dword ptr [eax + 0xe], ecx ; jo 0x4a ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e2b4d:	push cs ; add al, 0x48 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc byte ptr [eax - 0x3d], cl
0x080e2c0f:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], al ; push cs ; or al, 0x46 ; ret
0x080e2c41:	add al, byte ptr [ecx + 0xe] ; or al, 0x83 ; add eax, dword ptr [edx] ; inc esi ; or al, bl
0x080e2c77:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; push cs ; or al, 0x43 ; ret
0x080e2cdc:	push cs ; xor byte ptr [eax + 0xb], cl ; outsb dx, byte ptr [esi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e2d12:	add byte ptr [eax], al ; add byte ptr [esi + ecx + 8], bl ; add dword ptr [edx], 0x6b ; ret
0x080e2d58:	dec eax ; push cs ; and byte ptr [edx], al ; inc edx ; or cl, byte ptr [esi] ; or al, 0x41 ; ret
0x080e2d66:	push cs ; add al, 0x42 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or al, 0x43 ; ret
0x080e2dd4:	push cs ; push eax ; dec eax ; or ebx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e2e57:	inc ecx ; push cs ; push eax ; dec eax ; push cs ; inc eax ; dec edx ; push cs ; add al, 0xc3
0x080e2ef5:	xchg byte ptr [ebx], al ; inc ecx ; push cs ; adc byte ptr [ebx - 0x3cf597fc], al
0x080e2f03:	push cs ; or byte ptr [edi - 0x39], al ; push cs ; add al, 0x45 ; or ebp, dword ptr [edx - 0x3d]
0x080e2f3c:	add eax, 0x7e200e43 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e2fc5:	dec ebx ; push cs ; mov al, byte ptr [0xe0a6420] ; adc byte ptr [ebx - 0x3d], al
0x080e2fd7:	push cs ; add al, 0x45 ; or eax, dword ptr [esi + 0xa] ; push cs ; adc byte ptr [eax - 0x3d], cl
0x080e3009:	dec eax ; push cs ; mov al, byte ptr [0xe0a4b20] ; adc byte ptr [ecx - 0x3d], al
0x080e304e:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], al ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e30a1:	and byte ptr [eax + 0xe], cl ; adc byte ptr [edx + ecx + 0xe], dl ; or al, 0x41 ; ret
0x080e3102:	dec ebp ; push cs ; xor byte ptr [edx], al ; or cl, byte ptr fs:[esi] ; adc al, 0x43 ; ret
0x080e317e:	add eax, dword ptr [ebp + 0xe] ; adc byte ptr [edx], al ; push ebx ; push cs ; or al, 0x41 ; ret
0x080e31be:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ace02
0x080e3228:	inc eax ; push ebx ; push cs ; xor byte ptr [esi + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e3267:	add eax, dword ptr [esi + 0x3058304] ; or dword ptr [ebx], eax ; or al, bl
0x080e32a9:	xor byte ptr [edx + 0xe], cl ; and byte ptr [ebx + 0xa], bh ; push cs ; adc al, 0x43 ; ret
0x080e32bf:	push cs ; add al, 0x45 ; or esi, dword ptr [edx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e330e:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a4802
0x080e334e:	and byte ptr [ebp + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e3358:	push cs ; add al, 0x4c ; or ecx, dword ptr [edx + ecx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e341d:	inc ebx ; push cs ; sbb al, 2 ; scasd eax, dword ptr es:[edi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3433:	push cs ; add al, 0x44 ; or ebp, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e3449:	push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e3474:	lds ecx, ptr [esi] ; add al, 0x41 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e34a7:	add eax, dword ptr [esi + 0x3058304] ; or dword ptr [ecx], eax ; or al, bl
0x080e34b7:	or al, 4 ; add al, 0x4b ; or eax, dword ptr [ebx] ; sbb eax, dword ptr [edx] ; or al, bl
0x080e3506:	add eax, dword ptr [ebx + 0xe] ; and byte ptr [esi + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080e354e:	sbb al, 0x45 ; push cs ; and byte ptr [ebp + 0xe], al ; adc byte ptr [ecx + 0xa], al ; ret
0x080e3592:	push eax ; inc ebp ; push cs ; inc eax ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3795:	push cs ; sub al, 0x42 ; push cs ; xor byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e3833:	xor byte ptr [eax + 0xe], cl ; and byte ptr [esi + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080e387b:	push cs ; inc eax ; inc ebp ; push cs ; sub al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e38b7:	push cs ; xor byte ptr [ebp + 0xe], al ; sbb al, 0x46 ; push cs ; or al, 0x41 ; ret
0x080e39e1:	add al, byte ptr [ebx + 0xe] ; adc byte ptr [edx + ecx + 0xe], dl ; or byte ptr [ebx - 0x3d], al
0x080e39f9:	push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [esi + 0xe], cl ; or byte ptr [ebx - 0x3d], al
0x080e3a48:	xchg byte ptr [edx], al ; inc ecx ; push cs ; or al, 0x83 ; add esi, dword ptr [ebx + 0xa] ; ret
0x080e3a52:	push cs ; or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x4a ; or eax, dword ptr [ebx - 0x3d]
0x080e3aa8:	pushal ; dec eax ; push cs ; push eax ; push 0x41140e0a ; ret
0x080e3abe:	push cs ; add al, 0x41 ; or ecx, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e3ad6:	dec eax ; or eax, dword ptr [ebx] ; adc al, byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3aed:	add al, 0x42 ; or eax, dword ptr [edx] ; xlatb ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3b4c:	dec ecx ; push cs ; adc al, 0x69 ; push cs ; adc byte ptr [ecx + 0xe], al ; or al, 0xc3
0x080e3b5a:	inc ecx ; push cs ; add al, 0xc7 ; inc ecx ; or eax, dword ptr [ebp + 0xe] ; or al, 0xc3
0x080e3b90:	dec ecx ; push cs ; adc al, 0x63 ; push cs ; adc byte ptr [ecx + 0xe], al ; or al, 0xc3
0x080e3bca:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30ab602
0x080e3bd9:	lds ecx, ptr [esp + eax] ; add al, 0x46 ; or eax, dword ptr [edx] ; outsb dx, byte ptr [esi] ; or al, bl
0x080e3c13:	dec eax ; add dword ptr [0x5704854a], 0xe ; adc bl, al
0x080e3c7d:	xor byte ptr [ebx + 0xe], cl ; and byte ptr [ebx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e3cec:	pushal ; dec eax ; push cs ; inc eax ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e3e79:	inc eax ; dec eax ; push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e3ee2:	pushal ; dec esp ; push cs ; inc eax ; inc esi ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e405f:	xchg byte ptr [ebx], al ; test dword ptr [ebx + eax*4], eax ; add eax, 0xc3100e74
0x080e4097:	add al, 0x41 ; push cs ; adc al, 0x83 ; add eax, 0xc30a8002
0x080e40aa:	or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x49 ; or ecx, dword ptr [edx + 0xa] ; ret
0x080e40bd:	or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x46 ; or esi, dword ptr [edx + ecx - 0x3d]
0x080e40fd:	inc ebx ; push cs ; xor byte ptr [edx], al ; jge 0x10 ; push cs ; adc al, 0x41 ; ret
0x080e4113:	push cs ; add al, 0x43 ; or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e4129:	push cs ; add al, 0x48 ; or ebp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e413e:	lds ecx, ptr [esi] ; add al, 0x45 ; or edx, dword ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x080e417d:	dec eax ; push cs ; cmp byte ptr [edx], al ; imul ecx, dword ptr [edx], 0xe ; adc al, 0x41 ; ret
0x080e4195:	inc ebp ; or eax, dword ptr [ebx] ; pop es ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x080e4221:	add dword ptr [ecx + 0xe], eax ; rol byte ptr [ecx], 1 ; dec ebx ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4263:	add eax, dword ptr [ebx + 0x2e500204] ; and byte ptr [edx + 0xa], ah ; ret
0x080e426f:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x47 ; or ebp, dword ptr [ebp + 0xa] ; ret
0x080e42a6:	add dword ptr [0x202e4d02], 2 ; js 0x13 ; ret
0x080e42b4:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x47 ; or esp, dword ptr [edx + 0xa] ; ret
0x080e42e1:	add al, byte ptr [ebp + 0xe] ; adc byte ptr [eax + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e42fa:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4365:	xor byte ptr [eax + 0xe], cl ; and byte ptr [esi + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e4392:	inc eax ; dec eax ; push cs ; and byte ptr [ecx + 0xa], dh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e4449:	push cs ; and byte ptr [ebp + 0xe], al ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080e448f:	sbb byte ptr [esi + 0xe], al ; adc al, 0x4b ; push cs ; adc byte ptr [edi + 0xa], al ; ret
0x080e458f:	push cs ; add al, 0x47 ; or ecx, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e45a3:	push cs ; add al, 0x47 ; or eax, dword ptr [esi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e45ad:	push cs ; add al, 0x47 ; or eax, dword ptr [esi + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e45cd:	push cs ; add al, 0x48 ; or edx, dword ptr [edx + ecx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e4634:	push cs ; sub al, 0x41 ; push cs ; xor byte ptr [ebx + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e46a0:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [ebp + 0xa], al ; ret
0x080e4706:	and byte ptr [eax + 0xe], cl ; adc byte ptr [ecx + 0xa], dl ; push cs ; or al, 0x41 ; ret
0x080e4714:	push cs ; add al, 0x48 ; or edx, dword ptr [edx + ecx + 0xe] ; or al, 0x43 ; ret
0x080e475a:	push cs ; and byte ptr [ebx], al ; lcall -0x3cba:0x140e0a02
0x080e47e1:	inc eax ; inc ebp ; push cs ; xor byte ptr [edi + 0xa], al ; push cs ; adc al, 0x41 ; ret
0x080e483a:	push cs ; sub byte ptr [ebx], al ; sbb al, byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e484f:	lds ecx, ptr [esi] ; add al, 0x41 ; or edx, dword ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x080e48da:	push cs ; rol byte ptr [ecx], 1 ; add ah, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x080e48f0:	push cs ; add al, 0x41 ; or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x48 ; ret
0x080e497c:	xchg byte ptr [edx], al ; inc ebx ; push cs ; or al, 0x83 ; add ebx, dword ptr [ecx + 0xa] ; ret
0x080e4986:	push cs ; or byte ptr [ecx - 0x3a], al ; push cs ; add al, 0x42 ; or eax, dword ptr [ecx - 0x3d]
0x080e49c5:	xchg byte ptr [ebx], al ; inc esp ; push cs ; adc byte ptr [ebx - 0x3ca5fdfc], al
0x080e49fc:	push cs ; and byte ptr [ebp + 0xe], al ; adc al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e4a23:	add eax, dword ptr [esi + 0x3058304] ; pop ss ; or cl, byte ptr [edx] ; ret
0x080e4a75:	dec esp ; dec ebx ; push cs ; inc eax ; jne 0x10 ; push cs ; adc al, 0x41 ; ret
0x080e4b62:	inc eax ; inc esi ; push cs ; xor byte ptr [edx + ecx + 0xe], cl ; adc al, 0x41 ; ret
0x080e4bb6:	inc eax ; dec esp ; push cs ; xor byte ptr [edx + 0xa], cl ; push cs ; adc al, 0x41 ; ret
0x080e4c0e:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc3017803
0x080e4c4b:	add eax, dword ptr [esi + 0x3058304] ; fadd qword ptr [ecx] ; or al, bl
0x080e4c7a:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30afd02
0x080e4cbb:	add eax, dword ptr [esi + 0x3058304] ; aas ; add cl, byte ptr [edx] ; ret
0x080e4ccb:	or al, 4 ; add al, 0x41 ; or eax, dword ptr [ebx] ; or byte ptr [ecx], al ; or al, bl
0x080e4cd9:	inc ecx ; lds ecx, ptr [esp + eax] ; add al, 0x41 ; or ebx, dword ptr [edi + 0xa] ; ret
0x080e4d15:	inc ebx ; push cs ; and byte ptr [edx], al ; inc esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e4d4b:	add eax, dword ptr [esi + 0x3058304] ; lea eax, dword ptr [edx] ; or al, bl
0x080e4df3:	dec eax ; add dword ptr [0x5a04854a], 0xe ; adc bl, al
0x080e4e35:	push cs ; xor byte ptr [eax + 0xe], cl ; and byte ptr [ecx + 0xe], ah ; adc al, 0x41 ; ret
0x080e4eea:	inc eax ; dec eax ; push cs ; xor byte ptr [edx + ecx + 0xe], ah ; adc al, 0x41 ; ret
0x080e4f09:	inc eax ; dec eax ; push cs ; xor byte ptr [ebp + 0xa], bl ; push cs ; adc al, 0x46 ; ret
0x080e4f46:	add dword ptr [0x202e5902], 2 ; inc ebx ; or al, bl
0x080e5010:	add dword ptr [edx], 0x43 ; push cs ; adc byte ptr [edi + 0xe], dl ; or byte ptr [ecx - 0x3d], al
0x080e5042:	push cs ; xor byte ptr [ebp + 0xe], al ; and byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e506a:	push cs ; and byte ptr [edi + 0xe], al ; sbb al, 0x46 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e509e:	push cs ; inc eax ; inc ebp ; push cs ; xor byte ptr [ebx + 0xe], al ; or byte ptr [ebx - 0x3d], al
0x080e50ce:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [eax + 0xa], bl ; ret
0x080e50ef:	sbb al, 0x41 ; push cs ; and byte ptr [eax + 0xe], cl ; adc byte ptr [edi + 0xa], cl ; ret
0x080e5249:	inc ebx ; push cs ; pushal ; add cl, byte ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e5295:	push cs ; jo 0x4b ; or esp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e52ab:	push cs ; add al, 0x46 ; or ebp, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e534f:	dec eax ; push cs ; mov al, 1 ; inc esi ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e53ca:	push cs ; xor byte ptr [ebp + 0xe], al ; sbb al, 0x45 ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e5430:	push cs ; xor byte ptr [ecx + 0xe], cl ; sub byte ptr [ebx + 0xe], al ; adc byte ptr [ecx - 0x3d], al
0x080e5533:	dec eax ; push cs ; pushal ; add dl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e554a:	add al, 0x49 ; or eax, dword ptr [edx] ; push ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e55cf:	dec eax ; push cs ; pushal ; add dl, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e55fe:	inc ecx ; or eax, dword ptr [ebx] ; adc eax, dword ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e5742:	add eax, dword ptr [ebx + 0xe] ; adc byte ptr [edi + 0xa], ah ; push cs ; or al, 0x41 ; ret
0x080e5750:	push cs ; add al, 0x42 ; or ecx, dword ptr [edi + 0xa] ; push cs ; or al, 0x41 ; ret
0x080e575e:	push cs ; add al, 0x47 ; or edx, dword ptr [ebp + 0xa] ; push cs ; or al, 0x41 ; ret
0x080e57a1:	inc edi ; push cs ; inc eax ; add ch, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e5859:	pop eax ; push cs ; xor byte ptr [edx], al ; jmp 0x43140e13 ; ret
0x080e587e:	inc eax ; dec esp ; push cs ; xor byte ptr [edx + ecx + 0xe], dh ; adc al, 0x43 ; ret
0x080e58f7:	mov al, 2 ; add edx, dword ptr [ebx + 1] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e590f:	inc ecx ; or eax, dword ptr [ebx] ; mov ecx, 0x140e0a03 ; inc ecx ; ret
0x080e5926:	add al, 0x44 ; or eax, dword ptr [edx] ; pop ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e597c:	push cs ; mov al, 2 ; add cl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080e5fcf:	ror byte ptr [eax], 1 ; add esp, dword ptr [ebx + 1] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e5fe7:	inc ecx ; or eax, dword ptr [ebx] ; rol dword ptr [ebx], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e6054:	push cs ; ror byte ptr [eax], 1 ; add cl, byte ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x080e6559:	inc edi ; push cs ; inc eax ; add ch, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e657f:	push eax ; push eax ; push cs ; inc eax ; or cl, byte ptr [0x4114] ; ret
0x080e6596:	add al, 0x43 ; or eax, dword ptr [edx] ; inc ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e65ac:	push cs ; add al, 0x4b ; or ecx, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e668a:	inc eax ; dec esp ; push cs ; xor byte ptr [edi + 0xa], dh ; push cs ; adc al, 0x43 ; ret
0x080e6703:	shr byte ptr [ebx + eax + 0x63], 1 ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x080e671b:	inc ecx ; or eax, dword ptr [ebx] ; and al, byte ptr [edx + ecx] ; push cs ; adc al, 0x41 ; ret
0x080e6771:	push cs ; shr byte ptr [edx + eax + 0x4c], 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e69a3:	inc ecx ; push cs ; loopne 0x70 ; dec eax ; push cs ; shr byte ptr [edx + eax - 0x3d], 1
0x080e6bf7:	add al, 0x47 ; push cs ; xor byte ptr [ecx + 0xa], bh ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e6c48:	add eax, 0x78400e47 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e6cf6:	add eax, dword ptr [ebp + 0xe] ; sbb byte ptr [edx], al ; push edi ; push cs ; or al, 0x41 ; ret
0x080e6d53:	add al, 0x41 ; push cs ; adc al, 0x83 ; add eax, 0xc30a4a02
0x080e6d65:	push cs ; or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x47 ; or eax, dword ptr [ecx - 0x3d]
0x080e6f51:	inc ebx ; push cs ; xor byte ptr [edx], al ; ja 0x10 ; push cs ; adc al, 0x41 ; ret
0x080e6f91:	inc ebx ; push cs ; inc eax ; add dh, byte ptr [edi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e6fd1:	dec esi ; push cs ; xor byte ptr [edx], al ; push ebp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e6fe7:	push cs ; add al, 0x43 ; or eax, dword ptr [edx] ; int3 ; push cs ; adc al, 0x43 ; ret
0x080e7015:	add cl, byte ptr [esi + 0xe] ; adc byte ptr [edi + 0xa], bl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e701f:	push cs ; add al, 0x41 ; or eax, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e7029:	push cs ; add al, 0x4a ; or edx, dword ptr [esi + 0xa] ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7032:	ret ; push cs ; add al, 0x49 ; or eax, dword ptr [esi + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e70bf:	push cs ; push eax ; add esi, dword ptr [ecx + eax] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e70f1:	pushal ; push edx ; push cs ; push eax ; inc ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7107:	push cs ; add al, 0x46 ; or ebp, dword ptr [edi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e7152:	push cs ; rol byte ptr [edx], 1 ; add bl, byte ptr [ecx + 0x41140e0a] ; ret
0x080e71af:	push cs ; rol byte ptr [ecx], 1 ; add ah, cl ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e721a:	dec eax ; push cs ; add byte ptr [edx], 2 ; in eax, dx ; push cs ; adc al, 0x41 ; ret
0x080e724e:	add eax, dword ptr [ebx + 0xe] ; adc byte ptr [ebx + 0xa530204], al ; ret
0x080e725c:	push cs ; or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x43 ; or eax, dword ptr [ecx - 0x3d]
0x080e72b6:	push cs ; lock add dword ptr [edx], eax ; inc eax ; or cl, byte ptr [esi] ; adc al, 0x46 ; ret
0x080e72cc:	push cs ; add al, 0x45 ; or eax, dword ptr [esi + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e7375:	dec ecx ; push cs ; lock add dword ptr [esi + 0xa], ecx ; push cs ; adc al, 0x46 ; ret
0x080e738a:	lds ecx, ptr [esi] ; add al, 0x45 ; or eax, dword ptr [esi + 0xe] ; adc al, 0x43 ; ret
0x080e73ca:	push cs ; inc eax ; add eax, dword ptr [ecx + eax] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e73e0:	push cs ; add al, 0x46 ; or edi, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e73f6:	push cs ; add al, 0x41 ; or ebp, dword ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e7429:	add dword ptr [ebx], 0x4e ; push cs ; adc byte ptr [edx + 0xe], bh ; or al, 0x41 ; ret
0x080e7466:	dec esi ; push cs ; adc byte ptr [edx], al ; inc edx ; or cl, byte ptr [esi] ; or byte ptr [ecx - 0x3d], al
0x080e746f:	ret ; push cs ; add al, 0x46 ; or ecx, dword ptr [edx + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e74fe:	xor byte ptr [eax + 0xe], cl ; and byte ptr [ebx + 0xa], cl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e755a:	push cs ; loopne 5 ; add dh, byte ptr [edi + 0x43140e0a] ; ret
0x080e756f:	lds ecx, ptr [esi] ; add al, 0x41 ; or eax, dword ptr [esi + 0xe] ; adc al, 0x43 ; ret
0x080e75c6:	mov bl, 0xc ; add al, 4 ; inc ebp ; or ecx, dword ptr [edi + 0xa] ; ret
0x080e76ca:	xchg dword ptr [ebx], eax ; xchg byte ptr [ebx + eax*4], al ; add eax, 0xc30a6602
0x080e76d7:	mov dword ptr [ecx - 0x3b], 0x4104040c ; or ecx, dword ptr [ecx - 0x3d]
0x080e77a6:	inc eax ; dec ecx ; push cs ; xor byte ptr [ebx + 0xa], dl ; push cs ; adc al, 0x41 ; ret
0x080e77fb:	push cs ; inc eax ; dec esp ; push cs ; xor byte ptr [eax + 0xe], cl ; adc al, 0x41 ; ret
0x080e7829:	add cl, byte ptr [esi + 0xe] ; adc byte ptr [edx + 0xa], ah ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7833:	push cs ; add al, 0x46 ; or eax, dword ptr [edi + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e783d:	push cs ; add al, 0x4b ; or ecx, dword ptr [ebx + 0xa] ; push cs ; or byte ptr [esi - 0x3d], al
0x080e7846:	ret ; push cs ; add al, 0x47 ; or eax, dword ptr [ebx + 0xe] ; or byte ptr [ebx - 0x3d], al
0x080e7869:	add cl, byte ptr [esi + 0xe] ; adc byte ptr [edi + 0xa], dl ; push cs ; or byte ptr [ecx - 0x3d], al
0x080e7873:	push cs ; add al, 0x49 ; or edx, dword ptr [edi + 0xa] ; push cs ; or byte ptr [ebx - 0x3d], al
0x080e787c:	ret ; push cs ; add al, 0x46 ; or eax, dword ptr [esi + 0xe] ; or byte ptr [ecx - 0x3d], al
0x080e793a:	push cs ; sub al, 0x50 ; push cs ; xor byte ptr [edi + 0xe], ah ; adc byte ptr [ecx - 0x3d], al
0x080e7975:	xor byte ptr [esi + ecx + 0x20], cl ; pop eax ; or cl, byte ptr [esi] ; adc byte ptr [ecx - 0x3d], al
0x080e7991:	xor byte ptr [ebp + 0xe], dl ; and byte ptr [edx + 0xa], cl ; push cs ; adc byte ptr [ecx - 0x3d], al
0x080e79dc:	pushal ; push esi ; push cs ; push eax ; jl 0x10 ; push cs ; adc al, 0x43 ; ret
0x080e79f1:	lds ecx, ptr [esi] ; add al, 0x48 ; or eax, dword ptr [ebx + 0xe] ; adc al, 0x43 ; ret
0x080e7a32:	push cs ; jo 6 ; aas ; add cl, byte ptr [edx] ; push cs ; adc al, 0x41 ; ret
0x080e7a5e:	add dword ptr [edi + 0xe], edx ; jo 0x54 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x080e7abf:	push cs ; cmp al, 0x48 ; push cs ; inc eax ; push cs ; adc al, 0x41 ; ret
0x080e7b07:	pop eax ; push cs ; inc eax ; add al, byte ptr [esi + 0xa] ; push cs ; adc al, 0x41 ; ret
0x080e7b1c:	lds ecx, ptr [esi] ; add al, 0x46 ; or ebx, dword ptr [ebx + 0xe] ; adc al, 0x46 ; ret
0x080e7b61:	push cs ; push eax ; pop eax ; push cs ; inc eax ; js 0x15 ; adc al, 0x41 ; ret
0x080e7ba1:	dec esi ; push cs ; pushal ; add al, byte ptr [edx + 0x41140e0a] ; ret
0x080e7bec:	jo 0x47 ; push cs ; pushal ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7c53:	sbb al, 0x43 ; push cs ; and byte ptr [edi + 0xe], bl ; adc byte ptr [ecx + 0xa], al ; ret
0x080e7c61:	push cs ; or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x43 ; or ecx, dword ptr [ebp - 0x3d]
0x080e7c9b:	sbb al, 0x41 ; push cs ; and byte ptr [edi + 0xe], bl ; adc byte ptr [ecx + 0xa], al ; ret
0x080e7ca9:	push cs ; or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x43 ; or edx, dword ptr [eax - 0x3d]
0x080e7cee:	add ecx, dword ptr [esi + 0xe] ; adc byte ptr [ebp + 0xa], cl ; push cs ; or al, 0x41 ; ret
0x080e7d01:	push cs ; sbb al, 0x42 ; push cs ; and byte ptr [eax + 0xe], cl ; or al, 0x45 ; ret
0x080e7d45:	push cs ; or byte ptr [ecx - 0x39], al ; push cs ; add al, 0x44 ; or edx, dword ptr [eax - 0x3d]
0x080e7da6:	push cs ; sbb al, 0x44 ; push cs ; and byte ptr [eax + 0xe], cl ; or byte ptr [ecx - 0x3d], al
0x080e7deb:	xor byte ptr [eax + 0xe], cl ; and byte ptr [edi + 0xa], al ; push cs ; adc al, 0x43 ; ret
0x080e7e01:	push cs ; add al, 0x44 ; or ebx, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x080e7e55:	push cs ; and byte ptr [eax + 0xe], dl ; adc byte ptr [ebx + 0xe], al ; or byte ptr [ecx - 0x3d], al
0x080e7ea4:	pushal ; push esp ; push cs ; push eax ; dec eax ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7fa8:	add eax, 0x53600e4d ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x080e7fbe:	push cs ; add al, 0x48 ; or ecx, dword ptr [edx + 0xa] ; push cs ; adc al, 0x46 ; ret
0x080e808f:	jo 0x47 ; push cs ; pushal ; inc edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x08048415:	adc eax, 0x890aca6b ; sub edx, ebx ; add ebx, ecx
0x08049a2d:	push ebp ; ror byte ptr [ecx + 0x428bc845], 0xc ; mov ebx, ecx
0x08049ab9:	mov eax, dword ptr [edx] ; add eax, 1 ; mov dword ptr [ebp - 0x38], eax ; jmp 0xffffffd5
0x0804a2d3:	add eax, dword ptr [eax] ; add byte ptr [ebx + 0xfdb851b], cl ; test cl, bl
0x0804a6fc:	add al, byte ptr [eax] ; add byte ptr [eax], bh ; mov ebx, ecx
0x0804b470:	add al, 0x85 ; test byte ptr [ebx + 0x2740458], 0xf ; retf
0x0804b51d:	sbb al, 0xb8 ; mov edi, dword ptr [ebp - 0x94] ; bswap ebx
0x0804bc04:	cli ; jne 0x77 ; jp 0xffffff85 ; cli ; js 0x17 ; test cl, bl
0x0804d13b:	mov dh, 0x88 ; loopne 0xffffffb6 ; or ecx, dword ptr [eax] ; test ecx, ecx ; je 0xffffffd5
0x08050771:	add byte ptr [eax], al ; je 0xa7 ; sub ebx, ecx
0x0805081b:	mov dword ptr [esp + 8], 0 ; sub ebx, ecx
0x08051d2f:	mov ecx, dword ptr [esi + 4] ; mov ebx, dword ptr [esi + 8] ; mov ebp, edi ; sub ebx, ecx
0x08051d50:	jne 0x80 ; mov ecx, dword ptr [esi + 4] ; mov ebx, dword ptr [esi + 8] ; sub ebx, ecx
0x08051d92:	dec esi ; add al, 0x8b ; pop esi ; or byte ptr [ebx - 0x34d6ef3c], al
0x08051dbb:	dec esp ; and al, 0x1c ; mov ebp, eax ; add esp, 0x10 ; add ebx, ecx
0x08052ecd:	add byte ptr [eax], al ; add byte ptr [ebx + 0x128b084a], cl ; cmp ebx, ecx
0x080531bb:	add byte ptr [ebx - 0x367acbb3], cl ; je 0x26 ; cmp ebx, ecx
0x08053a6a:	add al, 0x8b ; pop esi ; or byte ptr [ecx], bh ; fnstenv dword ptr [ebx + 0x2d] ; sub ebx, ecx
0x080550c8:	push edi ; push esi ; push ebx ; mov ebp, 0xff ; mov ebx, ecx
0x080550d6:	in al, dx ; add al, 0x8b ; jo 1 ; shr ebx, 3 ; xor ebx, ecx
0x08055125:	cmp ecx, esi ; cmove ecx, edi ; mov byte ptr [eax + ebx], cl ; sub ebx, ecx
0x080555ba:	lea ebx, dword ptr [ecx + esi + 3] ; neg ecx ; add ebx, edx ; and ebx, ecx
0x080559cf:	push eax ; movsd dword ptr es:[edi], dword ptr [esi] ; push cs ; or byte ptr [ecx], al ; fild qword ptr [ecx] ; jmp 0xffffff8c ; retf
0x08055fa3:	je 0x4cd ; cmp ebx, eax ; jne 0xffffffd5
0x08056a97:	or al, 0xb5 ; push cs ; or byte ptr [ecx], ch ; jmp 8 ; ret 0xcb83
0x0805732c:	or al, 0x8d ; inc ebp ; xor byte ptr [ecx - 0x76f7dbbc], cl ; retf
0x08057352:	push es ; shr edi, 9 ; mov dword ptr [esp + 0x3c], ebx ; mov ebx, ecx
0x08057d6f:	ror byte ptr [ecx - 0x7a090838], cl ; ror byte ptr [edi], cl ; test ecx, ebx
0x08058bee:	push cs ; or al, ch ; sbb ebx, dword ptr [edi + 1] ; add al, ch ; push esi ; retf
0x0805a155:	mov ebx, dword ptr [eax + 0xc] ; shl esi, cl ; mov dword ptr [ebx + 8], eax ; mov ebx, ecx
0x0805af44:	inc eax ; add al, 0xf ; adc dword ptr [esi], 1 ; add byte ptr [eax], al ; mov ebx, ecx
0x0805af8d:	inc eax ; add al, 0xf ; or ebp, 0 ; add byte ptr [eax], al ; mov ebx, ecx
0x0805afd2:	inc eax ; add al, 0xf ; or dword ptr [eax - 0x77000000], 0xffffffcb
0x0805b00b:	int 1 ; iretd ; lea eax, dword ptr [eax + 4] ; jae 0x57 ; mov ebx, ecx
0x0805ca2f:	movdqa xmmword ptr [edx - 0x45], xmm0 ; movdqa xmmword ptr [edx - 0x35], xmm0
0x0805d0a9:	movdqa xmm3, xmmword ptr [eax + edi + 0x20] ; movdqa xmm1, xmm3
0x0805e275:	or cl, byte ptr [ebp - 0xa0f7fc] ; and al, 0x8d ; xor bl, cl
0x080615ba:	nop ; nop ; nop ; nop ; nop ; nop ; pcmpeqb xmm1, xmm3
0x080631b9:	lea edi, dword ptr [edi] ; push ebx ; mov ebx, ecx
0x08063219:	pop ss ; ret 0x2c73 ; add eax, ecx ; add edx, ecx ; sub ebx, ecx
0x080634db:	add byte ptr [eax], al ; pop ebx ; ret ; nop ; movdqu xmm1, xmmword ptr [eax - 0x35]
0x080634e0:	movdqu xmm1, xmmword ptr [eax - 0x35] ; movdqu xmm2, xmmword ptr [edx - 0x35]
0x08063f6a:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; rol dword ptr [ecx], 1 ; movaps xmm1, xmm3
0x08063f9a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x1f] ; movaps xmm1, xmm3
0x080640aa:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; rol dword ptr [edx], 1 ; movaps xmm1, xmm3
0x080640da:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x1e] ; movaps xmm1, xmm3
0x080641ea:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; rol dword ptr [ebx], 1 ; movaps xmm1, xmm3
0x0806421a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x1d] ; movaps xmm1, xmm3
0x0806432a:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; rol dword ptr [edi + ecx], 1 ; sub bl, cl
0x0806435a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x1c] ; movaps xmm1, xmm3
0x0806448a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x1b] ; movaps xmm1, xmm3
0x0806458a:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; rol dword ptr [esi], 1 ; movaps xmm1, xmm3
0x080645ba:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x1a] ; movaps xmm1, xmm3
0x080646ba:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; rol dword ptr [edi], 1 ; movaps xmm1, xmm3
0x080646ea:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x19] ; movaps xmm1, xmm3
0x080647ea:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; ror dword ptr [eax], 1 ; movaps xmm1, xmm3
0x0806481a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x18] ; movaps xmm1, xmm3
0x0806491a:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; ror dword ptr [ecx], 1 ; movaps xmm1, xmm3
0x0806494a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x17] ; movaps xmm1, xmm3
0x08064a4a:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; ror dword ptr [edx], 1 ; movaps xmm1, xmm3
0x08064a7a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x16] ; movaps xmm1, xmm3
0x08064b7a:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; ror dword ptr [ebx], 1 ; movaps xmm1, xmm3
0x08064baa:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x15] ; movaps xmm1, xmm3
0x08064caa:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; ror dword ptr [edi + ecx], 1 ; sub bl, cl
0x08064cda:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x14] ; movaps xmm1, xmm3
0x08064e0a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x13] ; movaps xmm1, xmm3
0x08064f0a:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; ror dword ptr [esi], 1 ; movaps xmm1, xmm3
0x08064f3a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x12] ; movaps xmm1, xmm3
0x0806503a:	add byte ptr [esi + 0xf], ah ; cmp cl, byte ptr [edi] ; ror dword ptr [edi], 1 ; movaps xmm1, xmm3
0x0806506a:	movaps xmmword ptr [edx], xmm2 ; movaps xmm2, xmmword ptr [ecx + 0x11] ; movaps xmm1, xmm3
0x08066dfd:	pcmpeqb xmm0, xmmword ptr [ebx] ; pmovmskb eax, xmm0 ; sub ebx, ecx
0x0806af7a:	or ecx, dword ptr [eax] ; por xmm3, xmm7 ; pcmpeqb xmm1, xmm3
0x0806b982:	mov edi, ecx ; lea ecx, dword ptr [edx + 0x10] ; and ecx, 0xfffffff0 ; mov ebx, ecx
0x0806b98a:	mov ebx, ecx ; sub ebx, edx ; add eax, ebx ; mov ebx, esi ; sub ebx, ecx
0x0806b9db:	pop ecx ; xor byte ptr [ebx - 0x147cbf3f], al ; add dword ptr [ebp - 0x35], esi
0x0806c260:	add ebp, ebx ; lahf ; nop ; lea esi, dword ptr [esi] ; mov ebx, ecx
0x0806dd68:	lahf ; ret ; mov edi, ebx ; mov ebx, ebp ; mov ecx, edi ; cmp bl, cl
0x0806eae0:	push edx ; push ebx ; push esi ; mov edx, 2 ; mov ebx, ecx
0x0806ed60:	test dl, 3 ; jne 0x20 ; mov edi, dword ptr [edx + 4] ; cmp ebx, ecx
0x0807034c:	jne 0x39 ; test ecx, ecx ; je 0xffffffd4 ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x0807037f:	mov dword ptr [esp + 0x14], ecx ; jmp 0xffffffa1 ; mov ebx, dword ptr [eax] ; add ebx, ecx
0x0807038a:	fnsave dword ptr [edx - 0x6d] ; mov esi, dword ptr [edx + 8] ; test esi, esi ; jne 0xffffffd5
0x08070390:	test esi, esi ; jne 0xffffffcf ; cmp ebp, ebx ; jne 0xffffff90 ; jmp 0xffffffd5
0x080703f7:	add dword ptr [eax], eax ; add byte ptr [ebx], ch ; adc byte ptr [ebx - 0x3476fe17], al
0x0807094b:	dec ebx ; add dword ptr [edi], ecx ; test byte ptr [ebp - 0x76ffffff], cl ; retf
0x08070a6c:	jmp 0xfffffd3e ; mov eax, dword ptr [ebp - 0x2c] ; mov ebx, ecx
0x08070a88:	mov esi, 0xffffffe8 ; test ecx, ecx ; mov ebx, ecx
0x08070adb:	jmp 0xffffff75 ; mov byte ptr [ebx], 0 ; mov ebx, ecx
0x08070eba:	and byte ptr [ebp - 0x7cd08b25], al ; in al, dx ; or al, 0xc1 ; retf
0x08071dbf:	int1 ; mov dword ptr [ebp - 0x30], esi ; movsx esi, byte ptr [ebx + 1] ; mov ebx, ecx
0x08072ea3:	mov dword ptr [esi], eax ; add edx, 4 ; add esi, 4 ; cmp ebx, ecx
0x08072ec8:	rol dword ptr [ecx], -0x7d ; add byte ptr [ecx], al ; add edx, 4 ; cmp ebx, ecx
0x080739de:	add byte ptr [eax], al ; cmp dword ptr [esp + 0x5c], eax ; mov dword ptr [ebx], edx ; mov ebx, ecx
0x08074bc8:	mov ecx, eax ; and eax, 0xfffffff8 ; and ecx, 7 ; sub ebx, ecx
0x0807594d:	add ebx, 1 ; and ebp, 0x3f ; or esi, ebp ; cmp ebx, ecx
0x0807695d:	add byte ptr [eax], al ; add byte ptr [edi], cl ; mov bh, 0xc0 ; mov dword ptr [ebx], eax ; mov ebx, ecx
0x080779e0:	push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov esi, edx ; mov ebx, ecx
0x08078730:	push cs ; or byte ptr [ecx], bh ; sal dword ptr [ebx - 0x7f], cl ; cli ; add ebx, ecx
0x0807875d:	push cs ; or byte ptr [ecx], bh ; sal byte ptr [ecx - 0x7f], 1 ; cli ; add ebx, ecx
0x08078ce9:	and al, 0xe9 ; imul edi, edi, 0xd089ffff ; jmp 0xffffffd5
0x08078d10:	push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov esi, eax ; mov ebx, ecx
0x08078d58:	sal byte ptr [ebp + 0x1d], 0x8b ; inc ebp ; or bh, al ; add byte ptr [ecx], al ; retf
0x08079308:	adc dword ptr [ebx], eax ; and byte ptr [ebp - 0x21bbf040], al ; cmp ebx, ecx
0x08079989:	cmp al, 0x85 ; add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, ebx ; mov ebx, ecx
0x08079c09:	pop esi ; pop edi ; pop ebp ; ret ; mov eax, ebx ; sub esi, edx ; mov ebx, ecx
0x0807aa0c:	or byte ptr [eax + 0x300c8d0a], cl ; sub edx, edi ; cmp ebx, ecx
0x0807bb3c:	fstp xword ptr [eax + 0x19] ; test bl, bl ; je 0x44 ; movsx ecx, bl
0x0807c26f:	add eax, dword ptr [eax] ; add byte ptr [ebx - 0x17a9f314], al ; retf
0x0807c79f:	add byte ptr [eax], al ; mov eax, dword ptr [ebp - 0x454] ; add ebx, ecx
0x0807cd91:	add byte ptr [eax], al ; mov edx, dword ptr [ebp - 0x458] ; add ebx, ecx
0x0807d296:	cmp ecx, eax ; jg 0x1e8 ; add ebx, ecx
0x0807d432:	jl 0x4c ; mov eax, dword ptr [ebp - 0x43c] ; add ebx, ecx
0x0807dbbe:	cmp ecx, eax ; ja 0xfffff8c0 ; add ebx, ecx
0x08081ae7:	sub eax, 4 ; mov ebx, dword ptr [eax] ; add edx, 1 ; cmp ebx, ecx
0x08081b32:	dec dword ptr [ebx - 0x7ba2c6e8] ; je 0xf ; mov ebx, ecx
0x08081bd4:	add al, 0x85 ; add byte ptr [eax], al ; add byte ptr [eax], al ; sub esi, ebx ; mov ebx, ecx
0x08081e6e:	mov edx, edi ; sub esp, 4 ; lea eax, dword ptr [esi + ecx*4] ; add ebx, ecx
0x08082411:	cmp edx, dword ptr [ebp - 0x70] ; lea ebx, dword ptr [edx + ebx - 1] ; cmove ecx, ebx
0x08082425:	idiv edi ; inc dword ptr [ebx + 0x38901c0] ; mov ebx, ecx
0x0808308e:	inc esp ; add esp, 0x20 ; mov edx, eax ; mov eax, ebx ; cmp ebx, ecx
0x08083553:	and al, 0x8f ; add byte ptr [eax], al ; add byte ptr [ebx - 0x34d6fe17], al
0x080840dc:	sti ; cmp dword ptr [esp + ebx*2 + 0x65], esi ; mov esi, dword ptr [edi] ; movsx ecx, bl
0x0808411a:	mov dh, 0x5c ; and al, 0x33 ; mov edx, dword ptr gs:[eax] ; movsx ecx, bl
0x08085ff7:	add byte ptr [eax], al ; mov ebx, dword ptr [eax + 0x10] ; mov ecx, dword ptr [eax + 0x14] ; cmp ebx, ecx
0x080867c7:	dec dword ptr [ebx - 0x45b73] ; dec dword ptr [edi] ; test ecx, ebx
0x08086f9f:	clc ; add eax, 0xcbed4be ; or byte ptr [edi], cl ; mov cs, ebx
0x08087c2f:	add byte ptr [ecx - 0x10236b], cl ; dec dword ptr [edi] ; test ecx, ebx
0x0808b5e7:	mov eax, esi ; mov ecx, dword ptr [ebp + 0x10] ; mov ebx, dword ptr [ebp + 0x14] ; sub ebx, ecx
0x0808b82e:	add byte ptr [eax], al ; mov eax, dword ptr [ebx + 0x58] ; mov eax, dword ptr [eax + 0x20] ; jmp 0xffffffd5
0x0808ba75:	push 0x4d8b58 ; mov ebx, dword ptr [ebp + 4] ; sub ebx, ecx
0x0808e16f:	pop eax ; adc al, 0x8b ; add byte ptr [ebp - 0x3ef58b40], al ; retf
0x0808ecb2:	sbb byte ptr [ebx - 0x45], dl ; sbb byte ptr [eax], al ; add byte ptr [eax], al ; cmova ecx, ebx
0x0808fa72:	and byte ptr [eax], al ; add byte ptr [eax], al ; add bh, al ; inc ebx ; sub byte ptr [ebx], al ; retf
0x0809044b:	add byte ptr [eax], al ; push 0x80ccb18
0x0809124f:	adc byte ptr [ecx - 0xd76f3bd], cl ; xor eax, eax ; jmp 0xffffffd5
0x08091c05:	add byte ptr [eax], al ; push 0x80ccbe4
0x08091dc7:	cmp ecx, edi ; jae 0xcf ; mov ebx, ecx
0x08093d6a:	add byte ptr [eax], al ; mov dword ptr [esp + 0x18], edi ; mov edi, ebx ; mov ebx, ecx
0x080942db:	add dh, dh ; xchg dword ptr [ebp + 0x1000001], edx ; jne 0xffffffd5
0x080952ca:	mov dword ptr [esp + 0x38], ebx ; mov dword ptr [esp + 0x30], ebp ; mov ebx, ecx
0x080957b0:	mov ecx, ebx ; add edx, 1 ; shl ecx, 5 ; add ebx, ecx
0x08095b11:	cwde ; mov ecx, dword ptr [ebp - 0x64] ; xor ebx, eax ; xor ecx, edx ; or ebx, ecx
0x080966fa:	add byte ptr [ecx - 1], dl ; mov al, 0x2c ; add al, byte ptr [eax] ; add byte ptr [ecx], ch ; retf
0x0809673b:	add ecx, dword ptr [eax] ; mov edx, dword ptr [0x80eaa08] ; mov ebx, ecx
0x08096e29:	mov ecx, dword ptr [edx + 4] ; add edi, dword ptr [edx] ; mov edx, dword ptr [ebp + 8] ; mov ebx, ecx
0x080973fb:	je 0x40d ; test edi, edi ; je 0xffffffd5
0x080984e3:	add esp, 0x10 ; shl edx, cl ; test dword ptr [ebp - 0x20], edx ; jne 0xffffffd5
0x08098d1e:	nop ; nop ; push ebp ; mov ebp, esp ; push edi ; push esi ; push ebx ; mov ebx, ecx
0x080992f9:	adc al, 0x91 ; cmp dword ptr [edx], eax ; jb 0x17 ; mov ebx, edx ; cmp ebx, ecx
0x08099b1b:	test eax, eax ; mov ebx, eax ; mov ecx, dword ptr [esp + 0xc] ; je 0xffffffd5
0x0809bb17:	int1 ; cmp cl, 9 ; jbe 0x2a ; mov ecx, edi ; cmp bl, cl
0x0809bc72:	cmp eax, 0x5f8dcb79 ; add dword ptr [ecx], edi ; fidivr word ptr [ebp - 0x35]
0x0809cc70:	inc esp ; and al, 8 ; cmp eax, 0xff ; jne 0xffffff90 ; mov ebx, ecx
0x0809d16b:	mov ecx, dword ptr [ebp - 0x1c] ; add dword ptr [ebp - 0x20], ecx ; mov edx, eax ; add ebx, ecx
0x0809ecda:	jmp 0x53 ; imul ecx ; mov dword ptr [esp + 8], ebx ; mov ebx, ecx
0x0809ef01:	mov ebx, esi ; sar ebx, 0x1f ; or ebx, 1 ; add ebx, ecx
0x0809ef07:	retf ; add dword ptr [ecx], eax ; retf ; cmp esi, ebx ; je 0x47 ; mov ebx, ecx
0x0809ef1b:	sub esp, 8 ; add eax, ebx ; mov ebx, esi ; push ebp ; and ebx, ecx
0x0809ef62:	rol byte ptr [ebx - 0x7614ef3c], 1 ; mov esi, ebx ; mov ebx, ecx
0x0809f134:	fadd st(1) ; loop 6 ; sub ecx, edx ; mov ebp, ecx ; mov ebx, ecx
0x0809f399:	cmp edx, ebx ; setge bl ; shr ecx, 0x1f ; cmp bl, cl
0x0809fbd6:	inc ebp ; add byte ptr [eax], 0 ; add byte ptr [eax], al ; xor edi, edi ; mov ebx, ecx
0x080a0330:	lahf ; lock add byte ptr [eax], al ; add byte ptr [ebp - 0x347af025], al
0x080a1112:	add dword ptr [ecx - 0x76db8a29], ecx ; pop ebp ; or al, 0x89 ; retf
0x080a1783:	fimul word ptr [ecx + 0x10508b32] ; test edx, edx ; jne 0xffffffd5
0x080a2100:	and al, 0xc ; mov esi, dword ptr [0x80eb7dc] ; mov ebx, ecx
0x080a223e:	adc al, 0xc6 ; mov ecx, dword ptr [edx] ; mov eax, dword ptr [ecx] ; cmp ebx, eax ; je 0xffffffd5
0x080a2826:	dec dword ptr [edi] ; mov dh, 0x47 ; add cl, byte ptr [ebp - 0x3476fdb1]
0x080a3df9:	je 0xffffffcf ; movzx edi, byte ptr [edx - 2] ; mov ebx, edi ; cmp bl, cl
0x080a50ce:	je 0x37 ; mov dword ptr [ebp - 0x59c], ebx ; mov ebx, ecx
0x080a640f:	lea ecx, dword ptr [ebx + edi*4 - 4] ; cmp edi, 1 ; cmove ecx, ebx
0x080a7909:	push dword ptr [ecx] ; leave ; mov dword ptr [ebp + 8], esi ; mov esi, ebx ; mov ebx, ecx
0x080a7c73:	add edi, esp ; lea ecx, dword ptr [ebp - 0x438] ; sub ebx, ecx
0x080a7da7:	mov ecx, eax ; mov dword ptr [ebp - 0x560], edx ; mov ebx, ecx
0x080a8d74:	push esi ; push ebx ; mov esi, eax ; mov eax, ecx ; mov edi, edx ; mov ebx, ecx
0x080a8fcd:	lea esi, dword ptr [esi] ; push edi ; push esi ; xor esi, esi ; push ebx ; mov ebx, ecx
0x080a9453:	adc byte ptr [edi], cl ; xchg byte ptr [edx + 0xf000001], dl ; scasd eax, dword ptr es:[edi] ; retf
0x080aa3a3:	test byte ptr [eax + 1], al ; add byte ptr [eax], al ; cmp ecx, 9 ; jne 0xffffffd5
0x080abbf1:	mov ecx, dword ptr [esp + 8] ; mov eax, dword ptr [esp + 0x20] ; mov ebx, ecx
0x080abe3e:	add byte ptr [eax], al ; mov edx, ebx ; mov dword ptr [esp + 0x7c], ebx ; mov ebx, ecx
0x080ac921:	or eax, 0x4d1a6808 ; or eax, 0xcbc3e808
0x080ac95b:	or eax, 0x4d5c6808 ; or eax, 0xcb89e808
0x080aca68:	add byte ptr [ebx - 0x7abfdbbc], cl ; ror byte ptr [edi], 0x84 ; retf
0x080af024:	xor eax, 0x36f8e0f ; add byte ptr [eax], al ; lea edi, dword ptr [eax - 0x35]
0x080b254a:	and al, 0x20 ; mov esi, dword ptr [esp + 0x18] ; mov eax, dword ptr [esi] ; mov ebx, ecx
0x080b258a:	lock inc dword ptr [ecx + 0xfffffe1] ; add byte ptr [ecx], cl ; retf
0x080b5b00:	and al, 0x1c ; mov edi, dword ptr [esp + 8] ; sub eax, esi ; sbb ebx, ecx
0x080b5b28:	add byte ptr [ebp + 0x27bc], cl ; add byte ptr [eax], al ; sub ebx, ecx
0x080b7158:	movzx ebx, bl ; jmp 0xfffff9f8 ; cmp ebx, ecx
0x080b7167:	movzx ebx, bl ; jmp 0xfffff9e9 ; xor ebx, ecx
0x080b7194:	retf ; mov eax, esi ; jmp 0xfffff9bc ; or ebx, ecx
0x080b71cd:	ret ; mov eax, esi ; jmp 0xfffff983 ; and ebx, ecx
0x080b71d6:	retf ; mov eax, esi ; jmp 0xfffff97a ; cmp ebx, ecx
0x080b71e5:	movzx ebx, bl ; jmp 0xfffff96b ; cmp ebx, ecx
0x080b71f4:	movzx ebx, bl ; jmp 0xfffff95c ; cmp ebx, ecx
0x080b7203:	movzx ebx, bl ; jmp 0xfffff94d ; cmp ebx, ecx
0x080b7278:	add bh, dh ; ret 0 ; add byte ptr [eax + 0xf], al ; test cl, bl
0x080b7bd1:	cmp ebx, 4 ; mov eax, dword ptr [edx + eax*4] ; je 0x17 ; mov ebx, ecx
0x080b88fc:	mov ebx, dword ptr [ebx + 0xf78] ; xor esi, edi ; xor ebx, ecx
0x080b8fee:	jbe 2 ; push ebp ; push edi ; mov edi, eax ; push esi ; push ebx ; mov ebx, ecx
0x080b91a5:	or eax, dword ptr [ebp + 0x244c89c9] ; and al, 0xf ; test ecx, ebx
0x080ba433:	les edx, ptr [eax] ; lea edx, dword ptr [eax - 1] ; cmp edx, 0xfd ; ja 0xffffffd5
0x080ba545:	or byte ptr [ebp - 0x7c9b8b37], al ; in al, dx ; or al, 0xc1 ; retf
0x080ba7aa:	inc edi ; add al, 0xb5 ; mov al, byte ptr [0x1080eae] ; retf
0x080ba9ab:	stc ; inc edi ; add eax, 0x80eaef8 ; add ebx, ecx
0x080bc94c:	mov dword ptr [0xe30805ca], eax ; retf 0x805 ; adc ecx, ebx
0x080bc950:	jecxz 0xffffffcc ; add eax, 0x5cb1308 ; or byte ptr [ebx - 0x35], al
0x080bc954:	adc ecx, ebx ; add eax, 0x5cb4308
0x080bc958:	inc ebx ; retf ; add eax, 0x5cb8308 ; or bl, al ; retf
0x080bc990:	fmulp st(2) ; add eax, 0x5cb0e08 ; or byte ptr [esi], bh ; retf
0x080bc994:	push cs ; retf ; add eax, 0x5cb3e08 ; or byte ptr [esi - 0x35], bh
0x080bc99c:	jle 0xffffffcd ; add eax, 0x5cbbe08 ; or dh, ch ; retf
0x080bc9d0:	fxch st(2) ; add eax, 0x5cb0908 ; or byte ptr [ecx], bh ; retf
0x080bc9d4:	or ebx, ecx ; add eax, 0x5cb3908 ; or byte ptr [ecx - 0x35], bh
0x080bc9d8:	cmp ebx, ecx ; add eax, 0x5cb7908
0x080bc9dc:	jns 0xffffffcd ; add eax, 0x5cbb908 ; or cl, ch ; retf
0x080bca10:	aam 0xca ; add eax, 0x5cb0408 ; or byte ptr [ebx + ecx*8], dh
0x080bca14:	add al, 0xcb ; add eax, 0x5cb3408
0x080bca18:	xor al, 0xcb ; add eax, 0x5cb7408
0x080bca1c:	je 0xffffffcd ; add eax, 0x5cbb408 ; or ah, ah ; retf
0x080bca54:	dec edx ; add eax, 0x5cb2f08 ; or byte ptr [edi - 0x35], ch
0x080bca58:	das ; retf ; add eax, 0x5cb6f08
0x080bca5c:	outsd dx, dword ptr [esi] ; retf ; add eax, 0x5cbaf08 ; or bh, bl ; retf
0x080bca90:	retf 0x5ca ; or dl, bh ; retf 0x805 ; sub cl, bl
0x080bca98:	sub cl, bl ; add eax, 0x5cb6a08
0x080bca9c:	push -0x35 ; add eax, 0x5cbaa08 ; or dl, bl ; retf
0x080bcad4:	cmc ; retf 0x805 ; and eax, 0x650805cb ; retf
0x080bcb10:	ror dl, 5 ; or al, dh ; retf 0x805 ; and bl, cl
0x080bcb18:	and bl, cl ; add eax, 0x5cb6008
0x080bcb1c:	pushal ; retf ; add eax, 0x5cba008 ; or al, dl ; retf
0x080bd8dc:	jno 0xffffffd1 ; push es ; or bh, bh ; retf 0x806 ; or ebx, ecx
0x080bd8e0:	dec edx ; push es ; or byte ptr [ecx], cl ; retf ; push es ; or byte ptr [ebx], dl ; retf
0x080bd8e8:	adc ecx, ebx ; push es ; or byte ptr [0x270806cb], bl ; retf
0x080bd8ec:	sbb eax, 0x270806cb ; retf ; push es ; or byte ptr [ecx], dh ; retf
0x080bd8f0:	daa ; retf ; push es ; or byte ptr [ecx], dh ; retf ; push es ; or byte ptr [ebx], bh ; retf
0x080bd8f4:	xor ebx, ecx ; push es ; or byte ptr [ebx], bh ; retf ; push es ; or byte ptr [ebp - 0x35], al
0x080bd8f8:	cmp ecx, ebx ; push es ; or byte ptr [ebp - 0x35], al ; push es ; or byte ptr [edi - 0x35], cl
0x080bd8fc:	inc ebp ; retf ; push es ; or byte ptr [edi - 0x35], cl ; push es ; or byte ptr [ecx - 0x35], bl
0x080bd900:	dec edi ; retf ; push es ; or byte ptr [ecx - 0x35], bl ; push es ; or byte ptr [ebx - 0x35], ah
0x080bd904:	pop ecx ; retf ; push es ; or byte ptr [ebx - 0x35], ah ; push es ; or byte ptr [ebp - 0x35], ch
0x080bd908:	arpl bx, cx ; push es ; or byte ptr [ebp - 0x35], ch ; push es ; or byte ptr [edi - 0x35], dh
0x080bd910:	ja 0xffffffcd ; push es ; or byte ptr [ecx - 0x74f7f935], al ; retf
0x080bd918:	mov ecx, ebx ; push es ; or byte ptr [ebp - 0x60f7f935], dl ; retf
0x080bd91c:	xchg eax, ebp ; retf ; push es ; or byte ptr [edi - 0x56f7f935], bl ; retf
0x080bd920:	lahf ; retf ; push es ; or byte ptr [ecx - 0x4cf7f935], ch ; retf
0x080bd92c:	mov ebp, 0x710806cb ; iretd ; push es ; or cl, dl ; retf
0x080bd930:	jno 0xffffffd1 ; push es ; or cl, dl ; retf ; push es ; or bl, bl ; retf
0x080bd934:	ror ebx, 1 ; push es ; or bl, bl ; retf ; push es ; or ch, ah ; retf
0x080bd938:	fcmovne st(0), st(3) ; push es ; or ch, ah ; retf ; push es ; or bh, ch ; retf
0x080bd93c:	in eax, -0x35 ; push es ; or bh, ch ; retf ; push es ; or cl, bh ; retf
0x080bd98f:	or byte ptr [edi - 0x3ef7f934], dh ; int3 ; push es ; or bl, cl
0x080bda10:	mov bl, 0xcd ; push es ; or byte ptr [edi - 0x38f7f934], cl ; retf
0x080bdb5f:	or byte ptr [0x90806cd], bl ; int 6 ; or bl, cl
0x080bf9d8:	jb 2 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add ebx, ecx
0x080bfa50:	add dword ptr [eax], eax ; add byte ptr [eax], al ; aaa ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080bfa54:	aaa ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf ; or al, 8 ; dec esp ; retf
0x080bfaa4:	int3 ; mov ah, 0xc ; or byte ptr [edi], dh ; fmul qword ptr [ebx] ; or byte ptr [esi], ch ; retf
0x080c02e3:	add cl, cl ; add byte ptr [eax], al ; add dl, cl ; add byte ptr [eax], al ; add bl, cl
0x080c6097:	add ch, al ; add byte ptr [eax], al ; add al, cl ; add byte ptr [eax], al ; add bl, cl
0x080c62a3:	add bl, al ; add al, byte ptr [eax] ; add bh, al ; add al, byte ptr [eax] ; add bl, cl
0x080c66bb:	add cl, al ; pop es ; add byte ptr [eax], al ; lds eax, ptr [edi] ; add byte ptr [eax], al ; retf
0x080c6a43:	add ch, al ; or al, byte ptr [eax] ; add al, cl ; or al, byte ptr [eax] ; add bl, cl
0x080c6e43:	add ch, al ; or eax, 0xdc80000 ; add byte ptr [eax], al ; retf
0x080c7243:	add ch, al ; adc byte ptr [eax], al ; add al, cl ; adc byte ptr [eax], al ; add bl, cl
0x080c75bf:	add dl, cl ; add dword ptr [eax], eax ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c75ff:	add al, cl ; add al, byte ptr [eax] ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c7f57:	add dl, cl ; and al, 0 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c8447:	add dl, cl ; xor eax, dword ptr [eax] ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c8f47:	add dl, cl ; aam 1 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080c96e7:	add dl, cl ; aad 1 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080cb538:	rol byte ptr [ebx], 0xc ; or al, al ; or dword ptr [eax + ecx], ecx ; add ebx, ecx
0x080cb53c:	ror byte ptr [ecx], 0xc ; or byte ptr [ecx], al ; retf ; or al, 8 ; add ebx, ecx
0x080cb540:	add ebx, ecx ; or al, 8 ; add ebx, ecx ; or al, 8 ; add ebx, ecx
0x080cba10:	outsb dx, byte ptr [esi] ; mov byte ptr [edi], 8 ; into ; pop es ; or al, al ; retf
0x080cbf97:	or byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl
0x080cbf9b:	add byte ptr [eax], al ; add byte ptr [eax], al ; add bl, cl ; jle 0x10 ; or bl, cl
0x080cbf9f:	add bl, cl ; jle 0xc ; or bl, cl ; jle 0x10 ; or bl, cl
0x080cbfa3:	or bl, cl ; jle 0xc ; or bl, cl ; jle 0x10 ; or bl, cl
0x080cbfc7:	or bl, cl ; jle 0xc ; or byte ptr [ebx + 0x7a], bh ; or byte ptr [eax], cl ; retf
0x080cbfcb:	or byte ptr [ebx + 0x7a], bh ; or byte ptr [eax], cl ; retf ; jle 0x10 ; or bl, cl
0x080cc003:	or byte ptr [eax + 0x1a08088a], ah ; or dword ptr [eax], 8 ; retf
0x080cc007:	or byte ptr [edx], bl ; or dword ptr [eax], 8 ; retf ; jle 0x10 ; or bl, cl
0x080cc0c3:	or bl, cl ; jle 0xc ; or byte ptr [eax], dh ; mov dword ptr [eax], ecx ; or bl, cl
0x080cc0c7:	or byte ptr [eax], dh ; mov dword ptr [eax], ecx ; or bl, cl ; jle 0x10 ; or bl, cl
0x080cc0e3:	or byte ptr [ecx], bl ; xchg byte ptr [eax], cl ; or byte ptr [edi - 0x7a], ah ; or byte ptr [eax], cl ; retf
0x080cc0e7:	or byte ptr [edi - 0x7a], ah ; or byte ptr [eax], cl ; retf ; jle 0x10 ; or bl, cl
0x080cc18b:	or byte ptr [esi + 0x7b08087a], bh ; jp 0x10 ; or bl, cl
0x080ce6d8:	add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add ebx, ecx
0x080ce718:	sub eax, 0xff00 ; add byte ptr [eax], al ; add byte ptr [ecx], al ; retf
0x080cf018:	int3 ; in eax, dx ; or al, 8 ; in al, -0x4c ; or al, 8 ; add ebx, ecx
0x080cf058:	and eax, 0x2574256d ; add byte ptr [eax], al ; add ebx, ecx
0x080d041e:	and ebp, dword ptr [ecx + eax] ; xchg eax, edi ; add byte ptr [edi - 0x34b4067e], al
0x080d0467:	mov eax, dword ptr [0xd97d9556] ; dec ebp ; push eax ; xor byte ptr [ecx], ah ; retf
0x080d04d5:	xchg eax, edi ; cmpsb byte ptr [esi], byte ptr es:[edi] ; jne 0xffffffc5 ; mov ecx, 0x5b92ac50 ; retf
0x080d0702:	jnp 0x45 ; mov gs, ebp ; lodsb al, byte ptr [esi] ; xchg eax, edi ; jo 0x6e ; salc ; retf
0x080d0fa7:	fstp dword ptr [ebx + 0x4a315a58] ; ret 0x1b49 ; retf
0x080d12fa:	rcl byte ptr [eax - 0x49], 0x4c ; out dx, eax ; push ecx ; test al, 0xf2 ; dec ebp ; retf
0x080d1dae:	lahf ; or dword ptr [ebp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [esi] ; sbb edi, ebp ; retf
0x080d1e77:	add dword ptr [eax + edx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x63 ; retf
0x080d1e9c:	push esi ; pop edx ; je 0xffffffc8 ; ret 0xacfc ; loop 0xffffffd0 ; retf
0x080d1fa8:	popfd ; jecxz 0xffffffbc ; add dword ptr [edx - 0x36a5831f], esp ; retf
0x080d201d:	mov byte ptr [0x7ebb9329], al ; xor al, 0x5c ; sbb ebp, ebx ; retf
0x080d2177:	xchg eax, edi ; xchg eax, ebp ; xor byte ptr [esi - 0x73e34314], ch ; retf
0x080d21e6:	bound esp, qword ptr [eax] ; cmpsb byte ptr [esi], byte ptr es:[edi] ; pop ss ; insb byte ptr es:[edi], dx ; inc edi ; js 0xfffffffa ; pushal ; retf
0x080d23e0:	push esi ; insb byte ptr es:[edi], dx ; add al, 0xe0 ; ja 0x27 ; dec eax ; scasb al, byte ptr es:[edi] ; adc ebx, ecx
0x080d27a6:	add dword ptr [ebp - 9], 0x8d626770 ; rcl byte ptr [edi], cl ; retf
0x080d2ede:	mov edi, 0x3aef8419 ; push cs ; and byte ptr [ebx + 0x3d], bh ; retf
0x080d4c10:	and al, 0x49 ; xchg eax, edx ; and al, 0x49 ; xchg eax, edx ; and al, 9 ; or bl, cl
0x080d51f4:	push edi ; mov esi, 0xc41efffc ; cld ; inc dword ptr [eax - 0x35]
0x080d5218:	push eax ; int 0xfc ; inc dword ptr [eax - 0x33] ; cld ; inc dword ptr [eax - 0x35]
0x080d521c:	inc eax ; int 0xfc ; inc dword ptr [eax - 0x35] ; cld ; inc dword ptr [eax - 0x35]
0x080d5224:	inc eax ; retf ; cld ; dec dword ptr [eax - 0x77000335] ; retf
0x080d8b90:	pop eax ; add byte ptr [eax], al ; add al, bl ; xor al, 0 ; add byte ptr [eax], cl ; retf
0x080d8c1c:	xor al, 0 ; add byte ptr [eax], al ; xor eax, 0xcb2c0000
0x080d8c54:	insb byte ptr es:[edi], dx ; add byte ptr [eax], al ; add byte ptr [ebp + esi - 0x341c0000], bl
0x080dc9ff:	add byte ptr [ebx + esi*2], al ; add byte ptr [edx + ebx*2], bh ; stc ; dec ebx
0x080dd47f:	push cs ; or byte ptr [ecx - 0x3b], al ; push cs ; add al, 0x4a ; or eax, dword ptr [ebx] ; retf
0x080ddb04:	sub byte ptr [eax], al ; add byte ptr [eax], al ; dec esp ; test byte ptr [eax], al ; add ah, dh ; retf
0x080ddb30:	sbb al, 0 ; add byte ptr [eax], al ; js 0xffffff8a ; add byte ptr [eax], al ; clc ; retf
0x080de5c4:	adc byte ptr [eax], al ; add byte ptr [eax], al ; or al, 0x8f ; add byte ptr [eax], al ; add al, 0xcb
0x080de5d8:	and al, 0 ; add byte ptr [eax], al ; and byte ptr [edi - 0x34f00000], cl
0x080de600:	and al, 0 ; add byte ptr [eax], al ; dec eax ; pop dword ptr [eax] ; add byte ptr [eax], bl ; retf
0x080de628:	jo 2 ; add byte ptr [eax], al ; jo 0xffffff95 ; add byte ptr [eax], al ; and bl, cl
0x080decdc:	inc ecx ; push cs ; loopne 6 ; dec edi ; push cs ; rol byte ptr [edx], 2 ; retf
0x080df02c:	inc ecx ; push cs ; adc al, 0x83 ; add eax, 0x2280e43 ; retf
0x080e0350:	push 0x98000000 ; lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; sbb bl, cl
0x080e03bc:	push eax ; add byte ptr [eax], al ; add byte ptr [ebp*4 - 0x34840000], al
0x080e0410:	mov al, 2 ; add byte ptr [eax], al ; pop eax ; lodsd eax, dword ptr [esi] ; add byte ptr [eax], al ; fmul st(3)
0x080e4d30:	sub al, 0 ; add byte ptr [eax], al ; js 0xfffffffc ; add byte ptr [eax], al ; mov bl, cl
0x080b75c8:	cmp ax, 0x80cd ; je 0x10 ; cmp ax, 0x50f
0x080bb821:	sub eax, dword ptr [0x52c1008] ; or byte ptr [eax], dh ; syscall
0x080d2657:	jle 0xffffff8b ; xor eax, ebx ; repne scasd eax, dword ptr es:[edi] ; daa ; push esp ; syscall
0x0806f100:	nop ; nop ; nop ; nop ; nop ; int 0x80
0x0807a4a5:	jmp dword ptr [esi - 0x70] ; mov eax, 0xad ; int 0x80
0x080d2473:	jecxz 2 ; jle 0xffffffeb ; inc edi ; fstp xword ptr [edi] ; imul ecx, ebp, -0x80
0x080b75c6:	add eax, 0x80cd3d66 ; je 0x11 ; cmp ax, 0x50f
0x080bb81f:	nop ; sub eax, dword ptr [0x52c1008] ; or byte ptr [eax], dh ; syscall
0x080d2655:	pop ds ; jle 0xffffff8c ; xor eax, ebx ; repne scasd eax, dword ptr es:[edi] ; daa ; push esp ; syscall
0x0807a4ac:	int 0x80 ; nop ; pop eax ; mov eax, 0x77 ; int 0x80
0x080d2471:	int 0xe3 ; add byte ptr [esi - 0x19], bh ; inc edi ; fstp xword ptr [edi] ; imul ecx, ebp, -0x80
total: 16009
